#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_RosterManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C
// 0x02C0 (0x05F0 - 0x0330)
class UW_PreMission_Tablet_RosterManager_C final  : public URosterSelectionWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimCommanderPageChange;                           // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButton_C*                        btn_ChangeTeam;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btn_Clickaway;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ClosePage;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ClosePage_1;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        CardWidgetSwitcher;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              CharacterPreviewCard;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Characters;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CharactersHorizontalBox;                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              EnlistCharacter_1;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              EnlistCharacter_2;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              EnlistCharacter_3;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_CharacterDetails;                               // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_Close;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_Close_1;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_92;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_div_header;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_div_header_1;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               PlayerWrapBox;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              PreviousCharacterCard;                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RecruitmentHorizontalBox;                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SelectForTherapyText;                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SquadMembersHorizontalBox;                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SquadMembersScaleBox;                              // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SwapHorizontalBox;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_HeaderTitle;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_HeaderTitle_1;                                 // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_PlayerCount;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CharacterEnlist;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CharacterRoster;                                // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CharacterSwap;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Commander;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Multiplayer;                                    // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_PlayerList;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_Details_C*                    W_Roster_Details;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_1;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_2;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_3;                                  // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_4;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_Card_1;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card;                            // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card_1;                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card_2;                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card_3;                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard;                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_1;                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_2;                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_3;                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_4;                      // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_5;                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_6;                      // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_7;                      // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_8;                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_9;                      // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelf_Card_C*                   W_RosterSelf_Card;                                 // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSpecialty_C*                   W_RosterSpecialty;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSpecialty_C*                   W_RosterSpecialty_1;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSpecialty_C*                   W_RosterSpecialty_2;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class AReadyOrNotPlayerState*, class UW_PreMission_Tablet_Roster_Entry_C*> RosterMap;                                         // 0x0510(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	class UW_RosterSelection_Card_C*              PreviousCharacterCard_0;                           // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          CurrentPositionSelection;                          // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swapping;                                          // 0x0569(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333C[0x6];                                     // 0x056A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_MiniCard_C*          ActiveMiniCard;                                    // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SquadRevealDelay;                                  // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333D[0x4];                                     // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class APlayerState*, class UW_Roster_PlayerStatus_Card_C*> CurrentPlayerMap;                                  // 0x0580(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	class UW_RosterSelection_MiniCard_C*          HoveredMiniCard;                                   // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DetailsOpen;                                       // 0x05D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PageChanging;                                      // 0x05D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333E[0x2];                                     // 0x05DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugAvailableCharacterSlots;                      // 0x05DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugMaxCharacterSlots;                            // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x05E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnlistOpen;                                        // 0x05E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333F[0x2];                                     // 0x05E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCharacterSlots;                                 // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableCharacterSlots;                           // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_PreMission_Tablet_RosterManager(int32 EntryPoint, class UW_RosterSelection_Card_C* K2Node_CustomEvent_Card, bool CallFunc_IsValid_ReturnValue, class UW_AudioPlayer_C* K2Node_Event_PlayerWidget, bool K2Node_Event_PlayerVisible, class UW_Roster_PlayerStatus_Card_C* K2Node_CustomEvent_PlayerCard, bool K2Node_Event_UseDarkTheme, bool K2Node_Event_IsAwake, class FName K2Node_Event_PageName, bool K2Node_Event_IsGamepad, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, class UW_Button_C* K2Node_ComponentBoundEvent_Button, class FText K2Node_CustomEvent_PageTitle, bool K2Node_CustomEvent_ShowCloseButton, ESlateVisibility Temp_byte_Variable, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, bool Temp_bool_Variable, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default, TDelegate<void(class UW_RosterSelection_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_Delay);
	void BP_OnActivated();
	void Reveal(float Delay);
	void OnPracticeUnitsUpdated();
	void RefreshRosterEvent();
	void PageChangeReveal();
	void ChangeRosterPage(class FText PageTitle, bool ShowCloseButton);
	void BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void Hide(float Delay, bool Collapse);
	void SetInputMode(bool IsGamepad);
	void ChangePage(class FName PageName);
	void SetTabletState(bool IsAwake);
	void SetVisualTheme(bool UseDarkTheme);
	void InitializeRoster();
	void PlayerClicked(class UW_Roster_PlayerStatus_Card_C* PlayerCard);
	void AudioPlayerVisible(class UW_AudioPlayer_C* PlayerWidget, bool PlayerVisible);
	void OnPlayersUpdated();
	void RefreshPage();
	void BndEvt__W_PreMission_Tablet_Roster_btn_ClickAway_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void OnCharactersUpdated();
	void SquadMemberClicked(class UW_RosterSelection_Card_C* Card);
	void Construct();
	void CloseSwapping(bool CallFunc_IsValid_ReturnValue);
	bool IsPlayerSelf(class UObject* PlayerState, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void PopulatePlayerList(int32 Count, class APlayerState* PlayerToAdd, const TArray<class APlayerState*>& NewPlayers, int32 Temp_int_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, class UW_Roster_PlayerStatus_Card_C* CallFunc_Create_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, bool CallFunc_GetIsSelfHost_ReturnValue, class APlayerState* CallFunc_Array_Get_Item, bool CallFunc_GetIsSelfHost_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, class UWrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class UW_Roster_PlayerStatus_Card_C* CallFunc_Create_ReturnValue_1, class UWrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_IsPlayerSelf_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TDelegate<void(class UW_Roster_PlayerStatus_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue);
	class UW_Roster_PlayerStatus_Card_C* GetPlayerCardByIndex(int32 Param_Index, int32 Temp_int_Variable, class UW_Roster_PlayerStatus_Card_C* K2Node_Select_Default);
	void PopulateSquadCharacters(int32 CurrentIndex, const TArray<class URosterCharacter*>& SquadCharacterArray, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1, const struct FMargin& K2Node_MakeStruct_Margin, int32 Temp_int_Variable, class URosterCharacter* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, class UW_RosterSelection_Card_C* CallFunc_Create_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput, TDelegate<void(class UW_RosterSelection_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, const TMap<ERosterSquadPosition, class URosterCharacter*>& CallFunc_GetSquadCharacters_ReturnValue, TArray<class URosterCharacter*>& CallFunc_Map_Values_Values);
	void MiniCardHovered(class UW_RosterSelection_MiniCard_C* Card, class UW_RosterSelection_MiniCard_C* HoveredCard, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput);
	void PopulateCharacterList(const TArray<class URosterCharacter*>& CharacterArray, class UW_RosterSelection_MiniCard_C* CurrentMiniCardWidget, class URosterCharacter* CurrentCharacter, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class URosterCharacter* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable_1, TArray<int32>& CallFunc_GetUnlockableSlotMissionsRemaining_ReturnValue, int32 CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_GetCurrentRosterSize_ReturnValue, class UW_RosterSelection_MiniCard_C* CallFunc_Create_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_2, const struct FMargin& K2Node_MakeStruct_Margin, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, TArray<class URosterCharacter*>& CallFunc_GetAllCharacters_ReturnValue);
	bool GetIsSelfHost(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsAdminPlayerController_ReturnValue);
	void MiniCardClicked(class UW_RosterSelection_MiniCard_C* Card, class UW_RosterSelection_MiniCard_C* ClickedCard, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UWidget* CallFunc_GetActiveWidget_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1);
	void MiniCardUnhovered(class UW_RosterSelection_MiniCard_C* Card);
	void OpenDetailsPage(class URosterCharacter* RosterCharacter);
	void CloseDetailsPage();
	bool BP_OnHandleBackAction();
	void GoBack();
	void PopulateDebugCharacterList(const TArray<class URosterCharacter*>& CharacterArray, class UW_RosterSelection_MiniCard_C* CurrentMiniCardWidget, class URosterCharacter* CurrentCharacter, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class URosterCharacter* CallFunc_Array_Get_Item, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, TArray<class URosterCharacter*>& CallFunc_GetAllCharacters_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_2, class UW_RosterSelection_MiniCard_C* CallFunc_Create_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue);
	void EmptyMiniCardClicked(class UW_RosterSelection_MiniCard_C* Card, class UW_RosterSelection_MiniCard_C* ClickedCard);
	void CreateEmptyMiniCards(int32 Count, class UW_RosterSelection_MiniCard_C* CallFunc_Create_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin);
	void CreateLockedMiniCards(int32 MissionUnlockCount, class FText Temp_text_Variable, const struct FMargin& K2Node_MakeStruct_Margin, class UW_RosterSelection_MiniCard_C* CallFunc_Create_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Greater_IntInt_ReturnValue, class FText Temp_text_Variable_1, bool Temp_bool_Variable, class FText K2Node_Select_Default, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate);
	void OpenEnlistPage(float Temp_float_Variable, float Temp_float_Variable_1, class UW_RosterSelection_Card_C* CallFunc_Create_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UHorizontalBoxSlot* K2Node_DynamicCast_AsHorizontal_Box_Slot, bool K2Node_DynamicCast_bSuccess, TDelegate<void(class UW_RosterSelection_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate, float Temp_float_Variable_2, float Temp_float_Variable_3, bool Temp_bool_Variable_1, TArray<class URosterCharacter*>& CallFunc_GetRecruitableCharacters_ReturnValue, class URosterCharacter* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, float K2Node_Select_Default_1, const struct FMargin& K2Node_MakeStruct_Margin);
	void EnlistCharacterClicked(class UW_RosterSelection_Card_C* Card);
	void CloseEnlistPage();
	void PopulatePracticeUnits(ESquadPosition Position, int32 Count, class APlayerState* PlayerToAdd, const TArray<class APlayerState*>& NewPlayers, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue);
	void SequenceEvent__ENTRYPOINTW_PreMission_Tablet_RosterManager_0();
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_RosterManager_C">();
	}
	static class UW_PreMission_Tablet_RosterManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_RosterManager_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_RosterManager_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_RosterManager_C");
static_assert(sizeof(UW_PreMission_Tablet_RosterManager_C) == 0x0005F0, "Wrong size on UW_PreMission_Tablet_RosterManager_C");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, UberGraphFrame) == 0x000330, "Member 'UW_PreMission_Tablet_RosterManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, AnimCommanderPageChange) == 0x000338, "Member 'UW_PreMission_Tablet_RosterManager_C::AnimCommanderPageChange' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, BackgroundImage) == 0x000340, "Member 'UW_PreMission_Tablet_RosterManager_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ChangeTeam) == 0x000348, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ChangeTeam' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_Clickaway) == 0x000350, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_Clickaway' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ClosePage) == 0x000358, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ClosePage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ClosePage_1) == 0x000360, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ClosePage_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CardWidgetSwitcher) == 0x000368, "Member 'UW_PreMission_Tablet_RosterManager_C::CardWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CharacterPreviewCard) == 0x000370, "Member 'UW_PreMission_Tablet_RosterManager_C::CharacterPreviewCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Characters) == 0x000378, "Member 'UW_PreMission_Tablet_RosterManager_C::Characters' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CharactersHorizontalBox) == 0x000380, "Member 'UW_PreMission_Tablet_RosterManager_C::CharactersHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistCharacter_1) == 0x000388, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistCharacter_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistCharacter_2) == 0x000390, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistCharacter_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistCharacter_3) == 0x000398, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistCharacter_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, HB_CharacterDetails) == 0x0003A0, "Member 'UW_PreMission_Tablet_RosterManager_C::HB_CharacterDetails' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Icn_Close) == 0x0003A8, "Member 'UW_PreMission_Tablet_RosterManager_C::Icn_Close' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Icn_Close_1) == 0x0003B0, "Member 'UW_PreMission_Tablet_RosterManager_C::Icn_Close_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Image_92) == 0x0003B8, "Member 'UW_PreMission_Tablet_RosterManager_C::Image_92' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Img_div_header) == 0x0003C0, "Member 'UW_PreMission_Tablet_RosterManager_C::Img_div_header' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Img_div_header_1) == 0x0003C8, "Member 'UW_PreMission_Tablet_RosterManager_C::Img_div_header_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PlayerWrapBox) == 0x0003D0, "Member 'UW_PreMission_Tablet_RosterManager_C::PlayerWrapBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PreviousCharacterCard) == 0x0003D8, "Member 'UW_PreMission_Tablet_RosterManager_C::PreviousCharacterCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, RecruitmentHorizontalBox) == 0x0003E0, "Member 'UW_PreMission_Tablet_RosterManager_C::RecruitmentHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SelectForTherapyText) == 0x0003E8, "Member 'UW_PreMission_Tablet_RosterManager_C::SelectForTherapyText' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SquadMembersHorizontalBox) == 0x0003F0, "Member 'UW_PreMission_Tablet_RosterManager_C::SquadMembersHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SquadMembersScaleBox) == 0x0003F8, "Member 'UW_PreMission_Tablet_RosterManager_C::SquadMembersScaleBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SwapHorizontalBox) == 0x000400, "Member 'UW_PreMission_Tablet_RosterManager_C::SwapHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Txt_HeaderTitle) == 0x000408, "Member 'UW_PreMission_Tablet_RosterManager_C::Txt_HeaderTitle' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Txt_HeaderTitle_1) == 0x000410, "Member 'UW_PreMission_Tablet_RosterManager_C::Txt_HeaderTitle_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Txt_PlayerCount) == 0x000418, "Member 'UW_PreMission_Tablet_RosterManager_C::Txt_PlayerCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_CharacterEnlist) == 0x000420, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_CharacterEnlist' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_CharacterRoster) == 0x000428, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_CharacterRoster' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_CharacterSwap) == 0x000430, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_CharacterSwap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_Commander) == 0x000438, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_Commander' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_Multiplayer) == 0x000440, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_Multiplayer' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_PlayerList) == 0x000448, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_PlayerList' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_Roster_Details) == 0x000450, "Member 'UW_PreMission_Tablet_RosterManager_C::W_Roster_Details' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_1) == 0x000458, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_2) == 0x000460, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_3) == 0x000468, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_4) == 0x000470, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_4' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_Card_1) == 0x000478, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_Card_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card) == 0x000480, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card_1) == 0x000488, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card_2) == 0x000490, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card_3) == 0x000498, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard) == 0x0004A0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_1) == 0x0004A8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_2) == 0x0004B0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_3) == 0x0004B8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_4) == 0x0004C0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_4' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_5) == 0x0004C8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_5' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_6) == 0x0004D0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_6' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_7) == 0x0004D8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_7' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_8) == 0x0004E0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_8' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_9) == 0x0004E8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_9' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelf_Card) == 0x0004F0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelf_Card' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSpecialty) == 0x0004F8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSpecialty' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSpecialty_1) == 0x000500, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSpecialty_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSpecialty_2) == 0x000508, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSpecialty_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, RosterMap) == 0x000510, "Member 'UW_PreMission_Tablet_RosterManager_C::RosterMap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PreviousCharacterCard_0) == 0x000560, "Member 'UW_PreMission_Tablet_RosterManager_C::PreviousCharacterCard_0' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CurrentPositionSelection) == 0x000568, "Member 'UW_PreMission_Tablet_RosterManager_C::CurrentPositionSelection' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Swapping) == 0x000569, "Member 'UW_PreMission_Tablet_RosterManager_C::Swapping' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, ActiveMiniCard) == 0x000570, "Member 'UW_PreMission_Tablet_RosterManager_C::ActiveMiniCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SquadRevealDelay) == 0x000578, "Member 'UW_PreMission_Tablet_RosterManager_C::SquadRevealDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CurrentPlayerMap) == 0x000580, "Member 'UW_PreMission_Tablet_RosterManager_C::CurrentPlayerMap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, HoveredMiniCard) == 0x0005D0, "Member 'UW_PreMission_Tablet_RosterManager_C::HoveredMiniCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, DetailsOpen) == 0x0005D8, "Member 'UW_PreMission_Tablet_RosterManager_C::DetailsOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PageChanging) == 0x0005D9, "Member 'UW_PreMission_Tablet_RosterManager_C::PageChanging' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, DebugAvailableCharacterSlots) == 0x0005DC, "Member 'UW_PreMission_Tablet_RosterManager_C::DebugAvailableCharacterSlots' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, DebugMaxCharacterSlots) == 0x0005E0, "Member 'UW_PreMission_Tablet_RosterManager_C::DebugMaxCharacterSlots' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Debug) == 0x0005E4, "Member 'UW_PreMission_Tablet_RosterManager_C::Debug' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistOpen) == 0x0005E5, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, MaxCharacterSlots) == 0x0005E8, "Member 'UW_PreMission_Tablet_RosterManager_C::MaxCharacterSlots' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, AvailableCharacterSlots) == 0x0005EC, "Member 'UW_PreMission_Tablet_RosterManager_C::AvailableCharacterSlots' has a wrong offset!");

}

