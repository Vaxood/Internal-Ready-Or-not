#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_FacingTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AC_FacingTarget.AC_FacingTarget_C.Score
// 0x0058 (0x0058 - 0x0000)
struct AC_FacingTarget_C_Score final 
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4149[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   CallFunc_GetTrackedTarget_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_414A[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_414B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_FacingTarget_C_Score) == 0x000008, "Wrong alignment on AC_FacingTarget_C_Score");
static_assert(sizeof(AC_FacingTarget_C_Score) == 0x000058, "Wrong size on AC_FacingTarget_C_Score");
static_assert(offsetof(AC_FacingTarget_C_Score, Context) == 0x000000, "Member 'AC_FacingTarget_C_Score::Context' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, bSuccess) == 0x000010, "Member 'AC_FacingTarget_C_Score::bSuccess' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, ReturnValue) == 0x000014, "Member 'AC_FacingTarget_C_Score::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_GetCharacter_ReturnValue) == 0x000018, "Member 'AC_FacingTarget_C_Score::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_GetTrackedTarget_ReturnValue) == 0x000020, "Member 'AC_FacingTarget_C_Score::CallFunc_GetTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AC_FacingTarget_C_Score::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'AC_FacingTarget_C_Score::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_GetActorForwardVector_ReturnValue) == 0x00002C, "Member 'AC_FacingTarget_C_Score::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000038, "Member 'AC_FacingTarget_C_Score::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_Dot_VectorVector_ReturnValue) == 0x000044, "Member 'AC_FacingTarget_C_Score::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_Less_FloatFloat_ReturnValue) == 0x000048, "Member 'AC_FacingTarget_C_Score::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_MapRangeClamped_ReturnValue) == 0x00004C, "Member 'AC_FacingTarget_C_Score::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_FacingTarget_C_Score, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'AC_FacingTarget_C_Score::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

}

