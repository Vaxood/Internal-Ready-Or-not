#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_TImeline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "E_Briefing_Audio_PlayStates_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing_TImeline.W_Briefing_TImeline_C
// 0x0088 (0x02E8 - 0x0260)
class UW_Briefing_TImeline_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Header_C*                            H_Timeline;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Timeline;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           TimelineEntryCanvas;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_Timeline_TrackWave_C*       W_Briefing_Timeline_TrackWave;                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget*                                AudioControlWidget;                                // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<float, struct FTimelineEvent>            EventEntries;                                      // 0x0290(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_Briefing_Audio_PlayStates                   PlayState;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351E[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AudioCurrentTime;                                  // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Briefing_TImeline(int32 EntryPoint, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool K2Node_Event_IsDesignTime, TArray<struct FTimelineEvent>& K2Node_CustomEvent_Events, class USoundWave* K2Node_CustomEvent_AudioWaveAsset, const struct FTimelineEvent& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UW_Briefing_Timeline_Entry_C* CallFunc_Create_ReturnValue, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, class USoundWave* CallFunc_GetTimelineEventTestData_Audio_Asset, TArray<struct FTimelineEvent>& CallFunc_GetTimelineEventTestData_Events, const TMap<float, struct FTimelineEvent>& CallFunc_GetTimelineEventTestData_EventEntries, const struct FAnchors& K2Node_MakeStruct_Anchors, const struct FVector2D& CallFunc_GetDesiredSize_ReturnValue, float K2Node_ComponentBoundEvent_EventID, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, const struct FTimelineEvent& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1);
	void BndEvt__W_Briefing_Timeline_TrackWave_K2Node_ComponentBoundEvent_1_TimelineEventEnded__DelegateSignature(float EventId);
	void DemoMode();
	void Initialize(TArray<struct FTimelineEvent>& Events, class USoundWave* AudioWaveAsset);
	void PreConstruct(bool IsDesignTime);
	void AudioScrub();
	void AudioPause();
	void AudioRestart();
	void AudioPlay(float Start);
	void SetPlayState(E_Briefing_Audio_PlayStates AudioPlayState, bool K2Node_SwitchEnum_CmpSuccess);
	void Playing(float CurrentPlayTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_TImeline_C">();
	}
	static class UW_Briefing_TImeline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_TImeline_C>();
	}
};
static_assert(alignof(UW_Briefing_TImeline_C) == 0x000008, "Wrong alignment on UW_Briefing_TImeline_C");
static_assert(sizeof(UW_Briefing_TImeline_C) == 0x0002E8, "Wrong size on UW_Briefing_TImeline_C");
static_assert(offsetof(UW_Briefing_TImeline_C, UberGraphFrame) == 0x000260, "Member 'UW_Briefing_TImeline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, H_Timeline) == 0x000268, "Member 'UW_Briefing_TImeline_C::H_Timeline' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, HB_Timeline) == 0x000270, "Member 'UW_Briefing_TImeline_C::HB_Timeline' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, TimelineEntryCanvas) == 0x000278, "Member 'UW_Briefing_TImeline_C::TimelineEntryCanvas' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, W_Briefing_Timeline_TrackWave) == 0x000280, "Member 'UW_Briefing_TImeline_C::W_Briefing_Timeline_TrackWave' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, AudioControlWidget) == 0x000288, "Member 'UW_Briefing_TImeline_C::AudioControlWidget' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, EventEntries) == 0x000290, "Member 'UW_Briefing_TImeline_C::EventEntries' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, PlayState) == 0x0002E0, "Member 'UW_Briefing_TImeline_C::PlayState' has a wrong offset!");
static_assert(offsetof(UW_Briefing_TImeline_C, AudioCurrentTime) == 0x0002E4, "Member 'UW_Briefing_TImeline_C::AudioCurrentTime' has a wrong offset!");

}

