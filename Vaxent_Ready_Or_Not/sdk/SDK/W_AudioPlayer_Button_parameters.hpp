#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AudioPlayer_Button

#include "Basic.hpp"

#include "E_Briefing_Audio_PlayStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.ExecuteUbergraph_W_AudioPlayer_Button
// 0x0020 (0x0020 - 0x0000)
struct W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Duration;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reverse;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C6[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_FPS;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button) == 0x000004, "Wrong alignment on W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button");
static_assert(sizeof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button) == 0x000020, "Wrong size on W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, EntryPoint) == 0x000000, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, K2Node_CustomEvent_Duration) == 0x000008, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, K2Node_CustomEvent_Reverse) == 0x00000C, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::K2Node_CustomEvent_Reverse' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, K2Node_CustomEvent_FPS) == 0x000010, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::K2Node_CustomEvent_FPS' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'W_AudioPlayer_Button_C_ExecuteUbergraph_W_AudioPlayer_Button::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.HoverAnim
// 0x000C (0x000C - 0x0000)
struct W_AudioPlayer_Button_C_HoverAnim final 
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FPS;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_AudioPlayer_Button_C_HoverAnim) == 0x000004, "Wrong alignment on W_AudioPlayer_Button_C_HoverAnim");
static_assert(sizeof(W_AudioPlayer_Button_C_HoverAnim) == 0x00000C, "Wrong size on W_AudioPlayer_Button_C_HoverAnim");
static_assert(offsetof(W_AudioPlayer_Button_C_HoverAnim, Duration) == 0x000000, "Member 'W_AudioPlayer_Button_C_HoverAnim::Duration' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_HoverAnim, Reverse) == 0x000004, "Member 'W_AudioPlayer_Button_C_HoverAnim::Reverse' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_HoverAnim, FPS) == 0x000008, "Member 'W_AudioPlayer_Button_C_HoverAnim::FPS' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_AudioPlayer_Button_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_AudioPlayer_Button_C_PreConstruct) == 0x000001, "Wrong alignment on W_AudioPlayer_Button_C_PreConstruct");
static_assert(sizeof(W_AudioPlayer_Button_C_PreConstruct) == 0x000001, "Wrong size on W_AudioPlayer_Button_C_PreConstruct");
static_assert(offsetof(W_AudioPlayer_Button_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_AudioPlayer_Button_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.SetHoveredState
// 0x0001 (0x0001 - 0x0000)
struct W_AudioPlayer_Button_C_SetHoveredState final 
{
public:
	bool                                          Param_IsHovered;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_AudioPlayer_Button_C_SetHoveredState) == 0x000001, "Wrong alignment on W_AudioPlayer_Button_C_SetHoveredState");
static_assert(sizeof(W_AudioPlayer_Button_C_SetHoveredState) == 0x000001, "Wrong size on W_AudioPlayer_Button_C_SetHoveredState");
static_assert(offsetof(W_AudioPlayer_Button_C_SetHoveredState, Param_IsHovered) == 0x000000, "Member 'W_AudioPlayer_Button_C_SetHoveredState::Param_IsHovered' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.GetIconColor
// 0x00D8 (0x00D8 - 0x0000)
struct W_AudioPlayer_Button_C_GetIconColor final 
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPressed_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C8[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C9[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0028(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_1;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_1;              // 0x0060(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_AudioPlayer_Button_C_GetIconColor) == 0x000008, "Wrong alignment on W_AudioPlayer_Button_C_GetIconColor");
static_assert(sizeof(W_AudioPlayer_Button_C_GetIconColor) == 0x0000D8, "Wrong size on W_AudioPlayer_Button_C_GetIconColor");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, ReturnValue) == 0x000000, "Member 'W_AudioPlayer_Button_C_GetIconColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_IsPressed_ReturnValue) == 0x000010, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_IsPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_GetSelected_ReturnValue) == 0x000011, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_GetColorByName_LinearColor) == 0x000014, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_GetColorByName_SlateColor) == 0x000028, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_GetColorByName_LinearColor_1) == 0x000050, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_GetColorByName_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_GetColorByName_SlateColor_1) == 0x000060, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_GetColorByName_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_SelectColor_ReturnValue) == 0x000088, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_SelectColor_ReturnValue_1) == 0x000098, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_SelectColor_ReturnValue_2) == 0x0000A8, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_SelectColor_ReturnValue_3) == 0x0000B8, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_GetIconColor, CallFunc_SelectColor_ReturnValue_4) == 0x0000C8, "Member 'W_AudioPlayer_Button_C_GetIconColor::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.UpdateIcon
// 0x00A0 (0x00A0 - 0x0000)
struct W_AudioPlayer_Button_C_UpdateIcon final 
{
public:
	struct FLinearColor                           CallFunc_GetIconColor_ReturnValue;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_Map_Find_Value;                           // 0x0010(0x0088)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_AudioPlayer_Button_C_UpdateIcon) == 0x000008, "Wrong alignment on W_AudioPlayer_Button_C_UpdateIcon");
static_assert(sizeof(W_AudioPlayer_Button_C_UpdateIcon) == 0x0000A0, "Wrong size on W_AudioPlayer_Button_C_UpdateIcon");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateIcon, CallFunc_GetIconColor_ReturnValue) == 0x000000, "Member 'W_AudioPlayer_Button_C_UpdateIcon::CallFunc_GetIconColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateIcon, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_AudioPlayer_Button_C_UpdateIcon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateIcon, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'W_AudioPlayer_Button_C_UpdateIcon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.UpdateControlSetting
// 0x0004 (0x0004 - 0x0000)
struct W_AudioPlayer_Button_C_UpdateControlSetting final 
{
public:
	E_Briefing_Audio_PlayStates                   Param_Control;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Briefing_Audio_PlayStates                   K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_AudioPlayer_Button_C_UpdateControlSetting) == 0x000001, "Wrong alignment on W_AudioPlayer_Button_C_UpdateControlSetting");
static_assert(sizeof(W_AudioPlayer_Button_C_UpdateControlSetting) == 0x000004, "Wrong size on W_AudioPlayer_Button_C_UpdateControlSetting");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateControlSetting, Param_Control) == 0x000000, "Member 'W_AudioPlayer_Button_C_UpdateControlSetting::Param_Control' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateControlSetting, Temp_bool_Variable) == 0x000001, "Member 'W_AudioPlayer_Button_C_UpdateControlSetting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateControlSetting, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_AudioPlayer_Button_C_UpdateControlSetting::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_UpdateControlSetting, K2Node_Select_Default) == 0x000003, "Member 'W_AudioPlayer_Button_C_UpdateControlSetting::K2Node_Select_Default' has a wrong offset!");

// Function W_AudioPlayer_Button.W_AudioPlayer_Button_C.SetTheme
// 0x0010 (0x0010 - 0x0000)
struct W_AudioPlayer_Button_C_SetTheme final 
{
public:
	bool                                          UseDarkTheme;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CA[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_AudioPlayer_Button_C_SetTheme) == 0x000008, "Wrong alignment on W_AudioPlayer_Button_C_SetTheme");
static_assert(sizeof(W_AudioPlayer_Button_C_SetTheme) == 0x000010, "Wrong size on W_AudioPlayer_Button_C_SetTheme");
static_assert(offsetof(W_AudioPlayer_Button_C_SetTheme, UseDarkTheme) == 0x000000, "Member 'W_AudioPlayer_Button_C_SetTheme::UseDarkTheme' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_SetTheme, Temp_bool_Variable) == 0x000001, "Member 'W_AudioPlayer_Button_C_SetTheme::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_AudioPlayer_Button_C_SetTheme, K2Node_Select_Default) == 0x000008, "Member 'W_AudioPlayer_Button_C_SetTheme::K2Node_Select_Default' has a wrong offset!");

}

