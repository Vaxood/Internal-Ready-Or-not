#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_MunitionSlots_Deployable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_MunitionSlots_Deployable.W_Loadout_MunitionSlots_Deployable_C
// 0x00C0 (0x0320 - 0x0260)
class UW_Loadout_MunitionSlots_Deployable_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Button_C*                            btn_Add;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Minus;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       GrenadeSlot;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_DeployableSlot;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       TacticalSlot;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CountButtons;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnAddClicked;                                      // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMinusClicked;                                    // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowCountControls;                                 // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_39CD[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDeployableSlotClicked;                           // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsGrenade;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_39CE[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDeployableSlotHovered;                           // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDeployableSlotUnhovered;                         // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Count;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CF[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ItemData;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   CategoryText;                                      // 0x0308(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void OnAddClicked__DelegateSignature(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot);
	void OnMinusClicked__DelegateSignature(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot);
	void OnDeployableSlotClicked__DelegateSignature(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot);
	void OnDeployableSlotHovered__DelegateSignature(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot);
	void OnDeployableSlotUnhovered__DelegateSignature(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot);
	void ExecuteUbergraph_W_Loadout_MunitionSlots_Deployable(int32 EntryPoint, class UW_LoadoutSlot_C* CallFunc_GetSlot_ReturnValue, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool K2Node_Event_IsDesignTime, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_2, class UClass* K2Node_CustomEvent_ItemData, class UW_LoadoutSlot_C* CallFunc_GetSlot_ReturnValue_1, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot, bool K2Node_CustomEvent_Enabled, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, class UW_LoadoutSlot_C* CallFunc_GetSlot_ReturnValue_2, class UW_LoadoutSlot_C* K2Node_Select_Default);
	void ForceClick();
	void ToggleAddButton(bool Enabled);
	void LoadoutSlotUnhovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void LoadoutSlotHovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void SetItemClass(class UClass* Param_ItemData);
	void LoadoutSlotClicked(class UW_LoadoutSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Minus_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_Deployable_btn_Add_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void DisplayCountControls(bool Param_ShowCountControls, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default);
	class UW_LoadoutSlot_C* GetSlot(bool Temp_bool_Variable, class UW_LoadoutSlot_C* K2Node_Select_Default);
	void SetSlotVisibility(bool Param_IsGrenade, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1);
	void SetCount(int32 Param_Count, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class UW_LoadoutSlot_C* CallFunc_GetSlot_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_MunitionSlots_Deployable_C">();
	}
	static class UW_Loadout_MunitionSlots_Deployable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_MunitionSlots_Deployable_C>();
	}
};
static_assert(alignof(UW_Loadout_MunitionSlots_Deployable_C) == 0x000008, "Wrong alignment on UW_Loadout_MunitionSlots_Deployable_C");
static_assert(sizeof(UW_Loadout_MunitionSlots_Deployable_C) == 0x000320, "Wrong size on UW_Loadout_MunitionSlots_Deployable_C");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, UberGraphFrame) == 0x000260, "Member 'UW_Loadout_MunitionSlots_Deployable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, btn_Add) == 0x000268, "Member 'UW_Loadout_MunitionSlots_Deployable_C::btn_Add' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, btn_Minus) == 0x000270, "Member 'UW_Loadout_MunitionSlots_Deployable_C::btn_Minus' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, GrenadeSlot) == 0x000278, "Member 'UW_Loadout_MunitionSlots_Deployable_C::GrenadeSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, HB_DeployableSlot) == 0x000280, "Member 'UW_Loadout_MunitionSlots_Deployable_C::HB_DeployableSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, TacticalSlot) == 0x000288, "Member 'UW_Loadout_MunitionSlots_Deployable_C::TacticalSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, VB_CountButtons) == 0x000290, "Member 'UW_Loadout_MunitionSlots_Deployable_C::VB_CountButtons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, OnAddClicked) == 0x000298, "Member 'UW_Loadout_MunitionSlots_Deployable_C::OnAddClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, OnMinusClicked) == 0x0002A8, "Member 'UW_Loadout_MunitionSlots_Deployable_C::OnMinusClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, ShowCountControls) == 0x0002B8, "Member 'UW_Loadout_MunitionSlots_Deployable_C::ShowCountControls' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, OnDeployableSlotClicked) == 0x0002C0, "Member 'UW_Loadout_MunitionSlots_Deployable_C::OnDeployableSlotClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, IsGrenade) == 0x0002D0, "Member 'UW_Loadout_MunitionSlots_Deployable_C::IsGrenade' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, OnDeployableSlotHovered) == 0x0002D8, "Member 'UW_Loadout_MunitionSlots_Deployable_C::OnDeployableSlotHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, OnDeployableSlotUnhovered) == 0x0002E8, "Member 'UW_Loadout_MunitionSlots_Deployable_C::OnDeployableSlotUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, Count) == 0x0002F8, "Member 'UW_Loadout_MunitionSlots_Deployable_C::Count' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, ItemData) == 0x000300, "Member 'UW_Loadout_MunitionSlots_Deployable_C::ItemData' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_Deployable_C, CategoryText) == 0x000308, "Member 'UW_Loadout_MunitionSlots_Deployable_C::CategoryText' has a wrong offset!");

}

