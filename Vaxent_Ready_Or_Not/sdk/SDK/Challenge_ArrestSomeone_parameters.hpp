#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_ArrestSomeone

#include "Basic.hpp"


namespace SDK::Params
{

// Function Challenge_ArrestSomeone.Challenge_ArrestSomeone_C.ExecuteUbergraph_Challenge_ArrestSomeone
// 0x0030 (0x0030 - 0x0000)
struct Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   K2Node_CustomEvent_Character;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_CustomEvent_ArrestedBy;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AReadyOrNotCharacter* Character, class AReadyOrNotCharacter* ArrestedBy)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class AReadyOrNotGameState*                   K2Node_Event_gs;                                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone) == 0x000008, "Wrong alignment on Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone");
static_assert(sizeof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone) == 0x000030, "Wrong size on Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone");
static_assert(offsetof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone, EntryPoint) == 0x000000, "Member 'Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone::EntryPoint' has a wrong offset!");
static_assert(offsetof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone, K2Node_CustomEvent_Character) == 0x000008, "Member 'Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone, K2Node_CustomEvent_ArrestedBy) == 0x000010, "Member 'Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone::K2Node_CustomEvent_ArrestedBy' has a wrong offset!");
static_assert(offsetof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone, K2Node_Event_gs) == 0x000028, "Member 'Challenge_ArrestSomeone_C_ExecuteUbergraph_Challenge_ArrestSomeone::K2Node_Event_gs' has a wrong offset!");

// Function Challenge_ArrestSomeone.Challenge_ArrestSomeone_C.OnCharacterArrested_Event_0
// 0x0010 (0x0010 - 0x0000)
struct Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0 final 
{
public:
	class AReadyOrNotCharacter*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   ArrestedBy;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0) == 0x000008, "Wrong alignment on Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0");
static_assert(sizeof(Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0) == 0x000010, "Wrong size on Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0");
static_assert(offsetof(Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0, Character) == 0x000000, "Member 'Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0::Character' has a wrong offset!");
static_assert(offsetof(Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0, ArrestedBy) == 0x000008, "Member 'Challenge_ArrestSomeone_C_OnCharacterArrested_Event_0::ArrestedBy' has a wrong offset!");

// Function Challenge_ArrestSomeone.Challenge_ArrestSomeone_C.OnChallengeInit
// 0x0008 (0x0008 - 0x0000)
struct Challenge_ArrestSomeone_C_OnChallengeInit final 
{
public:
	class AReadyOrNotGameState*                   Gs;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_ArrestSomeone_C_OnChallengeInit) == 0x000008, "Wrong alignment on Challenge_ArrestSomeone_C_OnChallengeInit");
static_assert(sizeof(Challenge_ArrestSomeone_C_OnChallengeInit) == 0x000008, "Wrong size on Challenge_ArrestSomeone_C_OnChallengeInit");
static_assert(offsetof(Challenge_ArrestSomeone_C_OnChallengeInit, Gs) == 0x000000, "Member 'Challenge_ArrestSomeone_C_OnChallengeInit::Gs' has a wrong offset!");

}

