#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WinDualSense

#include "Basic.hpp"


namespace SDK
{

// Enum WinDualSense.EDualSense2DType
// NumValues: 0x0003
enum class EDualSense2DType : uint8
{
	TOUCHPOINT_FIRST                         = 0,
	TOUCHPOINT_SECOND                        = 1,
	TOUCHPOINT_MAX                           = 2,
};

// Enum WinDualSense.EDualSenseVectorType
// NumValues: 0x0003
enum class EDualSenseVectorType : uint8
{
	GYROSCOPE                                = 0,
	ACCELERATION                             = 1,
	EDualSenseVectorType_MAX                 = 2,
};

// Enum WinDualSense.EDualSenseAnalogType
// NumValues: 0x0007
enum class EDualSenseAnalogType : uint8
{
	LEFT_STICK_X                             = 0,
	LEFT_STICK_Y                             = 1,
	RIGHT_STICK_X                            = 2,
	RIGHT_STICK_Y                            = 3,
	LEFT_TRIGGER                             = 4,
	RIGHT_TRIGGER                            = 5,
	EDualSenseAnalogType_MAX                 = 6,
};

// Enum WinDualSense.EDualSenseButtonType
// NumValues: 0x0015
enum class EDualSenseButtonType : uint8
{
	TRIANGLE                                 = 0,
	CROSS                                    = 1,
	SQUARE                                   = 2,
	CIRCLE                                   = 3,
	DPAD_UP                                  = 4,
	DPAD_DOWN                                = 5,
	DPAD_LEFT                                = 6,
	DPAD_RIGHT                               = 7,
	BUMPER_LEFT                              = 8,
	BUMPER_RIGHT                             = 9,
	TRIGGER_LEFT                             = 10,
	TRIGGER_RIGHT                            = 11,
	LEFT_STICK_PUSH                          = 12,
	RIGHT_STICK_PUSH                         = 13,
	SELECT                                   = 14,
	MENU                                     = 15,
	PLAYSTATION_LOGO                         = 16,
	TOUCHPAD                                 = 17,
	MIC                                      = 18,
	MAX_COUNT                                = 19,
	EDualSenseButtonType_MAX                 = 20,
};

// Enum WinDualSense.EDualSenseButtonState
// NumValues: 0x0005
enum class EDualSenseButtonState : uint8
{
	NONE                                     = 0,
	PRESS                                    = 1,
	REPEAT                                   = 2,
	RELEASE                                  = 3,
	EDualSenseButtonState_MAX                = 4,
};

// ScriptStruct WinDualSense.DualSenseAnalogData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FDualSenseAnalogData final 
{
public:
	uint8                                         Pad_2DC0[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDualSenseAnalogData) == 0x000008, "Wrong alignment on FDualSenseAnalogData");
static_assert(sizeof(FDualSenseAnalogData) == 0x000020, "Wrong size on FDualSenseAnalogData");

// ScriptStruct WinDualSense.DualSenseVectorData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FDualSenseVectorData final 
{
public:
	uint8                                         Pad_2DC1[0x28];                                    // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDualSenseVectorData) == 0x000008, "Wrong alignment on FDualSenseVectorData");
static_assert(sizeof(FDualSenseVectorData) == 0x000028, "Wrong size on FDualSenseVectorData");

// ScriptStruct WinDualSense.DualSenseButtonData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FDualSenseButtonData final 
{
public:
	uint8                                         Pad_2DC2[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDualSenseButtonData) == 0x000008, "Wrong alignment on FDualSenseButtonData");
static_assert(sizeof(FDualSenseButtonData) == 0x000020, "Wrong size on FDualSenseButtonData");

}

