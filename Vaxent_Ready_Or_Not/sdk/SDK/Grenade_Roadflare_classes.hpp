#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_Roadflare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Grenade_Roadflare.Grenade_Roadflare_C
// 0x0030 (0x0E80 - 0x0E50)
class AGrenade_Roadflare_C final  : public ABaseGrenade
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E50(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   FlareLight;                                        // 0x0E58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TimeoutPeriod;                                     // 0x0E60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFadingOut_;                                       // 0x0E64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1680[0x3];                                     // 0x0E65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IntensityTarget;                                   // 0x0E68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1681[0x4];                                     // 0x0E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LenFlare_RoadFlare_C*               Lens_Flare;                                        // 0x0E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrightnessDefault;                                 // 0x0E78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Grenade_Roadflare(int32 EntryPoint, TDelegate<void(class ABaseGrenade* Grenade)> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_DeltaSeconds, class ABaseGrenade* K2Node_CustomEvent_Grenade, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class ABP_LenFlare_RoadFlare_C* CallFunc_FinishSpawningActor_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue);
	void GrenadeTimedOut();
	void DetonateBind(class ABaseGrenade* Grenade);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Grenade_Roadflare_C">();
	}
	static class AGrenade_Roadflare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenade_Roadflare_C>();
	}
};
static_assert(alignof(AGrenade_Roadflare_C) == 0x000010, "Wrong alignment on AGrenade_Roadflare_C");
static_assert(sizeof(AGrenade_Roadflare_C) == 0x000E80, "Wrong size on AGrenade_Roadflare_C");
static_assert(offsetof(AGrenade_Roadflare_C, UberGraphFrame) == 0x000E50, "Member 'AGrenade_Roadflare_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGrenade_Roadflare_C, FlareLight) == 0x000E58, "Member 'AGrenade_Roadflare_C::FlareLight' has a wrong offset!");
static_assert(offsetof(AGrenade_Roadflare_C, TimeoutPeriod) == 0x000E60, "Member 'AGrenade_Roadflare_C::TimeoutPeriod' has a wrong offset!");
static_assert(offsetof(AGrenade_Roadflare_C, bFadingOut_) == 0x000E64, "Member 'AGrenade_Roadflare_C::bFadingOut_' has a wrong offset!");
static_assert(offsetof(AGrenade_Roadflare_C, IntensityTarget) == 0x000E68, "Member 'AGrenade_Roadflare_C::IntensityTarget' has a wrong offset!");
static_assert(offsetof(AGrenade_Roadflare_C, Lens_Flare) == 0x000E70, "Member 'AGrenade_Roadflare_C::Lens_Flare' has a wrong offset!");
static_assert(offsetof(AGrenade_Roadflare_C, BrightnessDefault) == 0x000E78, "Member 'AGrenade_Roadflare_C::BrightnessDefault' has a wrong offset!");

}

