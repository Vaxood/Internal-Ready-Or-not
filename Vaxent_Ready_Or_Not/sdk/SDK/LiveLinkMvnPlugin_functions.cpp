#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveLinkMvnPlugin

#include "Basic.hpp"

#include "LiveLinkMvnPlugin_classes.hpp"
#include "LiveLinkMvnPlugin_parameters.hpp"


namespace SDK
{

// Function LiveLinkMvnPlugin.LiveLinkMvnRetargetAsset.GetCustomRemappedBoneName
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// EXsensMapping                           Bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ULiveLinkMvnRetargetAsset::GetCustomRemappedBoneName(EXsensMapping Bone) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LiveLinkMvnRetargetAsset", "GetCustomRemappedBoneName");

	Params::LiveLinkMvnRetargetAsset_GetCustomRemappedBoneName Parms{};

	Parms.Bone = Bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LiveLinkMvnPlugin.LiveLinkMvnRetargetAsset.GetRemappedBoneNameByConvention
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EXsensMapping                           Bone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EXsensRetargetNamingConvention          Convention                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ULiveLinkMvnRetargetAsset::GetRemappedBoneNameByConvention(EXsensMapping Bone, EXsensRetargetNamingConvention Convention) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LiveLinkMvnRetargetAsset", "GetRemappedBoneNameByConvention");

	Params::LiveLinkMvnRetargetAsset_GetRemappedBoneNameByConvention Parms{};

	Parms.Bone = Bone;
	Parms.Convention = Convention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LiveLinkMvnPlugin.MvnRemoteControlManager.StartRecording
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   _fTimeOffsetInSeconds                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMvnRemoteControlManager::StartRecording(float _fTimeOffsetInSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MvnRemoteControlManager", "StartRecording");

	Params::MvnRemoteControlManager_StartRecording Parms{};

	Parms._fTimeOffsetInSeconds = _fTimeOffsetInSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LiveLinkMvnPlugin.MvnRemoteControlManager.StopRecording
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   _fTimeOffsetInSeconds                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMvnRemoteControlManager::StopRecording(float _fTimeOffsetInSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MvnRemoteControlManager", "StopRecording");

	Params::MvnRemoteControlManager_StopRecording Parms{};

	Parms._fTimeOffsetInSeconds = _fTimeOffsetInSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

