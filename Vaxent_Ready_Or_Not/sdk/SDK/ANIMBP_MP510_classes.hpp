#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_MP510

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_MP510.ANIMBP_MP510_C
// 0x0D70 (0x1040 - 0x02D0)
class UANIMBP_MP510_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0308(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0410(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0430(0x00C0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x04F0(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x05A0(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0620(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0728(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0748(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x07C8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x07E8(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x08F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0910(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x0990(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x09B0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0AB8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0AD8(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0B58(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0B78(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0BC0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C60(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0CE0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0D60(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0EB8(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0F78(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0FC0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0FE8(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1010(0x0020)()
	float                                         Mag_01Alpha;                                       // 0x1030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CurrentFireMode;                                   // 0x1034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_MP510(int32 EntryPoint, int32 CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_Event_DeltaTimeX, class AActor* CallFunc_GetOwningActor_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_MP510_AnimGraphNode_BlendListByBool_046358884859E10A31499EB86A49D5E0();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_MP510_C">();
	}
	static class UANIMBP_MP510_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_MP510_C>();
	}
};
static_assert(alignof(UANIMBP_MP510_C) == 0x000010, "Wrong alignment on UANIMBP_MP510_C");
static_assert(sizeof(UANIMBP_MP510_C) == 0x001040, "Wrong size on UANIMBP_MP510_C");
static_assert(offsetof(UANIMBP_MP510_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_MP510_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_MP510_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone_3) == 0x000308, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000410, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000430, "Member 'UANIMBP_MP510_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_BlendListByEnum) == 0x0004F0, "Member 'UANIMBP_MP510_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_5) == 0x0005A0, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone_2) == 0x000620, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000728, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_4) == 0x000748, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace_3) == 0x0007C8, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone_1) == 0x0007E8, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0008F0, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_3) == 0x000910, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace_2) == 0x000990, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone) == 0x0009B0, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace) == 0x000AB8, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_2) == 0x000AD8, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000B58, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_Slot_1) == 0x000B78, "Member 'UANIMBP_MP510_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_BlendListByBool) == 0x000BC0, "Member 'UANIMBP_MP510_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_1) == 0x000C60, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer) == 0x000CE0, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SaveCachedPose) == 0x000D60, "Member 'UANIMBP_MP510_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LayeredBoneBlend) == 0x000EB8, "Member 'UANIMBP_MP510_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_Slot) == 0x000F78, "Member 'UANIMBP_MP510_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_UseCachedPose_1) == 0x000FC0, "Member 'UANIMBP_MP510_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_UseCachedPose) == 0x000FE8, "Member 'UANIMBP_MP510_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace) == 0x001010, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, Mag_01Alpha) == 0x001030, "Member 'UANIMBP_MP510_C::Mag_01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, CurrentFireMode) == 0x001034, "Member 'UANIMBP_MP510_C::CurrentFireMode' has a wrong offset!");

}

