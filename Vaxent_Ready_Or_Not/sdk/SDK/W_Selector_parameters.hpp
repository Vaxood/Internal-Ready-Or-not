#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Selector

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function W_Selector.W_Selector_C.OptionSelected__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_Selector_C_OptionSelected__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_OptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_OptionSelected__DelegateSignature");
static_assert(sizeof(W_Selector_C_OptionSelected__DelegateSignature) == 0x000018, "Wrong size on W_Selector_C_OptionSelected__DelegateSignature");
static_assert(offsetof(W_Selector_C_OptionSelected__DelegateSignature, OptionID) == 0x000000, "Member 'W_Selector_C_OptionSelected__DelegateSignature::OptionID' has a wrong offset!");
static_assert(offsetof(W_Selector_C_OptionSelected__DelegateSignature, Param_Index) == 0x000010, "Member 'W_Selector_C_OptionSelected__DelegateSignature::Param_Index' has a wrong offset!");

// Function W_Selector.W_Selector_C.OnSelectorClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_OnSelectorClicked__DelegateSignature final 
{
public:
	class UW_Selector_C*                          TriggeringSelector;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_OnSelectorClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_OnSelectorClicked__DelegateSignature");
static_assert(sizeof(W_Selector_C_OnSelectorClicked__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_OnSelectorClicked__DelegateSignature");
static_assert(offsetof(W_Selector_C_OnSelectorClicked__DelegateSignature, TriggeringSelector) == 0x000000, "Member 'W_Selector_C_OnSelectorClicked__DelegateSignature::TriggeringSelector' has a wrong offset!");

// Function W_Selector.W_Selector_C.OnOptionHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_OnOptionHovered__DelegateSignature final 
{
public:
	class FName                                   OptionID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_OnOptionHovered__DelegateSignature) == 0x000004, "Wrong alignment on W_Selector_C_OnOptionHovered__DelegateSignature");
static_assert(sizeof(W_Selector_C_OnOptionHovered__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_OnOptionHovered__DelegateSignature");
static_assert(offsetof(W_Selector_C_OnOptionHovered__DelegateSignature, OptionID) == 0x000000, "Member 'W_Selector_C_OnOptionHovered__DelegateSignature::OptionID' has a wrong offset!");

// Function W_Selector.W_Selector_C.ExecuteUbergraph_W_Selector
// 0x00C8 (0x00C8 - 0x0000)
struct W_Selector_C_ExecuteUbergraph_W_Selector final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E02[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E03[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Delay_1;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E04[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E05[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E06[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_OptionID_2;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_OptionID_1;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOptionIndex_Index;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOptionIndex_Index_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_OptionID;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Dropdown_C*                          K2Node_ComponentBoundEvent_TriggeringDropdown;     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Dropdown_C*                          K2Node_ComponentBoundEvent_Dropdown;               // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Selector_C_ExecuteUbergraph_W_Selector) == 0x000008, "Wrong alignment on W_Selector_C_ExecuteUbergraph_W_Selector");
static_assert(sizeof(W_Selector_C_ExecuteUbergraph_W_Selector) == 0x0000C8, "Wrong size on W_Selector_C_ExecuteUbergraph_W_Selector");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, EntryPoint) == 0x000000, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_CustomEvent_bNewInputType) == 0x000004, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_GetCurrentInputType_ReturnValue) == 0x000011, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_Event_Delay_1) == 0x000024, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_Event_Delay) == 0x000028, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_Event_Collapse) == 0x00002C, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_Event_IsGamepad) == 0x00002D, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_Event_PageName) == 0x000030, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_Event_IsDesignTime) == 0x000038, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000051, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_Button_1) == 0x000058, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_OptionID_2) == 0x000060, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_OptionID_2' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_OptionID_1) == 0x000068, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_OptionID_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_Conv_NameToString_ReturnValue) == 0x000078, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_GetOptionIndex_Index) == 0x000088, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_GetOptionIndex_Index' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_GetOptionIndex_Index_1) == 0x00008C, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_GetOptionIndex_Index_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_Button) == 0x000090, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_OptionID) == 0x000098, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_OptionID' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A8, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_TriggeringDropdown) == 0x0000B0, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_TriggeringDropdown' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, K2Node_ComponentBoundEvent_Dropdown) == 0x0000B8, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::K2Node_ComponentBoundEvent_Dropdown' has a wrong offset!");
static_assert(offsetof(W_Selector_C_ExecuteUbergraph_W_Selector, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'W_Selector_C_ExecuteUbergraph_W_Selector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_Selector.W_Selector_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Selector_C_InputMethodChanged final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_Selector_C_InputMethodChanged");
static_assert(sizeof(W_Selector_C_InputMethodChanged) == 0x000001, "Wrong size on W_Selector_C_InputMethodChanged");
static_assert(offsetof(W_Selector_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_Selector_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature final 
{
public:
	class UW_Dropdown_C*                          Param_Dropdown;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature, Param_Dropdown) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature::Param_Dropdown' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature final 
{
public:
	class UW_Dropdown_C*                          TriggeringDropdown;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature, TriggeringDropdown) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature::TriggeringDropdown' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature) == 0x000010, "Wrong size on W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature, OptionID) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature::OptionID' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Param_Button;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature, Param_Button) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature::Param_Button' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature) == 0x000010, "Wrong size on W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature, OptionID) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature::OptionID' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature final 
{
public:
	class FName                                   OptionID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature) == 0x000004, "Wrong alignment on W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature, OptionID) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature::OptionID' has a wrong offset!");

// Function W_Selector.W_Selector_C.BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Param_Button;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature");
static_assert(sizeof(W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature");
static_assert(offsetof(W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature, Param_Button) == 0x000000, "Member 'W_Selector_C_BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature::Param_Button' has a wrong offset!");

// Function W_Selector.W_Selector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Selector_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Selector_C_PreConstruct) == 0x000001, "Wrong alignment on W_Selector_C_PreConstruct");
static_assert(sizeof(W_Selector_C_PreConstruct) == 0x000001, "Wrong size on W_Selector_C_PreConstruct");
static_assert(offsetof(W_Selector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Selector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Selector.W_Selector_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_ChangePage) == 0x000004, "Wrong alignment on W_Selector_C_ChangePage");
static_assert(sizeof(W_Selector_C_ChangePage) == 0x000008, "Wrong size on W_Selector_C_ChangePage");
static_assert(offsetof(W_Selector_C_ChangePage, PageName) == 0x000000, "Member 'W_Selector_C_ChangePage::PageName' has a wrong offset!");

// Function W_Selector.W_Selector_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Selector_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Selector_C_SetInputMode) == 0x000001, "Wrong alignment on W_Selector_C_SetInputMode");
static_assert(sizeof(W_Selector_C_SetInputMode) == 0x000001, "Wrong size on W_Selector_C_SetInputMode");
static_assert(offsetof(W_Selector_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Selector_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Selector.W_Selector_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Selector_C_Hide) == 0x000004, "Wrong alignment on W_Selector_C_Hide");
static_assert(sizeof(W_Selector_C_Hide) == 0x000008, "Wrong size on W_Selector_C_Hide");
static_assert(offsetof(W_Selector_C_Hide, Delay) == 0x000000, "Member 'W_Selector_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Selector_C_Hide, Collapse) == 0x000004, "Member 'W_Selector_C_Hide::Collapse' has a wrong offset!");

// Function W_Selector.W_Selector_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Selector_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_Reveal) == 0x000004, "Wrong alignment on W_Selector_C_Reveal");
static_assert(sizeof(W_Selector_C_Reveal) == 0x000004, "Wrong size on W_Selector_C_Reveal");
static_assert(offsetof(W_Selector_C_Reveal, Delay) == 0x000000, "Member 'W_Selector_C_Reveal::Delay' has a wrong offset!");

// Function W_Selector.W_Selector_C.UpdateStyle
// 0x0018 (0x0018 - 0x0000)
struct W_Selector_C_UpdateStyle final 
{
public:
	bool                                          Param_bUseGamepad;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E07[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_UpdateStyle) == 0x000008, "Wrong alignment on W_Selector_C_UpdateStyle");
static_assert(sizeof(W_Selector_C_UpdateStyle) == 0x000018, "Wrong size on W_Selector_C_UpdateStyle");
static_assert(offsetof(W_Selector_C_UpdateStyle, Param_bUseGamepad) == 0x000000, "Member 'W_Selector_C_UpdateStyle::Param_bUseGamepad' has a wrong offset!");
static_assert(offsetof(W_Selector_C_UpdateStyle, Temp_bool_Variable) == 0x000001, "Member 'W_Selector_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Selector_C_UpdateStyle, Temp_byte_Variable) == 0x000002, "Member 'W_Selector_C_UpdateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Selector_C_UpdateStyle, Temp_byte_Variable_1) == 0x000003, "Member 'W_Selector_C_UpdateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_UpdateStyle, Temp_bool_Variable_1) == 0x000004, "Member 'W_Selector_C_UpdateStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_UpdateStyle, K2Node_Select_Default) == 0x000008, "Member 'W_Selector_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Selector_C_UpdateStyle, K2Node_Select_Default_1) == 0x000010, "Member 'W_Selector_C_UpdateStyle::K2Node_Select_Default_1' has a wrong offset!");

// Function W_Selector.W_Selector_C.SetOptions
// 0x00E8 (0x00E8 - 0x0000)
struct W_Selector_C_SetOptions final 
{
public:
	TMap<class FString, class FText>              NewOptionsMap;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   OptionText;                                        // 0x0050(0x0018)(Edit, BlueprintVisible)
	class FString                                 NewOptionID;                                       // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E08[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E09[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StringIsEmpty_ReturnValue;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E0A[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0B[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value;                           // 0x00C8(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Selector_C_SetOptions) == 0x000008, "Wrong alignment on W_Selector_C_SetOptions");
static_assert(sizeof(W_Selector_C_SetOptions) == 0x0000E8, "Wrong size on W_Selector_C_SetOptions");
static_assert(offsetof(W_Selector_C_SetOptions, NewOptionsMap) == 0x000000, "Member 'W_Selector_C_SetOptions::NewOptionsMap' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, OptionText) == 0x000050, "Member 'W_Selector_C_SetOptions::OptionText' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, NewOptionID) == 0x000068, "Member 'W_Selector_C_SetOptions::NewOptionID' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, Temp_int_Array_Index_Variable) == 0x000078, "Member 'W_Selector_C_SetOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'W_Selector_C_SetOptions::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'W_Selector_C_SetOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_Selector_C_SetOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'W_Selector_C_SetOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'W_Selector_C_SetOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'W_Selector_C_SetOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_StringIsEmpty_ReturnValue) == 0x0000B1, "Member 'W_Selector_C_SetOptions::CallFunc_StringIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B4, "Member 'W_Selector_C_SetOptions::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000BC, "Member 'W_Selector_C_SetOptions::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'W_Selector_C_SetOptions::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Selector_C_SetOptions, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'W_Selector_C_SetOptions::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_Selector.W_Selector_C.SetSelection
// 0x0010 (0x0010 - 0x0000)
struct W_Selector_C_SetSelection final 
{
public:
	class FString                                 EquippedID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_SetSelection) == 0x000008, "Wrong alignment on W_Selector_C_SetSelection");
static_assert(sizeof(W_Selector_C_SetSelection) == 0x000010, "Wrong size on W_Selector_C_SetSelection");
static_assert(offsetof(W_Selector_C_SetSelection, EquippedID) == 0x000000, "Member 'W_Selector_C_SetSelection::EquippedID' has a wrong offset!");

// Function W_Selector.W_Selector_C.AddOption
// 0x0028 (0x0028 - 0x0000)
struct W_Selector_C_AddOption final 
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_Selector_C_AddOption) == 0x000008, "Wrong alignment on W_Selector_C_AddOption");
static_assert(sizeof(W_Selector_C_AddOption) == 0x000028, "Wrong size on W_Selector_C_AddOption");
static_assert(offsetof(W_Selector_C_AddOption, ID) == 0x000000, "Member 'W_Selector_C_AddOption::ID' has a wrong offset!");
static_assert(offsetof(W_Selector_C_AddOption, Text) == 0x000010, "Member 'W_Selector_C_AddOption::Text' has a wrong offset!");

// Function W_Selector.W_Selector_C.GetOptionIndex
// 0x0030 (0x0030 - 0x0000)
struct W_Selector_C_GetOptionIndex final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_GetOptionIndex) == 0x000008, "Wrong alignment on W_Selector_C_GetOptionIndex");
static_assert(sizeof(W_Selector_C_GetOptionIndex) == 0x000030, "Wrong size on W_Selector_C_GetOptionIndex");
static_assert(offsetof(W_Selector_C_GetOptionIndex, OptionID) == 0x000000, "Member 'W_Selector_C_GetOptionIndex::OptionID' has a wrong offset!");
static_assert(offsetof(W_Selector_C_GetOptionIndex, Param_Index) == 0x000010, "Member 'W_Selector_C_GetOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_Selector_C_GetOptionIndex, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'W_Selector_C_GetOptionIndex::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Selector_C_GetOptionIndex, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'W_Selector_C_GetOptionIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function W_Selector.W_Selector_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Selector_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Selector_C_BackPage) == 0x000001, "Wrong alignment on W_Selector_C_BackPage");
static_assert(sizeof(W_Selector_C_BackPage) == 0x000001, "Wrong size on W_Selector_C_BackPage");
static_assert(offsetof(W_Selector_C_BackPage, Handled) == 0x000000, "Member 'W_Selector_C_BackPage::Handled' has a wrong offset!");

// Function W_Selector.W_Selector_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Selector_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Selector_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Selector_C_GetFocusTarget");
static_assert(sizeof(W_Selector_C_GetFocusTarget) == 0x000008, "Wrong size on W_Selector_C_GetFocusTarget");
static_assert(offsetof(W_Selector_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Selector_C_GetFocusTarget::Focus' has a wrong offset!");

}

