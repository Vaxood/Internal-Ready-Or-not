#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseController

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EJoystickTypes_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseController.BP_BaseController_C.ExecuteUbergraph_BP_BaseController
// 0x0210 (0x0210 - 0x0000)
struct BP_BaseController_C_ExecuteUbergraph_BP_BaseController final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4098[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4099[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0028(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0040(0x0018)(HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0060(0x0018)(HasGetValueTypeHash)
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0078(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409A[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_KickReason;                           // 0x00C0(0x0018)(ConstParm)
	struct FWidgetLookupData                      CallFunc_GetWidgetDataFromLookupData_ReturnValue;  // 0x00D8(0x0030)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PauseMenu_C*                         K2Node_DynamicCast_AsW_Pause_Menu;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409B[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_COOPScorePopUp_C*                    CallFunc_Create_ReturnValue_1;                     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScoreChangeValue;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409C[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoteData                              K2Node_Event_CurrentVoteData;                      // 0x0158(0x0030)()
	class UW_VotePopUp_C*                         K2Node_CustomEvent_Widget_1;                       // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0190(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01A8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409D[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_409E[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_VotePopUp_gamepad_C*                 K2Node_CustomEvent_Widget;                         // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409F[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A0[0x1];                                     // 0x0203(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A1[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController) == 0x000008, "Wrong alignment on BP_BaseController_C_ExecuteUbergraph_BP_BaseController");
static_assert(sizeof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController) == 0x000210, "Wrong size on BP_BaseController_C_ExecuteUbergraph_BP_BaseController");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, EntryPoint) == 0x000000, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputKeyEvent_Key_1) == 0x000008, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputActionEvent_Key) == 0x000028, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputActionEvent_Key_1) == 0x000040, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CustomEvent_Pawn) == 0x000058, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputActionEvent_Key_2) == 0x000060, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetAllActorsOfClass_OutActors) == 0x000078, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_DestroySession_ReturnValue) == 0x000098, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000A8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_KickReason) == 0x0000C0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_KickReason' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetWidgetDataFromLookupData_ReturnValue) == 0x0000D8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetWidgetDataFromLookupData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CreateDelegate_OutputDelegate) == 0x000108, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Create_ReturnValue) == 0x000118, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000120, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_AsW_Pause_Menu) == 0x000138, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_AsW_Pause_Menu' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_1) == 0x000141, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsVisible_ReturnValue) == 0x000142, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_2) == 0x000143, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Create_ReturnValue_1) == 0x000148, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_ScoreChangeValue) == 0x000150, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_ScoreChangeValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_Event_CurrentVoteData) == 0x000158, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_Event_CurrentVoteData' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CustomEvent_Widget_1) == 0x000188, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CustomEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_StringToText_ReturnValue) == 0x000190, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001A8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_3) == 0x0001C0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001C4, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_CustomEvent_Widget) == 0x0001D8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_4) == 0x0001E0, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, K2Node_InputKeyEvent_Key) == 0x0001E8, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_5) == 0x000200, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_IsValid_ReturnValue_6) == 0x000201, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_HasAuthority_ReturnValue) == 0x000202, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, Temp_int_Loop_Counter_Variable) == 0x000204, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_ExecuteUbergraph_BP_BaseController, CallFunc_Add_IntInt_ReturnValue) == 0x00020C, "Member 'BP_BaseController_C_ExecuteUbergraph_BP_BaseController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.SetUpVoteWidget_Gamepad
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseController_C_SetUpVoteWidget_Gamepad final 
{
public:
	class UW_VotePopUp_gamepad_C*                 Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_SetUpVoteWidget_Gamepad) == 0x000008, "Wrong alignment on BP_BaseController_C_SetUpVoteWidget_Gamepad");
static_assert(sizeof(BP_BaseController_C_SetUpVoteWidget_Gamepad) == 0x000008, "Wrong size on BP_BaseController_C_SetUpVoteWidget_Gamepad");
static_assert(offsetof(BP_BaseController_C_SetUpVoteWidget_Gamepad, Widget) == 0x000000, "Member 'BP_BaseController_C_SetUpVoteWidget_Gamepad::Widget' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.SetUpVoteWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseController_C_SetUpVoteWidget final 
{
public:
	class UW_VotePopUp_C*                         Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_SetUpVoteWidget) == 0x000008, "Wrong alignment on BP_BaseController_C_SetUpVoteWidget");
static_assert(sizeof(BP_BaseController_C_SetUpVoteWidget) == 0x000008, "Wrong size on BP_BaseController_C_SetUpVoteWidget");
static_assert(offsetof(BP_BaseController_C_SetUpVoteWidget, Widget) == 0x000000, "Member 'BP_BaseController_C_SetUpVoteWidget::Widget' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.RequestVoteInput
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseController_C_RequestVoteInput final 
{
public:
	struct FVoteData                              CurrentVoteData;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BaseController_C_RequestVoteInput) == 0x000008, "Wrong alignment on BP_BaseController_C_RequestVoteInput");
static_assert(sizeof(BP_BaseController_C_RequestVoteInput) == 0x000030, "Wrong size on BP_BaseController_C_RequestVoteInput");
static_assert(offsetof(BP_BaseController_C_RequestVoteInput, CurrentVoteData) == 0x000000, "Member 'BP_BaseController_C_RequestVoteInput::CurrentVoteData' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.ShowCoopScoreChangeWidget
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseController_C_ShowCoopScoreChangeWidget final 
{
public:
	float                                         ScoreChangeValue;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ShowCoopScoreChangeWidget) == 0x000004, "Wrong alignment on BP_BaseController_C_ShowCoopScoreChangeWidget");
static_assert(sizeof(BP_BaseController_C_ShowCoopScoreChangeWidget) == 0x000004, "Wrong size on BP_BaseController_C_ShowCoopScoreChangeWidget");
static_assert(offsetof(BP_BaseController_C_ShowCoopScoreChangeWidget, ScoreChangeValue) == 0x000000, "Member 'BP_BaseController_C_ShowCoopScoreChangeWidget::ScoreChangeValue' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.BP_ClientWasKicked
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_BP_ClientWasKicked final 
{
public:
	class FText                                   KickReason;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BaseController_C_BP_ClientWasKicked) == 0x000008, "Wrong alignment on BP_BaseController_C_BP_ClientWasKicked");
static_assert(sizeof(BP_BaseController_C_BP_ClientWasKicked) == 0x000018, "Wrong size on BP_BaseController_C_BP_ClientWasKicked");
static_assert(offsetof(BP_BaseController_C_BP_ClientWasKicked, KickReason) == 0x000000, "Member 'BP_BaseController_C_BP_ClientWasKicked::KickReason' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.ServerPossesPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseController_C_ServerPossesPawn final 
{
public:
	class APawn*                                  Param_Pawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_ServerPossesPawn) == 0x000008, "Wrong alignment on BP_BaseController_C_ServerPossesPawn");
static_assert(sizeof(BP_BaseController_C_ServerPossesPawn) == 0x000008, "Wrong size on BP_BaseController_C_ServerPossesPawn");
static_assert(offsetof(BP_BaseController_C_ServerPossesPawn, Param_Pawn) == 0x000000, "Member 'BP_BaseController_C_ServerPossesPawn::Param_Pawn' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_ReadyUp_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_ReadyUp_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_VoteNo_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_VoteNo_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_VoteYes_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_VoteYes_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_Equals_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_Equals_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.InpActEvt_End_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_BaseController_C_InpActEvt_End_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_BaseController.BP_BaseController_C.GetJoystickDirection
// 0x000C (0x000C - 0x0000)
struct BP_BaseController_C_GetJoystickDirection final 
{
public:
	EJoystickTypes                                Stick;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              StickInput;                                        // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseController_C_GetJoystickDirection) == 0x000004, "Wrong alignment on BP_BaseController_C_GetJoystickDirection");
static_assert(sizeof(BP_BaseController_C_GetJoystickDirection) == 0x00000C, "Wrong size on BP_BaseController_C_GetJoystickDirection");
static_assert(offsetof(BP_BaseController_C_GetJoystickDirection, Stick) == 0x000000, "Member 'BP_BaseController_C_GetJoystickDirection::Stick' has a wrong offset!");
static_assert(offsetof(BP_BaseController_C_GetJoystickDirection, StickInput) == 0x000004, "Member 'BP_BaseController_C_GetJoystickDirection::StickInput' has a wrong offset!");

}

