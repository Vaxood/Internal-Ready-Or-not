#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_AR18

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_AR18.ANIMBP_AR18_C
// 0x0B00 (0x0DD0 - 0x02D0)
class UANIMBP_AR18_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0308(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0350(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0470(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x04F0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0510(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0618(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0720(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0740(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0800(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0848(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x09A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x09C8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x09F0(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0A90(0x0158)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0BE8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0C08(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0C28(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0D30(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0D50(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0D78(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0D98(0x0028)()
	float                                         Mag01Alpha;                                        // 0x0DC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSemi;                                           // 0x0DC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ANIMBP_AR18(int32 EntryPoint, class AActor* CallFunc_GetOwningActor_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess, class USkeletalMeshComponent* CallFunc_GetItemMesh_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float K2Node_Event_DeltaTimeX, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Round_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_Less_IntInt_ReturnValue);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_AR18_AnimGraphNode_BlendListByBool_F9AA76C54839D8FCE638A0931A955864();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_AR18_C">();
	}
	static class UANIMBP_AR18_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_AR18_C>();
	}
};
static_assert(alignof(UANIMBP_AR18_C) == 0x000010, "Wrong alignment on UANIMBP_AR18_C");
static_assert(sizeof(UANIMBP_AR18_C) == 0x000DD0, "Wrong size on UANIMBP_AR18_C");
static_assert(offsetof(UANIMBP_AR18_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_AR18_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_AR18_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_Slot_1) == 0x000308, "Member 'UANIMBP_AR18_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_BlendListByBool_1) == 0x000350, "Member 'UANIMBP_AR18_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_SequencePlayer_1) == 0x0003F0, "Member 'UANIMBP_AR18_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_SequencePlayer) == 0x000470, "Member 'UANIMBP_AR18_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0004F0, "Member 'UANIMBP_AR18_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_ModifyBone_2) == 0x000510, "Member 'UANIMBP_AR18_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_ModifyBone_1) == 0x000618, "Member 'UANIMBP_AR18_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000720, "Member 'UANIMBP_AR18_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_LayeredBoneBlend) == 0x000740, "Member 'UANIMBP_AR18_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_Slot) == 0x000800, "Member 'UANIMBP_AR18_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_SaveCachedPose_1) == 0x000848, "Member 'UANIMBP_AR18_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_UseCachedPose_3) == 0x0009A0, "Member 'UANIMBP_AR18_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_UseCachedPose_2) == 0x0009C8, "Member 'UANIMBP_AR18_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_BlendListByBool) == 0x0009F0, "Member 'UANIMBP_AR18_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_SaveCachedPose) == 0x000A90, "Member 'UANIMBP_AR18_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000BE8, "Member 'UANIMBP_AR18_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000C08, "Member 'UANIMBP_AR18_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_ModifyBone) == 0x000C28, "Member 'UANIMBP_AR18_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_ComponentToLocalSpace) == 0x000D30, "Member 'UANIMBP_AR18_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_UseCachedPose_1) == 0x000D50, "Member 'UANIMBP_AR18_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_LocalToComponentSpace) == 0x000D78, "Member 'UANIMBP_AR18_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, AnimGraphNode_UseCachedPose) == 0x000D98, "Member 'UANIMBP_AR18_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, Mag01Alpha) == 0x000DC0, "Member 'UANIMBP_AR18_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_AR18_C, bIsSemi) == 0x000DC4, "Member 'UANIMBP_AR18_C::bIsSemi' has a wrong offset!");

}

