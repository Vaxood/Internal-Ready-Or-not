#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemWheel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_ItemWheel.W_ItemWheel_C.ExecuteUbergraph_W_ItemWheel
// 0x00D0 (0x00D0 - 0x0000)
struct W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD3[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInnerWheelPosition_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOuterWheelPosition_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD4[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD5[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu_1;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD6[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NumSegments;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0090(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu_2;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD7[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel) == 0x000008, "Wrong alignment on W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel");
static_assert(sizeof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel) == 0x0000D0, "Wrong size on W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, EntryPoint) == 0x000000, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000008, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_MyGeometry) == 0x000014, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_GetInnerWheelPosition_ReturnValue) == 0x000050, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_GetInnerWheelPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_GetOuterWheelPosition_ReturnValue) == 0x00005C, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_GetOuterWheelPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000068, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000070, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x000071, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000074, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_AsUMG_Radial_Menu_1) == 0x000080, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_AsUMG_Radial_Menu_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_NumSegments) == 0x00008C, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_NumSegments' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_GetText_ReturnValue) == 0x000090, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A8, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_AsUMG_Radial_Menu_2) == 0x0000B8, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_AsUMG_Radial_Menu_2' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Len_ReturnValue) == 0x0000C4, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.OnNumberOfSegmentsChange
// 0x0004 (0x0004 - 0x0000)
struct W_ItemWheel_C_OnNumberOfSegmentsChange final 
{
public:
	int32                                         NumSegments;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_OnNumberOfSegmentsChange) == 0x000004, "Wrong alignment on W_ItemWheel_C_OnNumberOfSegmentsChange");
static_assert(sizeof(W_ItemWheel_C_OnNumberOfSegmentsChange) == 0x000004, "Wrong size on W_ItemWheel_C_OnNumberOfSegmentsChange");
static_assert(offsetof(W_ItemWheel_C_OnNumberOfSegmentsChange, NumSegments) == 0x000000, "Member 'W_ItemWheel_C_OnNumberOfSegmentsChange::NumSegments' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_ItemWheel_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_Tick) == 0x000004, "Wrong alignment on W_ItemWheel_C_Tick");
static_assert(sizeof(W_ItemWheel_C_Tick) == 0x00003C, "Wrong size on W_ItemWheel_C_Tick");
static_assert(offsetof(W_ItemWheel_C_Tick, MyGeometry) == 0x000000, "Member 'W_ItemWheel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_Tick, InDeltaTime) == 0x000038, "Member 'W_ItemWheel_C_Tick::InDeltaTime' has a wrong offset!");

}

