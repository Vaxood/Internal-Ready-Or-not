#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_ItemStat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C
// 0x0610 (0x0870 - 0x0260)
class UW_WeaponWheel_ItemStat_C : public UWeaponWheel_ItemStat_Base
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         Stat_Container;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardText_C*                      StatName_Text;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           StatVisual_ProgressBar;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x0280(0x0018)(Edit, BlueprintVisible)
	float                                         ProgressBarValue;                                  // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStatValue;                                      // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAnimating;                                      // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_446A[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeElapsed;                                       // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FillSpeed;                                         // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         TargetPercent;                                     // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EasingFunction;                                    // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_446B[0xF];                                     // 0x02B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemLookupTable                       ItemLookupTable;                                   // 0x02C0(0x05A0)(Edit, BlueprintVisible, ExposeOnSpawn)
	float                                         WheelSize;                                         // 0x0860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         MaxWheelSize;                                      // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              WidgetSize;                                        // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_WeaponWheel_ItemStat(int32 EntryPoint, bool K2Node_Event_IsDesignTime, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Ease_ReturnValue);
	void OnRefresh();
	void OnWheelCreated();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void StartAnimating();
	void StopAnimating();
	void Initialize(float CallFunc_MapRangeClamped_ReturnValue);
	void SetupFontSize(float CallFunc_MapRangeClamped_ReturnValue, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, float CallFunc_MapRangeClamped_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue, const struct FSlateFontInfo& K2Node_MakeStruct_SlateFontInfo);
	void SetupWidgetSize(class UCanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WeaponWheel_ItemStat_C">();
	}
	static class UW_WeaponWheel_ItemStat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WeaponWheel_ItemStat_C>();
	}
};
static_assert(alignof(UW_WeaponWheel_ItemStat_C) == 0x000010, "Wrong alignment on UW_WeaponWheel_ItemStat_C");
static_assert(sizeof(UW_WeaponWheel_ItemStat_C) == 0x000870, "Wrong size on UW_WeaponWheel_ItemStat_C");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, UberGraphFrame) == 0x000260, "Member 'UW_WeaponWheel_ItemStat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, Stat_Container) == 0x000268, "Member 'UW_WeaponWheel_ItemStat_C::Stat_Container' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, StatName_Text) == 0x000270, "Member 'UW_WeaponWheel_ItemStat_C::StatName_Text' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, StatVisual_ProgressBar) == 0x000278, "Member 'UW_WeaponWheel_ItemStat_C::StatVisual_ProgressBar' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, StatName) == 0x000280, "Member 'UW_WeaponWheel_ItemStat_C::StatName' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, ProgressBarValue) == 0x000298, "Member 'UW_WeaponWheel_ItemStat_C::ProgressBarValue' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, MaxStatValue) == 0x00029C, "Member 'UW_WeaponWheel_ItemStat_C::MaxStatValue' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, bIsAnimating) == 0x0002A0, "Member 'UW_WeaponWheel_ItemStat_C::bIsAnimating' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, TimeElapsed) == 0x0002A4, "Member 'UW_WeaponWheel_ItemStat_C::TimeElapsed' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, FillSpeed) == 0x0002A8, "Member 'UW_WeaponWheel_ItemStat_C::FillSpeed' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, TargetPercent) == 0x0002AC, "Member 'UW_WeaponWheel_ItemStat_C::TargetPercent' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, EasingFunction) == 0x0002B0, "Member 'UW_WeaponWheel_ItemStat_C::EasingFunction' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, ItemLookupTable) == 0x0002C0, "Member 'UW_WeaponWheel_ItemStat_C::ItemLookupTable' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, WheelSize) == 0x000860, "Member 'UW_WeaponWheel_ItemStat_C::WheelSize' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, MaxWheelSize) == 0x000864, "Member 'UW_WeaponWheel_ItemStat_C::MaxWheelSize' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, WidgetSize) == 0x000868, "Member 'UW_WeaponWheel_ItemStat_C::WidgetSize' has a wrong offset!");

}

