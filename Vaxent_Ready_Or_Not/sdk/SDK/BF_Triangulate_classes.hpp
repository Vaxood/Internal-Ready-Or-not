#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BF_Triangulate

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BF_Triangulate.BF_Triangulate_C
// 0x0000 (0x0028 - 0x0028)
class UBF_Triangulate_C final  : public UBlueprintFunctionLibrary
{
public:
	static bool PointInTriangle(const struct FVector2D& P, const struct FVector2D& A, const struct FVector2D& B, const struct FVector2D& C, bool IgnoreSide, class UObject* __WorldContext, float CallFunc_MakeLiteralFloat_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_2, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_3, float CallFunc_CrossProduct2D_ReturnValue, float CallFunc_CrossProduct2D_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_4, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_5, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_6, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_7, float CallFunc_CrossProduct2D_ReturnValue_2, float CallFunc_CrossProduct2D_ReturnValue_3, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_8, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_CrossProduct2D_ReturnValue_4, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1, float CallFunc_CrossProduct2D_ReturnValue_5, float CallFunc_Multiply_FloatFloat_ReturnValue_2, bool CallFunc_Less_FloatFloat_ReturnValue_2, bool CallFunc_LessEqual_FloatFloat_ReturnValue_2);
	static void LineSegIntersectionTest(const struct FVector2D& A1, const struct FVector2D& b1, const struct FVector2D& A2, const struct FVector2D& b2, bool IgnoreSide, class UObject* __WorldContext, bool* Return, float CallFunc_MakeLiteralFloat_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_2, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_3, float CallFunc_CrossProduct2D_ReturnValue, float CallFunc_CrossProduct2D_ReturnValue_1, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_4, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_5, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_CrossProduct2D_ReturnValue_2, float CallFunc_CrossProduct2D_ReturnValue_3, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1);
	static void FlipPoligon(TArray<struct FST_VertexID>& Vert, class UObject* __WorldContext, TArray<struct FST_VertexID>* Return, const TArray<struct FST_VertexID>& F, float D, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FST_VertexID& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DVector2D_ReturnValue, const struct FST_VertexID& K2Node_MakeStruct_ST_VertexID, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_LoopArrayIndex_Return, int32 CallFunc_LoopArrayIndex_Return_1, const struct FST_VertexID& CallFunc_Array_Get_Item_1, const struct FST_VertexID& CallFunc_Array_Get_Item_2, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Normal2D_ReturnValue, const struct FVector2D& CallFunc_Normal2D_ReturnValue_1, float CallFunc_CrossProduct2D_ReturnValue, float CallFunc_DotProduct2D_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_DegAcos_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	static void RecursiveTriangulate(TArray<struct FST_VertexID>& Vert, TArray<struct FST_VertexID>& FullSetVert, TArray<struct FST_LineSegment>& BuiltSeg, int32 Thread, class UObject* __WorldContext, TArray<int32>* Triangles, int32 P3, int32 P2, int32 P1, bool C, const TArray<struct FST_LineSegment>& Seg, const TArray<struct FST_VertexID>& V, const TArray<int32>& Tri, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 Temp_int_Array_Index_Variable, const struct FST_VertexID& CallFunc_Array_Get_Item, int32 CallFunc_LoopArrayIndex_Return, const struct FST_VertexID& CallFunc_Array_Get_Item_1, bool Temp_bool_True_if_break_was_hit_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_True_if_break_was_hit_Variable_2, bool CallFunc_Not_PreBool_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<int32>& K2Node_MakeArray_Array, int32 Temp_int_Array_Index_Variable_2, TArray<int32>& K2Node_MakeArray_Array_1, const struct FST_LineSegment& CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_5, int32 CallFunc_LoopArrayIndex_Return_1, TArray<int32>& CallFunc_RecursiveTriangulate_Triangles, int32 CallFunc_LoopArrayIndex_Return_2, int32 CallFunc_LoopArrayIndex_Return_3, int32 CallFunc_Array_Length_ReturnValue_6, const struct FST_VertexID& CallFunc_Array_Get_Item_3, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, bool CallFunc_EqualEqual_IntInt_ReturnValue_3, const struct FST_VertexID& CallFunc_Array_Get_Item_4, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_5, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_6, const struct FST_VertexID& CallFunc_Array_Get_Item_5, TArray<int32>& K2Node_MakeArray_Array_2, bool CallFunc_PointInTriangle_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_4, bool CallFunc_LineSegIntersectionTest_Return, bool CallFunc_LineSegIntersectionTest_Return_1, const struct FST_LineSegment& K2Node_MakeStruct_ST_LineSegment, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, float CallFunc_CrossProduct2D_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	static void LoopArrayIndex(int32 Param_Index, int32 Shift, int32 ArrayLength, class UObject* __WorldContext, int32* Return, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue);
	static void TriangulatePolygon(TArray<struct FVector>& Vertices, class UObject* __WorldContext, TArray<int32>* Triangles, const struct FRotator& Rot, const TArray<struct FST_VertexID>& Vert, const struct FVector& Normal, const struct FVector& Center, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, const struct FVector& CallFunc_GetVectorArrayAverage_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, const struct FVector& CallFunc_Array_Get_Item, const struct FVector& CallFunc_Array_Get_Item_1, int32 CallFunc_LoopArrayIndex_Return, const struct FVector& CallFunc_Array_Get_Item_2, TArray<struct FST_LineSegment>& K2Node_MakeArray_Array, TArray<struct FST_VertexID>& CallFunc_FlipPoligon_Return, TArray<int32>& CallFunc_RecursiveTriangulate_Triangles, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_LessLess_VectorRotator_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, int32 Temp_int_Loop_Counter_Variable_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FST_VertexID& K2Node_MakeStruct_ST_VertexID, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, const struct FRotator& CallFunc_MakeRotFromZ_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BF_Triangulate_C">();
	}
	static class UBF_Triangulate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBF_Triangulate_C>();
	}
};
static_assert(alignof(UBF_Triangulate_C) == 0x000008, "Wrong alignment on UBF_Triangulate_C");
static_assert(sizeof(UBF_Triangulate_C) == 0x000028, "Wrong size on UBF_Triangulate_C");

}

