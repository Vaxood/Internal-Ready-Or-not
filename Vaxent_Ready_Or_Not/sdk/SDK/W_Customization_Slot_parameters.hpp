#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Customization_Slot

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_BoxShape_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Customization_Slot.W_Customization_Slot_C.OnSlotHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_OnSlotHovered__DelegateSignature final 
{
public:
	class UW_Customization_Slot_C*                TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Slot_C_OnSlotHovered__DelegateSignature");
static_assert(sizeof(W_Customization_Slot_C_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Slot_C_OnSlotHovered__DelegateSignature");
static_assert(offsetof(W_Customization_Slot_C_OnSlotHovered__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Customization_Slot_C_OnSlotHovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_OnSlotClicked__DelegateSignature final 
{
public:
	class UW_Customization_Slot_C*                TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Slot_C_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Customization_Slot_C_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Slot_C_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Customization_Slot_C_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Customization_Slot_C_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.OnSlotRightClickPressed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature final 
{
public:
	class UW_Customization_Slot_C*                TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature");
static_assert(sizeof(W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature");
static_assert(offsetof(W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Customization_Slot_C_OnSlotRightClickPressed__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.ExecuteUbergraph_W_Customization_Slot
// 0x0088 (0x0088 - 0x0000)
struct W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Delay_1;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7B[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadoutCustomization*                  K2Node_CustomEvent_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWidthByShape_Width;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHeightByShape_Height;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCustomizationCategoryText_Category_Text; // 0x0050(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Toggleable;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Highlight;                      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7E[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot) == 0x000008, "Wrong alignment on W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot");
static_assert(sizeof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot) == 0x000088, "Wrong size on W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, EntryPoint) == 0x000000, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_Event_Delay_1) == 0x000014, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_Event_Delay) == 0x000018, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_Event_Collapse) == 0x00001C, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_Event_IsGamepad) == 0x00001D, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_Event_PageName) == 0x000020, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_Event_IsDesignTime) == 0x000028, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_CustomEvent_Item) == 0x000030, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_GetWidthByShape_Width) == 0x000038, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_GetWidthByShape_Width' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_GetHeightByShape_Height) == 0x00003C, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_GetHeightByShape_Height' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_ComponentBoundEvent_Button_2) == 0x000040, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_ComponentBoundEvent_Button_1) == 0x000048, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_GetCustomizationCategoryText_Category_Text) == 0x000050, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_GetCustomizationCategoryText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_TextIsEmpty_ReturnValue) == 0x000068, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000070, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_CustomEvent_bNewInputType) == 0x000078, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_GetCurrentInputType_ReturnValue) == 0x000079, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, CallFunc_IsValid_ReturnValue) == 0x00007B, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_CustomEvent_Toggleable) == 0x00007C, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_CustomEvent_Toggleable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_CustomEvent_Highlight) == 0x00007D, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_CustomEvent_Highlight' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot, K2Node_ComponentBoundEvent_Button) == 0x000080, "Member 'W_Customization_Slot_C_ExecuteUbergraph_W_Customization_Slot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature");
static_assert(sizeof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature");
static_assert(offsetof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature, Button) == 0x000000, "Member 'W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_5_OnRightMousePressed__DelegateSignature::Button' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetHighlighted
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_SetHighlighted final 
{
public:
	bool                                          Highlight;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_SetHighlighted) == 0x000001, "Wrong alignment on W_Customization_Slot_C_SetHighlighted");
static_assert(sizeof(W_Customization_Slot_C_SetHighlighted) == 0x000001, "Wrong size on W_Customization_Slot_C_SetHighlighted");
static_assert(offsetof(W_Customization_Slot_C_SetHighlighted, Highlight) == 0x000000, "Member 'W_Customization_Slot_C_SetHighlighted::Highlight' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetToggleable
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_SetToggleable final 
{
public:
	bool                                          Toggleable;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_SetToggleable) == 0x000001, "Wrong alignment on W_Customization_Slot_C_SetToggleable");
static_assert(sizeof(W_Customization_Slot_C_SetToggleable) == 0x000001, "Wrong size on W_Customization_Slot_C_SetToggleable");
static_assert(offsetof(W_Customization_Slot_C_SetToggleable, Toggleable) == 0x000000, "Member 'W_Customization_Slot_C_SetToggleable::Toggleable' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_InputMethodChanged final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_Customization_Slot_C_InputMethodChanged");
static_assert(sizeof(W_Customization_Slot_C_InputMethodChanged) == 0x000001, "Wrong size on W_Customization_Slot_C_InputMethodChanged");
static_assert(offsetof(W_Customization_Slot_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_Customization_Slot_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature");
static_assert(sizeof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature");
static_assert(offsetof(W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_Customization_Slot_C_BndEvt__W_Customization_Slot_btn_Slot_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetItem
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_SetItem final 
{
public:
	class ULoadoutCustomization*                  Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_SetItem) == 0x000008, "Wrong alignment on W_Customization_Slot_C_SetItem");
static_assert(sizeof(W_Customization_Slot_C_SetItem) == 0x000008, "Wrong size on W_Customization_Slot_C_SetItem");
static_assert(offsetof(W_Customization_Slot_C_SetItem, Param_Item) == 0x000000, "Member 'W_Customization_Slot_C_SetItem::Param_Item' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on W_Customization_Slot_C_PreConstruct");
static_assert(sizeof(W_Customization_Slot_C_PreConstruct) == 0x000001, "Wrong size on W_Customization_Slot_C_PreConstruct");
static_assert(offsetof(W_Customization_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Customization_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_ChangePage) == 0x000004, "Wrong alignment on W_Customization_Slot_C_ChangePage");
static_assert(sizeof(W_Customization_Slot_C_ChangePage) == 0x000008, "Wrong size on W_Customization_Slot_C_ChangePage");
static_assert(offsetof(W_Customization_Slot_C_ChangePage, PageName) == 0x000000, "Member 'W_Customization_Slot_C_ChangePage::PageName' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_SetInputMode) == 0x000001, "Wrong alignment on W_Customization_Slot_C_SetInputMode");
static_assert(sizeof(W_Customization_Slot_C_SetInputMode) == 0x000001, "Wrong size on W_Customization_Slot_C_SetInputMode");
static_assert(offsetof(W_Customization_Slot_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Customization_Slot_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_Hide) == 0x000004, "Wrong alignment on W_Customization_Slot_C_Hide");
static_assert(sizeof(W_Customization_Slot_C_Hide) == 0x000008, "Wrong size on W_Customization_Slot_C_Hide");
static_assert(offsetof(W_Customization_Slot_C_Hide, Delay) == 0x000000, "Member 'W_Customization_Slot_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_Hide, Collapse) == 0x000004, "Member 'W_Customization_Slot_C_Hide::Collapse' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Customization_Slot_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_Reveal) == 0x000004, "Wrong alignment on W_Customization_Slot_C_Reveal");
static_assert(sizeof(W_Customization_Slot_C_Reveal) == 0x000004, "Wrong size on W_Customization_Slot_C_Reveal");
static_assert(offsetof(W_Customization_Slot_C_Reveal, Delay) == 0x000000, "Member 'W_Customization_Slot_C_Reveal::Delay' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.GetHeightByShape
// 0x0014 (0x0014 - 0x0000)
struct W_Customization_Slot_C_GetHeightByShape final 
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BoxShape                                    Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F7F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_GetHeightByShape) == 0x000004, "Wrong alignment on W_Customization_Slot_C_GetHeightByShape");
static_assert(sizeof(W_Customization_Slot_C_GetHeightByShape) == 0x000014, "Wrong size on W_Customization_Slot_C_GetHeightByShape");
static_assert(offsetof(W_Customization_Slot_C_GetHeightByShape, Height) == 0x000000, "Member 'W_Customization_Slot_C_GetHeightByShape::Height' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetHeightByShape, Temp_byte_Variable) == 0x000004, "Member 'W_Customization_Slot_C_GetHeightByShape::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetHeightByShape, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'W_Customization_Slot_C_GetHeightByShape::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetHeightByShape, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'W_Customization_Slot_C_GetHeightByShape::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetHeightByShape, K2Node_Select_Default) == 0x000010, "Member 'W_Customization_Slot_C_GetHeightByShape::K2Node_Select_Default' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.GetWidthByShape
// 0x0014 (0x0014 - 0x0000)
struct W_Customization_Slot_C_GetWidthByShape final 
{
public:
	float                                         Width;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BoxShape                                    Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F80[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_GetWidthByShape) == 0x000004, "Wrong alignment on W_Customization_Slot_C_GetWidthByShape");
static_assert(sizeof(W_Customization_Slot_C_GetWidthByShape) == 0x000014, "Wrong size on W_Customization_Slot_C_GetWidthByShape");
static_assert(offsetof(W_Customization_Slot_C_GetWidthByShape, Width) == 0x000000, "Member 'W_Customization_Slot_C_GetWidthByShape::Width' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetWidthByShape, Temp_byte_Variable) == 0x000004, "Member 'W_Customization_Slot_C_GetWidthByShape::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetWidthByShape, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'W_Customization_Slot_C_GetWidthByShape::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetWidthByShape, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'W_Customization_Slot_C_GetWidthByShape::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetWidthByShape, K2Node_Select_Default) == 0x000010, "Member 'W_Customization_Slot_C_GetWidthByShape::K2Node_Select_Default' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetLabelText
// 0x0018 (0x0018 - 0x0000)
struct W_Customization_Slot_C_SetLabelText final 
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Customization_Slot_C_SetLabelText) == 0x000008, "Wrong alignment on W_Customization_Slot_C_SetLabelText");
static_assert(sizeof(W_Customization_Slot_C_SetLabelText) == 0x000018, "Wrong size on W_Customization_Slot_C_SetLabelText");
static_assert(offsetof(W_Customization_Slot_C_SetLabelText, InText) == 0x000000, "Member 'W_Customization_Slot_C_SetLabelText::InText' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BindToButton
// 0x0080 (0x0080 - 0x0000)
struct W_Customization_Slot_C_BindToButton final 
{
public:
	class UW_Button_C*                            Param_ParentButton;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindClicks;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F81[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_BindToButton) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BindToButton");
static_assert(sizeof(W_Customization_Slot_C_BindToButton) == 0x000080, "Wrong size on W_Customization_Slot_C_BindToButton");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, Param_ParentButton) == 0x000000, "Member 'W_Customization_Slot_C_BindToButton::Param_ParentButton' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, BindClicks) == 0x000008, "Member 'W_Customization_Slot_C_BindToButton::BindClicks' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_4) == 0x00004C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_5) == 0x00005C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_6) == 0x00006C, "Member 'W_Customization_Slot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.UnbindFromButton
// 0x0074 (0x0074 - 0x0000)
struct W_Customization_Slot_C_UnbindFromButton final 
{
public:
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F82[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_UnbindFromButton) == 0x000004, "Wrong alignment on W_Customization_Slot_C_UnbindFromButton");
static_assert(sizeof(W_Customization_Slot_C_UnbindFromButton) == 0x000074, "Wrong size on W_Customization_Slot_C_UnbindFromButton");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_Customization_Slot_C_UnbindFromButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_6) == 0x000064, "Member 'W_Customization_Slot_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BindHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_BindHovered final 
{
public:
	class UW_Button_C*                            Param_ParentButton;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_BindHovered) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BindHovered");
static_assert(sizeof(W_Customization_Slot_C_BindHovered) == 0x000008, "Wrong size on W_Customization_Slot_C_BindHovered");
static_assert(offsetof(W_Customization_Slot_C_BindHovered, Param_ParentButton) == 0x000000, "Member 'W_Customization_Slot_C_BindHovered::Param_ParentButton' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BindSelectedState
// 0x0010 (0x0010 - 0x0000)
struct W_Customization_Slot_C_BindSelectedState final 
{
public:
	class UW_Button_C*                            Param_ParentButton;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_BindSelectedState) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BindSelectedState");
static_assert(sizeof(W_Customization_Slot_C_BindSelectedState) == 0x000010, "Wrong size on W_Customization_Slot_C_BindSelectedState");
static_assert(offsetof(W_Customization_Slot_C_BindSelectedState, Param_ParentButton) == 0x000000, "Member 'W_Customization_Slot_C_BindSelectedState::Param_ParentButton' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_BindSelectedState, CallFunc_GetSelected_ReturnValue) == 0x000008, "Member 'W_Customization_Slot_C_BindSelectedState::CallFunc_GetSelected_ReturnValue' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BindPressedState
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_BindPressedState final 
{
public:
	bool                                          CallFunc_IsPressed_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_BindPressedState) == 0x000001, "Wrong alignment on W_Customization_Slot_C_BindPressedState");
static_assert(sizeof(W_Customization_Slot_C_BindPressedState) == 0x000001, "Wrong size on W_Customization_Slot_C_BindPressedState");
static_assert(offsetof(W_Customization_Slot_C_BindPressedState, CallFunc_IsPressed_ReturnValue) == 0x000000, "Member 'W_Customization_Slot_C_BindPressedState::CallFunc_IsPressed_ReturnValue' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BindClick
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_BindClick final 
{
public:
	class UW_Button_C*                            Param_ParentButton;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_BindClick) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BindClick");
static_assert(sizeof(W_Customization_Slot_C_BindClick) == 0x000008, "Wrong size on W_Customization_Slot_C_BindClick");
static_assert(offsetof(W_Customization_Slot_C_BindClick, Param_ParentButton) == 0x000000, "Member 'W_Customization_Slot_C_BindClick::Param_ParentButton' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BindDoubleClick
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_BindDoubleClick final 
{
public:
	class UW_Button_C*                            Param_ParentButton;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_BindDoubleClick) == 0x000008, "Wrong alignment on W_Customization_Slot_C_BindDoubleClick");
static_assert(sizeof(W_Customization_Slot_C_BindDoubleClick) == 0x000008, "Wrong size on W_Customization_Slot_C_BindDoubleClick");
static_assert(offsetof(W_Customization_Slot_C_BindDoubleClick, Param_ParentButton) == 0x000000, "Member 'W_Customization_Slot_C_BindDoubleClick::Param_ParentButton' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetVisualState
// 0x00B0 (0x00B0 - 0x0000)
struct W_Customization_Slot_C_SetVisualState final 
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Equipped;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Highlighted;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetTagColor_ReturnValue;                  // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F83[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default_2;                           // 0x0028(0x0088)(ConstParm)
};
static_assert(alignof(W_Customization_Slot_C_SetVisualState) == 0x000008, "Wrong alignment on W_Customization_Slot_C_SetVisualState");
static_assert(sizeof(W_Customization_Slot_C_SetVisualState) == 0x0000B0, "Wrong size on W_Customization_Slot_C_SetVisualState");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Hovered) == 0x000000, "Member 'W_Customization_Slot_C_SetVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Pressed) == 0x000001, "Member 'W_Customization_Slot_C_SetVisualState::Pressed' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Equipped) == 0x000002, "Member 'W_Customization_Slot_C_SetVisualState::Equipped' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Highlighted) == 0x000003, "Member 'W_Customization_Slot_C_SetVisualState::Highlighted' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_bool_Variable) == 0x000004, "Member 'W_Customization_Slot_C_SetVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_byte_Variable) == 0x000005, "Member 'W_Customization_Slot_C_SetVisualState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_byte_Variable_1) == 0x000006, "Member 'W_Customization_Slot_C_SetVisualState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_bool_Variable_1) == 0x000007, "Member 'W_Customization_Slot_C_SetVisualState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_byte_Variable_2) == 0x000008, "Member 'W_Customization_Slot_C_SetVisualState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_byte_Variable_3) == 0x000009, "Member 'W_Customization_Slot_C_SetVisualState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_GetTagColor_ReturnValue) == 0x00000C, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_GetTagColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001D, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_BooleanAND_ReturnValue_1) == 0x00001E, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, K2Node_Select_Default) == 0x00001F, "Member 'W_Customization_Slot_C_SetVisualState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, K2Node_Select_Default_1) == 0x000020, "Member 'W_Customization_Slot_C_SetVisualState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, CallFunc_Not_PreBool_ReturnValue_2) == 0x000021, "Member 'W_Customization_Slot_C_SetVisualState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, Temp_bool_Variable_2) == 0x000022, "Member 'W_Customization_Slot_C_SetVisualState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetVisualState, K2Node_Select_Default_2) == 0x000028, "Member 'W_Customization_Slot_C_SetVisualState::K2Node_Select_Default_2' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.UpdateStyle
// 0x0010 (0x0010 - 0x0000)
struct W_Customization_Slot_C_UpdateStyle final 
{
public:
	bool                                          Param_bUseGamepad;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F84[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_UpdateStyle) == 0x000008, "Wrong alignment on W_Customization_Slot_C_UpdateStyle");
static_assert(sizeof(W_Customization_Slot_C_UpdateStyle) == 0x000010, "Wrong size on W_Customization_Slot_C_UpdateStyle");
static_assert(offsetof(W_Customization_Slot_C_UpdateStyle, Param_bUseGamepad) == 0x000000, "Member 'W_Customization_Slot_C_UpdateStyle::Param_bUseGamepad' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateStyle, Temp_bool_Variable) == 0x000001, "Member 'W_Customization_Slot_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateStyle, K2Node_Select_Default) == 0x000008, "Member 'W_Customization_Slot_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetupColors
// 0x0118 (0x0118 - 0x0000)
struct W_Customization_Slot_C_SetupColors final 
{
public:
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0010(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_1;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_1;              // 0x0048(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_2;             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_2;              // 0x0080(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_3;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_3;              // 0x00B8(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_4;             // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_4;              // 0x00F0(0x0028)()
};
static_assert(alignof(W_Customization_Slot_C_SetupColors) == 0x000008, "Wrong alignment on W_Customization_Slot_C_SetupColors");
static_assert(sizeof(W_Customization_Slot_C_SetupColors) == 0x000118, "Wrong size on W_Customization_Slot_C_SetupColors");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_LinearColor) == 0x000000, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_SlateColor) == 0x000010, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_LinearColor_1) == 0x000038, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_SlateColor_1) == 0x000048, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_LinearColor_2) == 0x000070, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_LinearColor_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_SlateColor_2) == 0x000080, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_LinearColor_3) == 0x0000A8, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_LinearColor_3' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_SlateColor_3) == 0x0000B8, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_SlateColor_3' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_LinearColor_4) == 0x0000E0, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_LinearColor_4' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetupColors, CallFunc_GetColorByName_SlateColor_4) == 0x0000F0, "Member 'W_Customization_Slot_C_SetupColors::CallFunc_GetColorByName_SlateColor_4' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.UpdateIcon
// 0x0078 (0x0078 - 0x0000)
struct W_Customization_Slot_C_UpdateIcon final 
{
public:
	TSoftObjectPtr<class UTexture2D>              IconTexture;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0038(0x0028)()
	bool                                          CallFunc_NotEqual_SoftObjectReference_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F85[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftObjectReference_ReturnValue_1; // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_UpdateIcon) == 0x000008, "Wrong alignment on W_Customization_Slot_C_UpdateIcon");
static_assert(sizeof(W_Customization_Slot_C_UpdateIcon) == 0x000078, "Wrong size on W_Customization_Slot_C_UpdateIcon");
static_assert(offsetof(W_Customization_Slot_C_UpdateIcon, IconTexture) == 0x000000, "Member 'W_Customization_Slot_C_UpdateIcon::IconTexture' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateIcon, CallFunc_GetColorByName_LinearColor) == 0x000028, "Member 'W_Customization_Slot_C_UpdateIcon::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateIcon, CallFunc_GetColorByName_SlateColor) == 0x000038, "Member 'W_Customization_Slot_C_UpdateIcon::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateIcon, CallFunc_NotEqual_SoftObjectReference_ReturnValue) == 0x000060, "Member 'W_Customization_Slot_C_UpdateIcon::CallFunc_NotEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateIcon, CallFunc_SelectColor_ReturnValue) == 0x000064, "Member 'W_Customization_Slot_C_UpdateIcon::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateIcon, CallFunc_NotEqual_SoftObjectReference_ReturnValue_1) == 0x000074, "Member 'W_Customization_Slot_C_UpdateIcon::CallFunc_NotEqual_SoftObjectReference_ReturnValue_1' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetEquipped
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_SetEquipped final 
{
public:
	bool                                          Param_bEquipped;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_SetEquipped) == 0x000001, "Wrong alignment on W_Customization_Slot_C_SetEquipped");
static_assert(sizeof(W_Customization_Slot_C_SetEquipped) == 0x000001, "Wrong size on W_Customization_Slot_C_SetEquipped");
static_assert(offsetof(W_Customization_Slot_C_SetEquipped, Param_bEquipped) == 0x000000, "Member 'W_Customization_Slot_C_SetEquipped::Param_bEquipped' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetLocked
// 0x0005 (0x0005 - 0x0000)
struct W_Customization_Slot_C_SetLocked final 
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_SetLocked) == 0x000001, "Wrong alignment on W_Customization_Slot_C_SetLocked");
static_assert(sizeof(W_Customization_Slot_C_SetLocked) == 0x000005, "Wrong size on W_Customization_Slot_C_SetLocked");
static_assert(offsetof(W_Customization_Slot_C_SetLocked, IsLocked) == 0x000000, "Member 'W_Customization_Slot_C_SetLocked::IsLocked' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetLocked, Temp_bool_Variable) == 0x000001, "Member 'W_Customization_Slot_C_SetLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetLocked, Temp_byte_Variable) == 0x000002, "Member 'W_Customization_Slot_C_SetLocked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetLocked, Temp_byte_Variable_1) == 0x000003, "Member 'W_Customization_Slot_C_SetLocked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetLocked, K2Node_Select_Default) == 0x000004, "Member 'W_Customization_Slot_C_SetLocked::K2Node_Select_Default' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.ShowMissingData
// 0x0088 (0x0088 - 0x0000)
struct W_Customization_Slot_C_ShowMissingData final 
{
public:
	bool                                          NoData;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F86[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LineThickness;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F87[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F88[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWidthByShape_Width;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHeightByShape_Height;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0048(0x0028)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWidthByShape_Width_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHeightByShape_Height_1;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_ShowMissingData) == 0x000008, "Wrong alignment on W_Customization_Slot_C_ShowMissingData");
static_assert(sizeof(W_Customization_Slot_C_ShowMissingData) == 0x000088, "Wrong size on W_Customization_Slot_C_ShowMissingData");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, NoData) == 0x000000, "Member 'W_Customization_Slot_C_ShowMissingData::NoData' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, LineThickness) == 0x000004, "Member 'W_Customization_Slot_C_ShowMissingData::LineThickness' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, Temp_bool_Variable) == 0x000008, "Member 'W_Customization_Slot_C_ShowMissingData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, Temp_byte_Variable) == 0x000009, "Member 'W_Customization_Slot_C_ShowMissingData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, Temp_byte_Variable_1) == 0x00000A, "Member 'W_Customization_Slot_C_ShowMissingData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000018, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, K2Node_Select_Default) == 0x00001D, "Member 'W_Customization_Slot_C_ShowMissingData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetWidthByShape_Width) == 0x000020, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetWidthByShape_Width' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetHeightByShape_Height) == 0x000024, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetHeightByShape_Height' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetColorByName_LinearColor) == 0x000038, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetColorByName_SlateColor) == 0x000048, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetWidthByShape_Width_1) == 0x000074, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetWidthByShape_Width_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_GetHeightByShape_Height_1) == 0x000078, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_GetHeightByShape_Height_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_ShowMissingData, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'W_Customization_Slot_C_ShowMissingData::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetCustomIconTexture
// 0x0028 (0x0028 - 0x0000)
struct W_Customization_Slot_C_SetCustomIconTexture final 
{
public:
	class UTexture2D*                             IconTexture;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchSize;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F89[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CustomSize;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_ColorAndOpacity;                             // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_SetCustomIconTexture) == 0x000008, "Wrong alignment on W_Customization_Slot_C_SetCustomIconTexture");
static_assert(sizeof(W_Customization_Slot_C_SetCustomIconTexture) == 0x000028, "Wrong size on W_Customization_Slot_C_SetCustomIconTexture");
static_assert(offsetof(W_Customization_Slot_C_SetCustomIconTexture, IconTexture) == 0x000000, "Member 'W_Customization_Slot_C_SetCustomIconTexture::IconTexture' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetCustomIconTexture, MatchSize) == 0x000008, "Member 'W_Customization_Slot_C_SetCustomIconTexture::MatchSize' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetCustomIconTexture, CustomSize) == 0x00000C, "Member 'W_Customization_Slot_C_SetCustomIconTexture::CustomSize' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_SetCustomIconTexture, Param_ColorAndOpacity) == 0x000014, "Member 'W_Customization_Slot_C_SetCustomIconTexture::Param_ColorAndOpacity' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.UpdateVariantCount
// 0x0028 (0x0028 - 0x0000)
struct W_Customization_Slot_C_UpdateVariantCount final 
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(W_Customization_Slot_C_UpdateVariantCount) == 0x000008, "Wrong alignment on W_Customization_Slot_C_UpdateVariantCount");
static_assert(sizeof(W_Customization_Slot_C_UpdateVariantCount) == 0x000028, "Wrong size on W_Customization_Slot_C_UpdateVariantCount");
static_assert(offsetof(W_Customization_Slot_C_UpdateVariantCount, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'W_Customization_Slot_C_UpdateVariantCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateVariantCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_Customization_Slot_C_UpdateVariantCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateVariantCount, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'W_Customization_Slot_C_UpdateVariantCount::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateVariantCount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_Customization_Slot_C_UpdateVariantCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateVariantCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'W_Customization_Slot_C_UpdateVariantCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.UpdateNameText
// 0x0002 (0x0002 - 0x0000)
struct W_Customization_Slot_C_UpdateNameText final 
{
public:
	bool                                          CallFunc_TextIsNotEmpty_NotEmpty;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_UpdateNameText) == 0x000001, "Wrong alignment on W_Customization_Slot_C_UpdateNameText");
static_assert(sizeof(W_Customization_Slot_C_UpdateNameText) == 0x000002, "Wrong size on W_Customization_Slot_C_UpdateNameText");
static_assert(offsetof(W_Customization_Slot_C_UpdateNameText, CallFunc_TextIsNotEmpty_NotEmpty) == 0x000000, "Member 'W_Customization_Slot_C_UpdateNameText::CallFunc_TextIsNotEmpty_NotEmpty' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_UpdateNameText, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'W_Customization_Slot_C_UpdateNameText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.GetTagColor
// 0x00A0 (0x00A0 - 0x0000)
struct W_Customization_Slot_C_GetTagColor final 
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0020(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_1;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_1;              // 0x0058(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_GetTagColor) == 0x000008, "Wrong alignment on W_Customization_Slot_C_GetTagColor");
static_assert(sizeof(W_Customization_Slot_C_GetTagColor) == 0x0000A0, "Wrong size on W_Customization_Slot_C_GetTagColor");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, ReturnValue) == 0x000000, "Member 'W_Customization_Slot_C_GetTagColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, CallFunc_GetColorByName_LinearColor) == 0x000010, "Member 'W_Customization_Slot_C_GetTagColor::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, CallFunc_GetColorByName_SlateColor) == 0x000020, "Member 'W_Customization_Slot_C_GetTagColor::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, CallFunc_GetColorByName_LinearColor_1) == 0x000048, "Member 'W_Customization_Slot_C_GetTagColor::CallFunc_GetColorByName_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, CallFunc_GetColorByName_SlateColor_1) == 0x000058, "Member 'W_Customization_Slot_C_GetTagColor::CallFunc_GetColorByName_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, CallFunc_SelectColor_ReturnValue) == 0x000080, "Member 'W_Customization_Slot_C_GetTagColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Slot_C_GetTagColor, CallFunc_SelectColor_ReturnValue_1) == 0x000090, "Member 'W_Customization_Slot_C_GetTagColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.SetHoveredState
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_SetHoveredState final 
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_SetHoveredState) == 0x000001, "Wrong alignment on W_Customization_Slot_C_SetHoveredState");
static_assert(sizeof(W_Customization_Slot_C_SetHoveredState) == 0x000001, "Wrong size on W_Customization_Slot_C_SetHoveredState");
static_assert(offsetof(W_Customization_Slot_C_SetHoveredState, Hovered) == 0x000000, "Member 'W_Customization_Slot_C_SetHoveredState::Hovered' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Slot_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Customization_Slot_C_BackPage) == 0x000001, "Wrong alignment on W_Customization_Slot_C_BackPage");
static_assert(sizeof(W_Customization_Slot_C_BackPage) == 0x000001, "Wrong size on W_Customization_Slot_C_BackPage");
static_assert(offsetof(W_Customization_Slot_C_BackPage, Handled) == 0x000000, "Member 'W_Customization_Slot_C_BackPage::Handled' has a wrong offset!");

// Function W_Customization_Slot.W_Customization_Slot_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Slot_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Slot_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Customization_Slot_C_GetFocusTarget");
static_assert(sizeof(W_Customization_Slot_C_GetFocusTarget) == 0x000008, "Wrong size on W_Customization_Slot_C_GetFocusTarget");
static_assert(offsetof(W_Customization_Slot_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Customization_Slot_C_GetFocusTarget::Focus' has a wrong offset!");

}

