#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Helmet_NVG_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Helmet_NVG_V2.Helmet_NVG_V2_C
// 0x0020 (0x1B40 - 0x1B20)
class AHelmet_NVG_V2_C : public ANightvisionGoggles
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1B20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x1B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x1B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x1B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Helmet_NVG_V2(int32 EntryPoint, float K2Node_Event_DeltaSeconds);
	void OnNightvisionActivated();
	void ReceiveTick(float DeltaSeconds);
	void OnNightvisionDeactivated();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Helmet_NVG_V2_C">();
	}
	static class AHelmet_NVG_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHelmet_NVG_V2_C>();
	}
};
static_assert(alignof(AHelmet_NVG_V2_C) == 0x000010, "Wrong alignment on AHelmet_NVG_V2_C");
static_assert(sizeof(AHelmet_NVG_V2_C) == 0x001B40, "Wrong size on AHelmet_NVG_V2_C");
static_assert(offsetof(AHelmet_NVG_V2_C, UberGraphFrame) == 0x001B20, "Member 'AHelmet_NVG_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHelmet_NVG_V2_C, SpotLight) == 0x001B28, "Member 'AHelmet_NVG_V2_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AHelmet_NVG_V2_C, Arrow) == 0x001B30, "Member 'AHelmet_NVG_V2_C::Arrow' has a wrong offset!");
static_assert(offsetof(AHelmet_NVG_V2_C, PlayerState) == 0x001B38, "Member 'AHelmet_NVG_V2_C::PlayerState' has a wrong offset!");

}

