#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_RadialSelection

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.ExecuteUbergraph_W_WeaponWheel_RadialSelection
// 0x0060 (0x0060 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4474[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4475[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4476[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4477[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4478[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4479[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection) == 0x000060, "Wrong size on W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, EntryPoint) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, K2Node_Event_IsDesignTime) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000030, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_MapRangeClamped_ReturnValue) == 0x00003C, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, K2Node_DynamicCast_AsBase_Magazine_Weapon_1) == 0x000048, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::K2Node_DynamicCast_AsBase_Magazine_Weapon_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection, CallFunc_Array_Add_ReturnValue_1) == 0x000058, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteUbergraph_W_WeaponWheel_RadialSelection::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_PreConstruct) == 0x000001, "Wrong alignment on W_WeaponWheel_RadialSelection_C_PreConstruct");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_PreConstruct) == 0x000001, "Wrong size on W_WeaponWheel_RadialSelection_C_PreConstruct");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.AddItemToCategory
// 0x0110 (0x0110 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_AddItemToCategory final 
{
public:
	class ABaseItem*                              NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AtIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0028(0x0088)()
	class UImage*                                 CallFunc_CreateIcon_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_447C[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447D[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue_1;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447E[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447F[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_AddItemToCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_AddItemToCategory");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_AddItemToCategory) == 0x000110, "Wrong size on W_WeaponWheel_RadialSelection_C_AddItemToCategory");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, NewItem) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::NewItem' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, AtIndex) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::AtIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, K2Node_MakeStruct_SlateBrush) == 0x000028, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_CreateIcon_ReturnValue) == 0x0000B0, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_CreateIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_AddChildToOverlay_ReturnValue) == 0x0000B8, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C0, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_GetObjectClass_ReturnValue_1) == 0x0000C8, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0000D0, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Array_LastIndex_ReturnValue) == 0x0000D4, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_GetObjectClass_ReturnValue_2) == 0x0000E0, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_NotEqual_ClassClass_ReturnValue_1) == 0x0000F8, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_NotEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Conv_StringToName_ReturnValue) == 0x0000FC, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Array_Contains_ReturnValue) == 0x000104, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddItemToCategory, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000108, "Member 'W_WeaponWheel_RadialSelection_C_AddItemToCategory::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.RemoveItemFromCategory
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory final 
{
public:
	class ABaseItem*                              Param_Item;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory) == 0x000010, "Wrong size on W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory, Param_Item) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory::Param_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory, CallFunc_Array_Contains_ReturnValue) == 0x00000A, "Member 'W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00000B, "Member 'W_WeaponWheel_RadialSelection_C_RemoveItemFromCategory::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.OnSelected
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_OnSelected final 
{
public:
	bool                                          Play_Animation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4480[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_OnSelected) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_OnSelected");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_OnSelected) == 0x000010, "Wrong size on W_WeaponWheel_RadialSelection_C_OnSelected");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_OnSelected, Play_Animation) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_OnSelected::Play_Animation' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_OnSelected, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_OnSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.MoveToFront
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_MoveToFront final 
{
public:
	class ABaseItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_MoveToFront) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_MoveToFront");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_MoveToFront) == 0x000010, "Wrong size on W_WeaponWheel_RadialSelection_C_MoveToFront");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_MoveToFront, Param_Item) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_MoveToFront::Param_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_MoveToFront, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_MoveToFront::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.MoveToBack
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_MoveToBack final 
{
public:
	class ABaseItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_MoveToBack) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_MoveToBack");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_MoveToBack) == 0x000018, "Wrong size on W_WeaponWheel_RadialSelection_C_MoveToBack");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_MoveToBack, Param_Item) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_MoveToBack::Param_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_MoveToBack, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_MoveToBack::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_MoveToBack, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_MoveToBack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_MoveToBack, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_MoveToBack::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.ShiftItemToNewSpot
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot final 
{
public:
	class ABaseItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4481[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot) == 0x000020, "Wrong size on W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot, Param_Item) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot::Param_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot, NewIndex) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot::NewIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_ShiftItemToNewSpot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.AddExecutableItemToCategory
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory final 
{
public:
	class UWeaponWheelScript*                     WeaponWheelScript;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AtIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4482[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4483[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory) == 0x000020, "Wrong size on W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, WeaponWheelScript) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::WeaponWheelScript' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, AtIndex) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::AtIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, CallFunc_Array_Contains_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_AddExecutableItemToCategory::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.RemoveExecutableItemFromCategory
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory final 
{
public:
	class UWeaponWheelScript*                     WeaponWheelScript;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory) == 0x000010, "Wrong size on W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory, WeaponWheelScript) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory::WeaponWheelScript' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00000A, "Member 'W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory, CallFunc_Array_Contains_ReturnValue) == 0x00000B, "Member 'W_WeaponWheel_RadialSelection_C_RemoveExecutableItemFromCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.RemoveNullItems (Internal)
// 0x0060 (0x0060 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_ final 
{
public:
	TArray<class UObject*>                        ItemArray;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Indicies_FoundNullItems;                           // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4484[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4485[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4486[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_) == 0x000060, "Wrong size on W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, ItemArray) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::ItemArray' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, Indicies_FoundNullItems) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::Indicies_FoundNullItems' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, Temp_int_Array_Index_Variable) == 0x000020, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'W_WeaponWheel_RadialSelection_C_RemoveNullItems__Internal_::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.CreateIcon
// 0x00B8 (0x00B8 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_CreateIcon final 
{
public:
	struct FSlateBrush                            InBrush;                                           // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UImage*                                 ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4487[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_CreateIcon) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_CreateIcon");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_CreateIcon) == 0x0000B8, "Wrong size on W_WeaponWheel_RadialSelection_C_CreateIcon");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, InBrush) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::InBrush' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, ReturnValue) == 0x000088, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, CallFunc_Array_LastIndex_ReturnValue) == 0x000090, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, CallFunc_SpawnObject_ReturnValue) == 0x0000A0, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_CreateIcon, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x0000B0, "Member 'W_WeaponWheel_RadialSelection_C_CreateIcon::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.Next
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_Next final 
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSucceeded;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4488[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Next_bSuccess;                            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_Next) == 0x000004, "Wrong alignment on W_WeaponWheel_RadialSelection_C_Next");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_Next) == 0x000020, "Wrong size on W_WeaponWheel_RadialSelection_C_Next");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, bSuccess) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_Next::bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, bSucceeded) == 0x000001, "Member 'W_WeaponWheel_RadialSelection_C_Next::bSucceeded' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Next, CallFunc_Next_bSuccess) == 0x00001D, "Member 'W_WeaponWheel_RadialSelection_C_Next::CallFunc_Next_bSuccess' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.Previous
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_Previous final 
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSucceeded;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4489[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_448A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Previous_bSuccess;                        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_Previous) == 0x000004, "Wrong alignment on W_WeaponWheel_RadialSelection_C_Previous");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_Previous) == 0x000020, "Wrong size on W_WeaponWheel_RadialSelection_C_Previous");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, bSuccess) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_Previous::bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, bSucceeded) == 0x000001, "Member 'W_WeaponWheel_RadialSelection_C_Previous::bSucceeded' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000014, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Previous, CallFunc_Previous_bSuccess) == 0x00001C, "Member 'W_WeaponWheel_RadialSelection_C_Previous::CallFunc_Previous_bSuccess' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.OnDeselected
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_OnDeselected final 
{
public:
	bool                                          Play_Animation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_448B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_OnDeselected) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_OnDeselected");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_OnDeselected) == 0x000010, "Wrong size on W_WeaponWheel_RadialSelection_C_OnDeselected");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_OnDeselected, Play_Animation) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_OnDeselected::Play_Animation' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_OnDeselected, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_OnDeselected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.ExecuteRadial
// 0x0050 (0x0050 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_ExecuteRadial final 
{
public:
	EGrenadeThrowSettingType                      CallFunc_LoadGrenadeSettings_GrenadeThrowType;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadGrenadeSettings_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_448C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              K2Node_DynamicCast_AsBase_Item;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_448D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PutItemInHands_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_448E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponWheelScript*                     K2Node_DynamicCast_AsWeapon_Wheel_Script;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanEquip_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_448F[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseGrenade*                           K2Node_DynamicCast_AsBase_Grenade;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_ExecuteRadial) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_ExecuteRadial");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_ExecuteRadial) == 0x000050, "Wrong size on W_WeaponWheel_RadialSelection_C_ExecuteRadial");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_LoadGrenadeSettings_GrenadeThrowType) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_LoadGrenadeSettings_GrenadeThrowType' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_LoadGrenadeSettings_ReturnValue) == 0x000001, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_LoadGrenadeSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_Array_Get_Item) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, K2Node_DynamicCast_AsBase_Item) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::K2Node_DynamicCast_AsBase_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_PutItemInHands_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_PutItemInHands_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, K2Node_DynamicCast_AsWeapon_Wheel_Script) == 0x000030, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::K2Node_DynamicCast_AsWeapon_Wheel_Script' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_CanEquip_ReturnValue) == 0x000039, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_CanEquip_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, K2Node_DynamicCast_AsBase_Grenade) == 0x000040, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::K2Node_DynamicCast_AsBase_Grenade' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_ExecuteRadial, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'W_WeaponWheel_RadialSelection_C_ExecuteRadial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.Select
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_Select final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4490[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_Select) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_Select");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_Select) == 0x000020, "Wrong size on W_WeaponWheel_RadialSelection_C_Select");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Select, Param_Index) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_Select::Param_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Select, CallFunc_Array_Get_Item) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_Select::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Select, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000010, "Member 'W_WeaponWheel_RadialSelection_C_Select::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_Select, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_Select::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.UpdateIcon
// 0x0300 (0x0300 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_UpdateIcon final 
{
public:
	int32                                         SelectionIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4491[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            InBrush;                                           // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0098(0x0088)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0130(0x0088)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              K2Node_DynamicCast_AsBase_Item;                    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4492[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponWheelScript*                     K2Node_DynamicCast_AsWeapon_Wheel_Script;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4493[0x5];                                     // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x01F0(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0278(0x0088)()
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_UpdateIcon) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_UpdateIcon");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_UpdateIcon) == 0x000300, "Wrong size on W_WeaponWheel_RadialSelection_C_UpdateIcon");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, SelectionIndex) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::SelectionIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, InBrush) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::InBrush' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_MakeVector2D_ReturnValue) == 0x000090, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_MakeStruct_SlateBrush) == 0x000098, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_MakeVector2D_ReturnValue_1) == 0x000120, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_MakeVector2D_ReturnValue_2) == 0x000128, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_MakeStruct_SlateBrush_1) == 0x000130, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_MakeVector2D_ReturnValue_3) == 0x0001B8, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_DynamicCast_AsBase_Item) == 0x0001C8, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_DynamicCast_AsBase_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_DynamicCast_AsWeapon_Wheel_Script) == 0x0001D8, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_DynamicCast_AsWeapon_Wheel_Script' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_IsValid_ReturnValue) == 0x0001E1, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_IsValid_ReturnValue_1) == 0x0001E2, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, CallFunc_GetLazyLoadedImage_ReturnValue) == 0x0001E8, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::CallFunc_GetLazyLoadedImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_MakeStruct_SlateBrush_2) == 0x0001F0, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_UpdateIcon, K2Node_MakeStruct_SlateBrush_3) == 0x000278, "Member 'W_WeaponWheel_RadialSelection_C_UpdateIcon::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.GetCategory
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_GetCategory final 
{
public:
	class FText                                   Category;                                          // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_GetCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_GetCategory");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_GetCategory) == 0x000018, "Wrong size on W_WeaponWheel_RadialSelection_C_GetCategory");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetCategory, Category) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_GetCategory::Category' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.GetItemName
// 0x0108 (0x0108 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_GetItemName final 
{
public:
	class FName                                   Item_Name;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 FinalString;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4494[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              K2Node_DynamicCast_AsBase_Item;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4495[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponWheelScript*                     K2Node_DynamicCast_AsWeapon_Wheel_Script;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4496[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0098(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4497[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4498[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_GetItemName) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_GetItemName");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_GetItemName) == 0x000108, "Wrong size on W_WeaponWheel_RadialSelection_C_GetItemName");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, Item_Name) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::Item_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, FinalString) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::FinalString' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, Temp_string_Variable) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, Temp_bool_Variable) == 0x00002C, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, Temp_string_Variable_1) == 0x000038, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, K2Node_DynamicCast_AsBase_Item) == 0x000058, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::K2Node_DynamicCast_AsBase_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, K2Node_DynamicCast_AsWeapon_Wheel_Script) == 0x000068, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::K2Node_DynamicCast_AsWeapon_Wheel_Script' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_IsValid_ReturnValue_1) == 0x000072, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000088, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_ParseIntoArray_ReturnValue) == 0x000098, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000A8, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Array_Length_ReturnValue_1) == 0x0000D4, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000DC, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, K2Node_Select_Default) == 0x0000E8, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_GetItemName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F8, "Member 'W_WeaponWheel_RadialSelection_C_GetItemName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.IsEquipping
// 0x0028 (0x0028 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_IsEquipping final 
{
public:
	bool                                          Param_IsEquipping;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4499[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBlockingAnimationExclusion>           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class ABaseItem*                              CallFunc_GetEquippedItem_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBlockingAnimationPlaying_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_IsEquipping) == 0x000008, "Wrong alignment on W_WeaponWheel_RadialSelection_C_IsEquipping");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_IsEquipping) == 0x000028, "Wrong size on W_WeaponWheel_RadialSelection_C_IsEquipping");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsEquipping, Param_IsEquipping) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_IsEquipping::Param_IsEquipping' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsEquipping, K2Node_MakeArray_Array) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_IsEquipping::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsEquipping, CallFunc_GetEquippedItem_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_RadialSelection_C_IsEquipping::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsEquipping, CallFunc_IsBlockingAnimationPlaying_ReturnValue) == 0x000020, "Member 'W_WeaponWheel_RadialSelection_C_IsEquipping::CallFunc_IsBlockingAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_RadialSelection.W_WeaponWheel_RadialSelection_C.IsInExecutablesArray
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_RadialSelection_C_IsInExecutablesArray final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_RadialSelection_C_IsInExecutablesArray) == 0x000004, "Wrong alignment on W_WeaponWheel_RadialSelection_C_IsInExecutablesArray");
static_assert(sizeof(W_WeaponWheel_RadialSelection_C_IsInExecutablesArray) == 0x000010, "Wrong size on W_WeaponWheel_RadialSelection_C_IsInExecutablesArray");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsInExecutablesArray, Return_Value) == 0x000000, "Member 'W_WeaponWheel_RadialSelection_C_IsInExecutablesArray::Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsInExecutablesArray, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_RadialSelection_C_IsInExecutablesArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsInExecutablesArray, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_RadialSelection_C_IsInExecutablesArray::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_RadialSelection_C_IsInExecutablesArray, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_RadialSelection_C_IsInExecutablesArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

