#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIAction_NonCompliant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIAction_NonCompliant.AIAction_NonCompliant_C
// 0x0008 (0x0060 - 0x0058)
class UAIAction_NonCompliant_C final  : public UAIAction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0058(0x0008)(ZeroConstructor, Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_AIAction_NonCompliant(int32 EntryPoint, class UReadyOrNotAIConfig* CallFunc_Get_ReturnValue, bool Temp_bool_Variable, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, class ACyberneticCharacter* CallFunc_GetCharacter_ReturnValue, class ACyberneticCharacter* CallFunc_GetCharacter_ReturnValue_1, bool CallFunc_PlayRawVO_ReturnValue, float CallFunc_IsTableMontagePlayingWithTimeRemaining_TimeRemaining, bool CallFunc_IsTableMontagePlayingWithTimeRemaining_ReturnValue, float K2Node_Event_DeltaTime, class ACyberneticCharacter* CallFunc_GetCharacter_ReturnValue_2, bool CallFunc_CanBeNonCompliant_Return_Value, bool CallFunc_IsSuspect_ReturnValue, class ACyberneticCharacter* CallFunc_GetCharacter_ReturnValue_3, const class FString& K2Node_Select_Default, class UAnimMontage* CallFunc_PlayMontageFromTable_ReturnValue, float CallFunc_GetFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);
	void Tick_Blueprint(float DeltaTime);
	void BeginAction_Blueprint();

	void CanBeNonCompliant(bool* Return_Value, class ACyberneticCharacter* CallFunc_GetCharacter_ReturnValue, class ACyberneticCharacter* CallFunc_GetCharacter_ReturnValue_1, bool CallFunc_IsActive_ReturnValue, bool CallFunc_IsWearingExplosiveVest_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIAction_NonCompliant_C">();
	}
	static class UAIAction_NonCompliant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIAction_NonCompliant_C>();
	}
};
static_assert(alignof(UAIAction_NonCompliant_C) == 0x000008, "Wrong alignment on UAIAction_NonCompliant_C");
static_assert(sizeof(UAIAction_NonCompliant_C) == 0x000060, "Wrong size on UAIAction_NonCompliant_C");
static_assert(offsetof(UAIAction_NonCompliant_C, UberGraphFrame) == 0x000058, "Member 'UAIAction_NonCompliant_C::UberGraphFrame' has a wrong offset!");

}

