#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LobbyLoadout

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.ExecuteUbergraph_BP_LobbyLoadout
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_7;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_7;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UI_TestController_C*                K2Node_DynamicCast_AsBP_UI_Test_Controller;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F7F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_6;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_6;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_5;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_5;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_4;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_4;            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_3;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_3;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_2;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_2;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_Event_InteractInstigator_1;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_Event_InInteractableComponent_1;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout");
static_assert(sizeof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout) == 0x0000A8, "Wrong size on BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, EntryPoint) == 0x000000, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator) == 0x000008, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent) == 0x000010, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_OtherActor) == 0x000018, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_7) == 0x000028, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_7' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_7) == 0x000030, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_7' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_DynamicCast_AsBP_UI_Test_Controller) == 0x000038, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_DynamicCast_AsBP_UI_Test_Controller' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_6) == 0x000048, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_6' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_6) == 0x000050, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_6' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_5) == 0x000058, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_5' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_5) == 0x000060, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_5' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_4) == 0x000068, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_4' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_4) == 0x000070, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_4' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_3) == 0x000078, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_3' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_3) == 0x000080, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_3' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_2) == 0x000088, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_2' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_2) == 0x000090, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_2' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InteractInstigator_1) == 0x000098, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InteractInstigator_1' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout, K2Node_Event_InInteractableComponent_1) == 0x0000A0, "Member 'BP_LobbyLoadout_C_ExecuteUbergraph_BP_LobbyLoadout::K2Node_Event_InInteractableComponent_1' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.Interact
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_Interact final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_Interact) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_Interact");
static_assert(sizeof(BP_LobbyLoadout_C_Interact) == 0x000010, "Wrong size on BP_LobbyLoadout_C_Interact");
static_assert(offsetof(BP_LobbyLoadout_C_Interact, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_Interact::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_Interact, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_Interact::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.DoubleTapInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_DoubleTapInteract final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_DoubleTapInteract) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_DoubleTapInteract");
static_assert(sizeof(BP_LobbyLoadout_C_DoubleTapInteract) == 0x000010, "Wrong size on BP_LobbyLoadout_C_DoubleTapInteract");
static_assert(offsetof(BP_LobbyLoadout_C_DoubleTapInteract, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_DoubleTapInteract::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_DoubleTapInteract, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_DoubleTapInteract::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.MeleeInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_MeleeInteract final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_MeleeInteract) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_MeleeInteract");
static_assert(sizeof(BP_LobbyLoadout_C_MeleeInteract) == 0x000010, "Wrong size on BP_LobbyLoadout_C_MeleeInteract");
static_assert(offsetof(BP_LobbyLoadout_C_MeleeInteract, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_MeleeInteract::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_MeleeInteract, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_MeleeInteract::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.EndFire
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_EndFire final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_EndFire) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_EndFire");
static_assert(sizeof(BP_LobbyLoadout_C_EndFire) == 0x000010, "Wrong size on BP_LobbyLoadout_C_EndFire");
static_assert(offsetof(BP_LobbyLoadout_C_EndFire, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_EndFire::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_EndFire, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_EndFire::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.OnFocusGain
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_OnFocusGain final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_OnFocusGain) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_OnFocusGain");
static_assert(sizeof(BP_LobbyLoadout_C_OnFocusGain) == 0x000010, "Wrong size on BP_LobbyLoadout_C_OnFocusGain");
static_assert(offsetof(BP_LobbyLoadout_C_OnFocusGain, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_OnFocusGain::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_OnFocusGain, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_OnFocusGain::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.EndInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_EndInteract final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_EndInteract) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_EndInteract");
static_assert(sizeof(BP_LobbyLoadout_C_EndInteract) == 0x000010, "Wrong size on BP_LobbyLoadout_C_EndInteract");
static_assert(offsetof(BP_LobbyLoadout_C_EndInteract, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_EndInteract::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_EndInteract, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_EndInteract::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.Fire
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_Fire final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_Fire) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_Fire");
static_assert(sizeof(BP_LobbyLoadout_C_Fire) == 0x000010, "Wrong size on BP_LobbyLoadout_C_Fire");
static_assert(offsetof(BP_LobbyLoadout_C_Fire, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_Fire::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_Fire, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_Fire::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.OnFocusLost
// 0x0010 (0x0010 - 0x0000)
struct BP_LobbyLoadout_C_OnFocusLost final 
{
public:
	class AReadyOrNotCharacter*                   InteractInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 InInteractableComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_OnFocusLost) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_OnFocusLost");
static_assert(sizeof(BP_LobbyLoadout_C_OnFocusLost) == 0x000010, "Wrong size on BP_LobbyLoadout_C_OnFocusLost");
static_assert(offsetof(BP_LobbyLoadout_C_OnFocusLost, InteractInstigator) == 0x000000, "Member 'BP_LobbyLoadout_C_OnFocusLost::InteractInstigator' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_OnFocusLost, InInteractableComponent) == 0x000008, "Member 'BP_LobbyLoadout_C_OnFocusLost::InInteractableComponent' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_LobbyLoadout_C_ReceiveActorBeginOverlap final 
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_LobbyLoadout_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_LobbyLoadout_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_LobbyLoadout_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_LobbyLoadout_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.GetInteractableComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_LobbyLoadout_C_GetInteractableComponent final 
{
public:
	class UInteractableComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_GetInteractableComponent) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_GetInteractableComponent");
static_assert(sizeof(BP_LobbyLoadout_C_GetInteractableComponent) == 0x000008, "Wrong size on BP_LobbyLoadout_C_GetInteractableComponent");
static_assert(offsetof(BP_LobbyLoadout_C_GetInteractableComponent, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_GetInteractableComponent::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.DetermineInteractionDistance
// 0x0004 (0x0004 - 0x0000)
struct BP_LobbyLoadout_C_DetermineInteractionDistance final 
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_DetermineInteractionDistance) == 0x000004, "Wrong alignment on BP_LobbyLoadout_C_DetermineInteractionDistance");
static_assert(sizeof(BP_LobbyLoadout_C_DetermineInteractionDistance) == 0x000004, "Wrong size on BP_LobbyLoadout_C_DetermineInteractionDistance");
static_assert(offsetof(BP_LobbyLoadout_C_DetermineInteractionDistance, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_DetermineInteractionDistance::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.DetermineInputEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_LobbyLoadout_C_DetermineInputEvent final 
{
public:
	EInputEvent                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_DetermineInputEvent) == 0x000001, "Wrong alignment on BP_LobbyLoadout_C_DetermineInputEvent");
static_assert(sizeof(BP_LobbyLoadout_C_DetermineInputEvent) == 0x000001, "Wrong size on BP_LobbyLoadout_C_DetermineInputEvent");
static_assert(offsetof(BP_LobbyLoadout_C_DetermineInputEvent, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_DetermineInputEvent::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.DetermineAnimatedIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_LobbyLoadout_C_DetermineAnimatedIcon final 
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_DetermineAnimatedIcon) == 0x000004, "Wrong alignment on BP_LobbyLoadout_C_DetermineAnimatedIcon");
static_assert(sizeof(BP_LobbyLoadout_C_DetermineAnimatedIcon) == 0x000008, "Wrong size on BP_LobbyLoadout_C_DetermineAnimatedIcon");
static_assert(offsetof(BP_LobbyLoadout_C_DetermineAnimatedIcon, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_DetermineAnimatedIcon::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.DetermineActionText
// 0x0018 (0x0018 - 0x0000)
struct BP_LobbyLoadout_C_DetermineActionText final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_LobbyLoadout_C_DetermineActionText) == 0x000008, "Wrong alignment on BP_LobbyLoadout_C_DetermineActionText");
static_assert(sizeof(BP_LobbyLoadout_C_DetermineActionText) == 0x000018, "Wrong size on BP_LobbyLoadout_C_DetermineActionText");
static_assert(offsetof(BP_LobbyLoadout_C_DetermineActionText, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_DetermineActionText::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.CanInteractThroughHitActors
// 0x008C (0x008C - 0x0000)
struct BP_LobbyLoadout_C_CanInteractThroughHitActors final 
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LobbyLoadout_C_CanInteractThroughHitActors) == 0x000004, "Wrong alignment on BP_LobbyLoadout_C_CanInteractThroughHitActors");
static_assert(sizeof(BP_LobbyLoadout_C_CanInteractThroughHitActors) == 0x00008C, "Wrong size on BP_LobbyLoadout_C_CanInteractThroughHitActors");
static_assert(offsetof(BP_LobbyLoadout_C_CanInteractThroughHitActors, Hit) == 0x000000, "Member 'BP_LobbyLoadout_C_CanInteractThroughHitActors::Hit' has a wrong offset!");
static_assert(offsetof(BP_LobbyLoadout_C_CanInteractThroughHitActors, ReturnValue) == 0x000088, "Member 'BP_LobbyLoadout_C_CanInteractThroughHitActors::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.CanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_LobbyLoadout_C_CanInteract final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LobbyLoadout_C_CanInteract) == 0x000001, "Wrong alignment on BP_LobbyLoadout_C_CanInteract");
static_assert(sizeof(BP_LobbyLoadout_C_CanInteract) == 0x000001, "Wrong size on BP_LobbyLoadout_C_CanInteract");
static_assert(offsetof(BP_LobbyLoadout_C_CanInteract, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_CanInteract::ReturnValue' has a wrong offset!");

// Function BP_LobbyLoadout.BP_LobbyLoadout_C.DetermineCurrentProgress
// 0x0004 (0x0004 - 0x0000)
struct BP_LobbyLoadout_C_DetermineCurrentProgress final 
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LobbyLoadout_C_DetermineCurrentProgress) == 0x000004, "Wrong alignment on BP_LobbyLoadout_C_DetermineCurrentProgress");
static_assert(sizeof(BP_LobbyLoadout_C_DetermineCurrentProgress) == 0x000004, "Wrong size on BP_LobbyLoadout_C_DetermineCurrentProgress");
static_assert(offsetof(BP_LobbyLoadout_C_DetermineCurrentProgress, ReturnValue) == 0x000000, "Member 'BP_LobbyLoadout_C_DetermineCurrentProgress::ReturnValue' has a wrong offset!");

}

