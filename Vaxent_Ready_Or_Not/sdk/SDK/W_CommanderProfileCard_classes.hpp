#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommanderProfileCard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CommanderProfileCard.W_CommanderProfileCard_C
// 0x0128 (0x0CE8 - 0x0BC0)
class UW_CommanderProfileCard_C final  : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimPanZoom;                                       // 0x0BC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimHoverNewGame;                                  // 0x0BD0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimHover;                                         // 0x0BD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CardBackground;                                    // 0x0BE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DeleteSaveButton;                                  // 0x0BE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ExistingGame;                                      // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ExistingProfileInfo;                               // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_76;                                          // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Progress;                                      // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            IronmanButton;                                     // 0x0C10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           IronmanModeSlot;                                   // 0x0C18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_ironManMode;                                   // 0x0C20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_ModTag;                                        // 0x0C28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_Playtime;                                      // 0x0C30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ModTag;                                            // 0x0C38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           NewGame;                                           // 0x0C40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ProfileWidgetSwitcher;                             // 0x0C48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_Background;                            // 0x0C50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_Background;                               // 0x0C58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SlotNameText;                                      // 0x0C60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Date;                                          // 0x0C68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Level;                                         // 0x0C70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_PlayTime;                                      // 0x0C78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_ProgressPercent;                               // 0x0C80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommanderProfile*                      Profile;                                           // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynMatBackground;                                  // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynMatProgress;                                    // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0CA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          TestExistingGame;                                  // 0x0CA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hovered;                                           // 0x0CA5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Saturating;                                        // 0x0CA6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Desaturating;                                      // 0x0CA7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SaturationSpeed;                                   // 0x0CA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9D[0x4];                                     // 0x0CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHoverStateChange;                                // 0x0CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         MaxSaturation;                                     // 0x0CC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSaturation;                                     // 0x0CC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidProfile;                                      // 0x0CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9E[0x7];                                     // 0x0CC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDeleteSaveClicked;                               // 0x0CD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          TutorialMode;                                      // 0x0CE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnHoverStateChange__DelegateSignature(class UW_CommanderProfileCard_C* TriggeringProfileCard, bool Param_Hovered);
	void OnDeleteSaveClicked__DelegateSignature(class UW_CommanderProfileCard_C* TriggeringProfileCard);
	void ExecuteUbergraph_W_CommanderProfileCard(int32 EntryPoint, bool Temp_bool_Variable, bool CallFunc_GetSelected_ReturnValue, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UStandardModal* CallingModal)> K2Node_CreateDelegate_OutputDelegate_1, bool Temp_bool_Variable_1, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate_2, class FText Temp_text_Variable, class FText Temp_text_Variable_1, bool CallFunc_IsValid_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AMainMenuGM* K2Node_DynamicCast_AsMain_Menu_GM, bool K2Node_DynamicCast_bSuccess, bool K2Node_Event_IsDesignTime, bool CallFunc_HasCompletedTraining_ReturnValue, bool Temp_bool_Variable_2, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_K2_GetScalarParameterValue_ReturnValue, float CallFunc_K2_GetScalarParameterValue_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UWidgetAnimation* K2Node_Select_Default, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FFocusEvent& K2Node_Event_InFocusEvent_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFocusEvent& K2Node_Event_InFocusEvent, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class UW_StandardModal_C* K2Node_CustomEvent_CallingModal_2, class FText K2Node_CustomEvent_TextEntry_1, class UStandardModal* K2Node_CustomEvent_CallingModal_1, class UW_StandardModal_C* K2Node_CustomEvent_CallingModal, class FText K2Node_CustomEvent_TextEntry, class UW_StandardModal_C* CallFunc_Initialize_Tutorial_Modal_OutPopup, class UWidgetAnimation* K2Node_Select_Default_1, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_1, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_Selected, class FText K2Node_Select_Default_2);
	void BndEvt__W_CommanderProfileCard_W_Button_K2Node_ComponentBoundEvent_1_CommonSelectedStateChangedBase__DelegateSignature(class UCommonButtonBase* Button, bool Selected);
	void Construct();
	void Yes(class UW_StandardModal_C* CallingModal, class FText TextEntry);
	void Cancel(class UStandardModal* CallingModal);
	void No(class UW_StandardModal_C* CallingModal, class FText TextEntry);
	void Refresh();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void DeleteSave();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BP_OnUnhovered();
	void BP_OnHovered();
	void PreConstruct(bool IsDesignTime);
	void BP_OnClicked();
	void BndEvt__W_CommanderProfileCard_Example_DeleteSaveButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void UpdateFromProfile(ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetEffectMaterial_ReturnValue, class FText CallFunc_FormatDate_OutText, const class FString& CallFunc_Conv_BoolToString_ReturnValue, const class FString& CallFunc_Conv_BoolToString_ReturnValue_1, TSoftObjectPtr<class UTexture2D> CallFunc_GetMostRecentLevelImage_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, ESlateVisibility K2Node_Select_Default, float CallFunc_GetCompletionPercentage_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, int32 CallFunc_BreakTimespan_Days, int32 CallFunc_BreakTimespan_Hours, int32 CallFunc_BreakTimespan_Minutes, int32 CallFunc_BreakTimespan_Seconds, int32 CallFunc_BreakTimespan_Milliseconds, class FText CallFunc_Conv_FloatToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_GetMostRecentLevelName_ReturnValue, class FText CallFunc_Format_ReturnValue);
	void FormatDate(const struct FDateTime& DateTime, class FText* OutText, int32 CallFunc_BreakDateTime_Year, int32 CallFunc_BreakDateTime_Month, int32 CallFunc_BreakDateTime_Day, int32 CallFunc_BreakDateTime_Hour, int32 CallFunc_BreakDateTime_Minute, int32 CallFunc_BreakDateTime_Second, int32 CallFunc_BreakDateTime_Millisecond, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class FText CallFunc_Conv_IntToText_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Initialize_Tutorial_Modal(class UW_StandardModal_C** OutPopup, struct FVector2D& Temp_struct_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class UW_StandardModal_C* CallFunc_Create_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CommanderProfileCard_C">();
	}
	static class UW_CommanderProfileCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CommanderProfileCard_C>();
	}
};
static_assert(alignof(UW_CommanderProfileCard_C) == 0x000008, "Wrong alignment on UW_CommanderProfileCard_C");
static_assert(sizeof(UW_CommanderProfileCard_C) == 0x000CE8, "Wrong size on UW_CommanderProfileCard_C");
static_assert(offsetof(UW_CommanderProfileCard_C, UberGraphFrame) == 0x000BC0, "Member 'UW_CommanderProfileCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, AnimPanZoom) == 0x000BC8, "Member 'UW_CommanderProfileCard_C::AnimPanZoom' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, AnimHoverNewGame) == 0x000BD0, "Member 'UW_CommanderProfileCard_C::AnimHoverNewGame' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, AnimHover) == 0x000BD8, "Member 'UW_CommanderProfileCard_C::AnimHover' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, CardBackground) == 0x000BE0, "Member 'UW_CommanderProfileCard_C::CardBackground' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, DeleteSaveButton) == 0x000BE8, "Member 'UW_CommanderProfileCard_C::DeleteSaveButton' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, ExistingGame) == 0x000BF0, "Member 'UW_CommanderProfileCard_C::ExistingGame' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, ExistingProfileInfo) == 0x000BF8, "Member 'UW_CommanderProfileCard_C::ExistingProfileInfo' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Image_76) == 0x000C00, "Member 'UW_CommanderProfileCard_C::Image_76' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Img_Progress) == 0x000C08, "Member 'UW_CommanderProfileCard_C::Img_Progress' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, IronmanButton) == 0x000C10, "Member 'UW_CommanderProfileCard_C::IronmanButton' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, IronmanModeSlot) == 0x000C18, "Member 'UW_CommanderProfileCard_C::IronmanModeSlot' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Lbl_ironManMode) == 0x000C20, "Member 'UW_CommanderProfileCard_C::Lbl_ironManMode' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Lbl_ModTag) == 0x000C28, "Member 'UW_CommanderProfileCard_C::Lbl_ModTag' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Lbl_Playtime) == 0x000C30, "Member 'UW_CommanderProfileCard_C::Lbl_Playtime' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, ModTag) == 0x000C38, "Member 'UW_CommanderProfileCard_C::ModTag' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, NewGame) == 0x000C40, "Member 'UW_CommanderProfileCard_C::NewGame' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, ProfileWidgetSwitcher) == 0x000C48, "Member 'UW_CommanderProfileCard_C::ProfileWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, RetainerBox_Background) == 0x000C50, "Member 'UW_CommanderProfileCard_C::RetainerBox_Background' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, ScaleBox_Background) == 0x000C58, "Member 'UW_CommanderProfileCard_C::ScaleBox_Background' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, SlotNameText) == 0x000C60, "Member 'UW_CommanderProfileCard_C::SlotNameText' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Txt_Date) == 0x000C68, "Member 'UW_CommanderProfileCard_C::Txt_Date' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Txt_Level) == 0x000C70, "Member 'UW_CommanderProfileCard_C::Txt_Level' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Txt_PlayTime) == 0x000C78, "Member 'UW_CommanderProfileCard_C::Txt_PlayTime' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Txt_ProgressPercent) == 0x000C80, "Member 'UW_CommanderProfileCard_C::Txt_ProgressPercent' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Profile) == 0x000C88, "Member 'UW_CommanderProfileCard_C::Profile' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, DynMatBackground) == 0x000C90, "Member 'UW_CommanderProfileCard_C::DynMatBackground' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, DynMatProgress) == 0x000C98, "Member 'UW_CommanderProfileCard_C::DynMatProgress' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, SlotIndex) == 0x000CA0, "Member 'UW_CommanderProfileCard_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, TestExistingGame) == 0x000CA4, "Member 'UW_CommanderProfileCard_C::TestExistingGame' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Hovered) == 0x000CA5, "Member 'UW_CommanderProfileCard_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Saturating) == 0x000CA6, "Member 'UW_CommanderProfileCard_C::Saturating' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, Desaturating) == 0x000CA7, "Member 'UW_CommanderProfileCard_C::Desaturating' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, SaturationSpeed) == 0x000CA8, "Member 'UW_CommanderProfileCard_C::SaturationSpeed' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, OnHoverStateChange) == 0x000CB0, "Member 'UW_CommanderProfileCard_C::OnHoverStateChange' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, MaxSaturation) == 0x000CC0, "Member 'UW_CommanderProfileCard_C::MaxSaturation' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, MinSaturation) == 0x000CC4, "Member 'UW_CommanderProfileCard_C::MinSaturation' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, ValidProfile) == 0x000CC8, "Member 'UW_CommanderProfileCard_C::ValidProfile' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, OnDeleteSaveClicked) == 0x000CD0, "Member 'UW_CommanderProfileCard_C::OnDeleteSaveClicked' has a wrong offset!");
static_assert(offsetof(UW_CommanderProfileCard_C, TutorialMode) == 0x000CE0, "Member 'UW_CommanderProfileCard_C::TutorialMode' has a wrong offset!");

}

