#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameInstance.BP_GameInstance_C
// 0x0028 (0x1098 - 0x1070)
class UBP_GameInstance_C final  : public UReadyOrNotGameInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FString>                         StreamedLevels;                                    // 0x1078(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 ModeURL;                                           // 0x1088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GameInstance(int32 EntryPoint, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, float CallFunc_GetVolumes_MasterVolume, float CallFunc_GetVolumes_UIVolume, float CallFunc_GetVolumes_SFXVolume, float CallFunc_GetVolumes_MusicVolume, float CallFunc_GetVolumes_VOIPVolume, bool CallFunc_GetVolumes_ReturnValue, const class FString& K2Node_Event_PauseCondition_1, const class FString& K2Node_Event_PauseCondition, bool CallFunc_Array_Contains_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_SetGamePaused_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_Array_RemoveItem_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_SetGamePaused_ReturnValue_1, const class FString& K2Node_CustomEvent_NewCondition, int32 K2Node_Event_LocalPlayerNum, const struct FBPUniqueNetId& K2Node_Event_PersonInvited, struct FBlueprintSessionResult& K2Node_Event_SessionToJoin, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess, float CallFunc_LoadColorblindStrength_ColorblindStrength, bool CallFunc_LoadColorblindStrength_ReturnValue, class UDestroySessionCallbackProxy* CallFunc_DestroySession_ReturnValue, class ULevelStreaming* CallFunc_StreamInSession_OutStreamedLevel, bool CallFunc_StreamInSession_ReturnValue, bool CallFunc_IsValid_ReturnValue, EColorVisionDeficiency CallFunc_LoadColorblindMode_ColorVisionDeficiency, bool CallFunc_LoadColorblindMode_ReturnValue);
	void AdjustAccessibilitySettings();
	void OnSessionInviteAccepted(int32 LocalPlayerNum, const struct FBPUniqueNetId& PersonInvited, struct FBlueprintSessionResult& SessionToJoin);
	void PauseGameWithConditon(const class FString& NewCondition);
	void RemovePauseGameCondition(const class FString& PauseCondition);
	void AddPauseGameCondition(const class FString& PauseCondition);
	void AdjustVolume();
	void ReceiveInit();
	void OnSuccess_A29261FE4E99C0ECFF6439AB0854D5B1();
	void OnFailure_A29261FE4E99C0ECFF6439AB0854D5B1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameInstance_C">();
	}
	static class UBP_GameInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GameInstance_C>();
	}
};
static_assert(alignof(UBP_GameInstance_C) == 0x000008, "Wrong alignment on UBP_GameInstance_C");
static_assert(sizeof(UBP_GameInstance_C) == 0x001098, "Wrong size on UBP_GameInstance_C");
static_assert(offsetof(UBP_GameInstance_C, UberGraphFrame) == 0x001070, "Member 'UBP_GameInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GameInstance_C, StreamedLevels) == 0x001078, "Member 'UBP_GameInstance_C::StreamedLevels' has a wrong offset!");
static_assert(offsetof(UBP_GameInstance_C, ModeURL) == 0x001088, "Member 'UBP_GameInstance_C::ModeURL' has a wrong offset!");

}

