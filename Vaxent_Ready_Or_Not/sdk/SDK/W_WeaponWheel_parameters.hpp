#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_WeaponWheel.W_WeaponWheel_C.CategoryDeselected__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct W_WeaponWheel_C_CategoryDeselected__DelegateSignature final 
{
public:
	int32                                         Category_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Category_Name;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_CategoryDeselected__DelegateSignature) == 0x000004, "Wrong alignment on W_WeaponWheel_C_CategoryDeselected__DelegateSignature");
static_assert(sizeof(W_WeaponWheel_C_CategoryDeselected__DelegateSignature) == 0x00000C, "Wrong size on W_WeaponWheel_C_CategoryDeselected__DelegateSignature");
static_assert(offsetof(W_WeaponWheel_C_CategoryDeselected__DelegateSignature, Category_Index) == 0x000000, "Member 'W_WeaponWheel_C_CategoryDeselected__DelegateSignature::Category_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CategoryDeselected__DelegateSignature, Category_Name) == 0x000004, "Member 'W_WeaponWheel_C_CategoryDeselected__DelegateSignature::Category_Name' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.CategorySelected__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct W_WeaponWheel_C_CategorySelected__DelegateSignature final 
{
public:
	int32                                         Category_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Category_Name;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_CategorySelected__DelegateSignature) == 0x000004, "Wrong alignment on W_WeaponWheel_C_CategorySelected__DelegateSignature");
static_assert(sizeof(W_WeaponWheel_C_CategorySelected__DelegateSignature) == 0x00000C, "Wrong size on W_WeaponWheel_C_CategorySelected__DelegateSignature");
static_assert(offsetof(W_WeaponWheel_C_CategorySelected__DelegateSignature, Category_Index) == 0x000000, "Member 'W_WeaponWheel_C_CategorySelected__DelegateSignature::Category_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CategorySelected__DelegateSignature, Category_Name) == 0x000004, "Member 'W_WeaponWheel_C_CategorySelected__DelegateSignature::Category_Name' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.ItemSelected__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_C_ItemSelected__DelegateSignature final 
{
public:
	int32                                         Category_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Category_Name;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Item_Index;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Item_Name;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_ItemSelected__DelegateSignature) == 0x000004, "Wrong alignment on W_WeaponWheel_C_ItemSelected__DelegateSignature");
static_assert(sizeof(W_WeaponWheel_C_ItemSelected__DelegateSignature) == 0x000018, "Wrong size on W_WeaponWheel_C_ItemSelected__DelegateSignature");
static_assert(offsetof(W_WeaponWheel_C_ItemSelected__DelegateSignature, Category_Index) == 0x000000, "Member 'W_WeaponWheel_C_ItemSelected__DelegateSignature::Category_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ItemSelected__DelegateSignature, Category_Name) == 0x000004, "Member 'W_WeaponWheel_C_ItemSelected__DelegateSignature::Category_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ItemSelected__DelegateSignature, Item_Index) == 0x00000C, "Member 'W_WeaponWheel_C_ItemSelected__DelegateSignature::Item_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ItemSelected__DelegateSignature, Item_Name) == 0x000010, "Member 'W_WeaponWheel_C_ItemSelected__DelegateSignature::Item_Name' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.ItemDeselected__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_C_ItemDeselected__DelegateSignature final 
{
public:
	int32                                         Category_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Category_Name;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Item_Index;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Item_Name;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_ItemDeselected__DelegateSignature) == 0x000004, "Wrong alignment on W_WeaponWheel_C_ItemDeselected__DelegateSignature");
static_assert(sizeof(W_WeaponWheel_C_ItemDeselected__DelegateSignature) == 0x000018, "Wrong size on W_WeaponWheel_C_ItemDeselected__DelegateSignature");
static_assert(offsetof(W_WeaponWheel_C_ItemDeselected__DelegateSignature, Category_Index) == 0x000000, "Member 'W_WeaponWheel_C_ItemDeselected__DelegateSignature::Category_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ItemDeselected__DelegateSignature, Category_Name) == 0x000004, "Member 'W_WeaponWheel_C_ItemDeselected__DelegateSignature::Category_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ItemDeselected__DelegateSignature, Item_Index) == 0x00000C, "Member 'W_WeaponWheel_C_ItemDeselected__DelegateSignature::Item_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ItemDeselected__DelegateSignature, Item_Name) == 0x000010, "Member 'W_WeaponWheel_C_ItemDeselected__DelegateSignature::Item_Name' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.ExecuteUbergraph_W_WeaponWheel
// 0x01B0 (0x01B0 - 0x0000)
struct W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD0[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Play_Animation;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectItem_bSuccess;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectItem_bSuccess_1;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD1[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemName_Item_Name;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemName_Item_Name_1;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item_2;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item_3;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item_4;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item_5;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseItem*>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SelectedIndex;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD2[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item_6;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DeselectedIndex;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD3[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item_7;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCenterScreenPosition_ReturnValue;      // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERONBuildConfiguration                        CallFunc_GetBuildConfiguration_ReturnValue;        // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD4[0x1];                                     // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0100(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0158(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel) == 0x000008, "Wrong alignment on W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel");
static_assert(sizeof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel) == 0x0001B0, "Wrong size on W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, EntryPoint) == 0x000000, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Less_FloatFloat_ReturnValue) == 0x000005, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_CustomEvent_Play_Animation) == 0x000044, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_CustomEvent_Play_Animation' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_SelectItem_bSuccess) == 0x000045, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_SelectItem_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_SelectItem_bSuccess_1) == 0x000046, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_SelectItem_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_GetItemName_Item_Name) == 0x000048, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_GetItemName_Item_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_GetItemName_Item_Name_1) == 0x000050, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_GetItemName_Item_Name_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item) == 0x000068, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_2) == 0x000078, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_3) == 0x000080, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_4) == 0x000088, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_5) == 0x000090, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_MakeArray_Array) == 0x000098, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A8, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_Event_SelectedIndex) == 0x0000AC, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_Event_SelectedIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000B0, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_6) == 0x0000B8, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_Event_DeselectedIndex) == 0x0000C0, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_Event_DeselectedIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Array_Get_Item_7) == 0x0000C8, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_MakeVector2D_ReturnValue) == 0x0000D0, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D8, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E0, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_MapRangeClamped_ReturnValue) == 0x0000E4, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_FTrunc_ReturnValue) == 0x0000E8, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000EC, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_FTrunc_ReturnValue_1) == 0x0000F0, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_GetCenterScreenPosition_ReturnValue) == 0x0000F4, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_GetCenterScreenPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_Event_IsDesignTime) == 0x0000FC, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, CallFunc_GetBuildConfiguration_ReturnValue) == 0x0000FD, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::CallFunc_GetBuildConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_SwitchEnum_CmpSuccess) == 0x0000FE, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_MakeStruct_SlateFontInfo) == 0x000100, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel, K2Node_MakeStruct_SlateFontInfo_1) == 0x000158, "Member 'W_WeaponWheel_C_ExecuteUbergraph_W_WeaponWheel::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WeaponWheel_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_PreConstruct) == 0x000001, "Wrong alignment on W_WeaponWheel_C_PreConstruct");
static_assert(sizeof(W_WeaponWheel_C_PreConstruct) == 0x000001, "Wrong size on W_WeaponWheel_C_PreConstruct");
static_assert(offsetof(W_WeaponWheel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WeaponWheel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.OnSectorDeselected
// 0x0004 (0x0004 - 0x0000)
struct W_WeaponWheel_C_OnSectorDeselected final 
{
public:
	int32                                         DeselectedIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_OnSectorDeselected) == 0x000004, "Wrong alignment on W_WeaponWheel_C_OnSectorDeselected");
static_assert(sizeof(W_WeaponWheel_C_OnSectorDeselected) == 0x000004, "Wrong size on W_WeaponWheel_C_OnSectorDeselected");
static_assert(offsetof(W_WeaponWheel_C_OnSectorDeselected, DeselectedIndex) == 0x000000, "Member 'W_WeaponWheel_C_OnSectorDeselected::DeselectedIndex' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.OnSectorSelected
// 0x0004 (0x0004 - 0x0000)
struct W_WeaponWheel_C_OnSectorSelected final 
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_OnSectorSelected) == 0x000004, "Wrong alignment on W_WeaponWheel_C_OnSectorSelected");
static_assert(sizeof(W_WeaponWheel_C_OnSectorSelected) == 0x000004, "Wrong size on W_WeaponWheel_C_OnSectorSelected");
static_assert(offsetof(W_WeaponWheel_C_OnSectorSelected, SelectedIndex) == 0x000000, "Member 'W_WeaponWheel_C_OnSectorSelected::SelectedIndex' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.OnItemSelcted
// 0x0001 (0x0001 - 0x0000)
struct W_WeaponWheel_C_OnItemSelcted final 
{
public:
	bool                                          Play_Animation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_OnItemSelcted) == 0x000001, "Wrong alignment on W_WeaponWheel_C_OnItemSelcted");
static_assert(sizeof(W_WeaponWheel_C_OnItemSelcted) == 0x000001, "Wrong size on W_WeaponWheel_C_OnItemSelcted");
static_assert(offsetof(W_WeaponWheel_C_OnItemSelcted, Play_Animation) == 0x000000, "Member 'W_WeaponWheel_C_OnItemSelcted::Play_Animation' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_WeaponWheel_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_Tick) == 0x000004, "Wrong alignment on W_WeaponWheel_C_Tick");
static_assert(sizeof(W_WeaponWheel_C_Tick) == 0x00003C, "Wrong size on W_WeaponWheel_C_Tick");
static_assert(offsetof(W_WeaponWheel_C_Tick, MyGeometry) == 0x000000, "Member 'W_WeaponWheel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_Tick, InDeltaTime) == 0x000038, "Member 'W_WeaponWheel_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.CreateWheelCategory
// 0x0070 (0x0070 - 0x0000)
struct W_WeaponWheel_C_CreateWheelCategory final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Category_Name;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       Canvas_Panel_Slot;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD6[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0060(0x0010)(NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_CreateWheelCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_CreateWheelCategory");
static_assert(sizeof(W_WeaponWheel_C_CreateWheelCategory) == 0x000070, "Wrong size on W_WeaponWheel_C_CreateWheelCategory");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, Param_Index) == 0x000000, "Member 'W_WeaponWheel_C_CreateWheelCategory::Param_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, Category_Name) == 0x000004, "Member 'W_WeaponWheel_C_CreateWheelCategory::Category_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, Canvas_Panel_Slot) == 0x000010, "Member 'W_WeaponWheel_C_CreateWheelCategory::Canvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_Create_ReturnValue) == 0x000040, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_AddChildToCanvas_ReturnValue) == 0x000048, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelCategory, CallFunc_GetAnchors_ReturnValue) == 0x000060, "Member 'W_WeaponWheel_C_CreateWheelCategory::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.CreateWheelStat
// 0x05F0 (0x05F0 - 0x0000)
struct W_WeaponWheel_C_CreateWheelStat final 
{
public:
	class UClass*                                 ItemStatClass;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FillSpeed;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EasingFunction;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemLookupTable                       LookupTable;                                       // 0x0010(0x05A0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_WeaponWheel_ItemStat_C*              ItemStatWidget;                                    // 0x05B0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_ItemStat_C*              CallFunc_Create_ReturnValue;                       // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD8[0x4];                                     // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_CreateWheelStat) == 0x000010, "Wrong alignment on W_WeaponWheel_C_CreateWheelStat");
static_assert(sizeof(W_WeaponWheel_C_CreateWheelStat) == 0x0005F0, "Wrong size on W_WeaponWheel_C_CreateWheelStat");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, ItemStatClass) == 0x000000, "Member 'W_WeaponWheel_C_CreateWheelStat::ItemStatClass' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, FillSpeed) == 0x000008, "Member 'W_WeaponWheel_C_CreateWheelStat::FillSpeed' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, EasingFunction) == 0x00000C, "Member 'W_WeaponWheel_C_CreateWheelStat::EasingFunction' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, LookupTable) == 0x000010, "Member 'W_WeaponWheel_C_CreateWheelStat::LookupTable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, ItemStatWidget) == 0x0005B0, "Member 'W_WeaponWheel_C_CreateWheelStat::ItemStatWidget' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_MapRangeClamped_ReturnValue) == 0x0005B8, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0005BC, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_MakeVector2D_ReturnValue) == 0x0005C0, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_GetOwningPlayer_ReturnValue) == 0x0005C8, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_Create_ReturnValue) == 0x0005D0, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_Array_Add_ReturnValue) == 0x0005D8, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_CreateWheelStat, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0005E0, "Member 'W_WeaponWheel_C_CreateWheelStat::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.SelectItem
// 0x0060 (0x0060 - 0x0000)
struct W_WeaponWheel_C_SelectItem final 
{
public:
	class UW_WeaponWheel_RadialSelection_C*       ItemToSelect;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Play_Animation;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Play_Sound;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Refresh_Stats;                                     // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSuccess;                                          // 0x000B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInExecutablesArray_Return_Value;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD9[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemName_Item_Name;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCategory_Category;                     // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DDA[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetCorrectSelectionColor_ReturnValue;     // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_SelectItem) == 0x000008, "Wrong alignment on W_WeaponWheel_C_SelectItem");
static_assert(sizeof(W_WeaponWheel_C_SelectItem) == 0x000060, "Wrong size on W_WeaponWheel_C_SelectItem");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, ItemToSelect) == 0x000000, "Member 'W_WeaponWheel_C_SelectItem::ItemToSelect' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, Play_Animation) == 0x000008, "Member 'W_WeaponWheel_C_SelectItem::Play_Animation' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, Play_Sound) == 0x000009, "Member 'W_WeaponWheel_C_SelectItem::Play_Sound' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, Refresh_Stats) == 0x00000A, "Member 'W_WeaponWheel_C_SelectItem::Refresh_Stats' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, bSuccess) == 0x00000B, "Member 'W_WeaponWheel_C_SelectItem::bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, CallFunc_IsInExecutablesArray_Return_Value) == 0x00000C, "Member 'W_WeaponWheel_C_SelectItem::CallFunc_IsInExecutablesArray_Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, CallFunc_GetItemName_Item_Name) == 0x000010, "Member 'W_WeaponWheel_C_SelectItem::CallFunc_GetItemName_Item_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, CallFunc_GetCategory_Category) == 0x000018, "Member 'W_WeaponWheel_C_SelectItem::CallFunc_GetCategory_Category' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_C_SelectItem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'W_WeaponWheel_C_SelectItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_SelectItem, CallFunc_GetCorrectSelectionColor_ReturnValue) == 0x00004C, "Member 'W_WeaponWheel_C_SelectItem::CallFunc_GetCorrectSelectionColor_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.PlaceWidgetInWheel
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_C_PlaceWidgetInWheel final 
{
public:
	class UCanvasPanelSlot*                       Canvas_Slot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Positionn;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_PlaceWidgetInWheel) == 0x000008, "Wrong alignment on W_WeaponWheel_C_PlaceWidgetInWheel");
static_assert(sizeof(W_WeaponWheel_C_PlaceWidgetInWheel) == 0x000010, "Wrong size on W_WeaponWheel_C_PlaceWidgetInWheel");
static_assert(offsetof(W_WeaponWheel_C_PlaceWidgetInWheel, Canvas_Slot) == 0x000000, "Member 'W_WeaponWheel_C_PlaceWidgetInWheel::Canvas_Slot' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PlaceWidgetInWheel, Positionn) == 0x000008, "Member 'W_WeaponWheel_C_PlaceWidgetInWheel::Positionn' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.PopulateCategory
// 0x0048 (0x0048 - 0x0000)
struct W_WeaponWheel_C_PopulateCategory final 
{
public:
	TArray<class ABaseItem*>                      Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   Category_Name_;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DDC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_PopulateCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_PopulateCategory");
static_assert(sizeof(W_WeaponWheel_C_PopulateCategory) == 0x000048, "Wrong size on W_WeaponWheel_C_PopulateCategory");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, Items) == 0x000000, "Member 'W_WeaponWheel_C_PopulateCategory::Items' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, Category_Name_) == 0x000010, "Member 'W_WeaponWheel_C_PopulateCategory::Category_Name_' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_PopulateCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'W_WeaponWheel_C_PopulateCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_WeaponWheel_C_PopulateCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_WeaponWheel_C_PopulateCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_C_PopulateCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'W_WeaponWheel_C_PopulateCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, CallFunc_Map_Find_Value) == 0x000038, "Member 'W_WeaponWheel_C_PopulateCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateCategory, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'W_WeaponWheel_C_PopulateCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.PopulateAllCategories
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_PopulateAllCategories final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DDE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_PopulateAllCategories) == 0x000008, "Wrong alignment on W_WeaponWheel_C_PopulateAllCategories");
static_assert(sizeof(W_WeaponWheel_C_PopulateAllCategories) == 0x000020, "Wrong size on W_WeaponWheel_C_PopulateAllCategories");
static_assert(offsetof(W_WeaponWheel_C_PopulateAllCategories, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_WeaponWheel_C_PopulateAllCategories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateAllCategories, CallFunc_Array_Get_Item) == 0x000008, "Member 'W_WeaponWheel_C_PopulateAllCategories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateAllCategories, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_PopulateAllCategories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateAllCategories, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_WeaponWheel_C_PopulateAllCategories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateAllCategories, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_PopulateAllCategories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PopulateAllCategories, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_WeaponWheel_C_PopulateAllCategories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.NextItem
// 0x0014 (0x0014 - 0x0000)
struct W_WeaponWheel_C_NextItem final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NextItem_bSuccess;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DDF[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Next_bSuccess;                            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_NextItem) == 0x000004, "Wrong alignment on W_WeaponWheel_C_NextItem");
static_assert(sizeof(W_WeaponWheel_C_NextItem) == 0x000014, "Wrong size on W_WeaponWheel_C_NextItem");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_NextItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_NextItem_bSuccess) == 0x000001, "Member 'W_WeaponWheel_C_NextItem::CallFunc_NextItem_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_C_NextItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_Array_Length_ReturnValue_1) == 0x000008, "Member 'W_WeaponWheel_C_NextItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_C_NextItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_NextItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NextItem, CallFunc_Next_bSuccess) == 0x000011, "Member 'W_WeaponWheel_C_NextItem::CallFunc_Next_bSuccess' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.PreviousItem
// 0x0014 (0x0014 - 0x0000)
struct W_WeaponWheel_C_PreviousItem final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PreviousItem_bSuccess;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE0[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Previous_bSuccess;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_PreviousItem) == 0x000004, "Wrong alignment on W_WeaponWheel_C_PreviousItem");
static_assert(sizeof(W_WeaponWheel_C_PreviousItem) == 0x000014, "Wrong size on W_WeaponWheel_C_PreviousItem");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_PreviousItem_bSuccess) == 0x000001, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_PreviousItem_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_Array_Length_ReturnValue_1) == 0x000008, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_PreviousItem, CallFunc_Previous_bSuccess) == 0x000011, "Member 'W_WeaponWheel_C_PreviousItem::CallFunc_Previous_bSuccess' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdatePrimaryWeapons
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_C_UpdatePrimaryWeapons final 
{
public:
	TArray<class ABaseItem*>                      New_Primary_Weapons;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StartingItemIndex;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_UpdatePrimaryWeapons) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdatePrimaryWeapons");
static_assert(sizeof(W_WeaponWheel_C_UpdatePrimaryWeapons) == 0x000030, "Wrong size on W_WeaponWheel_C_UpdatePrimaryWeapons");
static_assert(offsetof(W_WeaponWheel_C_UpdatePrimaryWeapons, New_Primary_Weapons) == 0x000000, "Member 'W_WeaponWheel_C_UpdatePrimaryWeapons::New_Primary_Weapons' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdatePrimaryWeapons, StartingItemIndex) == 0x000010, "Member 'W_WeaponWheel_C_UpdatePrimaryWeapons::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdatePrimaryWeapons, Temp_name_Variable) == 0x000014, "Member 'W_WeaponWheel_C_UpdatePrimaryWeapons::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdatePrimaryWeapons, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_UpdatePrimaryWeapons::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdatePrimaryWeapons, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_UpdatePrimaryWeapons::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdateSecondaryWeapons
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_C_UpdateSecondaryWeapons final 
{
public:
	TArray<class ABaseItem*>                      NewSecondaryWeapons;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StartingItemIndex;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_UpdateSecondaryWeapons) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdateSecondaryWeapons");
static_assert(sizeof(W_WeaponWheel_C_UpdateSecondaryWeapons) == 0x000030, "Wrong size on W_WeaponWheel_C_UpdateSecondaryWeapons");
static_assert(offsetof(W_WeaponWheel_C_UpdateSecondaryWeapons, NewSecondaryWeapons) == 0x000000, "Member 'W_WeaponWheel_C_UpdateSecondaryWeapons::NewSecondaryWeapons' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateSecondaryWeapons, StartingItemIndex) == 0x000010, "Member 'W_WeaponWheel_C_UpdateSecondaryWeapons::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateSecondaryWeapons, Temp_name_Variable) == 0x000014, "Member 'W_WeaponWheel_C_UpdateSecondaryWeapons::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateSecondaryWeapons, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_UpdateSecondaryWeapons::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateSecondaryWeapons, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_UpdateSecondaryWeapons::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdateGrenades
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_C_UpdateGrenades final 
{
public:
	TArray<class ABaseItem*>                      NewGrenades;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StartingItemIndex;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_UpdateGrenades) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdateGrenades");
static_assert(sizeof(W_WeaponWheel_C_UpdateGrenades) == 0x000030, "Wrong size on W_WeaponWheel_C_UpdateGrenades");
static_assert(offsetof(W_WeaponWheel_C_UpdateGrenades, NewGrenades) == 0x000000, "Member 'W_WeaponWheel_C_UpdateGrenades::NewGrenades' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateGrenades, StartingItemIndex) == 0x000010, "Member 'W_WeaponWheel_C_UpdateGrenades::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateGrenades, Temp_name_Variable) == 0x000014, "Member 'W_WeaponWheel_C_UpdateGrenades::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateGrenades, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_UpdateGrenades::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateGrenades, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_UpdateGrenades::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdateAssistants
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_C_UpdateAssistants final 
{
public:
	TArray<class ABaseItem*>                      NewAssistants;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StartingItemIndex;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_UpdateAssistants) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdateAssistants");
static_assert(sizeof(W_WeaponWheel_C_UpdateAssistants) == 0x000030, "Wrong size on W_WeaponWheel_C_UpdateAssistants");
static_assert(offsetof(W_WeaponWheel_C_UpdateAssistants, NewAssistants) == 0x000000, "Member 'W_WeaponWheel_C_UpdateAssistants::NewAssistants' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateAssistants, StartingItemIndex) == 0x000010, "Member 'W_WeaponWheel_C_UpdateAssistants::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateAssistants, Temp_name_Variable) == 0x000014, "Member 'W_WeaponWheel_C_UpdateAssistants::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateAssistants, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_UpdateAssistants::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateAssistants, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_UpdateAssistants::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdateTacticalDevices
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_C_UpdateTacticalDevices final 
{
public:
	TArray<class ABaseItem*>                      NewDoorDevices;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StartingItemIndex;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE5[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_UpdateTacticalDevices) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdateTacticalDevices");
static_assert(sizeof(W_WeaponWheel_C_UpdateTacticalDevices) == 0x000030, "Wrong size on W_WeaponWheel_C_UpdateTacticalDevices");
static_assert(offsetof(W_WeaponWheel_C_UpdateTacticalDevices, NewDoorDevices) == 0x000000, "Member 'W_WeaponWheel_C_UpdateTacticalDevices::NewDoorDevices' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTacticalDevices, StartingItemIndex) == 0x000010, "Member 'W_WeaponWheel_C_UpdateTacticalDevices::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTacticalDevices, Temp_name_Variable) == 0x000014, "Member 'W_WeaponWheel_C_UpdateTacticalDevices::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTacticalDevices, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_UpdateTacticalDevices::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTacticalDevices, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_UpdateTacticalDevices::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdateTabletDevices
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_C_UpdateTabletDevices final 
{
public:
	TArray<class ABaseItem*>                      NewTabletDevices;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StartingItemIndex;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE6[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_UpdateTabletDevices) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdateTabletDevices");
static_assert(sizeof(W_WeaponWheel_C_UpdateTabletDevices) == 0x000030, "Wrong size on W_WeaponWheel_C_UpdateTabletDevices");
static_assert(offsetof(W_WeaponWheel_C_UpdateTabletDevices, NewTabletDevices) == 0x000000, "Member 'W_WeaponWheel_C_UpdateTabletDevices::NewTabletDevices' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTabletDevices, StartingItemIndex) == 0x000010, "Member 'W_WeaponWheel_C_UpdateTabletDevices::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTabletDevices, Temp_name_Variable) == 0x000014, "Member 'W_WeaponWheel_C_UpdateTabletDevices::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTabletDevices, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_UpdateTabletDevices::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateTabletDevices, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_UpdateTabletDevices::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RefreshCategory
// 0x0060 (0x0060 - 0x0000)
struct W_WeaponWheel_C_RefreshCategory final 
{
public:
	TArray<class ABaseItem*>                      New_Category_Items;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UWeaponWheelScript*>             NewWeaponWheelScripts;                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   Category_Name;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingItemIndex;                                 // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE8[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item_2;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RefreshCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RefreshCategory");
static_assert(sizeof(W_WeaponWheel_C_RefreshCategory) == 0x000060, "Wrong size on W_WeaponWheel_C_RefreshCategory");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, New_Category_Items) == 0x000000, "Member 'W_WeaponWheel_C_RefreshCategory::New_Category_Items' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, NewWeaponWheelScripts) == 0x000010, "Member 'W_WeaponWheel_C_RefreshCategory::NewWeaponWheelScripts' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, Category_Name) == 0x000020, "Member 'W_WeaponWheel_C_RefreshCategory::Category_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, StartingItemIndex) == 0x000028, "Member 'W_WeaponWheel_C_RefreshCategory::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Find_ReturnValue) == 0x00002C, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Find_ReturnValue_1) == 0x000038, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Get_Item_2) == 0x000050, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshCategory, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'W_WeaponWheel_C_RefreshCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RefreshStats
// 0x0610 (0x0610 - 0x0000)
struct W_WeaponWheel_C_RefreshStats final 
{
public:
	TArray<class UClass*>                         Param_ItemStats;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FItemLookupTable                       ItemDataTable;                                     // 0x0010(0x05A0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE9[0x3];                                     // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DEA[0x3];                                     // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEB[0x4];                                     // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsW_Weapon_Wheel_Item_Stat; // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DEC[0x3];                                     // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DED[0x2];                                     // 0x05EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_ItemStat_C*              CallFunc_CreateWheelStat_ItemStatWidget;           // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_ItemStat_C*              CallFunc_Array_Get_Item_1;                         // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DEE[0x1];                                     // 0x0607(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x060D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_RefreshStats) == 0x000010, "Wrong alignment on W_WeaponWheel_C_RefreshStats");
static_assert(sizeof(W_WeaponWheel_C_RefreshStats) == 0x000610, "Wrong size on W_WeaponWheel_C_RefreshStats");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, Param_ItemStats) == 0x000000, "Member 'W_WeaponWheel_C_RefreshStats::Param_ItemStats' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, ItemDataTable) == 0x000010, "Member 'W_WeaponWheel_C_RefreshStats::ItemDataTable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, Temp_bool_True_if_break_was_hit_Variable) == 0x0005B0, "Member 'W_WeaponWheel_C_RefreshStats::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Array_Length_ReturnValue) == 0x0005B4, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Subtract_IntInt_ReturnValue) == 0x0005B8, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Not_PreBool_ReturnValue) == 0x0005BC, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, Temp_int_Array_Index_Variable) == 0x0005C0, "Member 'W_WeaponWheel_C_RefreshStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, Temp_int_Loop_Counter_Variable) == 0x0005C4, "Member 'W_WeaponWheel_C_RefreshStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, Temp_int_Variable) == 0x0005C8, "Member 'W_WeaponWheel_C_RefreshStats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Array_Get_Item) == 0x0005D0, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, K2Node_ClassDynamicCast_AsW_Weapon_Wheel_Item_Stat) == 0x0005D8, "Member 'W_WeaponWheel_C_RefreshStats::K2Node_ClassDynamicCast_AsW_Weapon_Wheel_Item_Stat' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, K2Node_ClassDynamicCast_bSuccess) == 0x0005E0, "Member 'W_WeaponWheel_C_RefreshStats::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Add_IntInt_ReturnValue) == 0x0005E4, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0005E8, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, Temp_bool_Variable) == 0x0005EC, "Member 'W_WeaponWheel_C_RefreshStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005ED, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_CreateWheelStat_ItemStatWidget) == 0x0005F0, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_CreateWheelStat_ItemStatWidget' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Array_Get_Item_1) == 0x0005F8, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Clamp_ReturnValue) == 0x000600, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_IsValid_ReturnValue) == 0x000604, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000605, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_BooleanAND_ReturnValue) == 0x000606, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Array_Length_ReturnValue_1) == 0x000608, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_Less_IntInt_ReturnValue) == 0x00060C, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshStats, CallFunc_BooleanAND_ReturnValue_1) == 0x00060D, "Member 'W_WeaponWheel_C_RefreshStats::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.StatEnumToName
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_C_StatEnumToName final 
{
public:
	uint8                                         Item_Stat;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Stat_Name;                                         // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_StatEnumToName) == 0x000004, "Wrong alignment on W_WeaponWheel_C_StatEnumToName");
static_assert(sizeof(W_WeaponWheel_C_StatEnumToName) == 0x000010, "Wrong size on W_WeaponWheel_C_StatEnumToName");
static_assert(offsetof(W_WeaponWheel_C_StatEnumToName, Item_Stat) == 0x000000, "Member 'W_WeaponWheel_C_StatEnumToName::Item_Stat' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_StatEnumToName, Stat_Name) == 0x000004, "Member 'W_WeaponWheel_C_StatEnumToName::Stat_Name' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_StatEnumToName, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'W_WeaponWheel_C_StatEnumToName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.FindDataTableRowNameFromItemName
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_C_FindDataTableRowNameFromItemName final 
{
public:
	class FName                                   ItemName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_FindDataTableRowNameFromItemName) == 0x000004, "Wrong alignment on W_WeaponWheel_C_FindDataTableRowNameFromItemName");
static_assert(sizeof(W_WeaponWheel_C_FindDataTableRowNameFromItemName) == 0x000010, "Wrong size on W_WeaponWheel_C_FindDataTableRowNameFromItemName");
static_assert(offsetof(W_WeaponWheel_C_FindDataTableRowNameFromItemName, ItemName) == 0x000000, "Member 'W_WeaponWheel_C_FindDataTableRowNameFromItemName::ItemName' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_FindDataTableRowNameFromItemName, RowName) == 0x000008, "Member 'W_WeaponWheel_C_FindDataTableRowNameFromItemName::RowName' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.NotifyAllCategoriesOnWheelCreated
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated) == 0x000008, "Wrong alignment on W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated");
static_assert(sizeof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated) == 0x000020, "Wrong size on W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_NotifyAllCategoriesOnWheelCreated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.NotifyAllStatsOnWheelCreated
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_NotifyAllStatsOnWheelCreated final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_ItemStat_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated) == 0x000008, "Wrong alignment on W_WeaponWheel_C_NotifyAllStatsOnWheelCreated");
static_assert(sizeof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated) == 0x000020, "Wrong size on W_WeaponWheel_C_NotifyAllStatsOnWheelCreated");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_NotifyAllStatsOnWheelCreated, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'W_WeaponWheel_C_NotifyAllStatsOnWheelCreated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.HideWheel
// 0x0001 (0x0001 - 0x0000)
struct W_WeaponWheel_C_HideWheel final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_HideWheel) == 0x000001, "Wrong alignment on W_WeaponWheel_C_HideWheel");
static_assert(sizeof(W_WeaponWheel_C_HideWheel) == 0x000001, "Wrong size on W_WeaponWheel_C_HideWheel");
static_assert(offsetof(W_WeaponWheel_C_HideWheel, ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_HideWheel::ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.ShowWheel
// 0x0001 (0x0001 - 0x0000)
struct W_WeaponWheel_C_ShowWheel final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_ShowWheel) == 0x000001, "Wrong alignment on W_WeaponWheel_C_ShowWheel");
static_assert(sizeof(W_WeaponWheel_C_ShowWheel) == 0x000001, "Wrong size on W_WeaponWheel_C_ShowWheel");
static_assert(offsetof(W_WeaponWheel_C_ShowWheel, ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_ShowWheel::ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.ExecuteRadial
// 0x0002 (0x0002 - 0x0000)
struct W_WeaponWheel_C_ExecuteRadial final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecuteRadial_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_ExecuteRadial) == 0x000001, "Wrong alignment on W_WeaponWheel_C_ExecuteRadial");
static_assert(sizeof(W_WeaponWheel_C_ExecuteRadial) == 0x000002, "Wrong size on W_WeaponWheel_C_ExecuteRadial");
static_assert(offsetof(W_WeaponWheel_C_ExecuteRadial, ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_ExecuteRadial::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ExecuteRadial, CallFunc_ExecuteRadial_ReturnValue) == 0x000001, "Member 'W_WeaponWheel_C_ExecuteRadial::CallFunc_ExecuteRadial_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.OnRadialSectorCreated
// 0x0038 (0x0038 - 0x0000)
struct W_WeaponWheel_C_OnRadialSectorCreated final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAngle;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnRadialSectorCreated_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_CreateWheelCategory_Canvas_Panel_Slot;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalculatePositionOnCircleFromWidget_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_OnRadialSectorCreated) == 0x000008, "Wrong alignment on W_WeaponWheel_C_OnRadialSectorCreated");
static_assert(sizeof(W_WeaponWheel_C_OnRadialSectorCreated) == 0x000038, "Wrong size on W_WeaponWheel_C_OnRadialSectorCreated");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, Param_Index) == 0x000000, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::Param_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, InAngle) == 0x000004, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::InAngle' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, CallFunc_OnRadialSectorCreated_ReturnValue) == 0x000009, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::CallFunc_OnRadialSectorCreated_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, CallFunc_CreateWheelCategory_Canvas_Panel_Slot) == 0x000010, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::CallFunc_CreateWheelCategory_Canvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, CallFunc_GetPosition_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialSectorCreated, CallFunc_CalculatePositionOnCircleFromWidget_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_C_OnRadialSectorCreated::CallFunc_CalculatePositionOnCircleFromWidget_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.OnRadialMenuInitialized
// 0x0014 (0x0014 - 0x0000)
struct W_WeaponWheel_C_OnRadialMenuInitialized final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnRadialMenuInitialized_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_OnRadialMenuInitialized) == 0x000004, "Wrong alignment on W_WeaponWheel_C_OnRadialMenuInitialized");
static_assert(sizeof(W_WeaponWheel_C_OnRadialMenuInitialized) == 0x000014, "Wrong size on W_WeaponWheel_C_OnRadialMenuInitialized");
static_assert(offsetof(W_WeaponWheel_C_OnRadialMenuInitialized, ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_OnRadialMenuInitialized::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialMenuInitialized, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_C_OnRadialMenuInitialized::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialMenuInitialized, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_OnRadialMenuInitialized::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_OnRadialMenuInitialized, CallFunc_OnRadialMenuInitialized_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_OnRadialMenuInitialized::CallFunc_OnRadialMenuInitialized_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.IsWheelCursorVisible
// 0x0002 (0x0002 - 0x0000)
struct W_WeaponWheel_C_IsWheelCursorVisible final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_IsWheelCursorVisible) == 0x000001, "Wrong alignment on W_WeaponWheel_C_IsWheelCursorVisible");
static_assert(sizeof(W_WeaponWheel_C_IsWheelCursorVisible) == 0x000002, "Wrong size on W_WeaponWheel_C_IsWheelCursorVisible");
static_assert(offsetof(W_WeaponWheel_C_IsWheelCursorVisible, ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_IsWheelCursorVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsWheelCursorVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'W_WeaponWheel_C_IsWheelCursorVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RefreshMultiItemWidget
// 0x001C (0x001C - 0x0000)
struct W_WeaponWheel_C_RefreshMultiItemWidget final 
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_RefreshMultiItemWidget) == 0x000004, "Wrong alignment on W_WeaponWheel_C_RefreshMultiItemWidget");
static_assert(sizeof(W_WeaponWheel_C_RefreshMultiItemWidget) == 0x00001C, "Wrong size on W_WeaponWheel_C_RefreshMultiItemWidget");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Array_Length_ReturnValue_1) == 0x000004, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Array_Length_ReturnValue_2) == 0x00000C, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Array_Length_ReturnValue_3) == 0x000010, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RefreshMultiItemWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_RefreshMultiItemWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddPrimaryWeapon
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_AddPrimaryWeapon final 
{
public:
	class ABaseItem*                              PrimaryWeaponItem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_AddPrimaryWeapon) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddPrimaryWeapon");
static_assert(sizeof(W_WeaponWheel_C_AddPrimaryWeapon) == 0x000008, "Wrong size on W_WeaponWheel_C_AddPrimaryWeapon");
static_assert(offsetof(W_WeaponWheel_C_AddPrimaryWeapon, PrimaryWeaponItem) == 0x000000, "Member 'W_WeaponWheel_C_AddPrimaryWeapon::PrimaryWeaponItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddSecondaryWeapon
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_AddSecondaryWeapon final 
{
public:
	class ABaseItem*                              SecondayWeaponItem;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_AddSecondaryWeapon) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddSecondaryWeapon");
static_assert(sizeof(W_WeaponWheel_C_AddSecondaryWeapon) == 0x000008, "Wrong size on W_WeaponWheel_C_AddSecondaryWeapon");
static_assert(offsetof(W_WeaponWheel_C_AddSecondaryWeapon, SecondayWeaponItem) == 0x000000, "Member 'W_WeaponWheel_C_AddSecondaryWeapon::SecondayWeaponItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddGrenade
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_AddGrenade final 
{
public:
	class ABaseItem*                              GrenadeItem;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_AddGrenade) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddGrenade");
static_assert(sizeof(W_WeaponWheel_C_AddGrenade) == 0x000008, "Wrong size on W_WeaponWheel_C_AddGrenade");
static_assert(offsetof(W_WeaponWheel_C_AddGrenade, GrenadeItem) == 0x000000, "Member 'W_WeaponWheel_C_AddGrenade::GrenadeItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddAssistants
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_AddAssistants final 
{
public:
	class ABaseItem*                              Param_Assistants;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_AddAssistants) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddAssistants");
static_assert(sizeof(W_WeaponWheel_C_AddAssistants) == 0x000008, "Wrong size on W_WeaponWheel_C_AddAssistants");
static_assert(offsetof(W_WeaponWheel_C_AddAssistants, Param_Assistants) == 0x000000, "Member 'W_WeaponWheel_C_AddAssistants::Param_Assistants' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddTactical Device
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_AddTactical_Device final 
{
public:
	class ABaseItem*                              Tactical_Device_Item;                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_AddTactical_Device) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddTactical_Device");
static_assert(sizeof(W_WeaponWheel_C_AddTactical_Device) == 0x000008, "Wrong size on W_WeaponWheel_C_AddTactical_Device");
static_assert(offsetof(W_WeaponWheel_C_AddTactical_Device, Tactical_Device_Item) == 0x000000, "Member 'W_WeaponWheel_C_AddTactical_Device::Tactical_Device_Item' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddTabletDevice
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_AddTabletDevice final 
{
public:
	class ABaseItem*                              TabletDevice_Item;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_AddTabletDevice) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddTabletDevice");
static_assert(sizeof(W_WeaponWheel_C_AddTabletDevice) == 0x000008, "Wrong size on W_WeaponWheel_C_AddTabletDevice");
static_assert(offsetof(W_WeaponWheel_C_AddTabletDevice, TabletDevice_Item) == 0x000000, "Member 'W_WeaponWheel_C_AddTabletDevice::TabletDevice_Item' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddItemToCategory
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_AddItemToCategory final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Wheel_Category;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_AddItemToCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddItemToCategory");
static_assert(sizeof(W_WeaponWheel_C_AddItemToCategory) == 0x000020, "Wrong size on W_WeaponWheel_C_AddItemToCategory");
static_assert(offsetof(W_WeaponWheel_C_AddItemToCategory, Item) == 0x000000, "Member 'W_WeaponWheel_C_AddItemToCategory::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddItemToCategory, Wheel_Category) == 0x000008, "Member 'W_WeaponWheel_C_AddItemToCategory::Wheel_Category' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddItemToCategory, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_AddItemToCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddItemToCategory, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_AddItemToCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveItemFromCategory
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_RemoveItemFromCategory final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Wheel_Category;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_RemoveItemFromCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveItemFromCategory");
static_assert(sizeof(W_WeaponWheel_C_RemoveItemFromCategory) == 0x000020, "Wrong size on W_WeaponWheel_C_RemoveItemFromCategory");
static_assert(offsetof(W_WeaponWheel_C_RemoveItemFromCategory, Item) == 0x000000, "Member 'W_WeaponWheel_C_RemoveItemFromCategory::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveItemFromCategory, Wheel_Category) == 0x000008, "Member 'W_WeaponWheel_C_RemoveItemFromCategory::Wheel_Category' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveItemFromCategory, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_RemoveItemFromCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveItemFromCategory, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_RemoveItemFromCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemovePrimaryWeapon
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_RemovePrimaryWeapon final 
{
public:
	class ABaseItem*                              PrimaryWeaponItem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RemovePrimaryWeapon) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemovePrimaryWeapon");
static_assert(sizeof(W_WeaponWheel_C_RemovePrimaryWeapon) == 0x000008, "Wrong size on W_WeaponWheel_C_RemovePrimaryWeapon");
static_assert(offsetof(W_WeaponWheel_C_RemovePrimaryWeapon, PrimaryWeaponItem) == 0x000000, "Member 'W_WeaponWheel_C_RemovePrimaryWeapon::PrimaryWeaponItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveSecondaryWeapon
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_RemoveSecondaryWeapon final 
{
public:
	class ABaseItem*                              SecondaryWeaponItem;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RemoveSecondaryWeapon) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveSecondaryWeapon");
static_assert(sizeof(W_WeaponWheel_C_RemoveSecondaryWeapon) == 0x000008, "Wrong size on W_WeaponWheel_C_RemoveSecondaryWeapon");
static_assert(offsetof(W_WeaponWheel_C_RemoveSecondaryWeapon, SecondaryWeaponItem) == 0x000000, "Member 'W_WeaponWheel_C_RemoveSecondaryWeapon::SecondaryWeaponItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveGrenade
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_RemoveGrenade final 
{
public:
	class ABaseItem*                              GrenadeItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RemoveGrenade) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveGrenade");
static_assert(sizeof(W_WeaponWheel_C_RemoveGrenade) == 0x000008, "Wrong size on W_WeaponWheel_C_RemoveGrenade");
static_assert(offsetof(W_WeaponWheel_C_RemoveGrenade, GrenadeItem) == 0x000000, "Member 'W_WeaponWheel_C_RemoveGrenade::GrenadeItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveTactical Devices
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_RemoveTactical_Devices final 
{
public:
	class ABaseItem*                              DoorDeviceItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RemoveTactical_Devices) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveTactical_Devices");
static_assert(sizeof(W_WeaponWheel_C_RemoveTactical_Devices) == 0x000008, "Wrong size on W_WeaponWheel_C_RemoveTactical_Devices");
static_assert(offsetof(W_WeaponWheel_C_RemoveTactical_Devices, DoorDeviceItem) == 0x000000, "Member 'W_WeaponWheel_C_RemoveTactical_Devices::DoorDeviceItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveTabletDevice
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_RemoveTabletDevice final 
{
public:
	class ABaseItem*                              TabletDeviceItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RemoveTabletDevice) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveTabletDevice");
static_assert(sizeof(W_WeaponWheel_C_RemoveTabletDevice) == 0x000008, "Wrong size on W_WeaponWheel_C_RemoveTabletDevice");
static_assert(offsetof(W_WeaponWheel_C_RemoveTabletDevice, TabletDeviceItem) == 0x000000, "Member 'W_WeaponWheel_C_RemoveTabletDevice::TabletDeviceItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveAssistant
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_RemoveAssistant final 
{
public:
	class ABaseItem*                              AssistantItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_RemoveAssistant) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveAssistant");
static_assert(sizeof(W_WeaponWheel_C_RemoveAssistant) == 0x000008, "Wrong size on W_WeaponWheel_C_RemoveAssistant");
static_assert(offsetof(W_WeaponWheel_C_RemoveAssistant, AssistantItem) == 0x000000, "Member 'W_WeaponWheel_C_RemoveAssistant::AssistantItem' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToFront (Index)
// 0x0028 (0x0028 - 0x0000)
struct W_WeaponWheel_C_MoveItemToFront__Index_ final 
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CategoryName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToFront__Index_) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToFront__Index_");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToFront__Index_) == 0x000028, "Wrong size on W_WeaponWheel_C_MoveItemToFront__Index_");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront__Index_, ItemIndex) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToFront__Index_::ItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront__Index_, CategoryName) == 0x000004, "Member 'W_WeaponWheel_C_MoveItemToFront__Index_::CategoryName' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront__Index_, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToFront__Index_::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront__Index_, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToFront__Index_::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront__Index_, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_WeaponWheel_C_MoveItemToFront__Index_::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToBack (Index)
// 0x0028 (0x0028 - 0x0000)
struct W_WeaponWheel_C_MoveItemToBack__Index_ final 
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CategoryName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToBack__Index_) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToBack__Index_");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToBack__Index_) == 0x000028, "Wrong size on W_WeaponWheel_C_MoveItemToBack__Index_");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack__Index_, ItemIndex) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToBack__Index_::ItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack__Index_, CategoryName) == 0x000004, "Member 'W_WeaponWheel_C_MoveItemToBack__Index_::CategoryName' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack__Index_, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToBack__Index_::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack__Index_, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToBack__Index_::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack__Index_, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_WeaponWheel_C_MoveItemToBack__Index_::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToFront
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_MoveItemToFront final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToFront) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToFront");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToFront) == 0x000020, "Wrong size on W_WeaponWheel_C_MoveItemToFront");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront, Item) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToFront::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_MoveItemToFront::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToFront::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToFront, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToFront::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToBack
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_C_MoveItemToBack final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToBack) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToBack");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToBack) == 0x000018, "Wrong size on W_WeaponWheel_C_MoveItemToBack");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack, Item) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToBack::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack, CallFunc_Map_Find_Value) == 0x000008, "Member 'W_WeaponWheel_C_MoveItemToBack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToBack, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToBack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToNewSpot
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_MoveItemToNewSpot final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToNewSpot) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToNewSpot");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToNewSpot) == 0x000020, "Wrong size on W_WeaponWheel_C_MoveItemToNewSpot");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot, Item) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToNewSpot::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot, NewIndex) == 0x000008, "Member 'W_WeaponWheel_C_MoveItemToNewSpot::NewIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToNewSpot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToNewSpot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToNewSpot (Index)
// 0x0028 (0x0028 - 0x0000)
struct W_WeaponWheel_C_MoveItemToNewSpot__Index_ final 
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CategoryName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DF8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToNewSpot__Index_) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToNewSpot__Index_");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToNewSpot__Index_) == 0x000028, "Wrong size on W_WeaponWheel_C_MoveItemToNewSpot__Index_");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot__Index_, ItemIndex) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToNewSpot__Index_::ItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot__Index_, CategoryName) == 0x000004, "Member 'W_WeaponWheel_C_MoveItemToNewSpot__Index_::CategoryName' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot__Index_, NewIndex) == 0x00000C, "Member 'W_WeaponWheel_C_MoveItemToNewSpot__Index_::NewIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot__Index_, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToNewSpot__Index_::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot__Index_, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToNewSpot__Index_::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToNewSpot__Index_, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_WeaponWheel_C_MoveItemToNewSpot__Index_::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToAnotherCategory
// 0x00F8 (0x00F8 - 0x0000)
struct W_WeaponWheel_C_MoveItemToAnotherCategory final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToCategory;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndexInCategory;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value_1;                         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToAnotherCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToAnotherCategory");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToAnotherCategory) == 0x0000F8, "Wrong size on W_WeaponWheel_C_MoveItemToAnotherCategory");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, Item) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, ToCategory) == 0x000008, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::ToCategory' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, NewIndexInCategory) == 0x000010, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::NewIndexInCategory' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000028, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000088, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000098, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000A8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000B8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000C8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Map_Find_Value_1) == 0x0000E8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Map_Find_ReturnValue_1) == 0x0000F0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory, CallFunc_Array_Contains_ReturnValue) == 0x0000F1, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.MoveItemToAnotherCategory (Index)
// 0x0110 (0x0110 - 0x0000)
struct W_WeaponWheel_C_MoveItemToAnotherCategory__Index_ final 
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FromCategory;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToCategory;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndexInCategory;                                // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              SavedItem;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFB[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFC[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFD[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_) == 0x000008, "Wrong alignment on W_WeaponWheel_C_MoveItemToAnotherCategory__Index_");
static_assert(sizeof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_) == 0x000110, "Wrong size on W_WeaponWheel_C_MoveItemToAnotherCategory__Index_");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, ItemIndex) == 0x000000, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::ItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, FromCategory) == 0x000004, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::FromCategory' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, ToCategory) == 0x00000C, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::ToCategory' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, NewIndexInCategory) == 0x000014, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::NewIndexInCategory' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, SavedItem) == 0x000018, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::SavedItem' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000030, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000050, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Array_Find_ReturnValue) == 0x000090, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000094, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Array_Contains_ReturnValue) == 0x0000B8, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000E0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000F0, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_MoveItemToAnotherCategory__Index_, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000100, "Member 'W_WeaponWheel_C_MoveItemToAnotherCategory__Index_::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.ShuffleItemsInCategory
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_C_ShuffleItemsInCategory final 
{
public:
	class FName                                   CategoryName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_ShuffleItemsInCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_ShuffleItemsInCategory");
static_assert(sizeof(W_WeaponWheel_C_ShuffleItemsInCategory) == 0x000018, "Wrong size on W_WeaponWheel_C_ShuffleItemsInCategory");
static_assert(offsetof(W_WeaponWheel_C_ShuffleItemsInCategory, CategoryName) == 0x000000, "Member 'W_WeaponWheel_C_ShuffleItemsInCategory::CategoryName' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ShuffleItemsInCategory, CallFunc_Map_Find_Value) == 0x000008, "Member 'W_WeaponWheel_C_ShuffleItemsInCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_ShuffleItemsInCategory, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_ShuffleItemsInCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.AddExecutableItemToCategory
// 0x00B8 (0x00B8 - 0x0000)
struct W_WeaponWheel_C_AddExecutableItemToCategory final 
{
public:
	class UClass*                                 NewWeaponWheelScript;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AtIndex;                                           // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DFF[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E00[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponWheelScript*                     CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E01[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E02[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponWheelScript*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E03[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_AddExecutableItemToCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_AddExecutableItemToCategory");
static_assert(sizeof(W_WeaponWheel_C_AddExecutableItemToCategory) == 0x0000B8, "Wrong size on W_WeaponWheel_C_AddExecutableItemToCategory");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, NewWeaponWheelScript) == 0x000000, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::NewWeaponWheelScript' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, AtIndex) == 0x000008, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::AtIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Array_Contains_ReturnValue) == 0x000058, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_GetObjectClass_ReturnValue) == 0x000070, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000079, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_SpawnObject_ReturnValue) == 0x000080, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000090, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000A0, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Map_Find_Value) == 0x0000A8, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_AddExecutableItemToCategory, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'W_WeaponWheel_C_AddExecutableItemToCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveExecutableItemFromCategory
// 0x0068 (0x0068 - 0x0000)
struct W_WeaponWheel_C_RemoveExecutableItemFromCategory final 
{
public:
	class UClass*                                 NewWeaponWheelScript;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AtIndex;                                           // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E04[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponWheelScript*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E05[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_RemoveExecutableItemFromCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveExecutableItemFromCategory");
static_assert(sizeof(W_WeaponWheel_C_RemoveExecutableItemFromCategory) == 0x000068, "Wrong size on W_WeaponWheel_C_RemoveExecutableItemFromCategory");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, NewWeaponWheelScript) == 0x000000, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::NewWeaponWheelScript' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, AtIndex) == 0x000008, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::AtIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Map_Find_Value) == 0x000058, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveExecutableItemFromCategory, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'W_WeaponWheel_C_RemoveExecutableItemFromCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.UpdateDebugInformation
// 0x01F0 (0x01F0 - 0x0000)
struct W_WeaponWheel_C_UpdateDebugInformation final 
{
public:
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0000(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0020(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0040(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0060(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x0080(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_5;           // 0x00A0(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E06[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00C8(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCorrectAngle_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E07[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_6;           // 0x00F0(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderTransformAngle_ReturnValue;      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E08[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_7;           // 0x0118(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8; // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_9; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0150(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0168(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_10; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E09[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0190(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_11; // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x01B0(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_12; // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x01D0(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_13; // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_UpdateDebugInformation) == 0x000008, "Wrong alignment on W_WeaponWheel_C_UpdateDebugInformation");
static_assert(sizeof(W_WeaponWheel_C_UpdateDebugInformation) == 0x0001F0, "Wrong size on W_WeaponWheel_C_UpdateDebugInformation");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget) == 0x000018, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000020, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1) == 0x000038, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000040, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2) == 0x000058, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000060, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3) == 0x000078, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x000080, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4) == 0x000098, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_5) == 0x0000A0, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5) == 0x0000B8, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_NameToText_ReturnValue) == 0x0000C8, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6) == 0x0000E0, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_GetCorrectAngle_ReturnValue) == 0x0000E8, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_GetCorrectAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_6) == 0x0000F0, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7) == 0x000108, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_GetRenderTransformAngle_ReturnValue) == 0x000110, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_GetRenderTransformAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_FloatToText_ReturnValue_7) == 0x000118, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_FloatToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8) == 0x000130, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_9) == 0x000138, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_9' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Array_Length_ReturnValue_1) == 0x000144, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Array_Length_ReturnValue_2) == 0x00014C, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_IntToText_ReturnValue) == 0x000150, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000168, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_10) == 0x000180, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_10' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Array_Length_ReturnValue_3) == 0x000188, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000190, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_11) == 0x0001A8, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_11' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0001B0, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_12) == 0x0001C8, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_12' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Conv_IntToText_ReturnValue_4) == 0x0001D0, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_UpdateDebugInformation, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_13) == 0x0001E8, "Member 'W_WeaponWheel_C_UpdateDebugInformation::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_13' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveNullItemsFromCategory
// 0x0020 (0x0020 - 0x0000)
struct W_WeaponWheel_C_RemoveNullItemsFromCategory final 
{
public:
	class FName                                   WeaponWheelCategoryName;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E0A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_RemoveNullItemsFromCategory) == 0x000008, "Wrong alignment on W_WeaponWheel_C_RemoveNullItemsFromCategory");
static_assert(sizeof(W_WeaponWheel_C_RemoveNullItemsFromCategory) == 0x000020, "Wrong size on W_WeaponWheel_C_RemoveNullItemsFromCategory");
static_assert(offsetof(W_WeaponWheel_C_RemoveNullItemsFromCategory, WeaponWheelCategoryName) == 0x000000, "Member 'W_WeaponWheel_C_RemoveNullItemsFromCategory::WeaponWheelCategoryName' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveNullItemsFromCategory, ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_RemoveNullItemsFromCategory::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveNullItemsFromCategory, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_RemoveNullItemsFromCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveNullItemsFromCategory, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_RemoveNullItemsFromCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.RemoveNullItemsFromAllCategories
// 0x0002 (0x0002 - 0x0000)
struct W_WeaponWheel_C_RemoveNullItemsFromAllCategories final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveNullItemsFromAllCategories_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_RemoveNullItemsFromAllCategories) == 0x000001, "Wrong alignment on W_WeaponWheel_C_RemoveNullItemsFromAllCategories");
static_assert(sizeof(W_WeaponWheel_C_RemoveNullItemsFromAllCategories) == 0x000002, "Wrong size on W_WeaponWheel_C_RemoveNullItemsFromAllCategories");
static_assert(offsetof(W_WeaponWheel_C_RemoveNullItemsFromAllCategories, ReturnValue) == 0x000000, "Member 'W_WeaponWheel_C_RemoveNullItemsFromAllCategories::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_RemoveNullItemsFromAllCategories, CallFunc_RemoveNullItemsFromAllCategories_ReturnValue) == 0x000001, "Member 'W_WeaponWheel_C_RemoveNullItemsFromAllCategories::CallFunc_RemoveNullItemsFromAllCategories_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.GetCurrentItemSelectionIndex
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_C_GetCurrentItemSelectionIndex final 
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_GetCurrentItemSelectionIndex) == 0x000004, "Wrong alignment on W_WeaponWheel_C_GetCurrentItemSelectionIndex");
static_assert(sizeof(W_WeaponWheel_C_GetCurrentItemSelectionIndex) == 0x000008, "Wrong size on W_WeaponWheel_C_GetCurrentItemSelectionIndex");
static_assert(offsetof(W_WeaponWheel_C_GetCurrentItemSelectionIndex, Return_Value) == 0x000000, "Member 'W_WeaponWheel_C_GetCurrentItemSelectionIndex::Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_GetCurrentItemSelectionIndex, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_C_GetCurrentItemSelectionIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.GetCurrentICategorytemCount
// 0x000C (0x000C - 0x0000)
struct W_WeaponWheel_C_GetCurrentICategorytemCount final 
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E0B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_C_GetCurrentICategorytemCount) == 0x000004, "Wrong alignment on W_WeaponWheel_C_GetCurrentICategorytemCount");
static_assert(sizeof(W_WeaponWheel_C_GetCurrentICategorytemCount) == 0x00000C, "Wrong size on W_WeaponWheel_C_GetCurrentICategorytemCount");
static_assert(offsetof(W_WeaponWheel_C_GetCurrentICategorytemCount, Return_Value) == 0x000000, "Member 'W_WeaponWheel_C_GetCurrentICategorytemCount::Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_GetCurrentICategorytemCount, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_C_GetCurrentICategorytemCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_GetCurrentICategorytemCount, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_C_GetCurrentICategorytemCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.IsItemAtIndex
// 0x0050 (0x0050 - 0x0000)
struct W_WeaponWheel_C_IsItemAtIndex final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E0C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E0D[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              K2Node_DynamicCast_AsBase_Item;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E0E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_IsItemAtIndex) == 0x000008, "Wrong alignment on W_WeaponWheel_C_IsItemAtIndex");
static_assert(sizeof(W_WeaponWheel_C_IsItemAtIndex) == 0x000050, "Wrong size on W_WeaponWheel_C_IsItemAtIndex");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, Item) == 0x000000, "Member 'W_WeaponWheel_C_IsItemAtIndex::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, Param_Index) == 0x000008, "Member 'W_WeaponWheel_C_IsItemAtIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, Return_Value) == 0x00000C, "Member 'W_WeaponWheel_C_IsItemAtIndex::Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x00000D, "Member 'W_WeaponWheel_C_IsItemAtIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_IsValid_ReturnValue) == 0x00000F, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_WeaponWheel_C_IsItemAtIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'W_WeaponWheel_C_IsItemAtIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, K2Node_DynamicCast_AsBase_Item) == 0x000038, "Member 'W_WeaponWheel_C_IsItemAtIndex::K2Node_DynamicCast_AsBase_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_WeaponWheel_C_IsItemAtIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x00004B, "Member 'W_WeaponWheel_C_IsItemAtIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.IsItemAtFront
// 0x0010 (0x0010 - 0x0000)
struct W_WeaponWheel_C_IsItemAtFront final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemAtIndex_Return_Value;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_IsItemAtFront) == 0x000008, "Wrong alignment on W_WeaponWheel_C_IsItemAtFront");
static_assert(sizeof(W_WeaponWheel_C_IsItemAtFront) == 0x000010, "Wrong size on W_WeaponWheel_C_IsItemAtFront");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtFront, Item) == 0x000000, "Member 'W_WeaponWheel_C_IsItemAtFront::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtFront, Return_Value) == 0x000008, "Member 'W_WeaponWheel_C_IsItemAtFront::Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtFront, CallFunc_IsItemAtIndex_Return_Value) == 0x000009, "Member 'W_WeaponWheel_C_IsItemAtFront::CallFunc_IsItemAtIndex_Return_Value' has a wrong offset!");

// Function W_WeaponWheel.W_WeaponWheel_C.IsItemAtBack
// 0x0028 (0x0028 - 0x0000)
struct W_WeaponWheel_C_IsItemAtBack final 
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E0F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WeaponWheel_RadialSelection_C*       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E10[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemAtIndex_Return_Value;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_C_IsItemAtBack) == 0x000008, "Wrong alignment on W_WeaponWheel_C_IsItemAtBack");
static_assert(sizeof(W_WeaponWheel_C_IsItemAtBack) == 0x000028, "Wrong size on W_WeaponWheel_C_IsItemAtBack");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, Item) == 0x000000, "Member 'W_WeaponWheel_C_IsItemAtBack::Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, Return_Value) == 0x000008, "Member 'W_WeaponWheel_C_IsItemAtBack::Return_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_WeaponWheel_C_IsItemAtBack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_C_IsItemAtBack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'W_WeaponWheel_C_IsItemAtBack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'W_WeaponWheel_C_IsItemAtBack::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_C_IsItemAtBack, CallFunc_IsItemAtIndex_Return_Value) == 0x000024, "Member 'W_WeaponWheel_C_IsItemAtBack::CallFunc_IsItemAtIndex_Return_Value' has a wrong offset!");

}

