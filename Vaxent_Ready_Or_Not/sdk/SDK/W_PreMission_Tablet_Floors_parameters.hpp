#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Floors

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.ExecuteUbergraph_W_PreMission_Tablet_Floors
// 0x00F8 (0x00F8 - 0x0000)
struct W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B2[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PreMission_PlanningMap_Level_C*      CallFunc_GetCurrentLevelMap_CurrentLevelCanvas;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B3[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UW_PreMission_Tablet_C*                 CallFunc_WidgetGetParentOfClass_ReturnValue;       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay_1;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B4[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B5[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B6[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_33B7[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_1;     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors) == 0x0000F8, "Wrong size on W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_CustomEvent_Delay) == 0x000008, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_MyGeometry) == 0x000018, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_InDeltaTime) == 0x000050, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000058, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_ComponentBoundEvent_Button_1) == 0x000060, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_ComponentBoundEvent_Button) == 0x000068, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_GetCurrentLevelMap_CurrentLevelCanvas) == 0x000078, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_GetCurrentLevelMap_CurrentLevelCanvas' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_WidgetGetParentOfClass_ReturnValue) == 0x0000A0, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_WidgetGetParentOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_Delay_1) == 0x0000A8, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_Collapse) == 0x0000AC, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0000B0, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_Delay) == 0x0000B8, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000C0, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_PageName) == 0x0000C8, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_CustomEvent_bNewInputType) == 0x0000D0, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D1, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_Event_IsGamepad) == 0x0000D2, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D4, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_GetPlayerController_ReturnValue) == 0x0000E8, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x0000F0, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors, CallFunc_WasInputKeyJustPressed_ReturnValue_1) == 0x0000F1, "Member 'W_PreMission_Tablet_Floors_C_ExecuteUbergraph_W_PreMission_Tablet_Floors::CallFunc_WasInputKeyJustPressed_ReturnValue_1' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.InputChanged
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Floors_C_InputChanged final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_InputChanged) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Floors_C_InputChanged");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_InputChanged) == 0x000001, "Wrong size on W_PreMission_Tablet_Floors_C_InputChanged");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_InputChanged, bNewInputType) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_InputChanged::bNewInputType' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Floors_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_Reveal) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_Reveal) == 0x000004, "Wrong size on W_PreMission_Tablet_Floors_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Floors_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_Hide) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_Hide) == 0x000008, "Wrong size on W_PreMission_Tablet_Floors_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_Hide, Collapse) == 0x000004, "Member 'W_PreMission_Tablet_Floors_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.ShowFloorInfo
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Floors_C_ShowFloorInfo final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_ShowFloorInfo) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_ShowFloorInfo");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_ShowFloorInfo) == 0x000004, "Wrong size on W_PreMission_Tablet_Floors_C_ShowFloorInfo");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ShowFloorInfo, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_ShowFloorInfo::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PreMission_Tablet_Floors_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_Tick) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_Tick");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_Tick) == 0x00003C, "Wrong size on W_PreMission_Tablet_Floors_C_Tick");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_Tick, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PreMission_Tablet_Floors_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Floors_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_Floors_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Floors_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Floors_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_Floors_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.UpdateFloorInfo
// 0x0950 (0x0950 - 0x0000)
struct W_PreMission_Tablet_Floors_C_UpdateFloorInfo final 
{
public:
	class FString                                 MissionURL;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelFloor                            Param_FloorData;                                   // 0x0010(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Temp_text_Variable;                                // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B8[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelDataLookupTable                  CallFunc_GetMapDetailsFromName_ReturnValue;        // 0x00B0(0x0788)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0840(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B9[0x7];                                     // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0888(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x08A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x08E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x08F0(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BA[0x3];                                     // 0x0911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33BB[0x7];                                     // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0920(0x0018)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BC[0x4];                                     // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Floors_C_UpdateFloorInfo");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo) == 0x000950, "Wrong size on W_PreMission_Tablet_Floors_C_UpdateFloorInfo");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, MissionURL) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, Param_FloorData) == 0x000010, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::Param_FloorData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, Temp_text_Variable) == 0x000078, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, Temp_text_Variable_1) == 0x000090, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, Temp_bool_Variable) == 0x0000A8, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A9, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_GetMapDetailsFromName_ReturnValue) == 0x0000B0, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_GetMapDetailsFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Array_Length_ReturnValue) == 0x000838, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Array_Length_ReturnValue_1) == 0x00083C, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000840, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000880, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, K2Node_Select_Default) == 0x000888, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0008A0, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, K2Node_MakeArray_Array) == 0x0008E0, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Format_ReturnValue) == 0x0008F0, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000908, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000910, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000914, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000918, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000920, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_Array_Find_ReturnValue) == 0x000938, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000940, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000948, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_UpdateFloorInfo, CallFunc_GetCurrentInputType_ReturnValue) == 0x000949, "Member 'W_PreMission_Tablet_Floors_C_UpdateFloorInfo::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.DecrementFloor
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Floors_C_DecrementFloor final 
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_DecrementFloor) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_DecrementFloor");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_DecrementFloor) == 0x000004, "Wrong size on W_PreMission_Tablet_Floors_C_DecrementFloor");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_DecrementFloor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_DecrementFloor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.IncrementFloor
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Floors_C_IncrementFloor final 
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_IncrementFloor) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Floors_C_IncrementFloor");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_IncrementFloor) == 0x000004, "Wrong size on W_PreMission_Tablet_Floors_C_IncrementFloor");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_IncrementFloor, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_IncrementFloor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Floors_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Floors_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_Floors_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Floors_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Floors_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Floors_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_Floors_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_Floors_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_Floors_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_Floors_C_GetFocusTarget::Focus' has a wrong offset!");

}

