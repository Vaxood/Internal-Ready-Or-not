#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReadyOrNotUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function ReadyOrNotUI.ReadyOrNotUI_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct ReadyOrNotUI_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReadyOrNotUI_C_Reveal) == 0x000004, "Wrong alignment on ReadyOrNotUI_C_Reveal");
static_assert(sizeof(ReadyOrNotUI_C_Reveal) == 0x000004, "Wrong size on ReadyOrNotUI_C_Reveal");
static_assert(offsetof(ReadyOrNotUI_C_Reveal, Delay) == 0x000000, "Member 'ReadyOrNotUI_C_Reveal::Delay' has a wrong offset!");

// Function ReadyOrNotUI.ReadyOrNotUI_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct ReadyOrNotUI_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReadyOrNotUI_C_Hide) == 0x000004, "Wrong alignment on ReadyOrNotUI_C_Hide");
static_assert(sizeof(ReadyOrNotUI_C_Hide) == 0x000008, "Wrong size on ReadyOrNotUI_C_Hide");
static_assert(offsetof(ReadyOrNotUI_C_Hide, Delay) == 0x000000, "Member 'ReadyOrNotUI_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(ReadyOrNotUI_C_Hide, Collapse) == 0x000004, "Member 'ReadyOrNotUI_C_Hide::Collapse' has a wrong offset!");

// Function ReadyOrNotUI.ReadyOrNotUI_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct ReadyOrNotUI_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReadyOrNotUI_C_SetInputMode) == 0x000001, "Wrong alignment on ReadyOrNotUI_C_SetInputMode");
static_assert(sizeof(ReadyOrNotUI_C_SetInputMode) == 0x000001, "Wrong size on ReadyOrNotUI_C_SetInputMode");
static_assert(offsetof(ReadyOrNotUI_C_SetInputMode, IsGamepad) == 0x000000, "Member 'ReadyOrNotUI_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function ReadyOrNotUI.ReadyOrNotUI_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct ReadyOrNotUI_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReadyOrNotUI_C_ChangePage) == 0x000004, "Wrong alignment on ReadyOrNotUI_C_ChangePage");
static_assert(sizeof(ReadyOrNotUI_C_ChangePage) == 0x000008, "Wrong size on ReadyOrNotUI_C_ChangePage");
static_assert(offsetof(ReadyOrNotUI_C_ChangePage, PageName) == 0x000000, "Member 'ReadyOrNotUI_C_ChangePage::PageName' has a wrong offset!");

// Function ReadyOrNotUI.ReadyOrNotUI_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct ReadyOrNotUI_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReadyOrNotUI_C_BackPage) == 0x000001, "Wrong alignment on ReadyOrNotUI_C_BackPage");
static_assert(sizeof(ReadyOrNotUI_C_BackPage) == 0x000001, "Wrong size on ReadyOrNotUI_C_BackPage");
static_assert(offsetof(ReadyOrNotUI_C_BackPage, Handled) == 0x000000, "Member 'ReadyOrNotUI_C_BackPage::Handled' has a wrong offset!");

// Function ReadyOrNotUI.ReadyOrNotUI_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct ReadyOrNotUI_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ReadyOrNotUI_C_GetFocusTarget) == 0x000008, "Wrong alignment on ReadyOrNotUI_C_GetFocusTarget");
static_assert(sizeof(ReadyOrNotUI_C_GetFocusTarget) == 0x000008, "Wrong size on ReadyOrNotUI_C_GetFocusTarget");
static_assert(offsetof(ReadyOrNotUI_C_GetFocusTarget, Focus) == 0x000000, "Member 'ReadyOrNotUI_C_GetFocusTarget::Focus' has a wrong offset!");

}

