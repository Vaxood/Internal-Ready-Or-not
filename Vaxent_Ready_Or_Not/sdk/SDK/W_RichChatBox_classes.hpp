#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RichChatBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_RichChatBox.W_RichChatBox_C
// 0x1098 (0x12F8 - 0x0260)
class UW_RichChatBox_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           Box;                                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         ChatArea;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       ChatEntry;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollArea;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_ChatChannel;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 ChatAreaText;                                      // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bPreplanning;                                      // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E3F[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowTimeLeft;                                      // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShowTimeMax;                                       // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTextFocused;                                      // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFadingOut;                                        // 0x02B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTeamChat;                                         // 0x02B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E40[0x1];                                     // 0x02B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RedTeamLabel;                                      // 0x02B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BlueTeamLabel;                                     // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   GoldTeamLabel;                                     // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bAlwaysShowTextEntry;                              // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E41[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEditableTextBoxStyle                  ChatboxEntryStyleAlwaysShown;                      // 0x0308(0x07F8)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FEditableTextBoxStyle                  ChatboxEntryStyleNotAlwaysShown;                   // 0x0B00(0x07F8)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_W_RichChatBox(int32 EntryPoint, ETeamType Temp_byte_Variable, ETeamType Temp_byte_Variable_1, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class FText K2Node_ComponentBoundEvent_Text, ETextCommit K2Node_ComponentBoundEvent_CommitMethod, bool K2Node_SwitchEnum_CmpSuccess, const class FString& CallFunc_Conv_TextToString_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class AReadyOrNotPlayerState* K2Node_DynamicCast_AsReady_or_Not_Player_State, bool K2Node_DynamicCast_bSuccess_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, const struct FRChatMessage& K2Node_CustomEvent_Message, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_IsValid_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess_2, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsSquadLeader_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, const class FString& CallFunc_Concat_StrStr_ReturnValue_13, const class FString& CallFunc_Concat_StrStr_ReturnValue_14, const class FString& CallFunc_Concat_StrStr_ReturnValue_15, const class FString& CallFunc_Concat_StrStr_ReturnValue_16, int32 CallFunc_Len_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_17, bool CallFunc_Greater_IntInt_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_2, const class FString& K2Node_Select_Default, class FText CallFunc_MakeLiteralText_ReturnValue, bool Temp_bool_Variable_2, bool CallFunc_LessEqual_FloatFloat_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class AReadyOrNotPlayerState* K2Node_DynamicCast_AsReady_or_Not_Player_State_1, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsSquadLeader_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, ETeamType CallFunc_GetTeam_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_HasKeyboardFocus_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_2, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_3, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_18, const class FString& CallFunc_Conv_TextToString_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_19, const class FString& CallFunc_Concat_StrStr_ReturnValue_20, const class FString& CallFunc_Concat_StrStr_ReturnValue_21, const class FString& CallFunc_Concat_StrStr_ReturnValue_22, const class FString& CallFunc_Concat_StrStr_ReturnValue_23, const class FString& K2Node_Select_Default_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_3, bool K2Node_Event_IsDesignTime, const class FString& CallFunc_Concat_StrStr_ReturnValue_24, const class FString& CallFunc_Concat_StrStr_ReturnValue_25, const class FString& CallFunc_Concat_StrStr_ReturnValue_26, const class FString& K2Node_Select_Default_2, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue_2, class AReadyOrNotPlayerState* K2Node_DynamicCast_AsReady_or_Not_Player_State_2, bool K2Node_DynamicCast_bSuccess_4, TDelegate<void(const struct FRChatMessage& Message)> K2Node_CreateDelegate_OutputDelegate_1, const class FString& CallFunc_GetPlayerName_ReturnValue, ETeamType K2Node_Select_Default_3, const struct FRChatMessage& K2Node_MakeStruct_RChatMessage);
	void PreConstruct(bool IsDesignTime);
	void RetryBindChat();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void On_Chat_Message_Received(const struct FRChatMessage& Message);
	void Construct();
	void BndEvt__ChatEntry_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature(class FText& Text, ETextCommit CommitMethod);
	void AddChatMessage(const class FString& Message, const class FString& WorkStr, const class FString& CallFunc_Quake_ConvertColorCodes_StrOut, class FText CallFunc_Conv_StringToText_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void SetChatFocus(bool NewFocus, bool NewTeamChat, bool bChatWasFocused, class AGameStateBase* CallFunc_GetGameState_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue_1, bool CallFunc_IsAnimationPlaying_ReturnValue);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FKey& CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	ESlateVisibility GetTeamChatIndicatorVisibility(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool CallFunc_HasKeyboardFocus_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, ESlateVisibility K2Node_Select_Default);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_RichChatBox_C">();
	}
	static class UW_RichChatBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_RichChatBox_C>();
	}
};
static_assert(alignof(UW_RichChatBox_C) == 0x000008, "Wrong alignment on UW_RichChatBox_C");
static_assert(sizeof(UW_RichChatBox_C) == 0x0012F8, "Wrong size on UW_RichChatBox_C");
static_assert(offsetof(UW_RichChatBox_C, UberGraphFrame) == 0x000260, "Member 'UW_RichChatBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, FadeOut) == 0x000268, "Member 'UW_RichChatBox_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, Box) == 0x000270, "Member 'UW_RichChatBox_C::Box' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ChatArea) == 0x000278, "Member 'UW_RichChatBox_C::ChatArea' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ChatEntry) == 0x000280, "Member 'UW_RichChatBox_C::ChatEntry' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ScrollArea) == 0x000288, "Member 'UW_RichChatBox_C::ScrollArea' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, Txt_ChatChannel) == 0x000290, "Member 'UW_RichChatBox_C::Txt_ChatChannel' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ChatAreaText) == 0x000298, "Member 'UW_RichChatBox_C::ChatAreaText' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, bPreplanning) == 0x0002A8, "Member 'UW_RichChatBox_C::bPreplanning' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ShowTimeLeft) == 0x0002AC, "Member 'UW_RichChatBox_C::ShowTimeLeft' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ShowTimeMax) == 0x0002B0, "Member 'UW_RichChatBox_C::ShowTimeMax' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, bTextFocused) == 0x0002B4, "Member 'UW_RichChatBox_C::bTextFocused' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, bFadingOut) == 0x0002B5, "Member 'UW_RichChatBox_C::bFadingOut' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, bTeamChat) == 0x0002B6, "Member 'UW_RichChatBox_C::bTeamChat' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, RedTeamLabel) == 0x0002B8, "Member 'UW_RichChatBox_C::RedTeamLabel' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, BlueTeamLabel) == 0x0002D0, "Member 'UW_RichChatBox_C::BlueTeamLabel' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, GoldTeamLabel) == 0x0002E8, "Member 'UW_RichChatBox_C::GoldTeamLabel' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, bAlwaysShowTextEntry) == 0x000300, "Member 'UW_RichChatBox_C::bAlwaysShowTextEntry' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ChatboxEntryStyleAlwaysShown) == 0x000308, "Member 'UW_RichChatBox_C::ChatboxEntryStyleAlwaysShown' has a wrong offset!");
static_assert(offsetof(UW_RichChatBox_C, ChatboxEntryStyleNotAlwaysShown) == 0x000B00, "Member 'UW_RichChatBox_C::ChatboxEntryStyleNotAlwaysShown' has a wrong offset!");

}

