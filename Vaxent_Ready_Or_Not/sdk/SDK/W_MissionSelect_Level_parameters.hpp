#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionSelect_Level

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_MissionSelect_Level_C_OnClicked__DelegateSignature final 
{
public:
	class UW_MissionSelect_Level_C*               Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelData*                             Param_LevelData;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_OnClicked__DelegateSignature");
static_assert(sizeof(W_MissionSelect_Level_C_OnClicked__DelegateSignature) == 0x000010, "Wrong size on W_MissionSelect_Level_C_OnClicked__DelegateSignature");
static_assert(offsetof(W_MissionSelect_Level_C_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'W_MissionSelect_Level_C_OnClicked__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_OnClicked__DelegateSignature, Param_LevelData) == 0x000008, "Member 'W_MissionSelect_Level_C_OnClicked__DelegateSignature::Param_LevelData' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_OnHovered__DelegateSignature final 
{
public:
	class UW_MissionSelect_Level_C*               Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_OnHovered__DelegateSignature");
static_assert(sizeof(W_MissionSelect_Level_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on W_MissionSelect_Level_C_OnHovered__DelegateSignature");
static_assert(offsetof(W_MissionSelect_Level_C_OnHovered__DelegateSignature, Button) == 0x000000, "Member 'W_MissionSelect_Level_C_OnHovered__DelegateSignature::Button' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_OnSelected__DelegateSignature final 
{
public:
	class UW_MissionSelect_Level_C*               SelectedButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_OnSelected__DelegateSignature) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_OnSelected__DelegateSignature");
static_assert(sizeof(W_MissionSelect_Level_C_OnSelected__DelegateSignature) == 0x000008, "Wrong size on W_MissionSelect_Level_C_OnSelected__DelegateSignature");
static_assert(offsetof(W_MissionSelect_Level_C_OnSelected__DelegateSignature, SelectedButton) == 0x000000, "Member 'W_MissionSelect_Level_C_OnSelected__DelegateSignature::SelectedButton' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.ExecuteUbergraph_W_MissionSelect_Level
// 0x00D8 (0x00D8 - 0x0000)
struct W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E30[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E31[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_ButtonColor;                    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_TextColor;                      // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E32[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	float                                         K2Node_Event_Delay;                                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E33[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelData*                             K2Node_CustomEvent_LevelData;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E34[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MissionSelect_EntryPoint_C*          CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E35[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Reveal_self_CastInput;                    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E36[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level");
static_assert(sizeof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level) == 0x0000D8, "Wrong size on W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, EntryPoint) == 0x000000, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_CustomEvent_ButtonColor) == 0x00001C, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_CustomEvent_ButtonColor' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_CustomEvent_TextColor) == 0x00002C, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_CustomEvent_TextColor' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_Event_Delay) == 0x000068, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_Event_IsDesignTime) == 0x000074, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_CustomEvent_LevelData) == 0x000078, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_CustomEvent_LevelData' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, Temp_int_Array_Index_Variable) == 0x000080, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_Event_PageName) == 0x000084, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_ComponentBoundEvent_Button_1) == 0x000090, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000098, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_ComponentBoundEvent_Button) == 0x0000A0, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_Reveal_self_CastInput) == 0x0000B8, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_Reveal_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_Event_IsGamepad) == 0x0000C9, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_Event_Delay_1) == 0x0000CC, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level, K2Node_Event_Collapse) == 0x0000D0, "Member 'W_MissionSelect_Level_C_ExecuteUbergraph_W_MissionSelect_Level::K2Node_Event_Collapse' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(sizeof(W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(offsetof(W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_MissionSelect_Level_C_BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_MissionSelect_Level_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_Reveal) == 0x000004, "Wrong alignment on W_MissionSelect_Level_C_Reveal");
static_assert(sizeof(W_MissionSelect_Level_C_Reveal) == 0x000004, "Wrong size on W_MissionSelect_Level_C_Reveal");
static_assert(offsetof(W_MissionSelect_Level_C_Reveal, Delay) == 0x000000, "Member 'W_MissionSelect_Level_C_Reveal::Delay' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.SetState
// 0x0020 (0x0020 - 0x0000)
struct W_MissionSelect_Level_C_SetState final 
{
public:
	struct FLinearColor                           ButtonColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_SetState) == 0x000004, "Wrong alignment on W_MissionSelect_Level_C_SetState");
static_assert(sizeof(W_MissionSelect_Level_C_SetState) == 0x000020, "Wrong size on W_MissionSelect_Level_C_SetState");
static_assert(offsetof(W_MissionSelect_Level_C_SetState, ButtonColor) == 0x000000, "Member 'W_MissionSelect_Level_C_SetState::ButtonColor' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_SetState, TextColor) == 0x000010, "Member 'W_MissionSelect_Level_C_SetState::TextColor' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_Level_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_PreConstruct) == 0x000001, "Wrong alignment on W_MissionSelect_Level_C_PreConstruct");
static_assert(sizeof(W_MissionSelect_Level_C_PreConstruct) == 0x000001, "Wrong size on W_MissionSelect_Level_C_PreConstruct");
static_assert(offsetof(W_MissionSelect_Level_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_MissionSelect_Level_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.SetLevelData
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_SetLevelData final 
{
public:
	class ULevelData*                             Param_LevelData;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_SetLevelData) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_SetLevelData");
static_assert(sizeof(W_MissionSelect_Level_C_SetLevelData) == 0x000008, "Wrong size on W_MissionSelect_Level_C_SetLevelData");
static_assert(offsetof(W_MissionSelect_Level_C_SetLevelData, Param_LevelData) == 0x000000, "Member 'W_MissionSelect_Level_C_SetLevelData::Param_LevelData' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_ChangePage) == 0x000004, "Wrong alignment on W_MissionSelect_Level_C_ChangePage");
static_assert(sizeof(W_MissionSelect_Level_C_ChangePage) == 0x000008, "Wrong size on W_MissionSelect_Level_C_ChangePage");
static_assert(offsetof(W_MissionSelect_Level_C_ChangePage, PageName) == 0x000000, "Member 'W_MissionSelect_Level_C_ChangePage::PageName' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_Level_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_SetInputMode) == 0x000001, "Wrong alignment on W_MissionSelect_Level_C_SetInputMode");
static_assert(sizeof(W_MissionSelect_Level_C_SetInputMode) == 0x000001, "Wrong size on W_MissionSelect_Level_C_SetInputMode");
static_assert(offsetof(W_MissionSelect_Level_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_MissionSelect_Level_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_Hide) == 0x000004, "Wrong alignment on W_MissionSelect_Level_C_Hide");
static_assert(sizeof(W_MissionSelect_Level_C_Hide) == 0x000008, "Wrong size on W_MissionSelect_Level_C_Hide");
static_assert(offsetof(W_MissionSelect_Level_C_Hide, Delay) == 0x000000, "Member 'W_MissionSelect_Level_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_Hide, Collapse) == 0x000004, "Member 'W_MissionSelect_Level_C_Hide::Collapse' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.SetLevelText
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_Level_C_SetLevelText final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_SetLevelText) == 0x000001, "Wrong alignment on W_MissionSelect_Level_C_SetLevelText");
static_assert(sizeof(W_MissionSelect_Level_C_SetLevelText) == 0x000001, "Wrong size on W_MissionSelect_Level_C_SetLevelText");
static_assert(offsetof(W_MissionSelect_Level_C_SetLevelText, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_MissionSelect_Level_C_SetLevelText::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.UpdateVisualState
// 0x0030 (0x0030 - 0x0000)
struct W_MissionSelect_Level_C_UpdateVisualState final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E37[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonTextStyle>           Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E38[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_UpdateVisualState) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_UpdateVisualState");
static_assert(sizeof(W_MissionSelect_Level_C_UpdateVisualState) == 0x000030, "Wrong size on W_MissionSelect_Level_C_UpdateVisualState");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_bool_Variable) == 0x000000, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_byte_Variable) == 0x000001, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_byte_Variable_1) == 0x000002, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_bool_Variable_1) == 0x000003, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_class_Variable) == 0x000008, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_class_Variable_1) == 0x000010, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_bool_Variable_2) == 0x000018, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_byte_Variable_2) == 0x000019, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, Temp_byte_Variable_3) == 0x00001A, "Member 'W_MissionSelect_Level_C_UpdateVisualState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'W_MissionSelect_Level_C_UpdateVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, K2Node_Select_Default) == 0x00001C, "Member 'W_MissionSelect_Level_C_UpdateVisualState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, K2Node_Select_Default_1) == 0x000020, "Member 'W_MissionSelect_Level_C_UpdateVisualState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, CallFunc_IsLocked_ReturnValue) == 0x000028, "Member 'W_MissionSelect_Level_C_UpdateVisualState::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'W_MissionSelect_Level_C_UpdateVisualState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_UpdateVisualState, K2Node_Select_Default_2) == 0x00002A, "Member 'W_MissionSelect_Level_C_UpdateVisualState::K2Node_Select_Default_2' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.IsLocked
// 0x0004 (0x0004 - 0x0000)
struct W_MissionSelect_Level_C_IsLocked final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMultiplayer_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_IsLocked) == 0x000001, "Wrong alignment on W_MissionSelect_Level_C_IsLocked");
static_assert(sizeof(W_MissionSelect_Level_C_IsLocked) == 0x000004, "Wrong size on W_MissionSelect_Level_C_IsLocked");
static_assert(offsetof(W_MissionSelect_Level_C_IsLocked, ReturnValue) == 0x000000, "Member 'W_MissionSelect_Level_C_IsLocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_IsLocked, CallFunc_IsMultiplayer_ReturnValue) == 0x000001, "Member 'W_MissionSelect_Level_C_IsLocked::CallFunc_IsMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_IsLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'W_MissionSelect_Level_C_IsLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_IsLocked, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'W_MissionSelect_Level_C_IsLocked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.SetLevelBackground
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_Level_C_SetLevelBackground final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_SetLevelBackground) == 0x000001, "Wrong alignment on W_MissionSelect_Level_C_SetLevelBackground");
static_assert(sizeof(W_MissionSelect_Level_C_SetLevelBackground) == 0x000001, "Wrong size on W_MissionSelect_Level_C_SetLevelBackground");
static_assert(offsetof(W_MissionSelect_Level_C_SetLevelBackground, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_MissionSelect_Level_C_SetLevelBackground::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.PopulateEntryPoints
// 0x0180 (0x0180 - 0x0000)
struct W_MissionSelect_Level_C_PopulateEntryPoints final 
{
public:
	bool                                          bIsLast;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E39[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEntryPoint                            NewEntryPointData;                                 // 0x0008(0x0078)(Edit, BlueprintVisible)
	class UW_MissionSelect_EntryPoint_C*          NewEntryWidget;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEntryPoint>                    LevelEntryPoints;                                  // 0x0088(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3A[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MissionSelect_EntryPoint_C*          CallFunc_Create_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E3B[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MissionSelect_EntryPoint_C*          CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E3C[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_MissionSelect_EntryPoint_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3E3D[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEntryPoint                            CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0078)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E3E[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_PopulateEntryPoints) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_PopulateEntryPoints");
static_assert(sizeof(W_MissionSelect_Level_C_PopulateEntryPoints) == 0x000180, "Wrong size on W_MissionSelect_Level_C_PopulateEntryPoints");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, bIsLast) == 0x000000, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::bIsLast' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, NewEntryPointData) == 0x000008, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::NewEntryPointData' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, NewEntryWidget) == 0x000080, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::NewEntryWidget' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, LevelEntryPoints) == 0x000088, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::LevelEntryPoints' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, Temp_int_Array_Index_Variable) == 0x000098, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Create_ReturnValue) == 0x0000A0, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A9, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, K2Node_MakeStruct_Margin) == 0x0000BC, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Array_LastIndex_ReturnValue) == 0x0000CC, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, K2Node_CreateDelegate_OutputDelegate) == 0x0000D4, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000170, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_PopulateEntryPoints, CallFunc_Array_Add_ReturnValue) == 0x000178, "Member 'W_MissionSelect_Level_C_PopulateEntryPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.EntryPointSelected
// 0x0010 (0x0010 - 0x0000)
struct W_MissionSelect_Level_C_EntryPointSelected final 
{
public:
	class UW_MissionSelect_EntryPoint_C*          EntryPoint;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_EntryPointSelected) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_EntryPointSelected");
static_assert(sizeof(W_MissionSelect_Level_C_EntryPointSelected) == 0x000010, "Wrong size on W_MissionSelect_Level_C_EntryPointSelected");
static_assert(offsetof(W_MissionSelect_Level_C_EntryPointSelected, EntryPoint) == 0x000000, "Member 'W_MissionSelect_Level_C_EntryPointSelected::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_EntryPointSelected, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_MissionSelect_Level_C_EntryPointSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_Level_C_EntryPointSelected, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'W_MissionSelect_Level_C_EntryPointSelected::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_Level_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionSelect_Level_C_BackPage) == 0x000001, "Wrong alignment on W_MissionSelect_Level_C_BackPage");
static_assert(sizeof(W_MissionSelect_Level_C_BackPage) == 0x000001, "Wrong size on W_MissionSelect_Level_C_BackPage");
static_assert(offsetof(W_MissionSelect_Level_C_BackPage, Handled) == 0x000000, "Member 'W_MissionSelect_Level_C_BackPage::Handled' has a wrong offset!");

// Function W_MissionSelect_Level.W_MissionSelect_Level_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_Level_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_Level_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_MissionSelect_Level_C_GetFocusTarget");
static_assert(sizeof(W_MissionSelect_Level_C_GetFocusTarget) == 0x000008, "Wrong size on W_MissionSelect_Level_C_GetFocusTarget");
static_assert(offsetof(W_MissionSelect_Level_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_MissionSelect_Level_C_GetFocusTarget::Focus' has a wrong offset!");

}

