#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_SBR

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_SBR.ANIMBP_SBR_C
// 0x0A90 (0x0D60 - 0x02D0)
class UANIMBP_SBR_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0308(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0350(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0470(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x04F0(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x05F8(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0618(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x06D8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0720(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0748(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0768(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0870(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0890(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x08B0(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x09B8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B10(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0B38(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0C40(0x0108)()
	bool                                          bIsSemi;                                           // 0x0D48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D59[0x3];                                     // 0x0D49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Mag01Alpha;                                        // 0x0D4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScopeAdjustAlpha;                                  // 0x0D50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_SBR(int32 EntryPoint, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, float K2Node_Event_DeltaTimeX, class AActor* CallFunc_GetOwningActor_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, class USkeletalMeshComponent* CallFunc_GetItemMesh_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_SBR_AnimGraphNode_BlendListByBool_AC0A424D41C0F856351D728CFC5F049D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_SBR_AnimGraphNode_ModifyBone_3C723A0546DF3DF2849A99983EE90417();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_SBR_C">();
	}
	static class UANIMBP_SBR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_SBR_C>();
	}
};
static_assert(alignof(UANIMBP_SBR_C) == 0x000010, "Wrong alignment on UANIMBP_SBR_C");
static_assert(sizeof(UANIMBP_SBR_C) == 0x000D60, "Wrong size on UANIMBP_SBR_C");
static_assert(offsetof(UANIMBP_SBR_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_SBR_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_SBR_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_Slot_1) == 0x000308, "Member 'UANIMBP_SBR_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_BlendListByBool) == 0x000350, "Member 'UANIMBP_SBR_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_SequencePlayer_1) == 0x0003F0, "Member 'UANIMBP_SBR_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_SequencePlayer) == 0x000470, "Member 'UANIMBP_SBR_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ModifyBone_4) == 0x0004F0, "Member 'UANIMBP_SBR_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0005F8, "Member 'UANIMBP_SBR_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_LayeredBoneBlend) == 0x000618, "Member 'UANIMBP_SBR_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_Slot) == 0x0006D8, "Member 'UANIMBP_SBR_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_UseCachedPose_1) == 0x000720, "Member 'UANIMBP_SBR_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000748, "Member 'UANIMBP_SBR_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ModifyBone_3) == 0x000768, "Member 'UANIMBP_SBR_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ComponentToLocalSpace) == 0x000870, "Member 'UANIMBP_SBR_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_LocalToComponentSpace) == 0x000890, "Member 'UANIMBP_SBR_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ModifyBone_2) == 0x0008B0, "Member 'UANIMBP_SBR_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_SaveCachedPose) == 0x0009B8, "Member 'UANIMBP_SBR_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_UseCachedPose) == 0x000B10, "Member 'UANIMBP_SBR_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ModifyBone_1) == 0x000B38, "Member 'UANIMBP_SBR_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, AnimGraphNode_ModifyBone) == 0x000C40, "Member 'UANIMBP_SBR_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, bIsSemi) == 0x000D48, "Member 'UANIMBP_SBR_C::bIsSemi' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, Mag01Alpha) == 0x000D4C, "Member 'UANIMBP_SBR_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_SBR_C, ScopeAdjustAlpha) == 0x000D50, "Member 'UANIMBP_SBR_C::ScopeAdjustAlpha' has a wrong offset!");

}

