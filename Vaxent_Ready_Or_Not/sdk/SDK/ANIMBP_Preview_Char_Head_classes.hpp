#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Preview_Char_Head

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Preview_Char_Head.ANIMBP_Preview_Char_Head_C
// 0x0410 (0x06D0 - 0x02C0)
class UANIMBP_Preview_Char_Head_C final  : public UAnimInstance
{
public:
	uint8                                         Pad_362A[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x02F8(0x0080)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x0378(0x00A0)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0418(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x05F0(0x00C0)()
	class UPoseAsset*                             FaceRomRef;                                        // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          FaceSequenceRef;                                   // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Bodyref;                                           // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ANIMBP_Preview_Char_Head(int32 EntryPoint, class AActor* CallFunc_GetOwningActor_ReturnValue, class APreviewCharacterTemplate_C* K2Node_DynamicCast_AsPreview_Character_Template, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaTimeX);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Preview_Char_Head_C">();
	}
	static class UANIMBP_Preview_Char_Head_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Preview_Char_Head_C>();
	}
};
static_assert(alignof(UANIMBP_Preview_Char_Head_C) == 0x000010, "Wrong alignment on UANIMBP_Preview_Char_Head_C");
static_assert(sizeof(UANIMBP_Preview_Char_Head_C) == 0x0006D0, "Wrong size on UANIMBP_Preview_Char_Head_C");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, UberGraphFrame) == 0x0002C0, "Member 'UANIMBP_Preview_Char_Head_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UANIMBP_Preview_Char_Head_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, AnimGraphNode_SequencePlayer) == 0x0002F8, "Member 'UANIMBP_Preview_Char_Head_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, AnimGraphNode_PoseBlendNode) == 0x000378, "Member 'UANIMBP_Preview_Char_Head_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, AnimGraphNode_CopyPoseFromMesh) == 0x000418, "Member 'UANIMBP_Preview_Char_Head_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, AnimGraphNode_LayeredBoneBlend) == 0x0005F0, "Member 'UANIMBP_Preview_Char_Head_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, FaceRomRef) == 0x0006B0, "Member 'UANIMBP_Preview_Char_Head_C::FaceRomRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, FaceSequenceRef) == 0x0006B8, "Member 'UANIMBP_Preview_Char_Head_C::FaceSequenceRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Preview_Char_Head_C, Bodyref) == 0x0006C0, "Member 'UANIMBP_Preview_Char_Head_C::Bodyref' has a wrong offset!");

}

