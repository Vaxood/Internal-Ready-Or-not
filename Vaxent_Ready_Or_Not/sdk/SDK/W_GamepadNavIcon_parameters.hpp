#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GamepadNavIcon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function W_GamepadNavIcon.W_GamepadNavIcon_C.ExecuteUbergraph_W_GamepadNavIcon
// 0x0028 (0x0028 - 0x0000)
struct W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bUsingGamepad;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D05[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon) == 0x000008, "Wrong alignment on W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon");
static_assert(sizeof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon) == 0x000028, "Wrong size on W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, EntryPoint) == 0x000000, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, Temp_byte_Variable) == 0x000005, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, Temp_bool_Variable) == 0x000006, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, Temp_bool_Variable_1) == 0x000007, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, Temp_bool_Variable_2) == 0x000008, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, Temp_bool_Variable_3) == 0x000009, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, K2Node_ComponentBoundEvent_bUsingGamepad) == 0x00000A, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::K2Node_ComponentBoundEvent_bUsingGamepad' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000010, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000018, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, CallFunc_GetCurrentInputType_ReturnValue) == 0x000020, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon, K2Node_Select_Default) == 0x000021, "Member 'W_GamepadNavIcon_C_ExecuteUbergraph_W_GamepadNavIcon::K2Node_Select_Default' has a wrong offset!");

// Function W_GamepadNavIcon.W_GamepadNavIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_GamepadNavIcon_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GamepadNavIcon_C_PreConstruct) == 0x000001, "Wrong alignment on W_GamepadNavIcon_C_PreConstruct");
static_assert(sizeof(W_GamepadNavIcon_C_PreConstruct) == 0x000001, "Wrong size on W_GamepadNavIcon_C_PreConstruct");
static_assert(offsetof(W_GamepadNavIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_GamepadNavIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_GamepadNavIcon.W_GamepadNavIcon_C.BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature final 
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong alignment on W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature");
static_assert(sizeof(W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong size on W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature");
static_assert(offsetof(W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature, bUsingGamepad) == 0x000000, "Member 'W_GamepadNavIcon_C_BndEvt__W_GamepadNavIcon_IconWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature::bUsingGamepad' has a wrong offset!");

// Function W_GamepadNavIcon.W_GamepadNavIcon_C.InputMethodChanged
// 0x0005 (0x0005 - 0x0000)
struct W_GamepadNavIcon_C_InputMethodChanged final 
{
public:
	bool                                          Using_Gamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GamepadNavIcon_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_GamepadNavIcon_C_InputMethodChanged");
static_assert(sizeof(W_GamepadNavIcon_C_InputMethodChanged) == 0x000005, "Wrong size on W_GamepadNavIcon_C_InputMethodChanged");
static_assert(offsetof(W_GamepadNavIcon_C_InputMethodChanged, Using_Gamepad) == 0x000000, "Member 'W_GamepadNavIcon_C_InputMethodChanged::Using_Gamepad' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_InputMethodChanged, Temp_bool_Variable) == 0x000001, "Member 'W_GamepadNavIcon_C_InputMethodChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_InputMethodChanged, Temp_byte_Variable) == 0x000002, "Member 'W_GamepadNavIcon_C_InputMethodChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_InputMethodChanged, Temp_byte_Variable_1) == 0x000003, "Member 'W_GamepadNavIcon_C_InputMethodChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GamepadNavIcon_C_InputMethodChanged, K2Node_Select_Default) == 0x000004, "Member 'W_GamepadNavIcon_C_InputMethodChanged::K2Node_Select_Default' has a wrong offset!");

}

