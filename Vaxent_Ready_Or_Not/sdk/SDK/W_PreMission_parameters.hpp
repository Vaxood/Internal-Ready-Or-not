#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission

#include "Basic.hpp"

#include "St_HotkeySettings_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "PreMissionHotkeyGroups_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "AttachmentCategory_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission.W_PreMission_C.ExecuteUbergraph_W_PreMission
// 0x0470 (0x0470 - 0x0000)
struct W_PreMission_C_ExecuteUbergraph_W_PreMission final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AD[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0090(0x0018)()
	bool                                          Temp_bool_Variable_5;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AF[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00C8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	class UWidget*                                K2Node_CustomEvent_WidgetToFocus;                  // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERONBuildConfiguration                        CallFunc_GetBuildConfiguration_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B0[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0104(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERONBuildConfiguration                        CallFunc_GetBuildConfiguration_ReturnValue_1;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDebugInfo_ReturnValue;              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B1[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_StandardButton_C*                    K2Node_ComponentBoundEvent_CallingButton_1;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetCurrentlyFocusedWidget_Return_Value;   // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_6;                              // 0x0160(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B2[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State;    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B3[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B4[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x01B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B5[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E8(0x0018)()
	class UWidget*                                CallFunc_GetCurrentlyFocusedWidget_Return_Value_1; // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllowTeamSwapping_Return_Value;           // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllowTeamSwapping_Return_Value_1;         // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B6[0x5];                                     // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_3;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B7[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State_1;    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B8[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State_1;  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B9[0x6];                                     // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State_2;    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BA[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreMissionBriefingBeforeLoadout_ReturnValue; // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BB[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State_2;  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BC[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_4;                           // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BD[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_StandardButton_C*                    K2Node_ComponentBoundEvent_CallingButton;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_UI_PlanningMap_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x02E0(0x0010)(ReferenceParm)
	class FText                                   Temp_text_Variable_7;                              // 0x02F0(0x0018)()
	class ABP_UI_PlanningMap_C*                   CallFunc_Array_Get_Item;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BE[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Pressed;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38BF[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_ComponentBoundEvent_CursorPos;              // 0x0334(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_ZoomValue;              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_5;                           // 0x0340(0x0018)()
	class FText                                   K2Node_Select_Default_6;                           // 0x0358(0x0018)()
	bool                                          Temp_bool_Variable_8;                              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C0[0x6];                                     // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_7;                           // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State_3;    // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C1[0x5];                                     // 0x0393(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x0398(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C2[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C3[0x4];                                     // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutCategory_C*                   K2Node_DynamicCast_AsW_Loadout_Category;           // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C4[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x03E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C5[0x2];                                     // 0x03FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameMode*                    K2Node_DynamicCast_AsReady_or_Not_Game_Mode;       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesLevelRequireGeneration_ReturnValue;   // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C6[0x2];                                     // 0x0412(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C7[0x3];                                     // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C8[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_8;                           // 0x0430(0x0018)()
	class UW_LoadoutCategory_C*                   K2Node_DynamicCast_AsW_Loadout_Category_1;         // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C9[0x7];                                     // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_9;                           // 0x0458(0x0018)()
};
static_assert(alignof(W_PreMission_C_ExecuteUbergraph_W_PreMission) == 0x000008, "Wrong alignment on W_PreMission_C_ExecuteUbergraph_W_PreMission");
static_assert(sizeof(W_PreMission_C_ExecuteUbergraph_W_PreMission) == 0x000470, "Wrong size on W_PreMission_C_ExecuteUbergraph_W_PreMission");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, EntryPoint) == 0x000000, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable) == 0x000004, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_string_Variable) == 0x000008, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_string_Variable_1) == 0x000018, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_1) == 0x000038, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_2) == 0x000039, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_3) == 0x00003A, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable) == 0x000040, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_1) == 0x000058, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_4) == 0x000070, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_2) == 0x000078, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_3) == 0x000090, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_5) == 0x0000A8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_4) == 0x0000B0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_5) == 0x0000C8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default) == 0x0000E0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_CustomEvent_WidgetToFocus) == 0x0000F8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_CustomEvent_WidgetToFocus' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetBuildConfiguration_ReturnValue) == 0x000100, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetBuildConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_SwitchEnum_CmpSuccess) == 0x000101, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Event_MyGeometry) == 0x000104, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Event_InDeltaTime) == 0x00013C, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetBuildConfiguration_ReturnValue_1) == 0x000140, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetBuildConfiguration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_SwitchEnum_CmpSuccess_1) == 0x000141, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_UpdateDebugInfo_ReturnValue) == 0x000142, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_UpdateDebugInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Less_IntInt_ReturnValue) == 0x000143, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_CallingButton_1) == 0x000150, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_CallingButton_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetCurrentlyFocusedWidget_Return_Value) == 0x000158, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetCurrentlyFocusedWidget_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_6) == 0x000160, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetOwningPlayer_ReturnValue) == 0x000178, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000180, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Player_State) == 0x000188, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Player_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x000194, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000198, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_1) == 0x0001A0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetAllChildren_ReturnValue) == 0x0001B0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Concat_StrStr_ReturnValue) == 0x0001C0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001D8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetCurrentlyFocusedWidget_Return_Value_1) == 0x000200, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetCurrentlyFocusedWidget_Return_Value_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000208, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_BooleanAND_ReturnValue) == 0x000210, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_AllowTeamSwapping_Return_Value) == 0x000211, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_AllowTeamSwapping_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_AllowTeamSwapping_Return_Value_1) == 0x000212, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_AllowTeamSwapping_Return_Value_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_2) == 0x000218, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_PlayAnimation_ReturnValue) == 0x000220, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetGameState_ReturnValue) == 0x000228, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_3) == 0x000230, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000238, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_1) == 0x000240, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_PlayAnimation_ReturnValue_1) == 0x000248, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetGameState_ReturnValue_1) == 0x000250, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Game_State_1) == 0x000258, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Game_State_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000268, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Player_State_1) == 0x000270, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Player_State_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_3) == 0x000278, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Not_PreBool_ReturnValue) == 0x000279, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetGameState_ReturnValue_2) == 0x000280, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Game_State_2) == 0x000288, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Game_State_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_4) == 0x000290, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetPlayerController_ReturnValue) == 0x000298, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002A0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetPlayerController_ReturnValue_2) == 0x0002A8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_IsPreMissionBriefingBeforeLoadout_ReturnValue) == 0x0002B0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_IsPreMissionBriefingBeforeLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Player_State_2) == 0x0002B8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Player_State_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_5) == 0x0002C0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002C1, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_BooleanAND_ReturnValue_1) == 0x0002C2, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Event_IsDesignTime) == 0x0002C3, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_6) == 0x0002C4, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_4) == 0x0002C8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_IsValid_ReturnValue) == 0x0002D0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_7) == 0x0002D1, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_CallingButton) == 0x0002D8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_CallingButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetAllActorsOfClass_OutActors) == 0x0002E0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_7) == 0x0002F0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Array_Get_Item) == 0x000308, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000310, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_Button_2) == 0x000318, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_Button_1) == 0x000320, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_Button) == 0x000328, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_Pressed) == 0x000330, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_Pressed' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_CursorPos) == 0x000334, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_CursorPos' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_ComponentBoundEvent_ZoomValue) == 0x00033C, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_ComponentBoundEvent_ZoomValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_5) == 0x000340, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_6) == 0x000358, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_8) == 0x000370, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Not_PreBool_ReturnValue_2) == 0x000371, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_7) == 0x000378, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetGameState_ReturnValue_3) == 0x000380, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Game_State_3) == 0x000388, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Game_State_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_6) == 0x000390, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_IsValid_ReturnValue_1) == 0x000391, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_IsLevelVisible_ReturnValue) == 0x000392, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_text_Variable_8) == 0x000398, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_IsValid_ReturnValue_2) == 0x0003B0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetPlayerController_ReturnValue_3) == 0x0003B8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_int_Array_Index_Variable) == 0x0003C0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Array_Get_Item_1) == 0x0003C8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsW_Loadout_Category) == 0x0003D0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsW_Loadout_Category' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_7) == 0x0003D8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetPlayerController_ReturnValue_4) == 0x0003E0, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetAllChildren_ReturnValue_1) == 0x0003E8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Array_Length_ReturnValue_1) == 0x0003F8, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003FC, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_IsInLobby_ReturnValue) == 0x0003FD, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_GetGameMode_ReturnValue) == 0x000400, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsReady_or_Not_Game_Mode) == 0x000408, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsReady_or_Not_Game_Mode' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_8) == 0x000410, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_DoesLevelRequireGeneration_ReturnValue) == 0x000411, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_DoesLevelRequireGeneration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_int_Loop_Counter_Variable_1) == 0x000414, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Less_IntInt_ReturnValue_2) == 0x000418, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Add_IntInt_ReturnValue_1) == 0x00041C, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_bool_Variable_9) == 0x000420, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, Temp_int_Array_Index_Variable_1) == 0x000424, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, CallFunc_Array_Get_Item_2) == 0x000428, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_8) == 0x000430, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_AsW_Loadout_Category_1) == 0x000448, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_AsW_Loadout_Category_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_DynamicCast_bSuccess_9) == 0x000450, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExecuteUbergraph_W_PreMission, K2Node_Select_Default_9) == 0x000458, "Member 'W_PreMission_C_ExecuteUbergraph_W_PreMission::K2Node_Select_Default_9' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature final 
{
public:
	float                                         ZoomValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature) == 0x000004, "Wrong alignment on W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature) == 0x000004, "Wrong size on W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature, ZoomValue) == 0x000000, "Member 'W_PreMission_C_BndEvt__PlanningMap_K2Node_ComponentBoundEvent_17_OnZoomUpdated__DelegateSignature::ZoomValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature final 
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CursorPos;                                         // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature) == 0x000004, "Wrong alignment on W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature) == 0x00000C, "Wrong size on W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature, Pressed) == 0x000000, "Member 'W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature::Pressed' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature, CursorPos) == 0x000004, "Member 'W_PreMission_C_BndEvt__W_PlanningMap_K2Node_ComponentBoundEvent_12_PanMap__DelegateSignature::CursorPos' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_C_BndEvt__btn_Briefing_K2Node_ComponentBoundEvent_16_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_C_BndEvt__btn_Map_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_C_BndEvt__btn_Loadout_K2Node_ComponentBoundEvent_13_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final 
{
public:
	class UW_StandardButton_C*                    CallingButton;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, CallingButton) == 0x000000, "Member 'W_PreMission_C_BndEvt__TopMenu_ReadyUpButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::CallingButton' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_PreConstruct) == 0x000001, "Wrong alignment on W_PreMission_C_PreConstruct");
static_assert(sizeof(W_PreMission_C_PreConstruct) == 0x000001, "Wrong size on W_PreMission_C_PreConstruct");
static_assert(offsetof(W_PreMission_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PreMission_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature final 
{
public:
	class UW_StandardButton_C*                    CallingButton;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature, CallingButton) == 0x000000, "Member 'W_PreMission_C_BndEvt__SwapTeams_Button_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature::CallingButton' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PreMission_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Tick) == 0x000004, "Wrong alignment on W_PreMission_C_Tick");
static_assert(sizeof(W_PreMission_C_Tick) == 0x00003C, "Wrong size on W_PreMission_C_Tick");
static_assert(offsetof(W_PreMission_C_Tick, MyGeometry) == 0x000000, "Member 'W_PreMission_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PreMission_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.FocusOnWidget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_FocusOnWidget final 
{
public:
	class UWidget*                                WidgetToFocus;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_FocusOnWidget) == 0x000008, "Wrong alignment on W_PreMission_C_FocusOnWidget");
static_assert(sizeof(W_PreMission_C_FocusOnWidget) == 0x000008, "Wrong size on W_PreMission_C_FocusOnWidget");
static_assert(offsetof(W_PreMission_C_FocusOnWidget, WidgetToFocus) == 0x000000, "Member 'W_PreMission_C_FocusOnWidget::WidgetToFocus' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ModeName_Text
// 0x0048 (0x0048 - 0x0000)
struct W_PreMission_C_Get_ModeName_Text final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CB[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetModeText_ReturnValue;                  // 0x0030(0x0018)()
};
static_assert(alignof(W_PreMission_C_Get_ModeName_Text) == 0x000008, "Wrong alignment on W_PreMission_C_Get_ModeName_Text");
static_assert(sizeof(W_PreMission_C_Get_ModeName_Text) == 0x000048, "Wrong size on W_PreMission_C_Get_ModeName_Text");
static_assert(offsetof(W_PreMission_C_Get_ModeName_Text, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ModeName_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ModeName_Text, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_PreMission_C_Get_ModeName_Text::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ModeName_Text, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_PreMission_C_Get_ModeName_Text::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ModeName_Text, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_PreMission_C_Get_ModeName_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ModeName_Text, CallFunc_GetModeText_ReturnValue) == 0x000030, "Member 'W_PreMission_C_Get_ModeName_Text::CallFunc_GetModeText_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_MapName_Text
// 0x07D0 (0x07D0 - 0x0000)
struct W_PreMission_C_Get_MapName_Text final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  CallFunc_GetMapDetailsFromName_ReturnValue;        // 0x0028(0x0788)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x07B0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_Get_MapName_Text) == 0x000008, "Wrong alignment on W_PreMission_C_Get_MapName_Text");
static_assert(sizeof(W_PreMission_C_Get_MapName_Text) == 0x0007D0, "Wrong size on W_PreMission_C_Get_MapName_Text");
static_assert(offsetof(W_PreMission_C_Get_MapName_Text, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_MapName_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MapName_Text, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000018, "Member 'W_PreMission_C_Get_MapName_Text::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MapName_Text, CallFunc_GetMapDetailsFromName_ReturnValue) == 0x000028, "Member 'W_PreMission_C_Get_MapName_Text::CallFunc_GetMapDetailsFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MapName_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x0007B0, "Member 'W_PreMission_C_Get_MapName_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MapName_Text, CallFunc_TextIsEmpty_ReturnValue) == 0x0007C8, "Member 'W_PreMission_C_Get_MapName_Text::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ServerName_Text
// 0x0080 (0x0080 - 0x0000)
struct W_PreMission_C_Get_ServerName_Text final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetServerNameFromCurrentSession_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
};
static_assert(alignof(W_PreMission_C_Get_ServerName_Text) == 0x000008, "Wrong alignment on W_PreMission_C_Get_ServerName_Text");
static_assert(sizeof(W_PreMission_C_Get_ServerName_Text) == 0x000080, "Wrong size on W_PreMission_C_Get_ServerName_Text");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ServerName_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, Temp_bool_Variable) == 0x000018, "Member 'W_PreMission_C_Get_ServerName_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, Temp_string_Variable) == 0x000020, "Member 'W_PreMission_C_Get_ServerName_Text::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, CallFunc_GetServerNameFromCurrentSession_ReturnValue) == 0x000030, "Member 'W_PreMission_C_Get_ServerName_Text::CallFunc_GetServerNameFromCurrentSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000040, "Member 'W_PreMission_C_Get_ServerName_Text::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'W_PreMission_C_Get_ServerName_Text::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, K2Node_Select_Default) == 0x000058, "Member 'W_PreMission_C_Get_ServerName_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'W_PreMission_C_Get_ServerName_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ServerName_Text_Visibility
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_C_Get_ServerName_Text_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_ServerName_Text_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_ServerName_Text_Visibility");
static_assert(sizeof(W_PreMission_C_Get_ServerName_Text_Visibility) == 0x000001, "Wrong size on W_PreMission_C_Get_ServerName_Text_Visibility");
static_assert(offsetof(W_PreMission_C_Get_ServerName_Text_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ServerName_Text_Visibility::ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_MLOReadyCountText
// 0x00E0 (0x00E0 - 0x0000)
struct W_PreMission_C_Get_MLOReadyCountText final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         TotalReady;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38CE[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38CF[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D0[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D1[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D2[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D3[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D4[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
};
static_assert(alignof(W_PreMission_C_Get_MLOReadyCountText) == 0x000008, "Wrong alignment on W_PreMission_C_Get_MLOReadyCountText");
static_assert(sizeof(W_PreMission_C_Get_MLOReadyCountText) == 0x0000E0, "Wrong size on W_PreMission_C_Get_MLOReadyCountText");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_MLOReadyCountText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, TotalReady) == 0x000018, "Member 'W_PreMission_C_Get_MLOReadyCountText::TotalReady' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'W_PreMission_C_Get_MLOReadyCountText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_PreMission_C_Get_MLOReadyCountText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, Temp_int_Variable) == 0x000028, "Member 'W_PreMission_C_Get_MLOReadyCountText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000060, "Member 'W_PreMission_C_Get_MLOReadyCountText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_PreMission_C_Get_MLOReadyCountText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x000070, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MLOReadyCountText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'W_PreMission_C_Get_MLOReadyCountText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_MLO_ReadyCount_Container_Visibility
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility) == 0x000001, "Wrong size on W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_MLO_ReadyCount_Container_Visibility::ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_SWAT_ReadyCount_Container_Visibility
// 0x0038 (0x0038 - 0x0000)
struct W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility) == 0x000008, "Wrong alignment on W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility) == 0x000038, "Wrong size on W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x000020, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility, K2Node_Select_Default) == 0x000035, "Member 'W_PreMission_C_Get_SWAT_ReadyCount_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_SWATReadyCount_Text
// 0x00F8 (0x00F8 - 0x0000)
struct W_PreMission_C_Get_SWATReadyCount_Text final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         TotalReady;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasEveryoneFinishedLoading_OutTotal;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasEveryoneFinishedLoading_OutLoading;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasEveryoneFinishedLoading_OutLoaded;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEveryoneFinishedLoading_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D8[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38DA[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DB[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_Get_SWATReadyCount_Text) == 0x000008, "Wrong alignment on W_PreMission_C_Get_SWATReadyCount_Text");
static_assert(sizeof(W_PreMission_C_Get_SWATReadyCount_Text) == 0x0000F8, "Wrong size on W_PreMission_C_Get_SWATReadyCount_Text");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, TotalReady) == 0x000018, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::TotalReady' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, Temp_int_Variable) == 0x000028, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_HasEveryoneFinishedLoading_OutTotal) == 0x00002C, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_HasEveryoneFinishedLoading_OutTotal' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_HasEveryoneFinishedLoading_OutLoading) == 0x000030, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_HasEveryoneFinishedLoading_OutLoading' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_HasEveryoneFinishedLoading_OutLoaded) == 0x000034, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_HasEveryoneFinishedLoading_OutLoaded' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_HasEveryoneFinishedLoading_ReturnValue) == 0x000038, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_HasEveryoneFinishedLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_GetGameState_ReturnValue) == 0x0000B0, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x0000B8, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x0000C8, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SWATReadyCount_Text, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'W_PreMission_C_Get_SWATReadyCount_Text::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ReadyCount_Container_Visibility
// 0x000B (0x000B - 0x0000)
struct W_PreMission_C_Get_ReadyCount_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyoneOnMLOTeam_Return_Value;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyoneOnSWATTeam_Return_Value;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_ReadyCount_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_ReadyCount_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_ReadyCount_Container_Visibility) == 0x00000B, "Wrong size on W_PreMission_C_Get_ReadyCount_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, CallFunc_IsAnyoneOnMLOTeam_Return_Value) == 0x000004, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::CallFunc_IsAnyoneOnMLOTeam_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, CallFunc_IsAnyoneOnSWATTeam_Return_Value) == 0x000005, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::CallFunc_IsAnyoneOnSWATTeam_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility, K2Node_Select_Default) == 0x00000A, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_MetaGame_Spacer_1_Visibility
// 0x000D (0x000D - 0x0000)
struct W_PreMission_C_Get_MetaGame_Spacer_1_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyoneOnMLOTeam_Return_Value;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyoneOnSWATTeam_Return_Value;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_MetaGame_Spacer_1_Visibility");
static_assert(sizeof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility) == 0x00000D, "Wrong size on W_PreMission_C_Get_MetaGame_Spacer_1_Visibility");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_IsAnyoneOnMLOTeam_Return_Value) == 0x000004, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_IsAnyoneOnMLOTeam_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_GetVisibility_ReturnValue) == 0x000005, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_IsAnyoneOnSWATTeam_Return_Value) == 0x000008, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_IsAnyoneOnSWATTeam_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGame_Spacer_1_Visibility, K2Node_Select_Default) == 0x00000C, "Member 'W_PreMission_C_Get_MetaGame_Spacer_1_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_GameStartTimeRemaining_Text
// 0x0058 (0x0058 - 0x0000)
struct W_PreMission_C_Get_GameStartTimeRemaining_Text final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(W_PreMission_C_Get_GameStartTimeRemaining_Text) == 0x000008, "Wrong alignment on W_PreMission_C_Get_GameStartTimeRemaining_Text");
static_assert(sizeof(W_PreMission_C_Get_GameStartTimeRemaining_Text) == 0x000058, "Wrong size on W_PreMission_C_Get_GameStartTimeRemaining_Text");
static_assert(offsetof(W_PreMission_C_Get_GameStartTimeRemaining_Text, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_GameStartTimeRemaining_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_GameStartTimeRemaining_Text, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_PreMission_C_Get_GameStartTimeRemaining_Text::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_GameStartTimeRemaining_Text, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_PreMission_C_Get_GameStartTimeRemaining_Text::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_GameStartTimeRemaining_Text, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_PreMission_C_Get_GameStartTimeRemaining_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_GameStartTimeRemaining_Text, CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue) == 0x000030, "Member 'W_PreMission_C_Get_GameStartTimeRemaining_Text::CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_GameStartTimeRemaining_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'W_PreMission_C_Get_GameStartTimeRemaining_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnKeyDown
// 0x05B0 (0x05B0 - 0x0000)
struct W_PreMission_C_OnKeyDown final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	bool                                          CallFunc_HandleMenuWideMultiInput__Down__Return_Value; // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleMenuWideInput_Return_Value;         // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DD[0x6];                                     // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DE[0x5];                                     // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_1;                     // 0x0208(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DF[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_2;                     // 0x0228(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_5;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_6;          // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_7;          // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E0[0x5];                                     // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_3;                     // 0x0248(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_8;          // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_9;          // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_10;         // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_11;         // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E1[0x2];                                     // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_4;                     // 0x0268(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_12;         // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_13;         // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_14;         // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_15;         // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E2[0x1];                                     // 0x0287(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_5;                     // 0x0288(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_16;         // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_17;         // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_18;         // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_19;         // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E3[0x1];                                     // 0x02A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_6;                     // 0x02A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_20;         // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_21;         // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_22;         // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_23;         // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x02C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02C8(0x00B8)()
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUIHidden_Return_Value;                  // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E4[0x5];                                     // 0x0383(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0388(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x0440(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_3;                    // 0x04F8(0x00B8)()
};
static_assert(alignof(W_PreMission_C_OnKeyDown) == 0x000008, "Wrong alignment on W_PreMission_C_OnKeyDown");
static_assert(sizeof(W_PreMission_C_OnKeyDown) == 0x0005B0, "Wrong size on W_PreMission_C_OnKeyDown");
static_assert(offsetof(W_PreMission_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'W_PreMission_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'W_PreMission_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'W_PreMission_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'W_PreMission_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_HandleMenuWideMultiInput__Down__Return_Value) == 0x0001E0, "Member 'W_PreMission_C_OnKeyDown::CallFunc_HandleMenuWideMultiInput__Down__Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_HandleMenuWideInput_Return_Value) == 0x0001E1, "Member 'W_PreMission_C_OnKeyDown::CallFunc_HandleMenuWideInput_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000201, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x000202, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue_1) == 0x000208, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x000220, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x000221, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_1) == 0x000222, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x000223, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_2) == 0x000224, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue_2) == 0x000228, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_5) == 0x000240, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_6) == 0x000241, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_7) == 0x000242, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue_3) == 0x000248, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_3) == 0x000260, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_8) == 0x000261, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_4) == 0x000262, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_9) == 0x000263, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_10) == 0x000264, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_11) == 0x000265, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue_4) == 0x000268, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_5) == 0x000280, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_12) == 0x000281, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_6) == 0x000282, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_13) == 0x000283, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_7) == 0x000284, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_14) == 0x000285, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_15) == 0x000286, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue_5) == 0x000288, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_8) == 0x0002A0, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_16) == 0x0002A1, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_9) == 0x0002A2, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_17) == 0x0002A3, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_10) == 0x0002A4, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_18) == 0x0002A5, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_19) == 0x0002A6, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_GetKey_ReturnValue_6) == 0x0002A8, "Member 'W_PreMission_C_OnKeyDown::CallFunc_GetKey_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_11) == 0x0002C0, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_20) == 0x0002C1, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_12) == 0x0002C2, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_21) == 0x0002C3, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_13) == 0x0002C4, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_22) == 0x0002C5, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_23) == 0x0002C6, "Member 'W_PreMission_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_14) == 0x0002C7, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0002C8, "Member 'W_PreMission_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_15) == 0x000380, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_BooleanOR_ReturnValue_16) == 0x000381, "Member 'W_PreMission_C_OnKeyDown::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_IsUIHidden_Return_Value) == 0x000382, "Member 'W_PreMission_C_OnKeyDown::CallFunc_IsUIHidden_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_Handled_ReturnValue_1) == 0x000388, "Member 'W_PreMission_C_OnKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_Handled_ReturnValue_2) == 0x000440, "Member 'W_PreMission_C_OnKeyDown::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyDown, CallFunc_Handled_ReturnValue_3) == 0x0004F8, "Member 'W_PreMission_C_OnKeyDown::CallFunc_Handled_ReturnValue_3' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_BackButton_Container_Visibility
// 0x0006 (0x0006 - 0x0000)
struct W_PreMission_C_Get_BackButton_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_BackButton_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_BackButton_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_BackButton_Container_Visibility) == 0x000006, "Wrong size on W_PreMission_C_Get_BackButton_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_BackButton_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_BackButton_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_BackButton_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_BackButton_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_BackButton_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_BackButton_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_BackButton_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_BackButton_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_BackButton_Container_Visibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'W_PreMission_C_Get_BackButton_Container_Visibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_BackButton_Container_Visibility, K2Node_Select_Default) == 0x000005, "Member 'W_PreMission_C_Get_BackButton_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_KeyboardControls_Button_Visibility
// 0x000D (0x000D - 0x0000)
struct W_PreMission_C_Get_KeyboardControls_Button_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_KeyboardControls_Button_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_KeyboardControls_Button_Visibility");
static_assert(sizeof(W_PreMission_C_Get_KeyboardControls_Button_Visibility) == 0x00000D, "Wrong size on W_PreMission_C_Get_KeyboardControls_Button_Visibility");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, Temp_bool_Variable_1) == 0x000004, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, Temp_byte_Variable_2) == 0x000005, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, Temp_byte_Variable_3) == 0x000006, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000007, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, K2Node_Select_Default) == 0x00000A, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_KeyboardControls_Button_Visibility, K2Node_Select_Default_1) == 0x00000C, "Member 'W_PreMission_C_Get_KeyboardControls_Button_Visibility::K2Node_Select_Default_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_NavigationKeyboardControls_Container_Visibility
// 0x0005 (0x0005 - 0x0000)
struct W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility) == 0x000005, "Wrong size on W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility, K2Node_Select_Default) == 0x000004, "Member 'W_PreMission_C_Get_NavigationKeyboardControls_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_NavigationMouseControls_Container_Visibility
// 0x0005 (0x0005 - 0x0000)
struct W_PreMission_C_Get_NavigationMouseControls_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_NavigationMouseControls_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility) == 0x000005, "Wrong size on W_PreMission_C_Get_NavigationMouseControls_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_NavigationMouseControls_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_NavigationMouseControls_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_NavigationMouseControls_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_NavigationMouseControls_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NavigationMouseControls_Container_Visibility, K2Node_Select_Default) == 0x000004, "Member 'W_PreMission_C_Get_NavigationMouseControls_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ReadyUp_Controls_Container_Visibility
// 0x0007 (0x0007 - 0x0000)
struct W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility) == 0x000007, "Wrong size on W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility, K2Node_Select_Default) == 0x000006, "Member 'W_PreMission_C_Get_ReadyUp_Controls_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ReadyUpControls_BackButton_Visibility
// 0x0005 (0x0005 - 0x0000)
struct W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility");
static_assert(sizeof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility) == 0x000005, "Wrong size on W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility, K2Node_Select_Default) == 0x000004, "Member 'W_PreMission_C_Get_ReadyUpControls_BackButton_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.NextRow
// 0x0024 (0x0024 - 0x0000)
struct W_PreMission_C_NextRow final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllowTeamSwapping_Return_Value;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E6[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_NextRow) == 0x000004, "Wrong alignment on W_PreMission_C_NextRow");
static_assert(sizeof(W_PreMission_C_NextRow) == 0x000024, "Wrong size on W_PreMission_C_NextRow");
static_assert(offsetof(W_PreMission_C_NextRow, Temp_bool_Variable) == 0x000000, "Member 'W_PreMission_C_NextRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, Temp_int_Variable) == 0x000004, "Member 'W_PreMission_C_NextRow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, Temp_int_Variable_1) == 0x000008, "Member 'W_PreMission_C_NextRow::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_AllowTeamSwapping_Return_Value) == 0x00000C, "Member 'W_PreMission_C_NextRow::CallFunc_AllowTeamSwapping_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'W_PreMission_C_NextRow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, K2Node_SwitchInteger_CmpSuccess) == 0x00000E, "Member 'W_PreMission_C_NextRow::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00000F, "Member 'W_PreMission_C_NextRow::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'W_PreMission_C_NextRow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'W_PreMission_C_NextRow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_BooleanOR_ReturnValue_2) == 0x000012, "Member 'W_PreMission_C_NextRow::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_PreMission_C_NextRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, K2Node_Select_Default) == 0x000018, "Member 'W_PreMission_C_NextRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_Clamp_ReturnValue) == 0x00001C, "Member 'W_PreMission_C_NextRow::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextRow, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'W_PreMission_C_NextRow::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.NextColumn
// 0x000C (0x000C - 0x0000)
struct W_PreMission_C_NextColumn final 
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_NextColumn) == 0x000004, "Wrong alignment on W_PreMission_C_NextColumn");
static_assert(sizeof(W_PreMission_C_NextColumn) == 0x00000C, "Wrong size on W_PreMission_C_NextColumn");
static_assert(offsetof(W_PreMission_C_NextColumn, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'W_PreMission_C_NextColumn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextColumn, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_PreMission_C_NextColumn::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_NextColumn, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'W_PreMission_C_NextColumn::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.PreviousRow
// 0x0034 (0x0034 - 0x0000)
struct W_PreMission_C_PreviousRow final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E8[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_PreviousRow) == 0x000004, "Wrong alignment on W_PreMission_C_PreviousRow");
static_assert(sizeof(W_PreMission_C_PreviousRow) == 0x000034, "Wrong size on W_PreMission_C_PreviousRow");
static_assert(offsetof(W_PreMission_C_PreviousRow, Temp_bool_Variable) == 0x000000, "Member 'W_PreMission_C_PreviousRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, Temp_int_Variable) == 0x000004, "Member 'W_PreMission_C_PreviousRow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, Temp_int_Variable_1) == 0x000008, "Member 'W_PreMission_C_PreviousRow::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, Temp_bool_Variable_1) == 0x00000C, "Member 'W_PreMission_C_PreviousRow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, Temp_int_Variable_2) == 0x000010, "Member 'W_PreMission_C_PreviousRow::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, Temp_int_Variable_3) == 0x000014, "Member 'W_PreMission_C_PreviousRow::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_C_PreviousRow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, K2Node_SwitchInteger_CmpSuccess) == 0x000019, "Member 'W_PreMission_C_PreviousRow::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00001A, "Member 'W_PreMission_C_PreviousRow::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'W_PreMission_C_PreviousRow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'W_PreMission_C_PreviousRow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, K2Node_Select_Default) == 0x000020, "Member 'W_PreMission_C_PreviousRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, K2Node_Select_Default_1) == 0x000024, "Member 'W_PreMission_C_PreviousRow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'W_PreMission_C_PreviousRow::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_Clamp_ReturnValue) == 0x00002C, "Member 'W_PreMission_C_PreviousRow::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000030, "Member 'W_PreMission_C_PreviousRow::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000031, "Member 'W_PreMission_C_PreviousRow::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousRow, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'W_PreMission_C_PreviousRow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.PreviousColumn
// 0x001C (0x001C - 0x0000)
struct W_PreMission_C_PreviousColumn final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_PreviousColumn) == 0x000004, "Wrong alignment on W_PreMission_C_PreviousColumn");
static_assert(sizeof(W_PreMission_C_PreviousColumn) == 0x00001C, "Wrong size on W_PreMission_C_PreviousColumn");
static_assert(offsetof(W_PreMission_C_PreviousColumn, Temp_bool_Variable) == 0x000000, "Member 'W_PreMission_C_PreviousColumn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, Temp_int_Variable) == 0x000004, "Member 'W_PreMission_C_PreviousColumn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, Temp_int_Variable_1) == 0x000008, "Member 'W_PreMission_C_PreviousColumn::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, K2Node_Select_Default) == 0x00000C, "Member 'W_PreMission_C_PreviousColumn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'W_PreMission_C_PreviousColumn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'W_PreMission_C_PreviousColumn::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_C_PreviousColumn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'W_PreMission_C_PreviousColumn::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_PreviousColumn, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'W_PreMission_C_PreviousColumn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.HoverUIElement
// 0x0002 (0x0002 - 0x0000)
struct W_PreMission_C_HoverUIElement final 
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_HoverUIElement) == 0x000001, "Wrong alignment on W_PreMission_C_HoverUIElement");
static_assert(sizeof(W_PreMission_C_HoverUIElement) == 0x000002, "Wrong size on W_PreMission_C_HoverUIElement");
static_assert(offsetof(W_PreMission_C_HoverUIElement, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'W_PreMission_C_HoverUIElement::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HoverUIElement, K2Node_SwitchInteger_CmpSuccess_1) == 0x000001, "Member 'W_PreMission_C_HoverUIElement::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UnhoverUIElement
// 0x0002 (0x0002 - 0x0000)
struct W_PreMission_C_UnhoverUIElement final 
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_UnhoverUIElement) == 0x000001, "Wrong alignment on W_PreMission_C_UnhoverUIElement");
static_assert(sizeof(W_PreMission_C_UnhoverUIElement) == 0x000002, "Wrong size on W_PreMission_C_UnhoverUIElement");
static_assert(offsetof(W_PreMission_C_UnhoverUIElement, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'W_PreMission_C_UnhoverUIElement::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UnhoverUIElement, K2Node_SwitchInteger_CmpSuccess_1) == 0x000001, "Member 'W_PreMission_C_UnhoverUIElement::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.SelectUIElement
// 0x0002 (0x0002 - 0x0000)
struct W_PreMission_C_SelectUIElement final 
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_SelectUIElement) == 0x000001, "Wrong alignment on W_PreMission_C_SelectUIElement");
static_assert(sizeof(W_PreMission_C_SelectUIElement) == 0x000002, "Wrong size on W_PreMission_C_SelectUIElement");
static_assert(offsetof(W_PreMission_C_SelectUIElement, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'W_PreMission_C_SelectUIElement::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SelectUIElement, K2Node_SwitchInteger_CmpSuccess_1) == 0x000001, "Member 'W_PreMission_C_SelectUIElement::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UnselectUIElement
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_C_UnselectUIElement final 
{
public:
	bool                                          CallFunc_CanUnselect_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUIHidden_Return_Value;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_UnselectUIElement) == 0x000001, "Wrong alignment on W_PreMission_C_UnselectUIElement");
static_assert(sizeof(W_PreMission_C_UnselectUIElement) == 0x000004, "Wrong size on W_PreMission_C_UnselectUIElement");
static_assert(offsetof(W_PreMission_C_UnselectUIElement, CallFunc_CanUnselect_ReturnValue) == 0x000000, "Member 'W_PreMission_C_UnselectUIElement::CallFunc_CanUnselect_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UnselectUIElement, CallFunc_IsUIHidden_Return_Value) == 0x000001, "Member 'W_PreMission_C_UnselectUIElement::CallFunc_IsUIHidden_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UnselectUIElement, K2Node_SwitchInteger_CmpSuccess) == 0x000002, "Member 'W_PreMission_C_UnselectUIElement::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UnselectUIElement, K2Node_SwitchInteger_CmpSuccess_1) == 0x000003, "Member 'W_PreMission_C_UnselectUIElement::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnMouseMove
// 0x0160 (0x0160 - 0x0000)
struct W_PreMission_C_OnMouseMove final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_PreMission_C_OnMouseMove) == 0x000008, "Wrong alignment on W_PreMission_C_OnMouseMove");
static_assert(sizeof(W_PreMission_C_OnMouseMove) == 0x000160, "Wrong size on W_PreMission_C_OnMouseMove");
static_assert(offsetof(W_PreMission_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'W_PreMission_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'W_PreMission_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseMove, ReturnValue) == 0x0000A8, "Member 'W_PreMission_C_OnMouseMove::ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ResumeGame
// 0x0050 (0x0050 - 0x0000)
struct W_PreMission_C_ResumeGame final 
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_ResumeGame) == 0x000008, "Wrong alignment on W_PreMission_C_ResumeGame");
static_assert(sizeof(W_PreMission_C_ResumeGame) == 0x000050, "Wrong size on W_PreMission_C_ResumeGame");
static_assert(offsetof(W_PreMission_C_ResumeGame, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'W_PreMission_C_ResumeGame::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000008, "Member 'W_PreMission_C_ResumeGame::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_PreMission_C_ResumeGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'W_PreMission_C_ResumeGame::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_PreMission_C_ResumeGame::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'W_PreMission_C_ResumeGame::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, K2Node_DynamicCast_AsReady_or_Not_Player_Controller) == 0x000030, "Member 'W_PreMission_C_ResumeGame::K2Node_DynamicCast_AsReady_or_Not_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_PreMission_C_ResumeGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, K2Node_DynamicCast_AsReady_or_Not_Player_State) == 0x000040, "Member 'W_PreMission_C_ResumeGame::K2Node_DynamicCast_AsReady_or_Not_Player_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ResumeGame, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'W_PreMission_C_ResumeGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Escape
// 0x0018 (0x0018 - 0x0000)
struct W_PreMission_C_Escape final 
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanExit_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_Escape) == 0x000008, "Wrong alignment on W_PreMission_C_Escape");
static_assert(sizeof(W_PreMission_C_Escape) == 0x000018, "Wrong size on W_PreMission_C_Escape");
static_assert(offsetof(W_PreMission_C_Escape, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_PreMission_C_Escape::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Escape, K2Node_DynamicCast_AsReady_or_Not_Player_Controller) == 0x000008, "Member 'W_PreMission_C_Escape::K2Node_DynamicCast_AsReady_or_Not_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Escape, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_PreMission_C_Escape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Escape, CallFunc_CanExit_ReturnValue) == 0x000011, "Member 'W_PreMission_C_Escape::CallFunc_CanExit_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.SetNavigationMode (Keyboard)
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_C_SetNavigationMode__Keyboard_ final 
{
public:
	bool                                          CallFunc_IsValidSelectionIndex_Return_Value;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38ED[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_SetNavigationMode__Keyboard_) == 0x000008, "Wrong alignment on W_PreMission_C_SetNavigationMode__Keyboard_");
static_assert(sizeof(W_PreMission_C_SetNavigationMode__Keyboard_) == 0x000010, "Wrong size on W_PreMission_C_SetNavigationMode__Keyboard_");
static_assert(offsetof(W_PreMission_C_SetNavigationMode__Keyboard_, CallFunc_IsValidSelectionIndex_Return_Value) == 0x000000, "Member 'W_PreMission_C_SetNavigationMode__Keyboard_::CallFunc_IsValidSelectionIndex_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SetNavigationMode__Keyboard_, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'W_PreMission_C_SetNavigationMode__Keyboard_::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.SetNavigationMode (Mouse)
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_SetNavigationMode__Mouse_ final 
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_SetNavigationMode__Mouse_) == 0x000008, "Wrong alignment on W_PreMission_C_SetNavigationMode__Mouse_");
static_assert(sizeof(W_PreMission_C_SetNavigationMode__Mouse_) == 0x000008, "Wrong size on W_PreMission_C_SetNavigationMode__Mouse_");
static_assert(offsetof(W_PreMission_C_SetNavigationMode__Mouse_, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_PreMission_C_SetNavigationMode__Mouse_::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UpdateDebugInfo
// 0x01A8 (0x01A8 - 0x0000)
struct W_PreMission_C_UpdateDebugInfo final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EE[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0058(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget;   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0078(0x0018)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F0[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x00E0(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0100(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3; // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x0120(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5; // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0148(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6; // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0168(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0188(0x0018)()
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8; // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_UpdateDebugInfo) == 0x000008, "Wrong alignment on W_PreMission_C_UpdateDebugInfo");
static_assert(sizeof(W_PreMission_C_UpdateDebugInfo) == 0x0001A8, "Wrong size on W_PreMission_C_UpdateDebugInfo");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, ReturnValue) == 0x000000, "Member 'W_PreMission_C_UpdateDebugInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_UpdateDebugInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, Temp_text_Variable) == 0x000008, "Member 'W_PreMission_C_UpdateDebugInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, Temp_bool_Variable_1) == 0x000020, "Member 'W_PreMission_C_UpdateDebugInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, Temp_text_Variable_1) == 0x000028, "Member 'W_PreMission_C_UpdateDebugInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, Temp_text_Variable_2) == 0x000040, "Member 'W_PreMission_C_UpdateDebugInfo::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_BoolToText_ReturnValue) == 0x000058, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget) == 0x000070, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000078, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000090, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, K2Node_Select_Default) == 0x0000C0, "Member 'W_PreMission_C_UpdateDebugInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1) == 0x0000D8, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x0000E0, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2) == 0x0000F8, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, K2Node_Select_Default_1) == 0x000100, "Member 'W_PreMission_C_UpdateDebugInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3) == 0x000118, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x000120, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4) == 0x000138, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5) == 0x000140, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000148, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6) == 0x000160, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000168, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7) == 0x000180, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000188, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateDebugInfo, CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8) == 0x0001A0, "Member 'W_PreMission_C_UpdateDebugInfo::CallFunc_Get_Debug_Item__Index__DebugInfoWidget_8' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_InGame_Container_Visibility
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_C_Get_InGame_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_Get_InGame_Container_Visibility) == 0x000008, "Wrong alignment on W_PreMission_C_Get_InGame_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_InGame_Container_Visibility) == 0x000020, "Wrong size on W_PreMission_C_Get_InGame_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_InGame_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_InGame_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_InGame_Container_Visibility, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_Get_InGame_Container_Visibility::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_InGame_Container_Visibility, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_Get_InGame_Container_Visibility::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_InGame_Container_Visibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_Get_InGame_Container_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_InGame_Container_Visibility, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'W_PreMission_C_Get_InGame_Container_Visibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_NightOperation_Text_Visibility
// 0x0038 (0x0038 - 0x0000)
struct W_PreMission_C_Get_NightOperation_Text_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_MapName_Text_ReturnValue;             // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_NightOperation_Text_Visibility) == 0x000008, "Wrong alignment on W_PreMission_C_Get_NightOperation_Text_Visibility");
static_assert(sizeof(W_PreMission_C_Get_NightOperation_Text_Visibility) == 0x000038, "Wrong size on W_PreMission_C_Get_NightOperation_Text_Visibility");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, CallFunc_Get_MapName_Text_ReturnValue) == 0x000008, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::CallFunc_Get_MapName_Text_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, CallFunc_Contains_ReturnValue) == 0x000030, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_NightOperation_Text_Visibility, K2Node_Select_Default) == 0x000031, "Member 'W_PreMission_C_Get_NightOperation_Text_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UpdateWidgetStates
// 0x0040 (0x0040 - 0x0000)
struct W_PreMission_C_UpdateWidgetStates final 
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F3[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_UpdateWidgetStates) == 0x000008, "Wrong alignment on W_PreMission_C_UpdateWidgetStates");
static_assert(sizeof(W_PreMission_C_UpdateWidgetStates) == 0x000040, "Wrong size on W_PreMission_C_UpdateWidgetStates");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'W_PreMission_C_UpdateWidgetStates::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, K2Node_DynamicCast_AsPlayer_Character) == 0x000008, "Member 'W_PreMission_C_UpdateWidgetStates::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_PreMission_C_UpdateWidgetStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_PreMission_C_UpdateWidgetStates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'W_PreMission_C_UpdateWidgetStates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, K2Node_DynamicCast_AsReady_or_Not_Player_State) == 0x000018, "Member 'W_PreMission_C_UpdateWidgetStates::K2Node_DynamicCast_AsReady_or_Not_Player_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'W_PreMission_C_UpdateWidgetStates::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'W_PreMission_C_UpdateWidgetStates::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000030, "Member 'W_PreMission_C_UpdateWidgetStates::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'W_PreMission_C_UpdateWidgetStates::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'W_PreMission_C_UpdateWidgetStates::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateWidgetStates, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'W_PreMission_C_UpdateWidgetStates::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_CountdownTimer_Container_Visibility
// 0x0014 (0x0014 - 0x0000)
struct W_PreMission_C_Get_CountdownTimer_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllPlayersReady_Return_Value;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumPlayers_Return_Value;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_CountdownTimer_Container_Visibility) == 0x000004, "Wrong alignment on W_PreMission_C_Get_CountdownTimer_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_CountdownTimer_Container_Visibility) == 0x000014, "Wrong size on W_PreMission_C_Get_CountdownTimer_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, CallFunc_AllPlayersReady_Return_Value) == 0x000004, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::CallFunc_AllPlayersReady_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, CallFunc_GetNumPlayers_Return_Value) == 0x000008, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::CallFunc_GetNumPlayers_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000D, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_CountdownTimer_Container_Visibility, K2Node_Select_Default) == 0x000010, "Member 'W_PreMission_C_Get_CountdownTimer_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ShowItemSelectionUI
// 0x0018 (0x0018 - 0x0000)
struct W_PreMission_C_ShowItemSelectionUI final 
{
public:
	TArray<class UW_ItemSelectionMenu_C*>         CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_ItemSelectionMenu_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_ShowItemSelectionUI) == 0x000008, "Wrong alignment on W_PreMission_C_ShowItemSelectionUI");
static_assert(sizeof(W_PreMission_C_ShowItemSelectionUI) == 0x000018, "Wrong size on W_PreMission_C_ShowItemSelectionUI");
static_assert(offsetof(W_PreMission_C_ShowItemSelectionUI, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000000, "Member 'W_PreMission_C_ShowItemSelectionUI::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ShowItemSelectionUI, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_PreMission_C_ShowItemSelectionUI::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.HideItemSelectionUI
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_C_HideItemSelectionUI final 
{
public:
	TArray<class UW_ItemSelectionMenu_C*>         CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_ItemSelectionMenu_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_HideItemSelectionUI) == 0x000008, "Wrong alignment on W_PreMission_C_HideItemSelectionUI");
static_assert(sizeof(W_PreMission_C_HideItemSelectionUI) == 0x000020, "Wrong size on W_PreMission_C_HideItemSelectionUI");
static_assert(offsetof(W_PreMission_C_HideItemSelectionUI, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000000, "Member 'W_PreMission_C_HideItemSelectionUI::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideItemSelectionUI, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_PreMission_C_HideItemSelectionUI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideItemSelectionUI, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'W_PreMission_C_HideItemSelectionUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.EnterQuartermasterMenu
// 0x0050 (0x0050 - 0x0000)
struct W_PreMission_C_EnterQuartermasterMenu final 
{
public:
	TArray<struct FAttachmentCategory>            AttachmentCategories;                              // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Get_Quatermaster_Box_IsEnabled_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnteringQuartermasterMenu_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F7[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_EnterQuartermasterMenu) == 0x000008, "Wrong alignment on W_PreMission_C_EnterQuartermasterMenu");
static_assert(sizeof(W_PreMission_C_EnterQuartermasterMenu) == 0x000050, "Wrong size on W_PreMission_C_EnterQuartermasterMenu");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, AttachmentCategories) == 0x000000, "Member 'W_PreMission_C_EnterQuartermasterMenu::AttachmentCategories' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_Get_Quatermaster_Box_IsEnabled_ReturnValue) == 0x000010, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_Get_Quatermaster_Box_IsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_EnteringQuartermasterMenu_ReturnValue) == 0x000020, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_EnteringQuartermasterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_PlayAnimationForward_ReturnValue) == 0x000028, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000030, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000038, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnterQuartermasterMenu, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000048, "Member 'W_PreMission_C_EnterQuartermasterMenu::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ExitQuartermasterMenu
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_C_ExitQuartermasterMenu final 
{
public:
	bool                                          CallFunc_EnteringQuartermasterMenu_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F8[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_ExitQuartermasterMenu) == 0x000008, "Wrong alignment on W_PreMission_C_ExitQuartermasterMenu");
static_assert(sizeof(W_PreMission_C_ExitQuartermasterMenu) == 0x000010, "Wrong size on W_PreMission_C_ExitQuartermasterMenu");
static_assert(offsetof(W_PreMission_C_ExitQuartermasterMenu, CallFunc_EnteringQuartermasterMenu_ReturnValue) == 0x000000, "Member 'W_PreMission_C_ExitQuartermasterMenu::CallFunc_EnteringQuartermasterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExitQuartermasterMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_PreMission_C_ExitQuartermasterMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExitQuartermasterMenu, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'W_PreMission_C_ExitQuartermasterMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ExitQuartermasterMenu, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'W_PreMission_C_ExitQuartermasterMenu::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnFadeToQuartermasterFinished
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_C_OnFadeToQuartermasterFinished final 
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_OnFadeToQuartermasterFinished) == 0x000008, "Wrong alignment on W_PreMission_C_OnFadeToQuartermasterFinished");
static_assert(sizeof(W_PreMission_C_OnFadeToQuartermasterFinished) == 0x000010, "Wrong size on W_PreMission_C_OnFadeToQuartermasterFinished");
static_assert(offsetof(W_PreMission_C_OnFadeToQuartermasterFinished, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'W_PreMission_C_OnFadeToQuartermasterFinished::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnFadeToQuartermasterFinished, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'W_PreMission_C_OnFadeToQuartermasterFinished::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_Tooltip_Text_Visibility
// 0x0006 (0x0006 - 0x0000)
struct W_PreMission_C_Get_Tooltip_Text_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_Tooltip_Text_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_Tooltip_Text_Visibility");
static_assert(sizeof(W_PreMission_C_Get_Tooltip_Text_Visibility) == 0x000006, "Wrong size on W_PreMission_C_Get_Tooltip_Text_Visibility");
static_assert(offsetof(W_PreMission_C_Get_Tooltip_Text_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_Tooltip_Text_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_Tooltip_Text_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_Tooltip_Text_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_Tooltip_Text_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_Tooltip_Text_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_Tooltip_Text_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_Tooltip_Text_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_Tooltip_Text_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'W_PreMission_C_Get_Tooltip_Text_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_Tooltip_Text_Visibility, K2Node_Select_Default) == 0x000005, "Member 'W_PreMission_C_Get_Tooltip_Text_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UpdateTootipText
// 0x0018 (0x0018 - 0x0000)
struct W_PreMission_C_UpdateTootipText final 
{
public:
	class FText                                   NewTooltipText;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PreMission_C_UpdateTootipText) == 0x000008, "Wrong alignment on W_PreMission_C_UpdateTootipText");
static_assert(sizeof(W_PreMission_C_UpdateTootipText) == 0x000018, "Wrong size on W_PreMission_C_UpdateTootipText");
static_assert(offsetof(W_PreMission_C_UpdateTootipText, NewTooltipText) == 0x000000, "Member 'W_PreMission_C_UpdateTootipText::NewTooltipText' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.SwapTeams
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_C_SwapTeams final 
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F9[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamType                                     CallFunc_GetPendingTeam_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_SwapTeams) == 0x000008, "Wrong alignment on W_PreMission_C_SwapTeams");
static_assert(sizeof(W_PreMission_C_SwapTeams) == 0x000020, "Wrong size on W_PreMission_C_SwapTeams");
static_assert(offsetof(W_PreMission_C_SwapTeams, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_PreMission_C_SwapTeams::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'W_PreMission_C_SwapTeams::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'W_PreMission_C_SwapTeams::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, K2Node_DynamicCast_AsReady_or_Not_Player_State) == 0x000010, "Member 'W_PreMission_C_SwapTeams::K2Node_DynamicCast_AsReady_or_Not_Player_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_SwapTeams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, CallFunc_GetPendingTeam_ReturnValue) == 0x000019, "Member 'W_PreMission_C_SwapTeams::CallFunc_GetPendingTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'W_PreMission_C_SwapTeams::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SwapTeams, K2Node_SwitchEnum_CmpSuccess) == 0x00001B, "Member 'W_PreMission_C_SwapTeams::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ToggleMetaGameInfo
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_C_ToggleMetaGameInfo final 
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_ToggleMetaGameInfo) == 0x000001, "Wrong alignment on W_PreMission_C_ToggleMetaGameInfo");
static_assert(sizeof(W_PreMission_C_ToggleMetaGameInfo) == 0x000001, "Wrong size on W_PreMission_C_ToggleMetaGameInfo");
static_assert(offsetof(W_PreMission_C_ToggleMetaGameInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'W_PreMission_C_ToggleMetaGameInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UpdateCountdownDescriptionText
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_C_UpdateCountdownDescriptionText final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_UpdateCountdownDescriptionText) == 0x000008, "Wrong alignment on W_PreMission_C_UpdateCountdownDescriptionText");
static_assert(sizeof(W_PreMission_C_UpdateCountdownDescriptionText) == 0x000028, "Wrong size on W_PreMission_C_UpdateCountdownDescriptionText");
static_assert(offsetof(W_PreMission_C_UpdateCountdownDescriptionText, Temp_bool_Variable) == 0x000000, "Member 'W_PreMission_C_UpdateCountdownDescriptionText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateCountdownDescriptionText, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_UpdateCountdownDescriptionText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateCountdownDescriptionText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_UpdateCountdownDescriptionText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateCountdownDescriptionText, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_UpdateCountdownDescriptionText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateCountdownDescriptionText, K2Node_Select_Default) == 0x000020, "Member 'W_PreMission_C_UpdateCountdownDescriptionText::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ToggleUIVisibility
// 0x0018 (0x0018 - 0x0000)
struct W_PreMission_C_ToggleUIVisibility final 
{
public:
	bool                                          CallFunc_EnteringQuartermasterMenu_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUIHidden_Return_Value;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FC[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_ToggleUIVisibility) == 0x000008, "Wrong alignment on W_PreMission_C_ToggleUIVisibility");
static_assert(sizeof(W_PreMission_C_ToggleUIVisibility) == 0x000018, "Wrong size on W_PreMission_C_ToggleUIVisibility");
static_assert(offsetof(W_PreMission_C_ToggleUIVisibility, CallFunc_EnteringQuartermasterMenu_ReturnValue) == 0x000000, "Member 'W_PreMission_C_ToggleUIVisibility::CallFunc_EnteringQuartermasterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ToggleUIVisibility, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000001, "Member 'W_PreMission_C_ToggleUIVisibility::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ToggleUIVisibility, CallFunc_IsUIHidden_Return_Value) == 0x000002, "Member 'W_PreMission_C_ToggleUIVisibility::CallFunc_IsUIHidden_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ToggleUIVisibility, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'W_PreMission_C_ToggleUIVisibility::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ToggleUIVisibility, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'W_PreMission_C_ToggleUIVisibility::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnMouseButtonUp
// 0x03C8 (0x03C8 - 0x0000)
struct W_PreMission_C_OnMouseButtonUp final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0160(0x0018)(HasGetValueTypeHash)
	class UW_LoadoutCategory_C*                   K2Node_DynamicCast_AsW_Loadout_Category;           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FD[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	class UW_LoadoutClass_C*                      K2Node_DynamicCast_AsW_Loadout_Class;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FE[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0250(0x00B8)()
	bool                                          CallFunc_IsUIHidden_Return_Value;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FF[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x0310(0x00B8)()
};
static_assert(alignof(W_PreMission_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_PreMission_C_OnMouseButtonUp");
static_assert(sizeof(W_PreMission_C_OnMouseButtonUp) == 0x0003C8, "Wrong size on W_PreMission_C_OnMouseButtonUp");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_PreMission_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_PreMission_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'W_PreMission_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000160, "Member 'W_PreMission_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, K2Node_DynamicCast_AsW_Loadout_Category) == 0x000178, "Member 'W_PreMission_C_OnMouseButtonUp::K2Node_DynamicCast_AsW_Loadout_Category' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'W_PreMission_C_OnMouseButtonUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000181, "Member 'W_PreMission_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'W_PreMission_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, K2Node_DynamicCast_AsW_Loadout_Class) == 0x000240, "Member 'W_PreMission_C_OnMouseButtonUp::K2Node_DynamicCast_AsW_Loadout_Class' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, K2Node_DynamicCast_bSuccess_1) == 0x000248, "Member 'W_PreMission_C_OnMouseButtonUp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue_1) == 0x000250, "Member 'W_PreMission_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, CallFunc_IsUIHidden_Return_Value) == 0x000308, "Member 'W_PreMission_C_OnMouseButtonUp::CallFunc_IsUIHidden_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue_2) == 0x000310, "Member 'W_PreMission_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue_2' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_SwapTeams_Box_Visibility
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_C_Get_SwapTeams_Box_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllowTeamSwapping_Return_Value;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_SwapTeams_Box_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_SwapTeams_Box_Visibility");
static_assert(sizeof(W_PreMission_C_Get_SwapTeams_Box_Visibility) == 0x000008, "Wrong size on W_PreMission_C_Get_SwapTeams_Box_Visibility");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, CallFunc_AllowTeamSwapping_Return_Value) == 0x000004, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::CallFunc_AllowTeamSwapping_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_SwapTeams_Box_Visibility, K2Node_Select_Default) == 0x000007, "Member 'W_PreMission_C_Get_SwapTeams_Box_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_MetaGameInfo_Container_Visibility
// 0x0005 (0x0005 - 0x0000)
struct W_PreMission_C_Get_MetaGameInfo_Container_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_MetaGameInfo_Container_Visibility");
static_assert(sizeof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility) == 0x000005, "Wrong size on W_PreMission_C_Get_MetaGameInfo_Container_Visibility");
static_assert(offsetof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_MetaGameInfo_Container_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_MetaGameInfo_Container_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_MetaGameInfo_Container_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_MetaGameInfo_Container_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_MetaGameInfo_Container_Visibility, K2Node_Select_Default) == 0x000004, "Member 'W_PreMission_C_Get_MetaGameInfo_Container_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnKeyUp
// 0x02B8 (0x02B8 - 0x0000)
struct W_PreMission_C_OnKeyUp final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3900[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
};
static_assert(alignof(W_PreMission_C_OnKeyUp) == 0x000008, "Wrong alignment on W_PreMission_C_OnKeyUp");
static_assert(sizeof(W_PreMission_C_OnKeyUp) == 0x0002B8, "Wrong size on W_PreMission_C_OnKeyUp");
static_assert(offsetof(W_PreMission_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'W_PreMission_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'W_PreMission_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'W_PreMission_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'W_PreMission_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'W_PreMission_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'W_PreMission_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'W_PreMission_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnMouseButtonDown
// 0x02F0 (0x02F0 - 0x0000)
struct W_PreMission_C_OnMouseButtonDown final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0160(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0178(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3901[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0238(0x00B8)()
};
static_assert(alignof(W_PreMission_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on W_PreMission_C_OnMouseButtonDown");
static_assert(sizeof(W_PreMission_C_OnMouseButtonDown) == 0x0002F0, "Wrong size on W_PreMission_C_OnMouseButtonDown");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'W_PreMission_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'W_PreMission_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'W_PreMission_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000160, "Member 'W_PreMission_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000178, "Member 'W_PreMission_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000230, "Member 'W_PreMission_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue_1) == 0x000238, "Member 'W_PreMission_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_RenamePresetButton_Visibility
// 0x0006 (0x0006 - 0x0000)
struct W_PreMission_C_Get_RenamePresetButton_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRenamePreset_Return_Value;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_RenamePresetButton_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_RenamePresetButton_Visibility");
static_assert(sizeof(W_PreMission_C_Get_RenamePresetButton_Visibility) == 0x000006, "Wrong size on W_PreMission_C_Get_RenamePresetButton_Visibility");
static_assert(offsetof(W_PreMission_C_Get_RenamePresetButton_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_RenamePresetButton_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_RenamePresetButton_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_RenamePresetButton_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_RenamePresetButton_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_RenamePresetButton_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_RenamePresetButton_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_RenamePresetButton_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_RenamePresetButton_Visibility, CallFunc_CanRenamePreset_Return_Value) == 0x000004, "Member 'W_PreMission_C_Get_RenamePresetButton_Visibility::CallFunc_CanRenamePreset_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_RenamePresetButton_Visibility, K2Node_Select_Default) == 0x000005, "Member 'W_PreMission_C_Get_RenamePresetButton_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_HideUIButton_Visibility
// 0x0007 (0x0007 - 0x0000)
struct W_PreMission_C_Get_HideUIButton_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRenamingPreset_Return_Value;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_HideUIButton_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_HideUIButton_Visibility");
static_assert(sizeof(W_PreMission_C_Get_HideUIButton_Visibility) == 0x000007, "Wrong size on W_PreMission_C_Get_HideUIButton_Visibility");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, CallFunc_IsRenamingPreset_Return_Value) == 0x000004, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::CallFunc_IsRenamingPreset_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_HideUIButton_Visibility, K2Node_Select_Default) == 0x000006, "Member 'W_PreMission_C_Get_HideUIButton_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.HandleMenuWideInput
// 0x0090 (0x0090 - 0x0000)
struct W_PreMission_C_HandleMenuWideInput final 
{
public:
	struct FKeyEvent                              Input;                                             // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return_Value;                                      // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3902[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3903[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3904[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3905[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetMasterDevMenu_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleMenuVisibility_ReturnValue;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_HandleMenuWideInput) == 0x000008, "Wrong alignment on W_PreMission_C_HandleMenuWideInput");
static_assert(sizeof(W_PreMission_C_HandleMenuWideInput) == 0x000090, "Wrong size on W_PreMission_C_HandleMenuWideInput");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, Input) == 0x000000, "Member 'W_PreMission_C_HandleMenuWideInput::Input' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, Return_Value) == 0x000038, "Member 'W_PreMission_C_HandleMenuWideInput::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_GetKey_ReturnValue) == 0x000040, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000058, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000059, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00005A, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000070, "Member 'W_PreMission_C_HandleMenuWideInput::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'W_PreMission_C_HandleMenuWideInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_GetMasterDevMenu_ReturnValue) == 0x000080, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_GetMasterDevMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideInput, CallFunc_ToggleMenuVisibility_ReturnValue) == 0x000089, "Member 'W_PreMission_C_HandleMenuWideInput::CallFunc_ToggleMenuVisibility_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_LoadoutMenu_Switcher_Visibility
// 0x0006 (0x0006 - 0x0000)
struct W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility) == 0x000001, "Wrong alignment on W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility");
static_assert(sizeof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility) == 0x000006, "Wrong size on W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility");
static_assert(offsetof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility, CallFunc_IsInLobby_ReturnValue) == 0x000004, "Member 'W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility, K2Node_Select_Default) == 0x000005, "Member 'W_PreMission_C_Get_LoadoutMenu_Switcher_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.SmoothCountdown
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_C_SmoothCountdown final 
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3906[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3907[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEveryoneReady_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_SmoothCountdown) == 0x000008, "Wrong alignment on W_PreMission_C_SmoothCountdown");
static_assert(sizeof(W_PreMission_C_SmoothCountdown) == 0x000028, "Wrong size on W_PreMission_C_SmoothCountdown");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, DeltaTime) == 0x000000, "Member 'W_PreMission_C_SmoothCountdown::DeltaTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'W_PreMission_C_SmoothCountdown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_SmoothCountdown::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_SmoothCountdown::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_SmoothCountdown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'W_PreMission_C_SmoothCountdown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'W_PreMission_C_SmoothCountdown::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, CallFunc_IsEveryoneReady_ReturnValue) == 0x000024, "Member 'W_PreMission_C_SmoothCountdown::CallFunc_IsEveryoneReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SmoothCountdown, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'W_PreMission_C_SmoothCountdown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ReflectHUDSettings
// 0x0030 (0x0030 - 0x0000)
struct W_PreMission_C_ReflectHUDSettings final 
{
public:
	float                                         CallFunc_LoadSafeZoneSettings_SafeZoneX;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LoadSafeZoneSettings_SafeZoneY;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadSafeZoneSettings_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3908[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_ReflectHUDSettings) == 0x000008, "Wrong alignment on W_PreMission_C_ReflectHUDSettings");
static_assert(sizeof(W_PreMission_C_ReflectHUDSettings) == 0x000030, "Wrong size on W_PreMission_C_ReflectHUDSettings");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, CallFunc_LoadSafeZoneSettings_SafeZoneX) == 0x000000, "Member 'W_PreMission_C_ReflectHUDSettings::CallFunc_LoadSafeZoneSettings_SafeZoneX' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, CallFunc_LoadSafeZoneSettings_SafeZoneY) == 0x000004, "Member 'W_PreMission_C_ReflectHUDSettings::CallFunc_LoadSafeZoneSettings_SafeZoneY' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, CallFunc_LoadSafeZoneSettings_ReturnValue) == 0x000008, "Member 'W_PreMission_C_ReflectHUDSettings::CallFunc_LoadSafeZoneSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'W_PreMission_C_ReflectHUDSettings::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'W_PreMission_C_ReflectHUDSettings::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00001C, "Member 'W_PreMission_C_ReflectHUDSettings::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ReflectHUDSettings, K2Node_MakeStruct_Margin) == 0x000020, "Member 'W_PreMission_C_ReflectHUDSettings::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.ShowHUD
// 0x0018 (0x0018 - 0x0000)
struct W_PreMission_C_ShowHUD final 
{
public:
	TArray<class UW_HumanCharacter_HUD_V2_C*>     CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_HumanCharacter_HUD_V2_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_ShowHUD) == 0x000008, "Wrong alignment on W_PreMission_C_ShowHUD");
static_assert(sizeof(W_PreMission_C_ShowHUD) == 0x000018, "Wrong size on W_PreMission_C_ShowHUD");
static_assert(offsetof(W_PreMission_C_ShowHUD, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000000, "Member 'W_PreMission_C_ShowHUD::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_ShowHUD, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_PreMission_C_ShowHUD::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.HideHUD
// 0x0038 (0x0038 - 0x0000)
struct W_PreMission_C_HideHUD final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3909[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_HumanCharacter_HUD_V2_C*>     CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_HumanCharacter_HUD_V2_C*             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_HideHUD) == 0x000008, "Wrong alignment on W_PreMission_C_HideHUD");
static_assert(sizeof(W_PreMission_C_HideHUD) == 0x000038, "Wrong size on W_PreMission_C_HideHUD");
static_assert(offsetof(W_PreMission_C_HideHUD, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_PreMission_C_HideHUD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_PreMission_C_HideHUD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_PreMission_C_HideHUD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'W_PreMission_C_HideHUD::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_PreMission_C_HideHUD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_PreMission_C_HideHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_PreMission_C_HideHUD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HideHUD, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'W_PreMission_C_HideHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.HandleMenuWideMultiInput (Down)
// 0x0070 (0x0070 - 0x0000)
struct W_PreMission_C_HandleMenuWideMultiInput__Down_ final 
{
public:
	struct FKeyEvent                              Input;                                             // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return_Value;                                      // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_390B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_390C[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_HandleMenuWideMultiInput__Down_) == 0x000008, "Wrong alignment on W_PreMission_C_HandleMenuWideMultiInput__Down_");
static_assert(sizeof(W_PreMission_C_HandleMenuWideMultiInput__Down_) == 0x000070, "Wrong size on W_PreMission_C_HandleMenuWideMultiInput__Down_");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, Input) == 0x000000, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::Input' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, Return_Value) == 0x000038, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_GetKey_ReturnValue) == 0x000040, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000058, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000059, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00005A, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_BooleanOR_ReturnValue) == 0x00005B, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Down_, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Down_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.HandleMenuWideMultiInput (Up)
// 0x0060 (0x0060 - 0x0000)
struct W_PreMission_C_HandleMenuWideMultiInput__Up_ final 
{
public:
	struct FKeyEvent                              Input;                                             // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return_Value;                                      // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_390D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_HandleMenuWideMultiInput__Up_) == 0x000008, "Wrong alignment on W_PreMission_C_HandleMenuWideMultiInput__Up_");
static_assert(sizeof(W_PreMission_C_HandleMenuWideMultiInput__Up_) == 0x000060, "Wrong size on W_PreMission_C_HandleMenuWideMultiInput__Up_");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Up_, Input) == 0x000000, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Up_::Input' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Up_, Return_Value) == 0x000038, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Up_::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Up_, CallFunc_GetKey_ReturnValue) == 0x000040, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Up_::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Up_, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000058, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Up_::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Up_, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000059, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Up_::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_HandleMenuWideMultiInput__Up_, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'W_PreMission_C_HandleMenuWideMultiInput__Up_::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.OnStartFadeToLoadout
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_C_OnStartFadeToLoadout final 
{
public:
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_OnStartFadeToLoadout) == 0x000001, "Wrong alignment on W_PreMission_C_OnStartFadeToLoadout");
static_assert(sizeof(W_PreMission_C_OnStartFadeToLoadout) == 0x000001, "Wrong size on W_PreMission_C_OnStartFadeToLoadout");
static_assert(offsetof(W_PreMission_C_OnStartFadeToLoadout, CallFunc_IsInLobby_ReturnValue) == 0x000000, "Member 'W_PreMission_C_OnStartFadeToLoadout::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.SetActiveNav
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_C_SetActiveNav final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_SetActiveNav) == 0x000008, "Wrong alignment on W_PreMission_C_SetActiveNav");
static_assert(sizeof(W_PreMission_C_SetActiveNav) == 0x000010, "Wrong size on W_PreMission_C_SetActiveNav");
static_assert(offsetof(W_PreMission_C_SetActiveNav, Button) == 0x000000, "Member 'W_PreMission_C_SetActiveNav::Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SetActiveNav, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PreMission_C_SetActiveNav::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SetActiveNav, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'W_PreMission_C_SetActiveNav::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_SetActiveNav, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'W_PreMission_C_SetActiveNav::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UpdateHotkeyEntries
// 0x0110 (0x0110 - 0x0000)
struct W_PreMission_C_UpdateHotkeyEntries final 
{
public:
	TArray<struct FSt_HotkeySettings>             Hotkeys;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSt_HotkeySettings>             CombinedHotkeys;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_390E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSt_HotkeySettings                     CallFunc_Array_Get_Item;                           // 0x0040(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3910[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3911[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSt_HotkeySettings                     CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_UpdateHotkeyEntries) == 0x000008, "Wrong alignment on W_PreMission_C_UpdateHotkeyEntries");
static_assert(sizeof(W_PreMission_C_UpdateHotkeyEntries) == 0x000110, "Wrong size on W_PreMission_C_UpdateHotkeyEntries");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, Hotkeys) == 0x000000, "Member 'W_PreMission_C_UpdateHotkeyEntries::Hotkeys' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CombinedHotkeys) == 0x000010, "Member 'W_PreMission_C_UpdateHotkeyEntries::CombinedHotkeys' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_PreMission_C_UpdateHotkeyEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, Temp_int_Array_Index_Variable) == 0x000030, "Member 'W_PreMission_C_UpdateHotkeyEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'W_PreMission_C_UpdateHotkeyEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'W_PreMission_C_UpdateHotkeyEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Array_Length_ReturnValue_2) == 0x000100, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x000108, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHotkeyEntries, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000109, "Member 'W_PreMission_C_UpdateHotkeyEntries::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Set Hotkeys
// 0x00C0 (0x00C0 - 0x0000)
struct W_PreMission_C_Set_Hotkeys final 
{
public:
	EPreMissionHotkeyGroups                       HotkeyGroup;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3912[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FKey, class FText>                CombinedHotkeys;                                   // 0x0008(0x0050)(Edit, BlueprintVisible)
	TMap<struct FKey, class FText>                K2Node_MakeVariable_MakeVariableOutput;            // 0x0058(0x0050)()
	EPreMissionHotkeyGroups                       Temp_byte_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3913[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSt_HotkeySettings>             K2Node_Select_Default;                             // 0x00B0(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(W_PreMission_C_Set_Hotkeys) == 0x000008, "Wrong alignment on W_PreMission_C_Set_Hotkeys");
static_assert(sizeof(W_PreMission_C_Set_Hotkeys) == 0x0000C0, "Wrong size on W_PreMission_C_Set_Hotkeys");
static_assert(offsetof(W_PreMission_C_Set_Hotkeys, HotkeyGroup) == 0x000000, "Member 'W_PreMission_C_Set_Hotkeys::HotkeyGroup' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Set_Hotkeys, CombinedHotkeys) == 0x000008, "Member 'W_PreMission_C_Set_Hotkeys::CombinedHotkeys' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Set_Hotkeys, K2Node_MakeVariable_MakeVariableOutput) == 0x000058, "Member 'W_PreMission_C_Set_Hotkeys::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Set_Hotkeys, Temp_byte_Variable) == 0x0000A8, "Member 'W_PreMission_C_Set_Hotkeys::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Set_Hotkeys, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'W_PreMission_C_Set_Hotkeys::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Set_Hotkeys, K2Node_Select_Default) == 0x0000B0, "Member 'W_PreMission_C_Set_Hotkeys::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ReadyUpResumeGameButton_Visibility_0
// 0x0002 (0x0002 - 0x0000)
struct W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0 final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0) == 0x000001, "Wrong alignment on W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0");
static_assert(sizeof(W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0) == 0x000002, "Wrong size on W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0, CallFunc_IsInLobby_ReturnValue) == 0x000001, "Member 'W_PreMission_C_Get_ReadyUpResumeGameButton_Visibility_0::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.Get_ReadyCount_Container_Visibility_0
// 0x0002 (0x0002 - 0x0000)
struct W_PreMission_C_Get_ReadyCount_Container_Visibility_0 final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_Get_ReadyCount_Container_Visibility_0) == 0x000001, "Wrong alignment on W_PreMission_C_Get_ReadyCount_Container_Visibility_0");
static_assert(sizeof(W_PreMission_C_Get_ReadyCount_Container_Visibility_0) == 0x000002, "Wrong size on W_PreMission_C_Get_ReadyCount_Container_Visibility_0");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility_0, ReturnValue) == 0x000000, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_Get_ReadyCount_Container_Visibility_0, CallFunc_IsInLobby_ReturnValue) == 0x000001, "Member 'W_PreMission_C_Get_ReadyCount_Container_Visibility_0::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.UpdateHeader
// 0x00F0 (0x00F0 - 0x0000)
struct W_PreMission_C_UpdateHeader final 
{
public:
	class FText                                   HeaderText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   PageName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	class UReadyOrNotGameInstance*                CallFunc_GetReadyOrNotGameInstance_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_IsHostMigrationInProgress_MigratedHostToName; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostMigrationInProgress_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3914[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3915[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
};
static_assert(alignof(W_PreMission_C_UpdateHeader) == 0x000008, "Wrong alignment on W_PreMission_C_UpdateHeader");
static_assert(sizeof(W_PreMission_C_UpdateHeader) == 0x0000F0, "Wrong size on W_PreMission_C_UpdateHeader");
static_assert(offsetof(W_PreMission_C_UpdateHeader, HeaderText) == 0x000000, "Member 'W_PreMission_C_UpdateHeader::HeaderText' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, PageName) == 0x000018, "Member 'W_PreMission_C_UpdateHeader::PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'W_PreMission_C_UpdateHeader::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_GetReadyOrNotGameInstance_ReturnValue) == 0x000048, "Member 'W_PreMission_C_UpdateHeader::CallFunc_GetReadyOrNotGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_IsHostMigrationInProgress_MigratedHostToName) == 0x000050, "Member 'W_PreMission_C_UpdateHeader::CallFunc_IsHostMigrationInProgress_MigratedHostToName' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_IsHostMigrationInProgress_ReturnValue) == 0x000060, "Member 'W_PreMission_C_UpdateHeader::CallFunc_IsHostMigrationInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'W_PreMission_C_UpdateHeader::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'W_PreMission_C_UpdateHeader::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_NotEqual_TextText_ReturnValue) == 0x0000C0, "Member 'W_PreMission_C_UpdateHeader::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, K2Node_MakeArray_Array) == 0x0000C8, "Member 'W_PreMission_C_UpdateHeader::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_UpdateHeader, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'W_PreMission_C_UpdateHeader::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.IsAnyoneOnSWATTeam
// 0x0038 (0x0038 - 0x0000)
struct W_PreMission_C_IsAnyoneOnSWATTeam final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3916[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3917[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_IsAnyoneOnSWATTeam) == 0x000008, "Wrong alignment on W_PreMission_C_IsAnyoneOnSWATTeam");
static_assert(sizeof(W_PreMission_C_IsAnyoneOnSWATTeam) == 0x000038, "Wrong size on W_PreMission_C_IsAnyoneOnSWATTeam");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, Return_Value) == 0x000000, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x000020, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnSWATTeam, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'W_PreMission_C_IsAnyoneOnSWATTeam::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.IsAnyoneOnMLOTeam
// 0x0038 (0x0038 - 0x0000)
struct W_PreMission_C_IsAnyoneOnMLOTeam final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3918[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3919[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_IsAnyoneOnMLOTeam) == 0x000008, "Wrong alignment on W_PreMission_C_IsAnyoneOnMLOTeam");
static_assert(sizeof(W_PreMission_C_IsAnyoneOnMLOTeam) == 0x000038, "Wrong size on W_PreMission_C_IsAnyoneOnMLOTeam");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, Return_Value) == 0x000000, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x000020, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsAnyoneOnMLOTeam, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'W_PreMission_C_IsAnyoneOnMLOTeam::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.CanExit
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_C_CanExit final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUIHidden_Return_Value;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EnteringQuartermasterMenu_ReturnValue;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_CanExit) == 0x000001, "Wrong alignment on W_PreMission_C_CanExit");
static_assert(sizeof(W_PreMission_C_CanExit) == 0x000010, "Wrong size on W_PreMission_C_CanExit");
static_assert(offsetof(W_PreMission_C_CanExit, ReturnValue) == 0x000000, "Member 'W_PreMission_C_CanExit::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_PreMission_C_CanExit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'W_PreMission_C_CanExit::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_IsUIHidden_Return_Value) == 0x000004, "Member 'W_PreMission_C_CanExit::CallFunc_IsUIHidden_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_EnteringQuartermasterMenu_ReturnValue) == 0x000005, "Member 'W_PreMission_C_CanExit::CallFunc_EnteringQuartermasterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_Not_PreBool_ReturnValue_2) == 0x000006, "Member 'W_PreMission_C_CanExit::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_Not_PreBool_ReturnValue_3) == 0x000007, "Member 'W_PreMission_C_CanExit::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_Not_PreBool_ReturnValue_4) == 0x000008, "Member 'W_PreMission_C_CanExit::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanOR_ReturnValue_1) == 0x00000B, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanAND_ReturnValue_2) == 0x00000C, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanAND_ReturnValue_3) == 0x00000D, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanAND_ReturnValue_4) == 0x00000E, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanExit, CallFunc_BooleanAND_ReturnValue_5) == 0x00000F, "Member 'W_PreMission_C_CanExit::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.CanUnselect
// 0x0005 (0x0005 - 0x0000)
struct W_PreMission_C_CanUnselect final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EnteringQuartermasterMenu_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_CanUnselect) == 0x000001, "Wrong alignment on W_PreMission_C_CanUnselect");
static_assert(sizeof(W_PreMission_C_CanUnselect) == 0x000005, "Wrong size on W_PreMission_C_CanUnselect");
static_assert(offsetof(W_PreMission_C_CanUnselect, ReturnValue) == 0x000000, "Member 'W_PreMission_C_CanUnselect::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanUnselect, CallFunc_EnteringQuartermasterMenu_ReturnValue) == 0x000001, "Member 'W_PreMission_C_CanUnselect::CallFunc_EnteringQuartermasterMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanUnselect, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'W_PreMission_C_CanUnselect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanUnselect, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'W_PreMission_C_CanUnselect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_CanUnselect, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'W_PreMission_C_CanUnselect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.IsValidSelectionIndex
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_C_IsValidSelectionIndex final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_IsValidSelectionIndex) == 0x000001, "Wrong alignment on W_PreMission_C_IsValidSelectionIndex");
static_assert(sizeof(W_PreMission_C_IsValidSelectionIndex) == 0x000004, "Wrong size on W_PreMission_C_IsValidSelectionIndex");
static_assert(offsetof(W_PreMission_C_IsValidSelectionIndex, Return_Value) == 0x000000, "Member 'W_PreMission_C_IsValidSelectionIndex::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsValidSelectionIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'W_PreMission_C_IsValidSelectionIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsValidSelectionIndex, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000002, "Member 'W_PreMission_C_IsValidSelectionIndex::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsValidSelectionIndex, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'W_PreMission_C_IsValidSelectionIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.EnteringQuartermasterMenu
// 0x0006 (0x0006 - 0x0000)
struct W_PreMission_C_EnteringQuartermasterMenu final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_2;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_EnteringQuartermasterMenu) == 0x000001, "Wrong alignment on W_PreMission_C_EnteringQuartermasterMenu");
static_assert(sizeof(W_PreMission_C_EnteringQuartermasterMenu) == 0x000006, "Wrong size on W_PreMission_C_EnteringQuartermasterMenu");
static_assert(offsetof(W_PreMission_C_EnteringQuartermasterMenu, ReturnValue) == 0x000000, "Member 'W_PreMission_C_EnteringQuartermasterMenu::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnteringQuartermasterMenu, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'W_PreMission_C_EnteringQuartermasterMenu::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnteringQuartermasterMenu, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x000002, "Member 'W_PreMission_C_EnteringQuartermasterMenu::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnteringQuartermasterMenu, CallFunc_K2_IsTimerActiveHandle_ReturnValue_2) == 0x000003, "Member 'W_PreMission_C_EnteringQuartermasterMenu::CallFunc_K2_IsTimerActiveHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnteringQuartermasterMenu, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'W_PreMission_C_EnteringQuartermasterMenu::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_EnteringQuartermasterMenu, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'W_PreMission_C_EnteringQuartermasterMenu::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.IsUIHidden
// 0x0003 (0x0003 - 0x0000)
struct W_PreMission_C_IsUIHidden final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_IsUIHidden) == 0x000001, "Wrong alignment on W_PreMission_C_IsUIHidden");
static_assert(sizeof(W_PreMission_C_IsUIHidden) == 0x000003, "Wrong size on W_PreMission_C_IsUIHidden");
static_assert(offsetof(W_PreMission_C_IsUIHidden, Return_Value) == 0x000000, "Member 'W_PreMission_C_IsUIHidden::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsUIHidden, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'W_PreMission_C_IsUIHidden::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_IsUIHidden, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_PreMission_C_IsUIHidden::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.AllowTeamSwapping
// 0x0050 (0x0050 - 0x0000)
struct W_PreMission_C_AllowTeamSwapping final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATrainingGS*                            K2Node_DynamicCast_AsTraining_GS;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACoopGS*                                K2Node_DynamicCast_AsCoop_GS;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391C[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVIPEscortGS*                           K2Node_DynamicCast_AsVIPEscort_GS;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_AllowTeamSwapping) == 0x000008, "Wrong alignment on W_PreMission_C_AllowTeamSwapping");
static_assert(sizeof(W_PreMission_C_AllowTeamSwapping) == 0x000050, "Wrong size on W_PreMission_C_AllowTeamSwapping");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, Return_Value) == 0x000000, "Member 'W_PreMission_C_AllowTeamSwapping::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_GetGameState_ReturnValue_1) == 0x000010, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, K2Node_DynamicCast_AsTraining_GS) == 0x000018, "Member 'W_PreMission_C_AllowTeamSwapping::K2Node_DynamicCast_AsTraining_GS' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_PreMission_C_AllowTeamSwapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, K2Node_DynamicCast_AsCoop_GS) == 0x000028, "Member 'W_PreMission_C_AllowTeamSwapping::K2Node_DynamicCast_AsCoop_GS' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'W_PreMission_C_AllowTeamSwapping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_Not_PreBool_ReturnValue_1) == 0x000032, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_GetGameState_ReturnValue_2) == 0x000038, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, K2Node_DynamicCast_AsVIPEscort_GS) == 0x000040, "Member 'W_PreMission_C_AllowTeamSwapping::K2Node_DynamicCast_AsVIPEscort_GS' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'W_PreMission_C_AllowTeamSwapping::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_Not_PreBool_ReturnValue_2) == 0x000049, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllowTeamSwapping, CallFunc_BooleanAND_ReturnValue_1) == 0x00004B, "Member 'W_PreMission_C_AllowTeamSwapping::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.GetNumPlayers
// 0x0050 (0x0050 - 0x0000)
struct W_PreMission_C_GetNumPlayers final 
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x0020(0x0010)(ReferenceParm)
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue_1;      // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_C_GetNumPlayers) == 0x000008, "Wrong alignment on W_PreMission_C_GetNumPlayers");
static_assert(sizeof(W_PreMission_C_GetNumPlayers) == 0x000050, "Wrong size on W_PreMission_C_GetNumPlayers");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, Return_Value) == 0x000000, "Member 'W_PreMission_C_GetNumPlayers::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_C_GetNumPlayers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_PreMission_C_GetNumPlayers::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_C_GetNumPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x000020, "Member 'W_PreMission_C_GetNumPlayers::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, CallFunc_GetPlayerStatesOfTeam_ReturnValue_1) == 0x000030, "Member 'W_PreMission_C_GetNumPlayers::CallFunc_GetPlayerStatesOfTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'W_PreMission_C_GetNumPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'W_PreMission_C_GetNumPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_GetNumPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'W_PreMission_C_GetNumPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission.W_PreMission_C.AllPlayersReady
// 0x0078 (0x0078 - 0x0000)
struct W_PreMission_C_AllPlayersReady final 
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3920[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3921[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue;        // 0x0038(0x0010)(ReferenceParm)
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOfTeam_ReturnValue_1;      // 0x0048(0x0010)(ReferenceParm)
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_C_AllPlayersReady) == 0x000008, "Wrong alignment on W_PreMission_C_AllPlayersReady");
static_assert(sizeof(W_PreMission_C_AllPlayersReady) == 0x000078, "Wrong size on W_PreMission_C_AllPlayersReady");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, Return_Value) == 0x000000, "Member 'W_PreMission_C_AllPlayersReady::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_PreMission_C_AllPlayersReady::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_PreMission_C_AllPlayersReady::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'W_PreMission_C_AllPlayersReady::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'W_PreMission_C_AllPlayersReady::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000028, "Member 'W_PreMission_C_AllPlayersReady::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_PreMission_C_AllPlayersReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_GetPlayerStatesOfTeam_ReturnValue) == 0x000038, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_GetPlayerStatesOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_GetPlayerStatesOfTeam_ReturnValue_1) == 0x000048, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_GetPlayerStatesOfTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Array_Get_Item) == 0x000058, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_C_AllPlayersReady, CallFunc_Less_IntInt_ReturnValue_1) == 0x000071, "Member 'W_PreMission_C_AllPlayersReady::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

