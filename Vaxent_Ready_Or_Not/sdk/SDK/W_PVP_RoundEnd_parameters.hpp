#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PVP_RoundEnd

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.ExecuteUbergraph_W_PVP_RoundEnd
// 0x01A8 (0x01A8 - 0x0000)
struct W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4403[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4404[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetWinningTeamTextColor_Return_Value;     // 0x0060(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4405[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetWinningTeamRibbonColor_Return_Value;   // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4406[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRoundWinningTeamText_Return_Value;     // 0x00A0(0x0018)()
	int32                                         CallFunc_GetSWATScore_Return_Value;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMLOScore_Return_Value;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00D8(0x0018)()
	class FText                                   CallFunc_GetWinningTaglineText_Return_Value;       // 0x00F0(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State_1;    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4407[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue_1;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0190(0x0018)()
};
static_assert(alignof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd");
static_assert(sizeof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd) == 0x0001A8, "Wrong size on W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, EntryPoint) == 0x000000, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000008, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000050, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetWinningTeamTextColor_Return_Value) == 0x000060, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetWinningTeamTextColor_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetWinningTeamRibbonColor_Return_Value) == 0x00008C, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetWinningTeamRibbonColor_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetRoundWinningTeamText_Return_Value) == 0x0000A0, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetRoundWinningTeamText_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetSWATScore_Return_Value) == 0x0000B8, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetSWATScore_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetMLOScore_Return_Value) == 0x0000BC, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetMLOScore_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C0, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000D8, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetWinningTaglineText_Return_Value) == 0x0000F0, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetWinningTaglineText_Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetGameState_ReturnValue_1) == 0x000108, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_DynamicCast_AsReady_or_Not_Game_State_1) == 0x000110, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_DynamicCast_AsReady_or_Not_Game_State_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_GetReadyOrNotGameState_ReturnValue_1) == 0x000120, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_GetReadyOrNotGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, K2Node_MakeArray_Array) == 0x000168, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_Format_ReturnValue) == 0x000178, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd, CallFunc_TextToUpper_ReturnValue) == 0x000190, "Member 'W_PVP_RoundEnd_C_ExecuteUbergraph_W_PVP_RoundEnd::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetWinningTeamTextColor
// 0x0128 (0x0128 - 0x0000)
struct W_PVP_RoundEnd_C_GetWinningTeamTextColor final 
{
public:
	struct FSlateColor                            Return_Value;                                      // 0x0000(0x0028)(Parm, OutParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4408[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamType                                     CallFunc_GetTeamType_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamType_ReturnValue_1;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4409[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0080(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00A8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x00D0(0x0028)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_440A[0x5];                                     // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetWinningTeamTextColor) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetWinningTeamTextColor");
static_assert(sizeof(W_PVP_RoundEnd_C_GetWinningTeamTextColor) == 0x000128, "Wrong size on W_PVP_RoundEnd_C_GetWinningTeamTextColor");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetPlayerController_ReturnValue_1) == 0x000030, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_DynamicCast_AsReady_or_Not_Player_Controller) == 0x000038, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_DynamicCast_AsReady_or_Not_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1) == 0x000048, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetTeamType_ReturnValue) == 0x000051, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetTeamType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetTeamType_ReturnValue_1) == 0x000052, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetTeamType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_MakeStruct_SlateColor_1) == 0x000080, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_MakeStruct_SlateColor_2) == 0x0000A8, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_MakeStruct_SlateColor_3) == 0x0000D0, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetGameState_ReturnValue) == 0x0000F8, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetPlayerController_ReturnValue_2) == 0x000100, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000108, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_HasAuthority_ReturnValue) == 0x000111, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000112, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000118, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamTextColor, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000120, "Member 'W_PVP_RoundEnd_C_GetWinningTeamTextColor::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetWinningTeamRibbonColor
// 0x0070 (0x0070 - 0x0000)
struct W_PVP_RoundEnd_C_GetWinningTeamRibbonColor final 
{
public:
	struct FLinearColor                           Return_Value;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_440B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamType                                     CallFunc_GetTeamType_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamType_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_440C[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_440D[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetWinningTeamRibbonColor");
static_assert(sizeof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor) == 0x000070, "Wrong size on W_PVP_RoundEnd_C_GetWinningTeamRibbonColor");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, K2Node_DynamicCast_AsReady_or_Not_Player_Controller) == 0x000020, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::K2Node_DynamicCast_AsReady_or_Not_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1) == 0x000030, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetTeamType_ReturnValue) == 0x000039, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetTeamType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetTeamType_ReturnValue_1) == 0x00003A, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetTeamType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetPlayerController_ReturnValue_2) == 0x000048, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000050, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_HasAuthority_ReturnValue) == 0x000059, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000060, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTeamRibbonColor, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000068, "Member 'W_PVP_RoundEnd_C_GetWinningTeamRibbonColor::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetLosingTeamTextColor
// 0x00B0 (0x00B0 - 0x0000)
struct W_PVP_RoundEnd_C_GetLosingTeamTextColor final 
{
public:
	struct FSlateColor                            Return_Value;                                      // 0x0000(0x0028)(Parm, OutParm)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_440E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0060(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0088(0x0028)()
};
static_assert(alignof(W_PVP_RoundEnd_C_GetLosingTeamTextColor) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetLosingTeamTextColor");
static_assert(sizeof(W_PVP_RoundEnd_C_GetLosingTeamTextColor) == 0x0000B0, "Wrong size on W_PVP_RoundEnd_C_GetLosingTeamTextColor");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamTextColor, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetLosingTeamTextColor::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamTextColor, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetLosingTeamTextColor::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamTextColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'W_PVP_RoundEnd_C_GetLosingTeamTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamTextColor, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'W_PVP_RoundEnd_C_GetLosingTeamTextColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamTextColor, K2Node_MakeStruct_SlateColor_1) == 0x000060, "Member 'W_PVP_RoundEnd_C_GetLosingTeamTextColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamTextColor, K2Node_MakeStruct_SlateColor_2) == 0x000088, "Member 'W_PVP_RoundEnd_C_GetLosingTeamTextColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetLosingTeamRibbonColor
// 0x0020 (0x0020 - 0x0000)
struct W_PVP_RoundEnd_C_GetLosingTeamRibbonColor final 
{
public:
	struct FLinearColor                           Return_Value;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetLosingTeamRibbonColor) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetLosingTeamRibbonColor");
static_assert(sizeof(W_PVP_RoundEnd_C_GetLosingTeamRibbonColor) == 0x000020, "Wrong size on W_PVP_RoundEnd_C_GetLosingTeamRibbonColor");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamRibbonColor, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetLosingTeamRibbonColor::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamRibbonColor, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000010, "Member 'W_PVP_RoundEnd_C_GetLosingTeamRibbonColor::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetLosingTeamRibbonColor, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'W_PVP_RoundEnd_C_GetLosingTeamRibbonColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetRoundWinningTeamText
// 0x0048 (0x0048 - 0x0000)
struct W_PVP_RoundEnd_C_GetRoundWinningTeamText final 
{
public:
	class FText                                   Return_Value;                                      // 0x0000(0x0018)(Parm, OutParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            K2Node_DynamicCast_AsReady_or_Not_Player_Controller; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamType                                     CallFunc_GetTeamType_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_440F[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetRoundWinningTeamText) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetRoundWinningTeamText");
static_assert(sizeof(W_PVP_RoundEnd_C_GetRoundWinningTeamText) == 0x000048, "Wrong size on W_PVP_RoundEnd_C_GetRoundWinningTeamText");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, K2Node_DynamicCast_AsReady_or_Not_Player_Controller) == 0x000020, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::K2Node_DynamicCast_AsReady_or_Not_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, CallFunc_GetTeamType_ReturnValue) == 0x000029, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::CallFunc_GetTeamType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000038, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000042, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetRoundWinningTeamText, K2Node_SwitchEnum_CmpSuccess) == 0x000043, "Member 'W_PVP_RoundEnd_C_GetRoundWinningTeamText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetSWATScore
// 0x0030 (0x0030 - 0x0000)
struct W_PVP_RoundEnd_C_GetSWATScore final 
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4410[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4411[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetSWATScore) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetSWATScore");
static_assert(sizeof(W_PVP_RoundEnd_C_GetSWATScore) == 0x000030, "Wrong size on W_PVP_RoundEnd_C_GetSWATScore");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetSWATScore::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PVP_RoundEnd_C_GetSWATScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'W_PVP_RoundEnd_C_GetSWATScore::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000018, "Member 'W_PVP_RoundEnd_C_GetSWATScore::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_PVP_RoundEnd_C_GetSWATScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'W_PVP_RoundEnd_C_GetSWATScore::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetSWATScore, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetSWATScore::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetMLOScore
// 0x0030 (0x0030 - 0x0000)
struct W_PVP_RoundEnd_C_GetMLOScore final 
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4412[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4413[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetMLOScore) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetMLOScore");
static_assert(sizeof(W_PVP_RoundEnd_C_GetMLOScore) == 0x000030, "Wrong size on W_PVP_RoundEnd_C_GetMLOScore");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetMLOScore::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PVP_RoundEnd_C_GetMLOScore::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'W_PVP_RoundEnd_C_GetMLOScore::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000018, "Member 'W_PVP_RoundEnd_C_GetMLOScore::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_PVP_RoundEnd_C_GetMLOScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'W_PVP_RoundEnd_C_GetMLOScore::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetMLOScore, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetMLOScore::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");

// Function W_PVP_RoundEnd.W_PVP_RoundEnd_C.GetWinningTaglineText
// 0x0030 (0x0030 - 0x0000)
struct W_PVP_RoundEnd_C_GetWinningTaglineText final 
{
public:
	class FText                                   Return_Value;                                      // 0x0000(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PVP_RoundEnd_C_GetWinningTaglineText) == 0x000008, "Wrong alignment on W_PVP_RoundEnd_C_GetWinningTaglineText");
static_assert(sizeof(W_PVP_RoundEnd_C_GetWinningTaglineText) == 0x000030, "Wrong size on W_PVP_RoundEnd_C_GetWinningTaglineText");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, Return_Value) == 0x000000, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::Return_Value' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002A, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PVP_RoundEnd_C_GetWinningTaglineText, K2Node_SwitchEnum_CmpSuccess_2) == 0x00002B, "Member 'W_PVP_RoundEnd_C_GetWinningTaglineText::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

}

