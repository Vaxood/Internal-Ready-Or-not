#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldMap_MissionSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C
// 0x0198 (0x03F8 - 0x0260)
class UW_WorldMap_MissionSelect_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hide;                                              // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reveal;                                            // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_AcceptMission_1;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Div_Formation_Bot_1;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Div_Formation_Top_1;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Equipment_1;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_MissionImg;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_Formation_1;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SelectedMissionPanel_1;                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_ActiveShooterDifficulty;                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_BestGrade;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_BestTime;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Formation_1;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_MissionDescription;                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_MissionName;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSpawnPoints                           SpawnInfo;                                         // 0x02E8(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnSetMissionButtonClicked;                         // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   CurrentSpawn;                                      // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hidden;                                            // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426B[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             MissionSelectTexture;                              // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   MissionName;                                       // 0x03A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   MissionDifficulty;                                 // 0x03B8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FName                                   MissionURL;                                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   MissionDescription;                                // 0x03D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	ECOOPMode                                     ModeEnum;                                          // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OnSetMissionButtonClicked__DelegateSignature(class UW_WorldMap_MissionSelect_C* BtnClicked);
	void ExecuteUbergraph_W_WorldMap_MissionSelect(int32 EntryPoint, bool K2Node_Event_IsDesignTime, class UW_Button_C* K2Node_ComponentBoundEvent_Button, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsGameModeSelectable_ReturnValue);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature(class UW_Button_C* Button);
	void PreConstruct(bool IsDesignTime);
	void UpdateMissionScore(class FName SelectionMission, const class FString& LastLoadedScoreMission, const class FString& CallFunc_Conv_NameToString_ReturnValue, const struct FLevelDataLookupTable& CallFunc_GetMapDetailsFromName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const struct FBasicLevelStats& CallFunc_LoadLevelStats_OutStats, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue, const class FString& CallFunc_CalculateGradeLetterFromPercentage_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1);
	void OnShow(class FName SelectedMission, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool CallFunc_IsGameModeSelectable_ReturnValue, ESlateVisibility K2Node_Select_Default);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WorldMap_MissionSelect_C">();
	}
	static class UW_WorldMap_MissionSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WorldMap_MissionSelect_C>();
	}
};
static_assert(alignof(UW_WorldMap_MissionSelect_C) == 0x000008, "Wrong alignment on UW_WorldMap_MissionSelect_C");
static_assert(sizeof(UW_WorldMap_MissionSelect_C) == 0x0003F8, "Wrong size on UW_WorldMap_MissionSelect_C");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, UberGraphFrame) == 0x000260, "Member 'UW_WorldMap_MissionSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Hide) == 0x000268, "Member 'UW_WorldMap_MissionSelect_C::Hide' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Reveal) == 0x000270, "Member 'UW_WorldMap_MissionSelect_C::Reveal' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, btn_AcceptMission_1) == 0x000278, "Member 'UW_WorldMap_MissionSelect_C::btn_AcceptMission_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Div_Formation_Bot_1) == 0x000280, "Member 'UW_WorldMap_MissionSelect_C::Div_Formation_Bot_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Div_Formation_Top_1) == 0x000288, "Member 'UW_WorldMap_MissionSelect_C::Div_Formation_Top_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, HB_Equipment_1) == 0x000290, "Member 'UW_WorldMap_MissionSelect_C::HB_Equipment_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Img_MissionImg) == 0x000298, "Member 'UW_WorldMap_MissionSelect_C::Img_MissionImg' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Lbl_Formation_1) == 0x0002A0, "Member 'UW_WorldMap_MissionSelect_C::Lbl_Formation_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, SelectedMissionPanel_1) == 0x0002A8, "Member 'UW_WorldMap_MissionSelect_C::SelectedMissionPanel_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, SizeBox) == 0x0002B0, "Member 'UW_WorldMap_MissionSelect_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Txt_ActiveShooterDifficulty) == 0x0002B8, "Member 'UW_WorldMap_MissionSelect_C::Txt_ActiveShooterDifficulty' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Txt_BestGrade) == 0x0002C0, "Member 'UW_WorldMap_MissionSelect_C::Txt_BestGrade' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Txt_BestTime) == 0x0002C8, "Member 'UW_WorldMap_MissionSelect_C::Txt_BestTime' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Txt_Formation_1) == 0x0002D0, "Member 'UW_WorldMap_MissionSelect_C::Txt_Formation_1' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Txt_MissionDescription) == 0x0002D8, "Member 'UW_WorldMap_MissionSelect_C::Txt_MissionDescription' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Txt_MissionName) == 0x0002E0, "Member 'UW_WorldMap_MissionSelect_C::Txt_MissionName' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, SpawnInfo) == 0x0002E8, "Member 'UW_WorldMap_MissionSelect_C::SpawnInfo' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, OnSetMissionButtonClicked) == 0x000378, "Member 'UW_WorldMap_MissionSelect_C::OnSetMissionButtonClicked' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, CurrentSpawn) == 0x000388, "Member 'UW_WorldMap_MissionSelect_C::CurrentSpawn' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, Hidden) == 0x000390, "Member 'UW_WorldMap_MissionSelect_C::Hidden' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, MissionSelectTexture) == 0x000398, "Member 'UW_WorldMap_MissionSelect_C::MissionSelectTexture' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, MissionName) == 0x0003A0, "Member 'UW_WorldMap_MissionSelect_C::MissionName' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, MissionDifficulty) == 0x0003B8, "Member 'UW_WorldMap_MissionSelect_C::MissionDifficulty' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, MissionURL) == 0x0003D0, "Member 'UW_WorldMap_MissionSelect_C::MissionURL' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, MissionDescription) == 0x0003D8, "Member 'UW_WorldMap_MissionSelect_C::MissionDescription' has a wrong offset!");
static_assert(offsetof(UW_WorldMap_MissionSelect_C, ModeEnum) == 0x0003F0, "Member 'UW_WorldMap_MissionSelect_C::ModeEnum' has a wrong offset!");

}

