#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_Style_Text_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnSlotClicked__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_LoadoutSlot_C_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnSlotHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnSlotHovered__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_OnSlotHovered__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnSlotHovered__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_OnSlotHovered__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_LoadoutSlot_C_OnSlotHovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnSlotUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_LoadoutSlot_C_OnSlotUnhovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnSlotDoubleClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_LoadoutSlot_C_OnSlotDoubleClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ExecuteUbergraph_W_LoadoutSlot
// 0x05A8 (0x05A8 - 0x0000)
struct W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemData_1;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArmourMaterial*                        K2Node_CustomEvent_ArmourMaterial;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        K2Node_CustomEvent_ArmourMaterial_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Primary;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E8[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AmmoType;                       // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E9[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Weapon;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AmmoCount;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EA[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EB[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetAmmoLookupDataTable_ReturnValue;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x00D0(0x0160)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Primary_1;                      // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EC[0x1];                                     // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AmmoType_1;                     // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39ED[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Weapon_1;                       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AmmoCount_1;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EE[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemData;                       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0268(0x0188)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EF[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_AugmentText;                    // 0x03F8(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0410(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F0[0x3];                                     // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_OptionNameID;                         // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x0458(0x0050)()
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F1[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F2[0x4];                                     // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x04D0(0x0040)(HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0518(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F3[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0530(0x0018)()
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F4[0x6];                                     // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F5[0x3];                                     // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x056C(0x0008)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F6[0x3];                                     // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0578(0x0008)(NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F7[0x3];                                     // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F8[0x3];                                     // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay;                                // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F9[0x6];                                     // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot");
static_assert(sizeof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot) == 0x0005A8, "Wrong size on W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, EntryPoint) == 0x000000, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ItemData_1) == 0x000008, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ItemData_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ArmourMaterial) == 0x000010, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ArmourMaterial' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_ComponentBoundEvent_Button_2) == 0x000020, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetEndTime_ReturnValue) == 0x000028, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ArmourMaterial_1) == 0x000030, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ArmourMaterial_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Primary) == 0x000038, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Primary' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoType) == 0x00003C, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoType' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Weapon) == 0x000048, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoCount) == 0x000050, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoCount' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeArray_Array) == 0x000098, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000C1, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanOR_ReturnValue) == 0x0000C2, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetAmmoLookupDataTable_ReturnValue) == 0x0000C8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetAmmoLookupDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000D0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000230, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000231, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Primary_1) == 0x000232, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Primary_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoType_1) == 0x000234, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoType_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Weapon_1) == 0x000240, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Weapon_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AmmoCount_1) == 0x000248, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AmmoCount_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_ItemData) == 0x000250, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_ItemData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_ComponentBoundEvent_Button_1) == 0x000258, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_ComponentBoundEvent_Button) == 0x000260, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_ActiveLoadout) == 0x000268, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanAND_ReturnValue) == 0x0003F0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_AugmentText) == 0x0003F8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_AugmentText' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_MyGeometry) == 0x000410, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_InDeltaTime) == 0x000448, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_IsDesignTime) == 0x00044C, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_OptionNameID) == 0x000450, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_ItemCategory) == 0x000458, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_LoadoutWidget) == 0x0004A8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_IsValidClass_ReturnValue) == 0x0004B0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimation_ReturnValue) == 0x0004B8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_CurrentSlot) == 0x0004C0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_CustomEvent_Count) == 0x0004C8, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0004D0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_PageName) == 0x000510, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_MakeArray_Array_1) == 0x000518, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_IsGamepad) == 0x000528, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Format_ReturnValue_1) == 0x000530, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_ListItemObject) == 0x000548, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_bIsSelected) == 0x000550, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_bIsExpanded) == 0x000551, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimationForward_ReturnValue) == 0x000558, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000560, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000568, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_InFocusEvent_1) == 0x00056C, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanAND_ReturnValue_1) == 0x000574, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_InFocusEvent) == 0x000578, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x000580, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_HasUserFocus_ReturnValue) == 0x000588, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_Delay_1) == 0x00058C, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_Collapse) == 0x000590, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, K2Node_Event_Delay) == 0x000594, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000598, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_BooleanOR_ReturnValue_1) == 0x000599, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0005A0, "Member 'W_LoadoutSlot_C_ExecuteUbergraph_W_LoadoutSlot::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_LoadoutSlot_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Reveal) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_Reveal");
static_assert(sizeof(W_LoadoutSlot_C_Reveal) == 0x000004, "Wrong size on W_LoadoutSlot_C_Reveal");
static_assert(offsetof(W_LoadoutSlot_C_Reveal, Delay) == 0x000000, "Member 'W_LoadoutSlot_C_Reveal::Delay' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Collapse;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_Hide) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_Hide");
static_assert(sizeof(W_LoadoutSlot_C_Hide) == 0x000008, "Wrong size on W_LoadoutSlot_C_Hide");
static_assert(offsetof(W_LoadoutSlot_C_Hide, Delay) == 0x000000, "Member 'W_LoadoutSlot_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Hide, Param_Collapse) == 0x000004, "Member 'W_LoadoutSlot_C_Hide::Param_Collapse' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnRemovedFromFocusPath final 
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_OnRemovedFromFocusPath");
static_assert(sizeof(W_LoadoutSlot_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnRemovedFromFocusPath");
static_assert(offsetof(W_LoadoutSlot_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'W_LoadoutSlot_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnAddedToFocusPath final 
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_OnAddedToFocusPath");
static_assert(sizeof(W_LoadoutSlot_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnAddedToFocusPath");
static_assert(offsetof(W_LoadoutSlot_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_LoadoutSlot_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_BP_OnItemExpansionChanged final 
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(W_LoadoutSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on W_LoadoutSlot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(W_LoadoutSlot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'W_LoadoutSlot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_BP_OnItemSelectionChanged final 
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(W_LoadoutSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on W_LoadoutSlot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(W_LoadoutSlot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'W_LoadoutSlot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_OnListItemObjectSet final 
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_OnListItemObjectSet");
static_assert(sizeof(W_LoadoutSlot_C_OnListItemObjectSet) == 0x000008, "Wrong size on W_LoadoutSlot_C_OnListItemObjectSet");
static_assert(offsetof(W_LoadoutSlot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'W_LoadoutSlot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_SetInputMode) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetInputMode");
static_assert(sizeof(W_LoadoutSlot_C_SetInputMode) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetInputMode");
static_assert(offsetof(W_LoadoutSlot_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_LoadoutSlot_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ChangePage) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_ChangePage");
static_assert(sizeof(W_LoadoutSlot_C_ChangePage) == 0x000008, "Wrong size on W_LoadoutSlot_C_ChangePage");
static_assert(offsetof(W_LoadoutSlot_C_ChangePage, PageName) == 0x000000, "Member 'W_LoadoutSlot_C_ChangePage::PageName' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateAmmoCount
// 0x0004 (0x0004 - 0x0000)
struct W_LoadoutSlot_C_UpdateAmmoCount final 
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateAmmoCount) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_UpdateAmmoCount");
static_assert(sizeof(W_LoadoutSlot_C_UpdateAmmoCount) == 0x000004, "Wrong size on W_LoadoutSlot_C_UpdateAmmoCount");
static_assert(offsetof(W_LoadoutSlot_C_UpdateAmmoCount, Count) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateAmmoCount::Count' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_UpdateCurrentSlot final 
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateCurrentSlot");
static_assert(sizeof(W_LoadoutSlot_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_LoadoutSlot_C_UpdateCurrentSlot");
static_assert(offsetof(W_LoadoutSlot_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_LoadoutSlot_C_UpdateCurrentItemMap final 
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateCurrentItemMap");
static_assert(sizeof(W_LoadoutSlot_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_LoadoutSlot_C_UpdateCurrentItemMap");
static_assert(offsetof(W_LoadoutSlot_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_HeaderSubpageNavigation final 
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_HeaderSubpageNavigation");
static_assert(sizeof(W_LoadoutSlot_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_LoadoutSlot_C_HeaderSubpageNavigation");
static_assert(offsetof(W_LoadoutSlot_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_LoadoutSlot_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_PreConstruct");
static_assert(sizeof(W_LoadoutSlot_C_PreConstruct) == 0x000001, "Wrong size on W_LoadoutSlot_C_PreConstruct");
static_assert(offsetof(W_LoadoutSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LoadoutSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_LoadoutSlot_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Tick) == 0x000004, "Wrong alignment on W_LoadoutSlot_C_Tick");
static_assert(sizeof(W_LoadoutSlot_C_Tick) == 0x00003C, "Wrong size on W_LoadoutSlot_C_Tick");
static_assert(offsetof(W_LoadoutSlot_C_Tick, MyGeometry) == 0x000000, "Member 'W_LoadoutSlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Tick, InDeltaTime) == 0x000038, "Member 'W_LoadoutSlot_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateAugment
// 0x0018 (0x0018 - 0x0000)
struct W_LoadoutSlot_C_UpdateAugment final 
{
public:
	class FText                                   AugmentText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateAugment) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateAugment");
static_assert(sizeof(W_LoadoutSlot_C_UpdateAugment) == 0x000018, "Wrong size on W_LoadoutSlot_C_UpdateAugment");
static_assert(offsetof(W_LoadoutSlot_C_UpdateAugment, AugmentText) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateAugment::AugmentText' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.UpdateActiveLoadout
// 0x0188 (0x0188 - 0x0000)
struct W_LoadoutSlot_C_UpdateActiveLoadout final 
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_UpdateActiveLoadout");
static_assert(sizeof(W_LoadoutSlot_C_UpdateActiveLoadout) == 0x000188, "Wrong size on W_LoadoutSlot_C_UpdateActiveLoadout");
static_assert(offsetof(W_LoadoutSlot_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_LoadoutSlot_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ReinitializeItemData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_ReinitializeItemData final 
{
public:
	class UClass*                                 Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ReinitializeItemData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ReinitializeItemData");
static_assert(sizeof(W_LoadoutSlot_C_ReinitializeItemData) == 0x000008, "Wrong size on W_LoadoutSlot_C_ReinitializeItemData");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeItemData, Param_ItemData) == 0x000000, "Member 'W_LoadoutSlot_C_ReinitializeItemData::Param_ItemData' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.InitializeAmmoData
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_C_InitializeAmmoData final 
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param_AmmoType;                                    // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Weapon;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCount;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_InitializeAmmoData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_InitializeAmmoData");
static_assert(sizeof(W_LoadoutSlot_C_InitializeAmmoData) == 0x000020, "Wrong size on W_LoadoutSlot_C_InitializeAmmoData");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, Primary) == 0x000000, "Member 'W_LoadoutSlot_C_InitializeAmmoData::Primary' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, Param_AmmoType) == 0x000004, "Member 'W_LoadoutSlot_C_InitializeAmmoData::Param_AmmoType' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, Weapon) == 0x000010, "Member 'W_LoadoutSlot_C_InitializeAmmoData::Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_InitializeAmmoData, AmmoCount) == 0x000018, "Member 'W_LoadoutSlot_C_InitializeAmmoData::AmmoCount' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutSlot_C_BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.InitializeArmourMaterialData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_InitializeArmourMaterialData final 
{
public:
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_InitializeArmourMaterialData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_InitializeArmourMaterialData");
static_assert(sizeof(W_LoadoutSlot_C_InitializeArmourMaterialData) == 0x000008, "Wrong size on W_LoadoutSlot_C_InitializeArmourMaterialData");
static_assert(offsetof(W_LoadoutSlot_C_InitializeArmourMaterialData, ArmourMaterial) == 0x000000, "Member 'W_LoadoutSlot_C_InitializeArmourMaterialData::ArmourMaterial' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.InitializeItemData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_InitializeItemData final 
{
public:
	class UClass*                                 Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_InitializeItemData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_InitializeItemData");
static_assert(sizeof(W_LoadoutSlot_C_InitializeItemData) == 0x000008, "Wrong size on W_LoadoutSlot_C_InitializeItemData");
static_assert(offsetof(W_LoadoutSlot_C_InitializeItemData, Param_ItemData) == 0x000000, "Member 'W_LoadoutSlot_C_InitializeItemData::Param_ItemData' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ReinitializeArmorMaterialData
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_ReinitializeArmorMaterialData final 
{
public:
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ReinitializeArmorMaterialData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ReinitializeArmorMaterialData");
static_assert(sizeof(W_LoadoutSlot_C_ReinitializeArmorMaterialData) == 0x000008, "Wrong size on W_LoadoutSlot_C_ReinitializeArmorMaterialData");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeArmorMaterialData, ArmourMaterial) == 0x000000, "Member 'W_LoadoutSlot_C_ReinitializeArmorMaterialData::ArmourMaterial' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ReinitializeAmmoData
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_C_ReinitializeAmmoData final 
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param_AmmoType;                                    // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Weapon;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCount;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_ReinitializeAmmoData) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ReinitializeAmmoData");
static_assert(sizeof(W_LoadoutSlot_C_ReinitializeAmmoData) == 0x000020, "Wrong size on W_LoadoutSlot_C_ReinitializeAmmoData");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, Primary) == 0x000000, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::Primary' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, Param_AmmoType) == 0x000004, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::Param_AmmoType' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, Weapon) == 0x000010, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ReinitializeAmmoData, AmmoCount) == 0x000018, "Member 'W_LoadoutSlot_C_ReinitializeAmmoData::AmmoCount' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_SetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           Param_LoadoutWidget;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_SetLoadoutWidget");
static_assert(sizeof(W_LoadoutSlot_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_LoadoutSlot_C_SetLoadoutWidget");
static_assert(offsetof(W_LoadoutSlot_C_SetLoadoutWidget, Param_LoadoutWidget) == 0x000000, "Member 'W_LoadoutSlot_C_SetLoadoutWidget::Param_LoadoutWidget' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.Set Active Old
// 0x0230 (0x0230 - 0x0000)
struct W_LoadoutSlot_C_Set_Active_Old final 
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHoverState_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Style_Text                         K2Node_Select_Default;                             // 0x0050(0x00A0)(HasGetValueTypeHash)
	struct FST_Style_Text                         K2Node_Select_Default_1;                           // 0x00F0(0x00A0)(HasGetValueTypeHash)
	struct FST_Style_Text                         K2Node_Select_Default_2;                           // 0x0190(0x00A0)(HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_Set_Active_Old) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_Set_Active_Old");
static_assert(sizeof(W_LoadoutSlot_C_Set_Active_Old) == 0x000230, "Wrong size on W_LoadoutSlot_C_Set_Active_Old");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Param_IsActive) == 0x000000, "Member 'W_LoadoutSlot_C_Set_Active_Old::Param_IsActive' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_C_Set_Active_Old::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Temp_bool_Variable_1) == 0x000002, "Member 'W_LoadoutSlot_C_Set_Active_Old::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, Temp_bool_Variable_2) == 0x000003, "Member 'W_LoadoutSlot_C_Set_Active_Old::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_GetHoverState_ReturnValue) == 0x000024, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_GetHoverState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue_2) == 0x000028, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectFloat_ReturnValue_1) == 0x00003C, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, CallFunc_SelectColor_ReturnValue_3) == 0x000040, "Member 'W_LoadoutSlot_C_Set_Active_Old::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, K2Node_Select_Default) == 0x000050, "Member 'W_LoadoutSlot_C_Set_Active_Old::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, K2Node_Select_Default_1) == 0x0000F0, "Member 'W_LoadoutSlot_C_Set_Active_Old::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_Set_Active_Old, K2Node_Select_Default_2) == 0x000190, "Member 'W_LoadoutSlot_C_Set_Active_Old::K2Node_Select_Default_2' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetHoverState
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_GetHoverState final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_GetHoverState) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_GetHoverState");
static_assert(sizeof(W_LoadoutSlot_C_GetHoverState) == 0x000001, "Wrong size on W_LoadoutSlot_C_GetHoverState");
static_assert(offsetof(W_LoadoutSlot_C_GetHoverState, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_C_GetHoverState::ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetIsSuppressed
// 0x000E (0x000E - 0x0000)
struct W_LoadoutSlot_C_GetIsSuppressed final 
{
public:
	bool                                          IsSuppressed;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_GetIsSuppressed) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_GetIsSuppressed");
static_assert(sizeof(W_LoadoutSlot_C_GetIsSuppressed) == 0x00000E, "Wrong size on W_LoadoutSlot_C_GetIsSuppressed");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, IsSuppressed) == 0x000000, "Member 'W_LoadoutSlot_C_GetIsSuppressed::IsSuppressed' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_C_GetIsSuppressed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, Temp_bool_Variable_1) == 0x000002, "Member 'W_LoadoutSlot_C_GetIsSuppressed::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, Temp_bool_Variable_2) == 0x000003, "Member 'W_LoadoutSlot_C_GetIsSuppressed::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_IsEmpty_ReturnValue) == 0x000004, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_IsValidClass_ReturnValue) == 0x000006, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000007, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_IsValidClass_ReturnValue_1) == 0x000008, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x00000A, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'W_LoadoutSlot_C_GetIsSuppressed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, K2Node_Select_Default) == 0x00000C, "Member 'W_LoadoutSlot_C_GetIsSuppressed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetIsSuppressed, K2Node_Select_Default_1) == 0x00000D, "Member 'W_LoadoutSlot_C_GetIsSuppressed::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetLayout
// 0x0038 (0x0038 - 0x0000)
struct W_LoadoutSlot_C_SetLayout final 
{
public:
	bool                                          Param_MinimalLayout;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FF[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A00[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A01[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_3;                           // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_SetLayout) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_SetLayout");
static_assert(sizeof(W_LoadoutSlot_C_SetLayout) == 0x000038, "Wrong size on W_LoadoutSlot_C_SetLayout");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Param_MinimalLayout) == 0x000000, "Member 'W_LoadoutSlot_C_SetLayout::Param_MinimalLayout' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable_1) == 0x000002, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_byte_Variable) == 0x000003, "Member 'W_LoadoutSlot_C_SetLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_byte_Variable_1) == 0x000004, "Member 'W_LoadoutSlot_C_SetLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable_2) == 0x000005, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, Temp_bool_Variable_3) == 0x000006, "Member 'W_LoadoutSlot_C_SetLayout::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default) == 0x000010, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default_1) == 0x000014, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default_2) == 0x000018, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'W_LoadoutSlot_C_SetLayout::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetLayout, K2Node_Select_Default_3) == 0x000024, "Member 'W_LoadoutSlot_C_SetLayout::K2Node_Select_Default_3' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.RefreshItemInfo
// 0x00F0 (0x00F0 - 0x0000)
struct W_LoadoutSlot_C_RefreshItemInfo final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsSuppressed_IsSuppressed;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A02[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSWATArmour;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A03[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A04[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A05[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemClassText_Category_Text;           // 0x0090(0x0018)()
	class FText                                   CallFunc_GetLoadoutCategoryText_Category_Text;     // 0x00A8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00D8(0x0018)()
};
static_assert(alignof(W_LoadoutSlot_C_RefreshItemInfo) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_RefreshItemInfo");
static_assert(sizeof(W_LoadoutSlot_C_RefreshItemInfo) == 0x0000F0, "Wrong size on W_LoadoutSlot_C_RefreshItemInfo");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, Temp_bool_Variable) == 0x000000, "Member 'W_LoadoutSlot_C_RefreshItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, Temp_bool_Variable_1) == 0x000001, "Member 'W_LoadoutSlot_C_RefreshItemInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_GetIsSuppressed_IsSuppressed) == 0x000002, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_GetIsSuppressed_IsSuppressed' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_ClassDynamicCast_AsSWATArmour) == 0x000008, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_ClassDynamicCast_AsSWATArmour' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_MakeArray_Array) == 0x000058, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_Format_ReturnValue) == 0x000070, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000088, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_GetItemClassText_Category_Text) == 0x000090, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_GetItemClassText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, CallFunc_GetLoadoutCategoryText_Category_Text) == 0x0000A8, "Member 'W_LoadoutSlot_C_RefreshItemInfo::CallFunc_GetLoadoutCategoryText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_Select_Default) == 0x0000C0, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshItemInfo, K2Node_Select_Default_1) == 0x0000D8, "Member 'W_LoadoutSlot_C_RefreshItemInfo::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetEquipped
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetEquipped final 
{
public:
	bool                                          Param_Equipped;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_SetEquipped) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetEquipped");
static_assert(sizeof(W_LoadoutSlot_C_SetEquipped) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetEquipped");
static_assert(offsetof(W_LoadoutSlot_C_SetEquipped, Param_Equipped) == 0x000000, "Member 'W_LoadoutSlot_C_SetEquipped::Param_Equipped' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetInvetoryCount
// 0x01F0 (0x01F0 - 0x0000)
struct W_LoadoutSlot_C_GetInvetoryCount final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A06[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldBP_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              CallFunc_GetItemData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A07[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeviceData                            CallFunc_Array_Get_Item;                           // 0x0030(0x0140)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A08[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0178(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A09[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0A[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0018)()
};
static_assert(alignof(W_LoadoutSlot_C_GetInvetoryCount) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetInvetoryCount");
static_assert(sizeof(W_LoadoutSlot_C_GetInvetoryCount) == 0x0001F0, "Wrong size on W_LoadoutSlot_C_GetInvetoryCount");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_LoadoutSlot_C_GetInvetoryCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_LoadoutSlot_C_GetInvetoryCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_GetWorldBP_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_GetWorldBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_GetItemData_ReturnValue) == 0x000020, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000171, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, K2Node_MakeStruct_FormatArgumentData) == 0x000178, "Member 'W_LoadoutSlot_C_GetInvetoryCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B8, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, K2Node_MakeArray_Array) == 0x0001C0, "Member 'W_LoadoutSlot_C_GetInvetoryCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetInvetoryCount, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'W_LoadoutSlot_C_GetInvetoryCount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetCountText
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_C_SetCountText final 
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_SetCountText) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_SetCountText");
static_assert(sizeof(W_LoadoutSlot_C_SetCountText) == 0x000020, "Wrong size on W_LoadoutSlot_C_SetCountText");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Text) == 0x000000, "Member 'W_LoadoutSlot_C_SetCountText::Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Temp_bool_Variable) == 0x000018, "Member 'W_LoadoutSlot_C_SetCountText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'W_LoadoutSlot_C_SetCountText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Temp_byte_Variable) == 0x00001A, "Member 'W_LoadoutSlot_C_SetCountText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'W_LoadoutSlot_C_SetCountText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, Temp_byte_Variable_1) == 0x00001C, "Member 'W_LoadoutSlot_C_SetCountText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_SetCountText, K2Node_Select_Default) == 0x00001D, "Member 'W_LoadoutSlot_C_SetCountText::K2Node_Select_Default' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.RefreshAmmoInfo
// 0x0028 (0x0028 - 0x0000)
struct W_LoadoutSlot_C_RefreshAmmoInfo final 
{
public:
	class FText                                   CallFunc_GetAmmoCategoryText_Text;                 // 0x0000(0x0018)()
	class UClass*                                 K2Node_ClassDynamicCast_AsBase_Magazine_Weapon;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_RefreshAmmoInfo) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_RefreshAmmoInfo");
static_assert(sizeof(W_LoadoutSlot_C_RefreshAmmoInfo) == 0x000028, "Wrong size on W_LoadoutSlot_C_RefreshAmmoInfo");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, CallFunc_GetAmmoCategoryText_Text) == 0x000000, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::CallFunc_GetAmmoCategoryText_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, K2Node_ClassDynamicCast_AsBase_Magazine_Weapon) == 0x000018, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::K2Node_ClassDynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_RefreshAmmoInfo, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'W_LoadoutSlot_C_RefreshAmmoInfo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetAmmoCategoryText
// 0x01C0 (0x01C0 - 0x0000)
struct W_LoadoutSlot_C_GetAmmoCategoryText final 
{
public:
	class UClass*                                 Param_ItemData;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsPepperball_Gun;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0098(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsTaser;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0C[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00B8(0x0018)()
	class UClass*                                 K2Node_ClassDynamicCast_AsShotgun;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0D[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBase_Magazine_Weapon;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0E[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0130(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0180(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x01A8(0x0018)()
};
static_assert(alignof(W_LoadoutSlot_C_GetAmmoCategoryText) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetAmmoCategoryText");
static_assert(sizeof(W_LoadoutSlot_C_GetAmmoCategoryText) == 0x0001C0, "Wrong size on W_LoadoutSlot_C_GetAmmoCategoryText");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, Param_ItemData) == 0x000000, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::Param_ItemData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, Text) == 0x000008, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array) == 0x000020, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsPepperball_Gun) == 0x000030, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsPepperball_Gun' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue) == 0x000040, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array_1) == 0x000098, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsTaser) == 0x0000A8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsTaser' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000B0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue_1) == 0x0000B8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsShotgun) == 0x0000D0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsShotgun' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess_2) == 0x0000D8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_AsBase_Magazine_Weapon) == 0x0000E0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_ClassDynamicCast_bSuccess_3) == 0x0000E8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array_2) == 0x000130, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue_2) == 0x000180, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, K2Node_MakeArray_Array_3) == 0x000198, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetAmmoCategoryText, CallFunc_Format_ReturnValue_3) == 0x0001A8, "Member 'W_LoadoutSlot_C_GetAmmoCategoryText::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetLoadoutWidget
// 0x0028 (0x0028 - 0x0000)
struct W_LoadoutSlot_C_GetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           Param_LoadoutWidget;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Loadout_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Loadout_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_GetLoadoutWidget) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetLoadoutWidget");
static_assert(sizeof(W_LoadoutSlot_C_GetLoadoutWidget) == 0x000028, "Wrong size on W_LoadoutSlot_C_GetLoadoutWidget");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, Param_LoadoutWidget) == 0x000000, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::Param_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetLoadoutWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_LoadoutSlot_C_GetLoadoutWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.ApplyIcon
// 0x0038 (0x0038 - 0x0000)
struct W_LoadoutSlot_C_ApplyIcon final 
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A10[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_ApplyIcon) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_ApplyIcon");
static_assert(sizeof(W_LoadoutSlot_C_ApplyIcon) == 0x000038, "Wrong size on W_LoadoutSlot_C_ApplyIcon");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_AppendMultiple_ReturnValue) == 0x000010, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_AppendMultiple_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000024, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000028, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Divide_IntInt_ReturnValue) == 0x00002C, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_ApplyIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'W_LoadoutSlot_C_ApplyIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetExclusiveLock
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetExclusiveLock final 
{
public:
	bool                                          CallFunc_IsDLCLocked_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_SetExclusiveLock) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetExclusiveLock");
static_assert(sizeof(W_LoadoutSlot_C_SetExclusiveLock) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetExclusiveLock");
static_assert(offsetof(W_LoadoutSlot_C_SetExclusiveLock, CallFunc_IsDLCLocked_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_C_SetExclusiveLock::CallFunc_IsDLCLocked_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.SetCompactLayout
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_SetCompactLayout final 
{
public:
	bool                                          Param_CompactLayout;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_SetCompactLayout) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_SetCompactLayout");
static_assert(sizeof(W_LoadoutSlot_C_SetCompactLayout) == 0x000001, "Wrong size on W_LoadoutSlot_C_SetCompactLayout");
static_assert(offsetof(W_LoadoutSlot_C_SetCompactLayout, Param_CompactLayout) == 0x000000, "Member 'W_LoadoutSlot_C_SetCompactLayout::Param_CompactLayout' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.DisableInteraction
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_DisableInteraction final 
{
public:
	bool                                          Disabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_DisableInteraction) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_DisableInteraction");
static_assert(sizeof(W_LoadoutSlot_C_DisableInteraction) == 0x000001, "Wrong size on W_LoadoutSlot_C_DisableInteraction");
static_assert(offsetof(W_LoadoutSlot_C_DisableInteraction, Disabled) == 0x000000, "Member 'W_LoadoutSlot_C_DisableInteraction::Disabled' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_BackPage) == 0x000001, "Wrong alignment on W_LoadoutSlot_C_BackPage");
static_assert(sizeof(W_LoadoutSlot_C_BackPage) == 0x000001, "Wrong size on W_LoadoutSlot_C_BackPage");
static_assert(offsetof(W_LoadoutSlot_C_BackPage, Handled) == 0x000000, "Member 'W_LoadoutSlot_C_BackPage::Handled' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetItemIcon
// 0x05D8 (0x05D8 - 0x0000)
struct W_LoadoutSlot_C_GetItemIcon final 
{
public:
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0000(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              OutImage;                                          // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UItemData*                              GameItemData;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundItem;                                         // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A11[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeaponData>                    Weapons;                                           // 0x0060(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A12[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A13[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A14[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A15[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A16[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A17[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A18[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A19[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArmourData                            CallFunc_Array_Get_Item;                           // 0x00D0(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1A[0x1];                                     // 0x012F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponData                            CallFunc_Array_Get_Item_1;                         // 0x0130(0x00B8)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FArmourData                            CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0058)()
	struct FDeviceData                            CallFunc_Array_Get_Item_3;                         // 0x0248(0x0140)()
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_3;      // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1B[0x2];                                     // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1C[0x2];                                     // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeviceData                            CallFunc_Array_Get_Item_4;                         // 0x0398(0x0140)()
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_4;      // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1D[0x1];                                     // 0x04DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1E[0x4];                                     // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponData                            CallFunc_Array_Get_Item_5;                         // 0x04E8(0x00B8)()
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_5;      // 0x05A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x05A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_5;        // 0x05AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1F[0x2];                                     // 0x05AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldBP_ReturnValue;                   // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A20[0x7];                                     // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              CallFunc_GetItemData_ReturnValue;                  // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_C_GetItemIcon) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetItemIcon");
static_assert(sizeof(W_LoadoutSlot_C_GetItemIcon) == 0x0005D8, "Wrong size on W_LoadoutSlot_C_GetItemIcon");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Image) == 0x000000, "Member 'W_LoadoutSlot_C_GetItemIcon::Image' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, OutImage) == 0x000028, "Member 'W_LoadoutSlot_C_GetItemIcon::OutImage' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, GameItemData) == 0x000050, "Member 'W_LoadoutSlot_C_GetItemIcon::GameItemData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, FoundItem) == 0x000058, "Member 'W_LoadoutSlot_C_GetItemIcon::FoundItem' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Weapons) == 0x000060, "Member 'W_LoadoutSlot_C_GetItemIcon::Weapons' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_bool_True_if_break_was_hit_Variable) == 0x000070, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Not_PreBool_ReturnValue) == 0x00007C, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00007D, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Array_Index_Variable) == 0x000080, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000084, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000090, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000098, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Loop_Counter_Variable_3) == 0x0000A4, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0000AC, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Array_Index_Variable_2) == 0x0000B0, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000B4, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Array_Index_Variable_3) == 0x0000B8, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, K2Node_SwitchEnum_CmpSuccess) == 0x0000BC, "Member 'W_LoadoutSlot_C_GetItemIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Array_Index_Variable_4) == 0x0000C0, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Loop_Counter_Variable_4) == 0x0000C4, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Array_Index_Variable_5) == 0x0000CC, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00012C, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Less_IntInt_ReturnValue) == 0x00012D, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_bool_True_if_break_was_hit_Variable_4) == 0x00012E, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Length_ReturnValue_1) == 0x0001E8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001EC, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0001ED, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_BooleanAND_ReturnValue) == 0x0001EE, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001EF, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Get_Item_3) == 0x000248, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x000388, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_EqualEqual_ClassClass_ReturnValue_3) == 0x000389, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_EqualEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Length_ReturnValue_2) == 0x00038C, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Length_ReturnValue_3) == 0x000390, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Less_IntInt_ReturnValue_2) == 0x000394, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x000395, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Get_Item_4) == 0x000398, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Length_ReturnValue_4) == 0x0004D8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_EqualEqual_ClassClass_ReturnValue_4) == 0x0004DC, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_EqualEqual_ClassClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004DD, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x0004DE, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_int_Loop_Counter_Variable_5) == 0x0004E0, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Get_Item_5) == 0x0004E8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Array_Length_ReturnValue_5) == 0x0005A0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Less_IntInt_ReturnValue_4) == 0x0005A4, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_EqualEqual_ClassClass_ReturnValue_5) == 0x0005A5, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_EqualEqual_ClassClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_BooleanAND_ReturnValue_3) == 0x0005A6, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Less_IntInt_ReturnValue_5) == 0x0005A7, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Add_IntInt_ReturnValue_5) == 0x0005A8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_BooleanAND_ReturnValue_4) == 0x0005AC, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, Temp_bool_True_if_break_was_hit_Variable_5) == 0x0005AD, "Member 'W_LoadoutSlot_C_GetItemIcon::Temp_bool_True_if_break_was_hit_Variable_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_GetOwningPlayer_ReturnValue) == 0x0005B0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_GetWorldBP_ReturnValue) == 0x0005B8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_GetWorldBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_Not_PreBool_ReturnValue_5) == 0x0005C0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_GetItemData_ReturnValue) == 0x0005C8, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_C_GetItemIcon, CallFunc_BooleanAND_ReturnValue_5) == 0x0005D0, "Member 'W_LoadoutSlot_C_GetItemIcon::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function W_LoadoutSlot.W_LoadoutSlot_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_LoadoutSlot_C_GetFocusTarget");
static_assert(sizeof(W_LoadoutSlot_C_GetFocusTarget) == 0x000008, "Wrong size on W_LoadoutSlot_C_GetFocusTarget");
static_assert(offsetof(W_LoadoutSlot_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_LoadoutSlot_C_GetFocusTarget::Focus' has a wrong offset!");

}

