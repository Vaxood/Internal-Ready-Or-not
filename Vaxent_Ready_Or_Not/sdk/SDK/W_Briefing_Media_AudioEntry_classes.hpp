#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Media_AudioEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C
// 0x0108 (0x0390 - 0x0288)
class UW_Briefing_Media_AudioEntry_C final  : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimPlaying;                                       // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_AudioEntry;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_icon;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Rtxt_Transcript;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_Description;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_Name;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x02C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description;                                       // 0x02D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Transcript;                                        // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFMODEvent*                             FMODEvent;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaying;                                          // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3254[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAudio                          MissionAudioData;                                  // 0x0318(0x0060)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnClick;                                           // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bHovered;                                          // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPressed;                                          // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSelected;                                         // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnClick__DelegateSignature(class UW_Briefing_Media_AudioEntry_C* AudioEntry);
	void ExecuteUbergraph_W_Briefing_Media_AudioEntry(int32 EntryPoint, bool K2Node_Event_IsDesignTime, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button);
	void BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_4_Released__DelegateSignature();
	void BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature();
	void BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_2_Unhovered__DelegateSignature();
	void BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetIsPlaying(bool IsPlaying, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_TextIsNotEmpty_NotEmpty, ESlateVisibility K2Node_Select_Default);
	void UpdateText();
	void Select();
	void Deselect();
	void UpdateVisualState(bool Hovered, bool Pressed, bool Selected, bool Playing, const struct FLinearColor& CallFunc_GetIconColor_Color, const struct FSlateColor& CallFunc_GetTextColor_Color);
	void GetIconColor(struct FLinearColor* Color, const struct FLinearColor& CallFunc_GetColorByName_LinearColor, const struct FSlateColor& CallFunc_GetColorByName_SlateColor, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_1, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_1, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_2, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_2, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_1, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_3, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_3, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_2, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_4, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_4, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_3, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_4);
	void SetHoverState(bool Hovered);
	void SetPressedState(bool Pressed);
	void GetTextColor(struct FSlateColor* Color, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, const struct FLinearColor& CallFunc_GetColorByName_LinearColor, const struct FSlateColor& CallFunc_GetColorByName_SlateColor, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_1, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_1, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_2, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_2, const struct FSlateColor& K2Node_Select_Default, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_3, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_3, const struct FLinearColor& CallFunc_GetColorByName_LinearColor_4, const struct FSlateColor& CallFunc_GetColorByName_SlateColor_4, const struct FSlateColor& K2Node_Select_Default_1, const struct FSlateColor& K2Node_Select_Default_2, const struct FSlateColor& K2Node_Select_Default_3);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_Media_AudioEntry_C">();
	}
	static class UW_Briefing_Media_AudioEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_Media_AudioEntry_C>();
	}
};
static_assert(alignof(UW_Briefing_Media_AudioEntry_C) == 0x000008, "Wrong alignment on UW_Briefing_Media_AudioEntry_C");
static_assert(sizeof(UW_Briefing_Media_AudioEntry_C) == 0x000390, "Wrong size on UW_Briefing_Media_AudioEntry_C");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, UberGraphFrame) == 0x000288, "Member 'UW_Briefing_Media_AudioEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, AnimPlaying) == 0x000290, "Member 'UW_Briefing_Media_AudioEntry_C::AnimPlaying' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, btn_AudioEntry) == 0x000298, "Member 'UW_Briefing_Media_AudioEntry_C::btn_AudioEntry' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Img_icon) == 0x0002A0, "Member 'UW_Briefing_Media_AudioEntry_C::Img_icon' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Rtxt_Transcript) == 0x0002A8, "Member 'UW_Briefing_Media_AudioEntry_C::Rtxt_Transcript' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Txt_Description) == 0x0002B0, "Member 'UW_Briefing_Media_AudioEntry_C::Txt_Description' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Txt_Name) == 0x0002B8, "Member 'UW_Briefing_Media_AudioEntry_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Title) == 0x0002C0, "Member 'UW_Briefing_Media_AudioEntry_C::Title' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Description) == 0x0002D8, "Member 'UW_Briefing_Media_AudioEntry_C::Description' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Transcript) == 0x0002F0, "Member 'UW_Briefing_Media_AudioEntry_C::Transcript' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, FMODEvent) == 0x000308, "Member 'UW_Briefing_Media_AudioEntry_C::FMODEvent' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bPlaying) == 0x000310, "Member 'UW_Briefing_Media_AudioEntry_C::bPlaying' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, MissionAudioData) == 0x000318, "Member 'UW_Briefing_Media_AudioEntry_C::MissionAudioData' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, OnClick) == 0x000378, "Member 'UW_Briefing_Media_AudioEntry_C::OnClick' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bHovered) == 0x000388, "Member 'UW_Briefing_Media_AudioEntry_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bPressed) == 0x000389, "Member 'UW_Briefing_Media_AudioEntry_C::bPressed' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bSelected) == 0x00038A, "Member 'UW_Briefing_Media_AudioEntry_C::bSelected' has a wrong offset!");

}

