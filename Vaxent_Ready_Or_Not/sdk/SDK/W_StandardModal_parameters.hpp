#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardModal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_StandardModal.W_StandardModal_C.OnOkClicked__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_OnOkClicked__DelegateSignature final 
{
public:
	class UW_StandardModal_C*                     CallingModal;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextEntry;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_OnOkClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_OnOkClicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_OnOkClicked__DelegateSignature) == 0x000020, "Wrong size on W_StandardModal_C_OnOkClicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_OnOkClicked__DelegateSignature, CallingModal) == 0x000000, "Member 'W_StandardModal_C_OnOkClicked__DelegateSignature::CallingModal' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnOkClicked__DelegateSignature, TextEntry) == 0x000008, "Member 'W_StandardModal_C_OnOkClicked__DelegateSignature::TextEntry' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnApplyClicked__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_OnApplyClicked__DelegateSignature final 
{
public:
	class UW_StandardModal_C*                     CallingModal;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextEntry;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_OnApplyClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_OnApplyClicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_OnApplyClicked__DelegateSignature) == 0x000020, "Wrong size on W_StandardModal_C_OnApplyClicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_OnApplyClicked__DelegateSignature, CallingModal) == 0x000000, "Member 'W_StandardModal_C_OnApplyClicked__DelegateSignature::CallingModal' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnApplyClicked__DelegateSignature, TextEntry) == 0x000008, "Member 'W_StandardModal_C_OnApplyClicked__DelegateSignature::TextEntry' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnTextCommitted__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_OnTextCommitted__DelegateSignature final 
{
public:
	class UW_StandardModal_C*                     CallingModal;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextEntry;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_OnTextCommitted__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_OnTextCommitted__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_OnTextCommitted__DelegateSignature) == 0x000020, "Wrong size on W_StandardModal_C_OnTextCommitted__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_OnTextCommitted__DelegateSignature, CallingModal) == 0x000000, "Member 'W_StandardModal_C_OnTextCommitted__DelegateSignature::CallingModal' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnTextCommitted__DelegateSignature, TextEntry) == 0x000008, "Member 'W_StandardModal_C_OnTextCommitted__DelegateSignature::TextEntry' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.ExecuteUbergraph_W_StandardModal
// 0x0198 (0x0198 - 0x0000)
struct W_StandardModal_C_ExecuteUbergraph_W_StandardModal final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAB[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrentOffset)>          K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x001C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurrentOffset;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EAC[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAD[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x00B0(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EAE[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAF[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB0[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB1[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB2[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB3[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0110(0x0018)(ConstParm)
	bool                                          CallFunc_IsTextOverMax_ReturnValue;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB4[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0130(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
};
static_assert(alignof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal) == 0x000008, "Wrong alignment on W_StandardModal_C_ExecuteUbergraph_W_StandardModal");
static_assert(sizeof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal) == 0x000198, "Wrong size on W_StandardModal_C_ExecuteUbergraph_W_StandardModal");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, EntryPoint) == 0x000000, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_bool_Variable) == 0x000004, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable) == 0x000005, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_1) == 0x000006, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_bool_Variable_1) == 0x000007, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_2) == 0x000008, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_3) == 0x000009, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetCachedGeometry_ReturnValue) == 0x00001C, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetDesiredSize_ReturnValue) == 0x000054, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetLocalSize_ReturnValue) == 0x00005C, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X) == 0x000064, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_1) == 0x00006C, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_1) == 0x000070, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetScrollOffset_ReturnValue) == 0x000074, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CustomEvent_CurrentOffset) == 0x00007C, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CustomEvent_CurrentOffset' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000080, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Less_FloatFloat_ReturnValue) == 0x000084, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Event_IsDesignTime) == 0x000085, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Button_2) == 0x000090, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Button_1) == 0x000098, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Button) == 0x0000A0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_TextIsEmpty_ReturnValue) == 0x0000A8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_4) == 0x0000A9, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Text_1) == 0x0000B0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_CommitMethod) == 0x0000C8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C9, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_5) == 0x0000CA, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_bool_Variable_2) == 0x0000CB, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000D0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Select_Default) == 0x0000D8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Select_Default_1) == 0x0000D9, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Select_Default_2) == 0x0000DA, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_VSize2D_ReturnValue) == 0x0000DC, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_2) == 0x0000E4, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_2) == 0x0000E8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000EC, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_3) == 0x0000F0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_3) == 0x0000F4, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_4) == 0x0000F8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_4) == 0x0000FC, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000100, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_5) == 0x000104, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_5) == 0x000108, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Text) == 0x000110, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_IsTextOverMax_ReturnValue) == 0x000128, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_IsTextOverMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_FormatArgumentData) == 0x000130, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeArray_Array) == 0x000170, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Format_ReturnValue) == 0x000180, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final 
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature final 
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_ApplyButton2_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_OkButton2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_CancelButton2_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_StandardModal_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardModal_C_PreConstruct) == 0x000001, "Wrong alignment on W_StandardModal_C_PreConstruct");
static_assert(sizeof(W_StandardModal_C_PreConstruct) == 0x000001, "Wrong size on W_StandardModal_C_PreConstruct");
static_assert(offsetof(W_StandardModal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_StandardModal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnUserScrolled_Event_0
// 0x0004 (0x0004 - 0x0000)
struct W_StandardModal_C_OnUserScrolled_Event_0 final 
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_OnUserScrolled_Event_0) == 0x000004, "Wrong alignment on W_StandardModal_C_OnUserScrolled_Event_0");
static_assert(sizeof(W_StandardModal_C_OnUserScrolled_Event_0) == 0x000004, "Wrong size on W_StandardModal_C_OnUserScrolled_Event_0");
static_assert(offsetof(W_StandardModal_C_OnUserScrolled_Event_0, CurrentOffset) == 0x000000, "Member 'W_StandardModal_C_OnUserScrolled_Event_0::CurrentOffset' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.Get_OkButton_bIsEnabled_0
// 0x0004 (0x0004 - 0x0000)
struct W_StandardModal_C_Get_OkButton_bIsEnabled_0 final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardModal_C_Get_OkButton_bIsEnabled_0) == 0x000001, "Wrong alignment on W_StandardModal_C_Get_OkButton_bIsEnabled_0");
static_assert(sizeof(W_StandardModal_C_Get_OkButton_bIsEnabled_0) == 0x000004, "Wrong size on W_StandardModal_C_Get_OkButton_bIsEnabled_0");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.ConfirmTextEntry
// 0x0030 (0x0030 - 0x0000)
struct W_StandardModal_C_ConfirmTextEntry final 
{
public:
	class FText                                   ConfirmTitleText;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ConfirmDescriptionText;                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_ConfirmTextEntry) == 0x000008, "Wrong alignment on W_StandardModal_C_ConfirmTextEntry");
static_assert(sizeof(W_StandardModal_C_ConfirmTextEntry) == 0x000030, "Wrong size on W_StandardModal_C_ConfirmTextEntry");
static_assert(offsetof(W_StandardModal_C_ConfirmTextEntry, ConfirmTitleText) == 0x000000, "Member 'W_StandardModal_C_ConfirmTextEntry::ConfirmTitleText' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ConfirmTextEntry, ConfirmDescriptionText) == 0x000018, "Member 'W_StandardModal_C_ConfirmTextEntry::ConfirmDescriptionText' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.DisplayWarningText
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_DisplayWarningText final 
{
public:
	class FText                                   WarningText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_DisplayWarningText) == 0x000008, "Wrong alignment on W_StandardModal_C_DisplayWarningText");
static_assert(sizeof(W_StandardModal_C_DisplayWarningText) == 0x000020, "Wrong size on W_StandardModal_C_DisplayWarningText");
static_assert(offsetof(W_StandardModal_C_DisplayWarningText, WarningText) == 0x000000, "Member 'W_StandardModal_C_DisplayWarningText::WarningText' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_DisplayWarningText, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'W_StandardModal_C_DisplayWarningText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.SetDescriptionText
// 0x0018 (0x0018 - 0x0000)
struct W_StandardModal_C_SetDescriptionText final 
{
public:
	class FText                                   Param_ModalDescription;                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_SetDescriptionText) == 0x000008, "Wrong alignment on W_StandardModal_C_SetDescriptionText");
static_assert(sizeof(W_StandardModal_C_SetDescriptionText) == 0x000018, "Wrong size on W_StandardModal_C_SetDescriptionText");
static_assert(offsetof(W_StandardModal_C_SetDescriptionText, Param_ModalDescription) == 0x000000, "Member 'W_StandardModal_C_SetDescriptionText::Param_ModalDescription' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.IsTextOverMax
// 0x0038 (0x0038 - 0x0000)
struct W_StandardModal_C_IsTextOverMax final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB5[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardModal_C_IsTextOverMax) == 0x000008, "Wrong alignment on W_StandardModal_C_IsTextOverMax");
static_assert(sizeof(W_StandardModal_C_IsTextOverMax) == 0x000038, "Wrong size on W_StandardModal_C_IsTextOverMax");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_IsTextOverMax::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_Len_ReturnValue) == 0x000030, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.WarnTextOverMax
// 0x0068 (0x0068 - 0x0000)
struct W_StandardModal_C_WarnTextOverMax final 
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0050(0x0018)()
};
static_assert(alignof(W_StandardModal_C_WarnTextOverMax) == 0x000008, "Wrong alignment on W_StandardModal_C_WarnTextOverMax");
static_assert(sizeof(W_StandardModal_C_WarnTextOverMax) == 0x000068, "Wrong size on W_StandardModal_C_WarnTextOverMax");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'W_StandardModal_C_WarnTextOverMax::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, K2Node_MakeArray_Array) == 0x000040, "Member 'W_StandardModal_C_WarnTextOverMax::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, CallFunc_Format_ReturnValue) == 0x000050, "Member 'W_StandardModal_C_WarnTextOverMax::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.IsTextUnderMin
// 0x0038 (0x0038 - 0x0000)
struct W_StandardModal_C_IsTextUnderMin final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardModal_C_IsTextUnderMin) == 0x000008, "Wrong alignment on W_StandardModal_C_IsTextUnderMin");
static_assert(sizeof(W_StandardModal_C_IsTextUnderMin) == 0x000038, "Wrong size on W_StandardModal_C_IsTextUnderMin");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_IsTextUnderMin::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_Len_ReturnValue) == 0x000030, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.WarnTextUnderMin
// 0x0068 (0x0068 - 0x0000)
struct W_StandardModal_C_WarnTextUnderMin final 
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0050(0x0018)()
};
static_assert(alignof(W_StandardModal_C_WarnTextUnderMin) == 0x000008, "Wrong alignment on W_StandardModal_C_WarnTextUnderMin");
static_assert(sizeof(W_StandardModal_C_WarnTextUnderMin) == 0x000068, "Wrong size on W_StandardModal_C_WarnTextUnderMin");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'W_StandardModal_C_WarnTextUnderMin::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, K2Node_MakeArray_Array) == 0x000040, "Member 'W_StandardModal_C_WarnTextUnderMin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, CallFunc_Format_ReturnValue) == 0x000050, "Member 'W_StandardModal_C_WarnTextUnderMin::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.Confirm
// 0x0058 (0x0058 - 0x0000)
struct W_StandardModal_C_Confirm final 
{
public:
	bool                                          OkClicked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ApplyClicked;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TextInputConfirm;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB7[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0020(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x0038(0x0018)()
	bool                                          CallFunc_IsTextUnderMin_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTextOverMax_ReturnValue;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTextOverMax_ReturnValue_1;              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardModal_C_Confirm) == 0x000008, "Wrong alignment on W_StandardModal_C_Confirm");
static_assert(sizeof(W_StandardModal_C_Confirm) == 0x000058, "Wrong size on W_StandardModal_C_Confirm");
static_assert(offsetof(W_StandardModal_C_Confirm, OkClicked) == 0x000000, "Member 'W_StandardModal_C_Confirm::OkClicked' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, ApplyClicked) == 0x000001, "Member 'W_StandardModal_C_Confirm::ApplyClicked' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, TextInputConfirm) == 0x000002, "Member 'W_StandardModal_C_Confirm::TextInputConfirm' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_StandardModal_C_Confirm::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_GetText_ReturnValue_1) == 0x000020, "Member 'W_StandardModal_C_Confirm::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_GetText_ReturnValue_2) == 0x000038, "Member 'W_StandardModal_C_Confirm::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_IsTextUnderMin_ReturnValue) == 0x000050, "Member 'W_StandardModal_C_Confirm::CallFunc_IsTextUnderMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_IsTextOverMax_ReturnValue) == 0x000051, "Member 'W_StandardModal_C_Confirm::CallFunc_IsTextOverMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_IsTextOverMax_ReturnValue_1) == 0x000052, "Member 'W_StandardModal_C_Confirm::CallFunc_IsTextOverMax_ReturnValue_1' has a wrong offset!");

}

