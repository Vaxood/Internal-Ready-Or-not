#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_TacPhone

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ANIMBP_TacPhone.ANIMBP_TacPhone_C.ExecuteUbergraph_ANIMBP_TacPhone
// 0x0008 (0x0008 - 0x0000)
struct ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone) == 0x000004, "Wrong alignment on ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone");
static_assert(sizeof(ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone) == 0x000008, "Wrong size on ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone");
static_assert(offsetof(ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone, EntryPoint) == 0x000000, "Member 'ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone::EntryPoint' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ANIMBP_TacPhone_C_ExecuteUbergraph_ANIMBP_TacPhone::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function ANIMBP_TacPhone.ANIMBP_TacPhone_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ANIMBP_TacPhone_C_BlueprintUpdateAnimation final 
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_TacPhone_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ANIMBP_TacPhone_C_BlueprintUpdateAnimation");
static_assert(sizeof(ANIMBP_TacPhone_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ANIMBP_TacPhone_C_BlueprintUpdateAnimation");
static_assert(offsetof(ANIMBP_TacPhone_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ANIMBP_TacPhone_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ANIMBP_TacPhone.ANIMBP_TacPhone_C.Get Player Character
// 0x0040 (0x0040 - 0x0000)
struct ANIMBP_TacPhone_C_Get_Player_Character final 
{
public:
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_1;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4452[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANIMBP_TacPhone_C_Get_Player_Character) == 0x000008, "Wrong alignment on ANIMBP_TacPhone_C_Get_Player_Character");
static_assert(sizeof(ANIMBP_TacPhone_C_Get_Player_Character) == 0x000040, "Wrong size on ANIMBP_TacPhone_C_Get_Player_Character");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, PlayerCharacter) == 0x000000, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, CallFunc_GetOwningActor_ReturnValue_1) == 0x000010, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::CallFunc_GetOwningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, K2Node_DynamicCast_AsPlayer_Character) == 0x000018, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, K2Node_DynamicCast_AsPlayer_Character_1) == 0x000030, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_TacPhone_C_Get_Player_Character, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ANIMBP_TacPhone_C_Get_Player_Character::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ANIMBP_TacPhone.ANIMBP_TacPhone_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ANIMBP_TacPhone_C_AnimGraph final 
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ANIMBP_TacPhone_C_AnimGraph) == 0x000008, "Wrong alignment on ANIMBP_TacPhone_C_AnimGraph");
static_assert(sizeof(ANIMBP_TacPhone_C_AnimGraph) == 0x000010, "Wrong size on ANIMBP_TacPhone_C_AnimGraph");
static_assert(offsetof(ANIMBP_TacPhone_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ANIMBP_TacPhone_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

