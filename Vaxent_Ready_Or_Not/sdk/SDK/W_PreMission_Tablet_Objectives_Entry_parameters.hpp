#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Objectives_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_Objectives_Entry.W_PreMission_Tablet_Objectives_Entry_C.ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry
// 0x00E8 (0x00E8 - 0x0000)
struct W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveStatus                              CallFunc_GetObjectiveStatus_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322F[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AObjective*                             CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFormattedDescription_ReturnValue;      // 0x0050(0x0018)()
	class FText                                   CallFunc_GetFormattedName_ReturnValue;             // 0x0068(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3230[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedDescription_ReturnValue_1;    // 0x0088(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3231[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedName_ReturnValue_1;           // 0x00A8(0x0018)()
	class AObjective*                             K2Node_CustomEvent_Objective;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AObjective* Objective)>  K2Node_CreateDelegate_OutputDelegate;              // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class ADefuseBombThreats*                     K2Node_DynamicCast_AsDefuse_Bomb_Threats;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry");
static_assert(sizeof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry) == 0x0000E8, "Wrong size on W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_GetObjectiveStatus_ReturnValue) == 0x000044, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_GetObjectiveStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000048, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_GetFormattedDescription_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_GetFormattedDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_GetFormattedName_ReturnValue) == 0x000068, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_GetFormattedName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_IsValidClass_ReturnValue) == 0x000080, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_GetFormattedDescription_ReturnValue_1) == 0x000088, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_GetFormattedDescription_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, CallFunc_GetFormattedName_ReturnValue_1) == 0x0000A8, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::CallFunc_GetFormattedName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_CustomEvent_Objective) == 0x0000C0, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_CustomEvent_Objective' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x0000C8, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_DynamicCast_AsDefuse_Bomb_Threats) == 0x0000D8, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_DynamicCast_AsDefuse_Bomb_Threats' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'W_PreMission_Tablet_Objectives_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_PreMission_Tablet_Objectives_Entry.W_PreMission_Tablet_Objectives_Entry_C.OnObjectiveUpdated
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated final 
{
public:
	class AObjective*                             Param_Objective;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated");
static_assert(sizeof(W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated) == 0x000008, "Wrong size on W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated, Param_Objective) == 0x000000, "Member 'W_PreMission_Tablet_Objectives_Entry_C_OnObjectiveUpdated::Param_Objective' has a wrong offset!");

// Function W_PreMission_Tablet_Objectives_Entry.W_PreMission_Tablet_Objectives_Entry_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PreMission_Tablet_Objectives_Entry_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Objectives_Entry_C_Tick) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Objectives_Entry_C_Tick");
static_assert(sizeof(W_PreMission_Tablet_Objectives_Entry_C_Tick) == 0x00003C, "Wrong size on W_PreMission_Tablet_Objectives_Entry_C_Tick");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_Tick, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_Objectives_Entry_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PreMission_Tablet_Objectives_Entry_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PreMission_Tablet_Objectives_Entry.W_PreMission_Tablet_Objectives_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Objectives_Entry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Objectives_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Objectives_Entry_C_PreConstruct");
static_assert(sizeof(W_PreMission_Tablet_Objectives_Entry_C_PreConstruct) == 0x000001, "Wrong size on W_PreMission_Tablet_Objectives_Entry_C_PreConstruct");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PreMission_Tablet_Objectives_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PreMission_Tablet_Objectives_Entry.W_PreMission_Tablet_Objectives_Entry_C.UpdateObjectiveState
// 0x004C (0x004C - 0x0000)
struct W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState final 
{
public:
	EObjectiveStatus                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3232[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EObjectiveStatus                              CallFunc_GetObjectiveStatus_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveStatus                              Temp_byte_Variable_1;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_2;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_4;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3233[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState");
static_assert(sizeof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState) == 0x00004C, "Wrong size on W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_byte_Variable) == 0x000000, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_struct_Variable) == 0x000004, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_struct_Variable_1) == 0x000014, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_struct_Variable_2) == 0x000024, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, CallFunc_GetObjectiveStatus_ReturnValue) == 0x000035, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::CallFunc_GetObjectiveStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_byte_Variable_1) == 0x000036, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_byte_Variable_2) == 0x000037, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_byte_Variable_3) == 0x000038, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, Temp_byte_Variable_4) == 0x000039, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, K2Node_Select_Default) == 0x00003A, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState, K2Node_Select_Default_1) == 0x00003C, "Member 'W_PreMission_Tablet_Objectives_Entry_C_UpdateObjectiveState::K2Node_Select_Default_1' has a wrong offset!");

}

