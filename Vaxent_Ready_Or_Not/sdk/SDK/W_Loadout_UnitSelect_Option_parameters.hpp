#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_UnitSelect_Option

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.UnitOptionClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature final 
{
public:
	class UW_Loadout_UnitSelect_Option_C*         TriggeringOption;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature, TriggeringOption) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_UnitOptionClicked__DelegateSignature::TriggeringOption' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.ExecuteUbergraph_W_Loadout_UnitSelect_Option
// 0x0248 (0x0248 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_PageName;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0010(0x0188)()
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x01A0(0x0050)()
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_OptionNameID;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF9[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CFA[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay;                                // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFB[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x022C(0x0008)(NoDestructor)
	uint8                                         Pad_3CFC[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option) == 0x000248, "Wrong size on W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, EntryPoint) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, Temp_bool_Variable) == 0x000004, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, Temp_byte_Variable) == 0x000005, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, Temp_byte_Variable_1) == 0x000006, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_IsGamepad) == 0x000007, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_PageName) == 0x000008, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_ActiveLoadout) == 0x000010, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_CurrentSlot) == 0x000198, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_ItemCategory) == 0x0001A0, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_LoadoutWidget) == 0x0001F0, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_OptionNameID) == 0x0001F8, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_ComponentBoundEvent_Button) == 0x000200, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, CallFunc_PlayAnimationForward_ReturnValue) == 0x000208, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000210, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_CustomEvent_IsSelected) == 0x000218, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_Delay_1) == 0x00021C, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Select_Default) == 0x000220, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_Delay) == 0x000224, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_Collapse) == 0x000228, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, K2Node_Event_InFocusEvent) == 0x00022C, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, CallFunc_GetOwningPlayer_ReturnValue) == 0x000238, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option, CallFunc_HasUserFocus_ReturnValue) == 0x000240, "Member 'W_Loadout_UnitSelect_Option_C_ExecuteUbergraph_W_Loadout_UnitSelect_Option::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath final 
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_Hide) == 0x000004, "Wrong alignment on W_Loadout_UnitSelect_Option_C_Hide");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_Hide) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_Hide");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_Hide, Collapse) == 0x000004, "Member 'W_Loadout_UnitSelect_Option_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_Reveal) == 0x000004, "Wrong alignment on W_Loadout_UnitSelect_Option_C_Reveal");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_Reveal) == 0x000004, "Wrong size on W_Loadout_UnitSelect_Option_C_Reveal");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_SetSelected final 
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_SetSelected) == 0x000001, "Wrong alignment on W_Loadout_UnitSelect_Option_C_SetSelected");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_SetSelected) == 0x000001, "Wrong size on W_Loadout_UnitSelect_Option_C_SetSelected");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetSelected, IsSelected) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_SetSelected::IsSelected' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_BndEvt__W_Loadout_UnitSelect_Option_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation final 
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_SetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_SetLoadoutWidget");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_SetLoadoutWidget");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetLoadoutWidget, LoadoutWidget) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_SetLoadoutWidget::LoadoutWidget' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap final 
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot final 
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.UpdateActiveLoadout
// 0x0188 (0x0188 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout final 
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout) == 0x000188, "Wrong size on W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_UnitSelect_Option_C_ChangePage");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_ChangePage");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_UnitSelect_Option_C_SetInputMode");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_UnitSelect_Option_C_SetInputMode");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.SetNameText
// 0x00F8 (0x00F8 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_SetNameText final 
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FLinearColor                           CallFunc_GetPlayerTeamColor_LinearColor;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetPlayerTeamColor_SlateColor;            // 0x0038(0x0028)()
	struct FLinearColor                           CallFunc_GetPlayerTeamColor_LinearColor_1;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetPlayerTeamColor_SlateColor_1;          // 0x0070(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFD[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetPlayerTeamColor_LinearColor_2;         // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CFE[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetPlayerTeamColor_SlateColor_2;          // 0x00B0(0x0028)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFF[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E0(0x0018)()
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_SetNameText) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_SetNameText");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_SetNameText) == 0x0000F8, "Wrong size on W_Loadout_UnitSelect_Option_C_SetNameText");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_GetPlayerTeamColor_LinearColor) == 0x000028, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_GetPlayerTeamColor_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_GetPlayerTeamColor_SlateColor) == 0x000038, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_GetPlayerTeamColor_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_GetPlayerTeamColor_LinearColor_1) == 0x000060, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_GetPlayerTeamColor_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_GetPlayerTeamColor_SlateColor_1) == 0x000070, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_GetPlayerTeamColor_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_GetPlayerTeamColor_LinearColor_2) == 0x00009C, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_GetPlayerTeamColor_LinearColor_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_GetPlayerTeamColor_SlateColor_2) == 0x0000B0, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_GetPlayerTeamColor_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D8, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_SetNameText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E0, "Member 'W_Loadout_UnitSelect_Option_C_SetNameText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_UnitSelect_Option_C_BackPage");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_BackPage) == 0x000001, "Wrong size on W_Loadout_UnitSelect_Option_C_BackPage");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_BackPage::Handled' has a wrong offset!");

// Function W_Loadout_UnitSelect_Option.W_Loadout_UnitSelect_Option_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_UnitSelect_Option_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_UnitSelect_Option_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_UnitSelect_Option_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_UnitSelect_Option_C_GetFocusTarget) == 0x000008, "Wrong size on W_Loadout_UnitSelect_Option_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_UnitSelect_Option_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_UnitSelect_Option_C_GetFocusTarget::Focus' has a wrong offset!");

}

