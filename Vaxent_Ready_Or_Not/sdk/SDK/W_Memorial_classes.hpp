#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Memorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Memorial.W_Memorial_C
// 0x0070 (0x03A0 - 0x0330)
class UW_Memorial_C final  : public UMemorialWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB_MemorialCards;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                LeadingSpacer;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             MemorialScrollBox;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NoDeathsText;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerMemorial;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                TrailingSpacer;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_1;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_2;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_3;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_4;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageHeader;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CardSpacing;                                       // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CardRevealDelay;                                   // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Memorial(int32 EntryPoint, class UMaterialInstanceDynamic* CallFunc_GetEffectMaterial_ReturnValue, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool CallFunc_BackPage_Handled, const class FString& K2Node_ComponentBoundEvent_ButtonID, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void BndEvt__W_Memorial_W_PageHeader_K2Node_ComponentBoundEvent_2_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonID);
	void BP_OnActivated();
	void Construct();
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	bool BP_OnHandleBackAction(bool CallFunc_BackPage_Handled);
	void PopulateMemorial(float RevealDelay, bool bLastCard, class UW_MemorialCard_C* NewCard, class URosterCharacter* NewCharacter, class UW_MemorialCard_C* CallFunc_Create_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, ESlateVisibility CallFunc_GetSpacerVisibility_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, TArray<class URosterCharacter*>& CallFunc_GetMemorialCharacters_ReturnValue, class URosterCharacter* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput, TArray<class URosterCharacter*>& CallFunc_GetMemorialCharacters_ReturnValue_1, bool CallFunc_Array_IsValidIndex_ReturnValue);
	ESlateVisibility GetSpacerVisibility(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, const struct FVector2D& CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_GetDesiredSize_ReturnValue, float CallFunc_BreakVector2D_X_1, float CallFunc_BreakVector2D_Y_1, bool CallFunc_Greater_FloatFloat_ReturnValue, ESlateVisibility K2Node_Select_Default);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Memorial_C">();
	}
	static class UW_Memorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Memorial_C>();
	}
};
static_assert(alignof(UW_Memorial_C) == 0x000008, "Wrong alignment on UW_Memorial_C");
static_assert(sizeof(UW_Memorial_C) == 0x0003A0, "Wrong size on UW_Memorial_C");
static_assert(offsetof(UW_Memorial_C, UberGraphFrame) == 0x000330, "Member 'UW_Memorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, HB_MemorialCards) == 0x000338, "Member 'UW_Memorial_C::HB_MemorialCards' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, LeadingSpacer) == 0x000340, "Member 'UW_Memorial_C::LeadingSpacer' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, MemorialScrollBox) == 0x000348, "Member 'UW_Memorial_C::MemorialScrollBox' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, NoDeathsText) == 0x000350, "Member 'UW_Memorial_C::NoDeathsText' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, RetainerMemorial) == 0x000358, "Member 'UW_Memorial_C::RetainerMemorial' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, TrailingSpacer) == 0x000360, "Member 'UW_Memorial_C::TrailingSpacer' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard) == 0x000368, "Member 'UW_Memorial_C::W_MemorialCard' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_1) == 0x000370, "Member 'UW_Memorial_C::W_MemorialCard_1' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_2) == 0x000378, "Member 'UW_Memorial_C::W_MemorialCard_2' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_3) == 0x000380, "Member 'UW_Memorial_C::W_MemorialCard_3' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_4) == 0x000388, "Member 'UW_Memorial_C::W_MemorialCard_4' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_PageHeader) == 0x000390, "Member 'UW_Memorial_C::W_PageHeader' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, CardSpacing) == 0x000398, "Member 'UW_Memorial_C::CardSpacing' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, CardRevealDelay) == 0x00039C, "Member 'UW_Memorial_C::CardRevealDelay' has a wrong offset!");

}

