#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutInfo_AttachmentListEntry

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature final 
{
public:
	class UW_LoadoutInfo_AttachmentListEntry_C*   TriggeredBy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature, TriggeredBy) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_OnClicked__DelegateSignature::TriggeredBy' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.OnRemoveClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature final 
{
public:
	class UW_LoadoutInfo_AttachmentListEntry_C*   TriggeredBy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature, TriggeredBy) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_OnRemoveClicked__DelegateSignature::TriggeredBy' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry
// 0x0230 (0x0230 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D12[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0010(0x0188)()
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x01A0(0x0050)()
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_OptionNameID;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D13[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D14[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry) == 0x000230, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, EntryPoint) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_IsGamepad) == 0x000004, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_PageName) == 0x000008, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_ActiveLoadout) == 0x000010, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_CurrentSlot) == 0x000198, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_ItemCategory) == 0x0001A0, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_LoadoutWidget) == 0x0001F0, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_OptionNameID) == 0x0001F8, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_IsDesignTime) == 0x000200, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_Delay_1) == 0x000204, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, CallFunc_PlayAnimationForward_ReturnValue) == 0x000208, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_Delay) == 0x000210, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_Event_Collapse) == 0x000214, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000218, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_ComponentBoundEvent_Button_1) == 0x000220, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry, K2Node_ComponentBoundEvent_Button) == 0x000228, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ExecuteUbergraph_W_LoadoutInfo_AttachmentListEntry::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_btn_Remove_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_BndEvt__W_LoadoutInfo_AttachmentListEntry_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_Hide) == 0x000004, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_Hide");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_Hide) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_Hide");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_Hide, Delay) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_Hide, Collapse) == 0x000004, "Member 'W_LoadoutInfo_AttachmentListEntry_C_Hide::Collapse' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_Reveal) == 0x000004, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_Reveal");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_Reveal) == 0x000004, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_Reveal");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_Reveal, Delay) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_Reveal::Delay' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_PreConstruct");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_PreConstruct) == 0x000001, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_PreConstruct");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation final 
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget, LoadoutWidget) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_SetLoadoutWidget::LoadoutWidget' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap final 
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot final 
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.UpdateActiveLoadout
// 0x0188 (0x0188 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout final 
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout) == 0x000188, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_ChangePage) == 0x000004, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_ChangePage");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_ChangePage) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_ChangePage");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_ChangePage, PageName) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_ChangePage::PageName' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_SetInputMode) == 0x000001, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_SetInputMode");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_SetInputMode) == 0x000001, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_SetInputMode");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.SetInfo
// 0x0030 (0x0030 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_SetInfo final 
{
public:
	class UClass*                                 AttachmentClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_SetInfo) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_SetInfo");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_SetInfo) == 0x000030, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_SetInfo");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_SetInfo, AttachmentClass) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_SetInfo::AttachmentClass' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_SetInfo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'W_LoadoutInfo_AttachmentListEntry_C_SetInfo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_SetInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'W_LoadoutInfo_AttachmentListEntry_C_SetInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_BackPage) == 0x000001, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_BackPage");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_BackPage) == 0x000001, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_BackPage");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_BackPage, Handled) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_BackPage::Handled' has a wrong offset!");

// Function W_LoadoutInfo_AttachmentListEntry.W_LoadoutInfo_AttachmentListEntry_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget");
static_assert(sizeof(W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget) == 0x000008, "Wrong size on W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget");
static_assert(offsetof(W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_LoadoutInfo_AttachmentListEntry_C_GetFocusTarget::Focus' has a wrong offset!");

}

