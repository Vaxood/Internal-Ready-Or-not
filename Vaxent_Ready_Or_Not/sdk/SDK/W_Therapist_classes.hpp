#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Therapist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Therapist.W_Therapist_C
// 0x00C8 (0x03F8 - 0x0330)
class UW_Therapist_C final  : public UTherapistWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       DescriptionText;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Doc;                                               // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Patient;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_288;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_PatientPortrait;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lbl_Doc;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainCanvas;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Patient;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_FirstName;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_LastName;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_NoteFromDoc;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_SessionsRemaining;                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_Trait;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_Years;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_NeedsTherapy;                                   // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_OfficerList;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Patient;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Right;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageHeader;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Therapist_OfficerEntry_C*            W_Therapist_OfficerEntry;                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Therapist_OfficerEntry_C*            W_Therapist_OfficerEntry_1;                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardModal_C*                     ReplacementModal;                                  // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URosterCharacter*                       CurrentPatient;                                    // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URosterCharacter*                       NewPatient;                                        // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Therapist(int32 EntryPoint, const class FString& K2Node_ComponentBoundEvent_ButtonID, class FText Temp_text_Variable, bool K2Node_SwitchString_CmpSuccess, class UW_StandardModal_C* CallFunc_Create_ReturnValue, const struct FAnchors& K2Node_MakeStruct_Anchors, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool CallFunc_BackPage_Handled, class UW_Therapist_OfficerEntry_C* K2Node_CustomEvent_Entry, class FText Temp_text_Variable_1, bool CallFunc_IsValid_ReturnValue, class UW_StandardModal_C* K2Node_CustomEvent_CallingModal, class FText K2Node_CustomEvent_TextEntry, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, TDelegate<void(class UStandardModal* CallingModal)> K2Node_CreateDelegate_OutputDelegate_1);
	void BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonID);
	void ReplacePatient(class UW_StandardModal_C* CallingModal, class FText TextEntry);
	void OfficerEntryClicked(class UW_Therapist_OfficerEntry_C* Entry);
	void Construct();
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	bool BP_OnHandleBackAction(bool CallFunc_BackPage_Handled);
	void PopulateOfficerList(TArray<class URosterCharacter*>& RosterCharacters, class UW_Therapist_OfficerEntry_C* NewEntryWidget, class UW_Therapist_OfficerEntry_C* CallFunc_Create_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TDelegate<void(class UW_Therapist_OfficerEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate, class UPanelSlot* CallFunc_AddChild_ReturnValue, class URosterCharacter* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void CloseReplacementModal(class UStandardModal* CallingModal, bool CallFunc_IsValid_ReturnValue);
	void UpdateTherapyScreen(class FText CallFunc_GetTherapistText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, TArray<class URosterCharacter*>& CallFunc_GetCharactersInTherapy_ReturnValue, bool CallFunc_IsValid_ReturnValue, class URosterCharacter* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);
	void BackPage(bool* Handled, bool CallFunc_IsValid_ReturnValue);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Therapist_C">();
	}
	static class UW_Therapist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Therapist_C>();
	}
};
static_assert(alignof(UW_Therapist_C) == 0x000008, "Wrong alignment on UW_Therapist_C");
static_assert(sizeof(UW_Therapist_C) == 0x0003F8, "Wrong size on UW_Therapist_C");
static_assert(offsetof(UW_Therapist_C, UberGraphFrame) == 0x000330, "Member 'UW_Therapist_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, DescriptionText) == 0x000338, "Member 'UW_Therapist_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Doc) == 0x000340, "Member 'UW_Therapist_C::Doc' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, HB_Patient) == 0x000348, "Member 'UW_Therapist_C::HB_Patient' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Image_288) == 0x000350, "Member 'UW_Therapist_C::Image_288' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Img_PatientPortrait) == 0x000358, "Member 'UW_Therapist_C::Img_PatientPortrait' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Lbl_Doc) == 0x000360, "Member 'UW_Therapist_C::Lbl_Doc' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, MainCanvas) == 0x000368, "Member 'UW_Therapist_C::MainCanvas' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Patient) == 0x000370, "Member 'UW_Therapist_C::Patient' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Txt_FirstName) == 0x000378, "Member 'UW_Therapist_C::Txt_FirstName' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Txt_LastName) == 0x000380, "Member 'UW_Therapist_C::Txt_LastName' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Txt_NoteFromDoc) == 0x000388, "Member 'UW_Therapist_C::Txt_NoteFromDoc' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Txt_SessionsRemaining) == 0x000390, "Member 'UW_Therapist_C::Txt_SessionsRemaining' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Txt_Trait) == 0x000398, "Member 'UW_Therapist_C::Txt_Trait' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, Txt_Years) == 0x0003A0, "Member 'UW_Therapist_C::Txt_Years' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, VB_NeedsTherapy) == 0x0003A8, "Member 'UW_Therapist_C::VB_NeedsTherapy' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, VB_OfficerList) == 0x0003B0, "Member 'UW_Therapist_C::VB_OfficerList' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, VB_Patient) == 0x0003B8, "Member 'UW_Therapist_C::VB_Patient' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, VB_Right) == 0x0003C0, "Member 'UW_Therapist_C::VB_Right' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, W_PageHeader) == 0x0003C8, "Member 'UW_Therapist_C::W_PageHeader' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, W_Therapist_OfficerEntry) == 0x0003D0, "Member 'UW_Therapist_C::W_Therapist_OfficerEntry' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, W_Therapist_OfficerEntry_1) == 0x0003D8, "Member 'UW_Therapist_C::W_Therapist_OfficerEntry_1' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, ReplacementModal) == 0x0003E0, "Member 'UW_Therapist_C::ReplacementModal' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, CurrentPatient) == 0x0003E8, "Member 'UW_Therapist_C::CurrentPatient' has a wrong offset!");
static_assert(offsetof(UW_Therapist_C, NewPatient) == 0x0003F0, "Member 'UW_Therapist_C::NewPatient' has a wrong offset!");

}

