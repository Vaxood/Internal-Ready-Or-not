#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Credit

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_Credit.W_Credit_C.ExecuteUbergraph_W_Credit
// 0x00F8 (0x00F8 - 0x0000)
struct W_Credit_C_ExecuteUbergraph_W_Credit final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31FA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Text_C*                              CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31FB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Text_C*                              CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FC[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FD[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FE[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0060(0x0018)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FF[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay_1;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3200[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_4;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3201[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Credit_C_ExecuteUbergraph_W_Credit) == 0x000008, "Wrong alignment on W_Credit_C_ExecuteUbergraph_W_Credit");
static_assert(sizeof(W_Credit_C_ExecuteUbergraph_W_Credit) == 0x0000F8, "Wrong size on W_Credit_C_ExecuteUbergraph_W_Credit");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, EntryPoint) == 0x000000, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, K2Node_Event_IsGamepad) == 0x000028, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, K2Node_Event_PageName) == 0x00002C, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, K2Node_Event_IsDesignTime) == 0x000034, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, Temp_text_Variable) == 0x000060, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000080, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_AddChildToWrapBox_ReturnValue_1) == 0x000088, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_AddChildToWrapBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, K2Node_Event_Delay_1) == 0x000090, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, K2Node_Event_Delay) == 0x000094, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, K2Node_Event_Collapse) == 0x000098, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000A0, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0000A8, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x0000B0, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x0000B8, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationReverse_ReturnValue_4) == 0x0000C0, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationReverse_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000D0, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000D8, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x0000E0, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x0000E8, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Credit_C_ExecuteUbergraph_W_Credit, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x0000F0, "Member 'W_Credit_C_ExecuteUbergraph_W_Credit::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");

// Function W_Credit.W_Credit_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Credit_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Credit_C_Hide) == 0x000004, "Wrong alignment on W_Credit_C_Hide");
static_assert(sizeof(W_Credit_C_Hide) == 0x000008, "Wrong size on W_Credit_C_Hide");
static_assert(offsetof(W_Credit_C_Hide, Delay) == 0x000000, "Member 'W_Credit_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Credit_C_Hide, Collapse) == 0x000004, "Member 'W_Credit_C_Hide::Collapse' has a wrong offset!");

// Function W_Credit.W_Credit_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Credit_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Credit_C_Reveal) == 0x000004, "Wrong alignment on W_Credit_C_Reveal");
static_assert(sizeof(W_Credit_C_Reveal) == 0x000004, "Wrong size on W_Credit_C_Reveal");
static_assert(offsetof(W_Credit_C_Reveal, Delay) == 0x000000, "Member 'W_Credit_C_Reveal::Delay' has a wrong offset!");

// Function W_Credit.W_Credit_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Credit_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Credit_C_PreConstruct) == 0x000001, "Wrong alignment on W_Credit_C_PreConstruct");
static_assert(sizeof(W_Credit_C_PreConstruct) == 0x000001, "Wrong size on W_Credit_C_PreConstruct");
static_assert(offsetof(W_Credit_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Credit_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Credit.W_Credit_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Credit_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Credit_C_ChangePage) == 0x000004, "Wrong alignment on W_Credit_C_ChangePage");
static_assert(sizeof(W_Credit_C_ChangePage) == 0x000008, "Wrong size on W_Credit_C_ChangePage");
static_assert(offsetof(W_Credit_C_ChangePage, PageName) == 0x000000, "Member 'W_Credit_C_ChangePage::PageName' has a wrong offset!");

// Function W_Credit.W_Credit_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Credit_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Credit_C_SetInputMode) == 0x000001, "Wrong alignment on W_Credit_C_SetInputMode");
static_assert(sizeof(W_Credit_C_SetInputMode) == 0x000001, "Wrong size on W_Credit_C_SetInputMode");
static_assert(offsetof(W_Credit_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Credit_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Credit.W_Credit_C.IsAnimating
// 0x0002 (0x0002 - 0x0000)
struct W_Credit_C_IsAnimating final 
{
public:
	bool                                          Animating;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Credit_C_IsAnimating) == 0x000001, "Wrong alignment on W_Credit_C_IsAnimating");
static_assert(sizeof(W_Credit_C_IsAnimating) == 0x000002, "Wrong size on W_Credit_C_IsAnimating");
static_assert(offsetof(W_Credit_C_IsAnimating, Animating) == 0x000000, "Member 'W_Credit_C_IsAnimating::Animating' has a wrong offset!");
static_assert(offsetof(W_Credit_C_IsAnimating, CallFunc_IsAnyAnimationPlaying_ReturnValue) == 0x000001, "Member 'W_Credit_C_IsAnimating::CallFunc_IsAnyAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_Credit.W_Credit_C.WhichAnimation
// 0x0010 (0x0010 - 0x0000)
struct W_Credit_C_WhichAnimation final 
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_3;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_4;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Credit_C_WhichAnimation) == 0x000008, "Wrong alignment on W_Credit_C_WhichAnimation");
static_assert(sizeof(W_Credit_C_WhichAnimation) == 0x000010, "Wrong size on W_Credit_C_WhichAnimation");
static_assert(offsetof(W_Credit_C_WhichAnimation, Animation) == 0x000000, "Member 'W_Credit_C_WhichAnimation::Animation' has a wrong offset!");
static_assert(offsetof(W_Credit_C_WhichAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'W_Credit_C_WhichAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Credit_C_WhichAnimation, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000009, "Member 'W_Credit_C_WhichAnimation::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Credit_C_WhichAnimation, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x00000A, "Member 'W_Credit_C_WhichAnimation::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Credit_C_WhichAnimation, CallFunc_IsAnimationPlaying_ReturnValue_3) == 0x00000B, "Member 'W_Credit_C_WhichAnimation::CallFunc_IsAnimationPlaying_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Credit_C_WhichAnimation, CallFunc_IsAnimationPlaying_ReturnValue_4) == 0x00000C, "Member 'W_Credit_C_WhichAnimation::CallFunc_IsAnimationPlaying_ReturnValue_4' has a wrong offset!");

// Function W_Credit.W_Credit_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Credit_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Credit_C_BackPage) == 0x000001, "Wrong alignment on W_Credit_C_BackPage");
static_assert(sizeof(W_Credit_C_BackPage) == 0x000001, "Wrong size on W_Credit_C_BackPage");
static_assert(offsetof(W_Credit_C_BackPage, Handled) == 0x000000, "Member 'W_Credit_C_BackPage::Handled' has a wrong offset!");

// Function W_Credit.W_Credit_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Credit_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Credit_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Credit_C_GetFocusTarget");
static_assert(sizeof(W_Credit_C_GetFocusTarget) == 0x000008, "Wrong size on W_Credit_C_GetFocusTarget");
static_assert(offsetof(W_Credit_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Credit_C_GetFocusTarget::Focus' has a wrong offset!");

}

