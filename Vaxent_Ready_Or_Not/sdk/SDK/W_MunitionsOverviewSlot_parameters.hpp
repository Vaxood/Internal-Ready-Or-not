#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MunitionsOverviewSlot

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.ExecuteUbergraph_W_MunitionsOverviewSlot
// 0x03A0 (0x03A0 - 0x0000)
struct W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MunitionsOverviewSlot_Element_C*     CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldCreateSeparator;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DE[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DF[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_Icon;                                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Amount;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAmmoElement;                       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E0[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_AmmoType;                             // 0x0098(0x0018)(ConstParm)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E1[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x0160)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E2[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E3[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0258(0x0018)()
	int32                                         K2Node_Event_CurrentSlots;                         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxSlots;                             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0278(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02B8(0x0040)(HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0300(0x0010)(ReferenceParm)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0318(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0330(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0370(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0380(0x0018)()
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot");
static_assert(sizeof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot) == 0x0003A0, "Wrong size on W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, EntryPoint) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Create_ReturnValue) == 0x000038, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_AddChild_ReturnValue_1) == 0x000048, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, Temp_int_Variable) == 0x000050, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000068, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetCurrentInputType_ReturnValue) == 0x000070, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_bShouldCreateSeparator) == 0x000071, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_bShouldCreateSeparator' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_Margin) == 0x000074, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_Icon) == 0x000088, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_Icon' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_Amount) == 0x000090, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_bIsAmmoElement) == 0x000094, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_bIsAmmoElement' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_AmmoType) == 0x000098, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_AmmoType' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_SpawnObject_ReturnValue) == 0x0000B0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_AddChild_ReturnValue_2) == 0x0000B8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x0000C0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_StringToName_ReturnValue) == 0x0000E0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000248, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x00024C, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000250, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_IntToText_ReturnValue) == 0x000258, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_CurrentSlots) == 0x000270, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_CurrentSlots' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_MaxSlots) == 0x000274, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_MaxSlots' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000278, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002B8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_ComponentBoundEvent_Button_1) == 0x0002F8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeArray_Array) == 0x000300, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_ComponentBoundEvent_Button) == 0x000310, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Format_ReturnValue) == 0x000318, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_FormatArgumentData_2) == 0x000330, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeArray_Array_1) == 0x000370, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Format_ReturnValue_1) == 0x000380, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_CustomEvent_bNewInputType) == 0x000398, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000399, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_InputMethodChanged final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_InputMethodChanged");
static_assert(sizeof(W_MunitionsOverviewSlot_C_InputMethodChanged) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_InputMethodChanged");
static_assert(offsetof(W_MunitionsOverviewSlot_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.UpdateSlotText
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_UpdateSlotText final 
{
public:
	int32                                         CurrentSlots;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxSlots;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_UpdateSlotText) == 0x000004, "Wrong alignment on W_MunitionsOverviewSlot_C_UpdateSlotText");
static_assert(sizeof(W_MunitionsOverviewSlot_C_UpdateSlotText) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_UpdateSlotText");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateSlotText, CurrentSlots) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_UpdateSlotText::CurrentSlots' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateSlotText, MaxSlots) == 0x000004, "Member 'W_MunitionsOverviewSlot_C_UpdateSlotText::MaxSlots' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.CreateElement
// 0x0028 (0x0028 - 0x0000)
struct W_MunitionsOverviewSlot_C_CreateElement final 
{
public:
	class UTexture2D*                             Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAmmoElement;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AmmoType;                                          // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_CreateElement) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_CreateElement");
static_assert(sizeof(W_MunitionsOverviewSlot_C_CreateElement) == 0x000028, "Wrong size on W_MunitionsOverviewSlot_C_CreateElement");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, Icon) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_CreateElement::Icon' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, Amount) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_CreateElement::Amount' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, bIsAmmoElement) == 0x00000C, "Member 'W_MunitionsOverviewSlot_C_CreateElement::bIsAmmoElement' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, AmmoType) == 0x000010, "Member 'W_MunitionsOverviewSlot_C_CreateElement::AmmoType' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.CreateSeparator
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_CreateSeparator final 
{
public:
	bool                                          bShouldCreateSeparator;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_CreateSeparator) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_CreateSeparator");
static_assert(sizeof(W_MunitionsOverviewSlot_C_CreateSeparator) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_CreateSeparator");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateSeparator, bShouldCreateSeparator) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_CreateSeparator::bShouldCreateSeparator' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.GetNormalColorByState
// 0x0080 (0x0080 - 0x0000)
struct W_MunitionsOverviewSlot_C_GetNormalColorByState final 
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E5[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0058(0x0028)()
};
static_assert(alignof(W_MunitionsOverviewSlot_C_GetNormalColorByState) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_GetNormalColorByState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_GetNormalColorByState) == 0x000080, "Wrong size on W_MunitionsOverviewSlot_C_GetNormalColorByState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, ReturnValue) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, Temp_bool_Variable) == 0x000028, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, Temp_bool_Variable_1) == 0x000029, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, K2Node_Select_Default) == 0x000030, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, K2Node_Select_Default_1) == 0x000058, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::K2Node_Select_Default_1' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.SetVisualState
// 0x0048 (0x0048 - 0x0000)
struct W_MunitionsOverviewSlot_C_SetVisualState final 
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E6[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E7[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetNormalColorByState_ReturnValue;        // 0x0018(0x0028)()
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_SetVisualState) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_SetVisualState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_SetVisualState) == 0x000048, "Wrong size on W_MunitionsOverviewSlot_C_SetVisualState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Hovered) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Pressed) == 0x000001, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Pressed' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Temp_bool_Variable) == 0x000002, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Temp_struct_Variable) == 0x000004, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Temp_struct_Variable_1) == 0x00000C, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, CallFunc_GetNormalColorByState_ReturnValue) == 0x000018, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::CallFunc_GetNormalColorByState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, K2Node_Select_Default) == 0x000040, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::K2Node_Select_Default' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.UpdateStyle
// 0x0010 (0x0010 - 0x0000)
struct W_MunitionsOverviewSlot_C_UpdateStyle final 
{
public:
	bool                                          Param_bUseGamepad;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E8[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         K2Node_Select_Default_1;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_UpdateStyle) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_UpdateStyle");
static_assert(sizeof(W_MunitionsOverviewSlot_C_UpdateStyle) == 0x000010, "Wrong size on W_MunitionsOverviewSlot_C_UpdateStyle");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Param_bUseGamepad) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Param_bUseGamepad' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_bool_Variable) == 0x000001, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_bool_Variable_1) == 0x000002, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_byte_Variable) == 0x000003, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_byte_Variable_1) == 0x000004, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, K2Node_Select_Default) == 0x000005, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, K2Node_Select_Default_1) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::K2Node_Select_Default_1' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindToButton
// 0x0080 (0x0080 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindToButton final 
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindClicks;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E9[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindToButton) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindToButton");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindToButton) == 0x000080, "Wrong size on W_MunitionsOverviewSlot_C_BindToButton");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindToButton::ParentButton' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, BindClicks) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_BindToButton::BindClicks' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_4) == 0x00004C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_5) == 0x00005C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_6) == 0x00006C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindSelectedState
// 0x0010 (0x0010 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindSelectedState final 
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindSelectedState) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindSelectedState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindSelectedState) == 0x000010, "Wrong size on W_MunitionsOverviewSlot_C_BindSelectedState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindSelectedState, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindSelectedState::ParentButton' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindSelectedState, CallFunc_GetSelected_ReturnValue) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_BindSelectedState::CallFunc_GetSelected_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindHovered
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindHovered final 
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindHovered) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindHovered");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindHovered) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BindHovered");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindHovered, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindHovered::ParentButton' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindPressedState
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindPressedState final 
{
public:
	bool                                          CallFunc_IsPressed_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindPressedState) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_BindPressedState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindPressedState) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_BindPressedState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindPressedState, CallFunc_IsPressed_ReturnValue) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindPressedState::CallFunc_IsPressed_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindClick
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindClick final 
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindClick) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindClick");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindClick) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BindClick");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindClick, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindClick::ParentButton' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindDoubleClick
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindDoubleClick final 
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindDoubleClick) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindDoubleClick");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindDoubleClick) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BindDoubleClick");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindDoubleClick, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindDoubleClick::ParentButton' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.UnbindFromButton
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_UnbindFromButton final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_UnbindFromButton) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_UnbindFromButton");
static_assert(sizeof(W_MunitionsOverviewSlot_C_UnbindFromButton) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_UnbindFromButton");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UnbindFromButton, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_UnbindFromButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

