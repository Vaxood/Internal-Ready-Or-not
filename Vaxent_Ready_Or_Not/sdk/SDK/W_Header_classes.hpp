#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Header

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Header.W_Header_C
// 0x0098 (0x02F8 - 0x0260)
class UW_Header_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimReveal;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UNamedSlot*                             AugmentSlot;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Header;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Header;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Header;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_Label;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   LabelText;                                         // 0x0298(0x0018)(Edit, BlueprintVisible)
	bool                                          bIsButton;                                         // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextFlowDirection                            Layout;                                            // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4025[0x2];                                     // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LabelOpacity;                                      // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineOpacity;                                       // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4026[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NormalTextStyle;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DarkTextStyle;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalLineColor;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DarkLineColor;                                     // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDarkStyle;                                      // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_Header(int32 EntryPoint, bool K2Node_Event_IsDesignTime, class FText K2Node_CustomEvent_LabelText, bool K2Node_CustomEvent_IsButton, ETextFlowDirection K2Node_CustomEvent_Orientation, class FName K2Node_Event_PageName, bool K2Node_Event_IsGamepad, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, const struct FLinearColor& K2Node_MakeStruct_LinearColor);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void Initialize(class FText Param_LabelText, bool IsButton, ETextFlowDirection Orientation);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void SetLabel(class FText Param_LabelText);
	void SetLayout(ETextFlowDirection Param_Layout, ETextFlowDirection Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable_1, float Temp_float_Variable_2, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility Temp_byte_Variable_2, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_HasAugment_HasAugment, ESlateVisibility K2Node_Select_Default, float K2Node_Select_Default_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	void SetButton(bool IsButton);
	void AddAugment(class UWidget* AugmentWidget, bool CallFunc_IsValid_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue);
	void HasAugment(bool* Param_HasAugment, class UPanelSlot* CallFunc_GetContentSlot_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void SetTheme(bool UseDarkTheme, bool Temp_bool_Variable, bool Temp_bool_Variable_1, const struct FLinearColor& K2Node_Select_Default, TSubclassOf<class UCommonTextStyle> K2Node_Select_Default_1);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Header_C">();
	}
	static class UW_Header_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Header_C>();
	}
};
static_assert(alignof(UW_Header_C) == 0x000008, "Wrong alignment on UW_Header_C");
static_assert(sizeof(UW_Header_C) == 0x0002F8, "Wrong size on UW_Header_C");
static_assert(offsetof(UW_Header_C, UberGraphFrame) == 0x000260, "Member 'UW_Header_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Header_C, AnimReveal) == 0x000268, "Member 'UW_Header_C::AnimReveal' has a wrong offset!");
static_assert(offsetof(UW_Header_C, AugmentSlot) == 0x000270, "Member 'UW_Header_C::AugmentSlot' has a wrong offset!");
static_assert(offsetof(UW_Header_C, btn_Header) == 0x000278, "Member 'UW_Header_C::btn_Header' has a wrong offset!");
static_assert(offsetof(UW_Header_C, HB_Header) == 0x000280, "Member 'UW_Header_C::HB_Header' has a wrong offset!");
static_assert(offsetof(UW_Header_C, Header) == 0x000288, "Member 'UW_Header_C::Header' has a wrong offset!");
static_assert(offsetof(UW_Header_C, Txt_Label) == 0x000290, "Member 'UW_Header_C::Txt_Label' has a wrong offset!");
static_assert(offsetof(UW_Header_C, LabelText) == 0x000298, "Member 'UW_Header_C::LabelText' has a wrong offset!");
static_assert(offsetof(UW_Header_C, bIsButton) == 0x0002B0, "Member 'UW_Header_C::bIsButton' has a wrong offset!");
static_assert(offsetof(UW_Header_C, Layout) == 0x0002B1, "Member 'UW_Header_C::Layout' has a wrong offset!");
static_assert(offsetof(UW_Header_C, LabelOpacity) == 0x0002B4, "Member 'UW_Header_C::LabelOpacity' has a wrong offset!");
static_assert(offsetof(UW_Header_C, LineOpacity) == 0x0002B8, "Member 'UW_Header_C::LineOpacity' has a wrong offset!");
static_assert(offsetof(UW_Header_C, NormalTextStyle) == 0x0002C0, "Member 'UW_Header_C::NormalTextStyle' has a wrong offset!");
static_assert(offsetof(UW_Header_C, DarkTextStyle) == 0x0002C8, "Member 'UW_Header_C::DarkTextStyle' has a wrong offset!");
static_assert(offsetof(UW_Header_C, NormalLineColor) == 0x0002D0, "Member 'UW_Header_C::NormalLineColor' has a wrong offset!");
static_assert(offsetof(UW_Header_C, DarkLineColor) == 0x0002E0, "Member 'UW_Header_C::DarkLineColor' has a wrong offset!");
static_assert(offsetof(UW_Header_C, UseDarkStyle) == 0x0002F0, "Member 'UW_Header_C::UseDarkStyle' has a wrong offset!");

}

