#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_UI_Styleguide

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetAllColors
// 0x00D4 (0x00D4 - 0x0000)
struct PDA_UI_Styleguide_C_GetAllColors final 
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_White;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Dark;                                        // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Red;                                         // 0x0024(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Yellow;                                      // 0x0034(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Blue;                                        // 0x0044(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Green;                                       // 0x0054(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetAllColors) == 0x000004, "Wrong alignment on PDA_UI_Styleguide_C_GetAllColors");
static_assert(sizeof(PDA_UI_Styleguide_C_GetAllColors) == 0x0000D4, "Wrong size on PDA_UI_Styleguide_C_GetAllColors");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetAllColors::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Param_White) == 0x000004, "Member 'PDA_UI_Styleguide_C_GetAllColors::Param_White' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Param_Dark) == 0x000014, "Member 'PDA_UI_Styleguide_C_GetAllColors::Param_Dark' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Param_Red) == 0x000024, "Member 'PDA_UI_Styleguide_C_GetAllColors::Param_Red' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Param_Yellow) == 0x000034, "Member 'PDA_UI_Styleguide_C_GetAllColors::Param_Yellow' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Param_Blue) == 0x000044, "Member 'PDA_UI_Styleguide_C_GetAllColors::Param_Blue' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Param_Green) == 0x000054, "Member 'PDA_UI_Styleguide_C_GetAllColors::Param_Green' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, K2Node_MakeStruct_LinearColor) == 0x000064, "Member 'PDA_UI_Styleguide_C_GetAllColors::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000074, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000084, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000094, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0000A4, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0000B4, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0000C4, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetGoldTeamColor
// 0x0024 (0x0024 - 0x0000)
struct PDA_UI_Styleguide_C_GetGoldTeamColor final 
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_RedTeam;                                     // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetGoldTeamColor) == 0x000004, "Wrong alignment on PDA_UI_Styleguide_C_GetGoldTeamColor");
static_assert(sizeof(PDA_UI_Styleguide_C_GetGoldTeamColor) == 0x000024, "Wrong size on PDA_UI_Styleguide_C_GetGoldTeamColor");
static_assert(offsetof(PDA_UI_Styleguide_C_GetGoldTeamColor, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetGoldTeamColor::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetGoldTeamColor, Param_RedTeam) == 0x000004, "Member 'PDA_UI_Styleguide_C_GetGoldTeamColor::Param_RedTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetGoldTeamColor, K2Node_MakeStruct_LinearColor) == 0x000014, "Member 'PDA_UI_Styleguide_C_GetGoldTeamColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetRedTeamColor
// 0x0024 (0x0024 - 0x0000)
struct PDA_UI_Styleguide_C_GetRedTeamColor final 
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_RedTeam;                                     // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetRedTeamColor) == 0x000004, "Wrong alignment on PDA_UI_Styleguide_C_GetRedTeamColor");
static_assert(sizeof(PDA_UI_Styleguide_C_GetRedTeamColor) == 0x000024, "Wrong size on PDA_UI_Styleguide_C_GetRedTeamColor");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, Param_RedTeam) == 0x000004, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::Param_RedTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, K2Node_MakeStruct_LinearColor) == 0x000014, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetBlueTeamColor
// 0x0024 (0x0024 - 0x0000)
struct PDA_UI_Styleguide_C_GetBlueTeamColor final 
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_BlueTeam;                                    // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetBlueTeamColor) == 0x000004, "Wrong alignment on PDA_UI_Styleguide_C_GetBlueTeamColor");
static_assert(sizeof(PDA_UI_Styleguide_C_GetBlueTeamColor) == 0x000024, "Wrong size on PDA_UI_Styleguide_C_GetBlueTeamColor");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, Param_BlueTeam) == 0x000004, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::Param_BlueTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, K2Node_MakeStruct_LinearColor) == 0x000014, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetTeamColors
// 0x0064 (0x0064 - 0x0000)
struct PDA_UI_Styleguide_C_GetTeamColors final 
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Gold;                                              // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Red;                                         // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Blue;                                        // 0x0024(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGoldTeamColor_RedTeam;                 // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetBlueTeamColor_BlueTeam;                // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRedTeamColor_RedTeam;                  // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetTeamColors) == 0x000004, "Wrong alignment on PDA_UI_Styleguide_C_GetTeamColors");
static_assert(sizeof(PDA_UI_Styleguide_C_GetTeamColors) == 0x000064, "Wrong size on PDA_UI_Styleguide_C_GetTeamColors");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Gold) == 0x000004, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Gold' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Param_Red) == 0x000014, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Param_Red' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Param_Blue) == 0x000024, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Param_Blue' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, CallFunc_GetGoldTeamColor_RedTeam) == 0x000034, "Member 'PDA_UI_Styleguide_C_GetTeamColors::CallFunc_GetGoldTeamColor_RedTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, CallFunc_GetBlueTeamColor_BlueTeam) == 0x000044, "Member 'PDA_UI_Styleguide_C_GetTeamColors::CallFunc_GetBlueTeamColor_BlueTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, CallFunc_GetRedTeamColor_RedTeam) == 0x000054, "Member 'PDA_UI_Styleguide_C_GetTeamColors::CallFunc_GetRedTeamColor_RedTeam' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetColorByName
// 0x0098 (0x0098 - 0x0000)
struct PDA_UI_Styleguide_C_GetColorByName final 
{
public:
	class FName                                   ColorName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opacity;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColor;                                       // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SlateColor;                                        // 0x0020(0x0028)(Parm, OutParm)
	struct FLinearColor                           SelectedColor;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4010[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4011[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
};
static_assert(alignof(PDA_UI_Styleguide_C_GetColorByName) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetColorByName");
static_assert(sizeof(PDA_UI_Styleguide_C_GetColorByName) == 0x000098, "Wrong size on PDA_UI_Styleguide_C_GetColorByName");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, ColorName) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetColorByName::ColorName' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, Opacity) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetColorByName::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, LinearColor) == 0x00000C, "Member 'PDA_UI_Styleguide_C_GetColorByName::LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, SlateColor) == 0x000020, "Member 'PDA_UI_Styleguide_C_GetColorByName::SlateColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, SelectedColor) == 0x000048, "Member 'PDA_UI_Styleguide_C_GetColorByName::SelectedColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_SwitchName_CmpSuccess) == 0x000058, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_MakeStruct_LinearColor) == 0x00005C, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

