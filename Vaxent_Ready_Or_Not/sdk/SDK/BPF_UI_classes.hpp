#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "E_CustomizationGroups_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPF_UI.BPF_UI_C
// 0x0000 (0x0028 - 0x0028)
class UBPF_UI_C final  : public UBlueprintFunctionLibrary
{
public:
	static void RemoveSpacesFromString(const class FString& String, class UObject* __WorldContext, class FString* ReturnString, class FText* ReturnText, class FName* ReturnName, const class FString& CallFunc_Replace_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);
	static void GetLoadoutCategoryText(EItemCategory ItemCategory, class UObject* __WorldContext, class FText* Category_Text, bool K2Node_SwitchEnum_CmpSuccess);
	static void GetCustomizationCategoryText(ECustomizationType ItemCategory, class UObject* __WorldContext, class FText* Category_Text, ECustomizationType Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, class FText Temp_text_Variable_15, class FText K2Node_Select_Default);
	static void GetItemClassText(EItemClass ItemCategory, class UObject* __WorldContext, class FText* Category_Text, EItemClass Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, class FText Temp_text_Variable_15, class FText Temp_text_Variable_16, class FText Temp_text_Variable_17, class FText Temp_text_Variable_18, class FText Temp_text_Variable_19, class FText K2Node_Select_Default);
	static void GetAttachmentSlotText(EWeaponAttachmentType AttachmentType, class UObject* __WorldContext, class FText* SlotText, EWeaponAttachmentType Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText K2Node_Select_Default);
	static void GetItemType(class UClass* BaseItemClass, class UObject* __WorldContext, EItemType* Item_Type, class ABaseItem* CallFunc_GetClassDefaultObject_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	static void UpdateCurrent_LoadoutUI_Slot(class UObject* WorldContextObject, class UW_LoadoutSlot_C* CurrentSlot, class UObject* __WorldContext, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class UUserWidget* CallFunc_Array_Get_Item, TScriptInterface<class ILoadoutUI_C> K2Node_DynamicCast_AsLoadout_UI, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	static void GetLinearColorScheme(float Opacity, class UObject* __WorldContext, struct FLinearColor* White, struct FLinearColor* Dark, struct FLinearColor* Red, struct FLinearColor* Yellow, struct FLinearColor* Blue, struct FLinearColor* Green, class UPDA_UI_Styleguide_C* StyleGuide, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green);
	static void GetSlateColorScheme(float Opacity, class UObject* __WorldContext, struct FSlateColor* White, struct FSlateColor* Dark, struct FSlateColor* Red, struct FSlateColor* Yellow, struct FSlateColor* Blue, struct FSlateColor* Green, class UPDA_UI_Styleguide_C* StyleGuide, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor_2, const struct FSlateColor& K2Node_MakeStruct_SlateColor_3, const struct FSlateColor& K2Node_MakeStruct_SlateColor_4, const struct FSlateColor& K2Node_MakeStruct_SlateColor_5);
	static void GetPlayerTeamColor(ETeamType Team, float Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor, class UPDA_UI_Styleguide_C* StyleGuide, ETeamType Temp_byte_Variable, const struct FLinearColor& CallFunc_GetBlueTeamColor_BlueTeam, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green, const struct FLinearColor& CallFunc_GetGoldTeamColor_RedTeam, const struct FLinearColor& CallFunc_GetRedTeamColor_RedTeam, const struct FLinearColor& K2Node_Select_Default, const struct FSlateColor& K2Node_MakeStruct_SlateColor);
	static void GetArmorCoverageText(EArmourCoverage Coverage, class UObject* __WorldContext, class FText* CoverageText, EArmourCoverage Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText K2Node_Select_Default);
	static void GetLoadoutWidget(class UObject* __WorldContext, class UW_Loadout_V2_C** AsW_Loadout_V2, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UW_Loadout_V2_C* K2Node_DynamicCast_AsW_Loadout_V2, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	static void GetMunitionTypeText(ELoadoutMunitionSlotType MunitionType, class UObject* __WorldContext, class FText* MunitionText, ELoadoutMunitionSlotType Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText K2Node_Select_Default);
	static void GetTeamColorByEquippingSwatEnum(EEquippingSwat EquippingSwat, float Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor, class UPDA_UI_Styleguide_C* StyleGuide, EEquippingSwat Temp_byte_Variable, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green, const struct FLinearColor& CallFunc_GetRedTeamColor_RedTeam, const struct FLinearColor& CallFunc_GetBlueTeamColor_BlueTeam, const struct FLinearColor& K2Node_Select_Default, const struct FSlateColor& K2Node_MakeStruct_SlateColor);
	static void GetSyleGuide(class UObject* __WorldContext, class UPDA_UI_Styleguide_C** StyleGuide);
	static void GetColorByName(class FName ColorName, float Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor, class UPDA_UI_Styleguide_C* StyleGuide, const struct FLinearColor& CallFunc_GetColorByName_LinearColor, const struct FSlateColor& CallFunc_GetColorByName_SlateColor);
	static void TextIsNotEmpty(class FText InText, class UObject* __WorldContext, bool* NotEmpty, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	static void TextToName(class FText InText, class UObject* __WorldContext, class FName* OutName, bool Temp_bool_Variable, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName Temp_name_Variable, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_StringIsEmpty_ReturnValue, class FName K2Node_Select_Default);
	static void GetCustomizationGroupByCategory(ECustomizationType Category, class UObject* __WorldContext, E_CustomizationGroups* Group, ECustomizationType Temp_byte_Variable, E_CustomizationGroups Temp_byte_Variable_1, E_CustomizationGroups Temp_byte_Variable_2, E_CustomizationGroups Temp_byte_Variable_3, E_CustomizationGroups Temp_byte_Variable_4, E_CustomizationGroups Temp_byte_Variable_5, E_CustomizationGroups Temp_byte_Variable_6, E_CustomizationGroups Temp_byte_Variable_7, E_CustomizationGroups Temp_byte_Variable_8, E_CustomizationGroups Temp_byte_Variable_9, E_CustomizationGroups Temp_byte_Variable_10, E_CustomizationGroups Temp_byte_Variable_11, E_CustomizationGroups Temp_byte_Variable_12, E_CustomizationGroups Temp_byte_Variable_13, E_CustomizationGroups Temp_byte_Variable_14, E_CustomizationGroups Temp_byte_Variable_15, E_CustomizationGroups Temp_byte_Variable_16, E_CustomizationGroups K2Node_Select_Default);
	static void GetCustomizationGroupText(E_CustomizationGroups Group, class UObject* __WorldContext, class FText* Text, E_CustomizationGroups Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText K2Node_Select_Default);
	static void IsCurrentPresetDirty(class UObject* __WorldContext, bool* IsDirty, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class FText CallFunc_GetCurrentPresetDisplayName_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, const struct FSavedLoadout& CallFunc_GetPreset_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_ReturnValue, TArray<struct FSavedLoadout>& K2Node_MakeArray_Array, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);

	void GetAmmoCategoryText(class UClass* ItemData, class UObject* __WorldContext, class FText* Text, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class UClass* K2Node_ClassDynamicCast_AsPepperball_Gun, bool K2Node_ClassDynamicCast_bSuccess, class FText CallFunc_Format_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class UClass* K2Node_ClassDynamicCast_AsBase_Magazine_Weapon, bool K2Node_ClassDynamicCast_bSuccess_1, class FText CallFunc_Format_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, class UClass* K2Node_ClassDynamicCast_AsShotgun, bool K2Node_ClassDynamicCast_bSuccess_2, class FText CallFunc_Format_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_3, class UClass* K2Node_ClassDynamicCast_AsTaser, bool K2Node_ClassDynamicCast_bSuccess_3, class FText CallFunc_Format_ReturnValue_3);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPF_UI_C">();
	}
	static class UBPF_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPF_UI_C>();
	}
};
static_assert(alignof(UBPF_UI_C) == 0x000008, "Wrong alignment on UBPF_UI_C");
static_assert(sizeof(UBPF_UI_C) == 0x000028, "Wrong size on UBPF_UI_C");

}

