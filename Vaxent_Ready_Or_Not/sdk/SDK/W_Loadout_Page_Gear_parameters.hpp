#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Page_Gear

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.ExecuteUbergraph_W_Loadout_Page_Gear
// 0x02B0 (0x02B0 - 0x0000)
struct W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay_1;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315E[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0010(0x0188)()
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x01A0(0x0050)()
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_OptionNameID;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0200(0x0010)(ZeroConstructor, NoDestructor)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2;          // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2;        // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_ComponentBoundEvent_TriggeringSlot_3;       // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_ComponentBoundEvent_TriggeringSlot_2;       // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315F[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    K2Node_ComponentBoundEvent_TriggeringSlot_1;       // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_ComponentBoundEvent_TriggeringSlot;         // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3160[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName TabId)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_Event_PageName;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue_1;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3161[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3162[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3;        // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear");
static_assert(sizeof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear) == 0x0002B0, "Wrong size on W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, EntryPoint) == 0x000000, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_Delay_1) == 0x000004, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_Delay) == 0x000008, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_Collapse) == 0x00000C, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_IsGamepad) == 0x00000D, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_ActiveLoadout) == 0x000010, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_CurrentSlot) == 0x000198, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_ItemCategory) == 0x0001A0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_LoadoutWidget) == 0x0001F0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_OptionNameID) == 0x0001F8, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_CreateDelegate_OutputDelegate) == 0x000200, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2) == 0x000210, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1) == 0x000218, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2) == 0x000220, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_ComponentBoundEvent_TriggeringSlot_3) == 0x000228, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_ComponentBoundEvent_TriggeringSlot_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_ComponentBoundEvent_TriggeringSlot_2) == 0x000230, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_ComponentBoundEvent_TriggeringSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetObjectClass_ReturnValue) == 0x000238, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_ComponentBoundEvent_TriggeringSlot_1) == 0x000248, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_ComponentBoundEvent_TriggeringSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_ComponentBoundEvent_TriggeringSlot) == 0x000250, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_ComponentBoundEvent_TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetObjectClass_ReturnValue_1) == 0x000258, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_IsValid_ReturnValue_1) == 0x000260, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000268, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_CreateDelegate_OutputDelegate_1) == 0x000270, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_PageName) == 0x000280, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetReadyOrNotGameState_ReturnValue_1) == 0x000288, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetReadyOrNotGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_CustomEvent_bNewInputType) == 0x000290, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000291, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000298, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetCurrentInputType_ReturnValue) == 0x0002A0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3) == 0x0002A8, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Page_Gear_C_InputMethodChanged final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_InputMethodChanged");
static_assert(sizeof(W_Loadout_Page_Gear_C_InputMethodChanged) == 0x000001, "Wrong size on W_Loadout_Page_Gear_C_InputMethodChanged");
static_assert(offsetof(W_Loadout_Page_Gear_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_Loadout_Page_Gear_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_Page_Gear_C_ChangePage");
static_assert(sizeof(W_Loadout_Page_Gear_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_ChangePage");
static_assert(offsetof(W_Loadout_Page_Gear_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_Page_Gear_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature");
static_assert(sizeof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature");
static_assert(offsetof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_8_OnSlotHovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_Headwear_K2Node_ComponentBoundEvent_7_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature");
static_assert(sizeof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature");
static_assert(offsetof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_HeaderSubpageNavigation final 
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_Page_Gear_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_Page_Gear_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_Page_Gear_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_Page_Gear_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_SetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_SetLoadoutWidget");
static_assert(sizeof(W_Loadout_Page_Gear_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_SetLoadoutWidget");
static_assert(offsetof(W_Loadout_Page_Gear_C_SetLoadoutWidget, LoadoutWidget) == 0x000000, "Member 'W_Loadout_Page_Gear_C_SetLoadoutWidget::LoadoutWidget' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateCurrentItemMap final 
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_Page_Gear_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateCurrentSlot final 
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateCurrentSlot");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_UpdateCurrentSlot");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateActiveLoadout
// 0x0188 (0x0188 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateActiveLoadout final 
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateActiveLoadout) == 0x000188, "Wrong size on W_Loadout_Page_Gear_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Page_Gear_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Page_Gear_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_SetInputMode");
static_assert(sizeof(W_Loadout_Page_Gear_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_Page_Gear_C_SetInputMode");
static_assert(offsetof(W_Loadout_Page_Gear_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_Page_Gear_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Page_Gear_C_Hide) == 0x000004, "Wrong alignment on W_Loadout_Page_Gear_C_Hide");
static_assert(sizeof(W_Loadout_Page_Gear_C_Hide) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_Hide");
static_assert(offsetof(W_Loadout_Page_Gear_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_Page_Gear_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_Hide, Collapse) == 0x000004, "Member 'W_Loadout_Page_Gear_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_Page_Gear_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_Reveal) == 0x000004, "Wrong alignment on W_Loadout_Page_Gear_C_Reveal");
static_assert(sizeof(W_Loadout_Page_Gear_C_Reveal) == 0x000004, "Wrong size on W_Loadout_Page_Gear_C_Reveal");
static_assert(offsetof(W_Loadout_Page_Gear_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_Page_Gear_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.TabChanged
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_Page_Gear_C_TabChanged final 
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3163[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_TabChanged) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_TabChanged");
static_assert(sizeof(W_Loadout_Page_Gear_C_TabChanged) == 0x000020, "Wrong size on W_Loadout_Page_Gear_C_TabChanged");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, TabId) == 0x000000, "Member 'W_Loadout_Page_Gear_C_TabChanged::TabId' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'W_Loadout_Page_Gear_C_TabChanged::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'W_Loadout_Page_Gear_C_TabChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, CallFunc_GetLoadoutWidget_AsW_Loadout_V2) == 0x000010, "Member 'W_Loadout_Page_Gear_C_TabChanged::CallFunc_GetLoadoutWidget_AsW_Loadout_V2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000018, "Member 'W_Loadout_Page_Gear_C_TabChanged::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateStyle
// 0x0005 (0x0005 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateStyle final 
{
public:
	bool                                          bUseGamepad;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateStyle) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateStyle");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateStyle) == 0x000005, "Wrong size on W_Loadout_Page_Gear_C_UpdateStyle");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateStyle, bUseGamepad) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateStyle::bUseGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateStyle, Temp_bool_Variable) == 0x000001, "Member 'W_Loadout_Page_Gear_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateStyle, Temp_byte_Variable) == 0x000002, "Member 'W_Loadout_Page_Gear_C_UpdateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateStyle, Temp_byte_Variable_1) == 0x000003, "Member 'W_Loadout_Page_Gear_C_UpdateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateStyle, K2Node_Select_Default) == 0x000004, "Member 'W_Loadout_Page_Gear_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BP_OnHandleBackAction
// 0x0002 (0x0002 - 0x0000)
struct W_Loadout_Page_Gear_C_BP_OnHandleBackAction final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BackPage_Handled;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_BP_OnHandleBackAction");
static_assert(sizeof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction) == 0x000002, "Wrong size on W_Loadout_Page_Gear_C_BP_OnHandleBackAction");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction, CallFunc_BackPage_Handled) == 0x000001, "Member 'W_Loadout_Page_Gear_C_BP_OnHandleBackAction::CallFunc_BackPage_Handled' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BackPage
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_Page_Gear_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3164[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_BackPage_self_CastInput;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BackPage_Handled;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BackPage) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BackPage");
static_assert(sizeof(W_Loadout_Page_Gear_C_BackPage) == 0x000020, "Wrong size on W_Loadout_Page_Gear_C_BackPage");
static_assert(offsetof(W_Loadout_Page_Gear_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BackPage::Handled' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_BackPage, CallFunc_BackPage_self_CastInput) == 0x000008, "Member 'W_Loadout_Page_Gear_C_BackPage::CallFunc_BackPage_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_BackPage, CallFunc_BackPage_Handled) == 0x000018, "Member 'W_Loadout_Page_Gear_C_BackPage::CallFunc_BackPage_Handled' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget final 
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_Page_Gear_C_GetFocusTarget) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_Page_Gear_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_Page_Gear_C_GetFocusTarget::Focus' has a wrong offset!");

}

