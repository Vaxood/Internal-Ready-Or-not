#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Brief

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.ExecuteUbergraph_W_PreMission_Tablet_Brief
// 0x0880 (0x0880 - 0x0000)
struct W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_UseDarkTheme;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C1[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_AudioPlayer_C*                       K2Node_Event_PlayerWidget;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayerVisible;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C2[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C3[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C4[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_MissionURL;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  K2Node_Event_LevelData;                            // 0x0080(0x0788)()
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_3;               // 0x0808(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0810(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0818(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0820(0x0010)(ZeroConstructor, NoDestructor)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0832(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C5[0x5];                                     // 0x0833(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_UpdateGamepadButtonNavigation_SelectedButton; // 0x0838(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateGamepadButtonNavigation_IsNewButton; // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C6[0x7];                                     // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_DynamicCast_AsW_Button;                     // 0x0848(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C7[0x7];                                     // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Briefing_Media_GalleryEntry_C*       K2Node_CustomEvent_GalleryEntry;                   // 0x0858(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Briefing_Media_AudioEntry_C*         K2Node_CustomEvent_AudioEntry;                     // 0x0860(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DispatchPlayingNotPaused_ReturnValue;     // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsAwake;                              // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C8[0x2];                                     // 0x0872(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x087C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief) == 0x000880, "Wrong size on W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_UseDarkTheme) == 0x000011, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_UseDarkTheme' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_PlayerWidget) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_PlayerVisible) == 0x000020, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_PlayerVisible' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_IsGamepad) == 0x000021, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_PageName) == 0x000024, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_MyGeometry) == 0x000030, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_InDeltaTime) == 0x000068, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_MissionURL) == 0x000070, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_LevelData) == 0x000080, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_LevelData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_3) == 0x000808, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_2) == 0x000810, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_1) == 0x000818, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CreateDelegate_OutputDelegate) == 0x000820, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CustomEvent_bNewInputType) == 0x000830, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000831, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_IsValid_ReturnValue_1) == 0x000832, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_UpdateGamepadButtonNavigation_SelectedButton) == 0x000838, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_UpdateGamepadButtonNavigation_SelectedButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_UpdateGamepadButtonNavigation_IsNewButton) == 0x000840, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_UpdateGamepadButtonNavigation_IsNewButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_DynamicCast_AsW_Button) == 0x000848, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_DynamicCast_AsW_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_DynamicCast_bSuccess) == 0x000850, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CustomEvent_GalleryEntry) == 0x000858, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CustomEvent_GalleryEntry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CustomEvent_AudioEntry) == 0x000860, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CustomEvent_AudioEntry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000868, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_DispatchPlayingNotPaused_ReturnValue) == 0x000870, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_DispatchPlayingNotPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_IsAwake) == 0x000871, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_IsAwake' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_Delay_1) == 0x000874, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_Delay) == 0x000878, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_Collapse) == 0x00087C, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Hide) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Brief_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Hide) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Hide, Collapse) == 0x000004, "Member 'W_PreMission_Tablet_Brief_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Brief_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Reveal) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Brief_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Reveal) == 0x000004, "Wrong size on W_PreMission_Tablet_Brief_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetTabletState
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetTabletState final 
{
public:
	bool                                          IsAwake;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetTabletState) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetTabletState");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetTabletState) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_SetTabletState");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetTabletState, IsAwake) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetTabletState::IsAwake' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AudioItemClicked
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AudioItemClicked final 
{
public:
	class UW_Briefing_Media_AudioEntry_C*         AudioEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AudioItemClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_AudioItemClicked");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AudioItemClicked) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_AudioItemClicked");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AudioItemClicked, AudioEntry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AudioItemClicked::AudioEntry' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.GalleryItemClicked
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_GalleryItemClicked final 
{
public:
	class UW_Briefing_Media_GalleryEntry_C*       GalleryEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_GalleryItemClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_GalleryItemClicked");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_GalleryItemClicked) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_GalleryItemClicked");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_GalleryItemClicked, GalleryEntry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_GalleryItemClicked::GalleryEntry' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.OnInputChange
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_OnInputChange final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_OnInputChange) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_OnInputChange");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_OnInputChange) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_OnInputChange");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_OnInputChange, bNewInputType) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_OnInputChange::bNewInputType' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.MissionChanged
// 0x0798 (0x0798 - 0x0000)
struct W_PreMission_Tablet_Brief_C_MissionChanged final 
{
public:
	class FString                                 MissionURL;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  LevelData;                                         // 0x0010(0x0788)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_MissionChanged) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_MissionChanged");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_MissionChanged) == 0x000798, "Wrong size on W_PreMission_Tablet_Brief_C_MissionChanged");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_MissionChanged, MissionURL) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_MissionChanged::MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_MissionChanged, LevelData) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_MissionChanged::LevelData' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PreMission_Tablet_Brief_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Tick) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Brief_C_Tick");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Tick) == 0x00003C, "Wrong size on W_PreMission_Tablet_Brief_C_Tick");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Tick, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PreConstruct) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_PreConstruct");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PreConstruct) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_PreConstruct");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Brief_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AudioPlayerVisible
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AudioPlayerVisible final 
{
public:
	class UW_AudioPlayer_C*                       PlayerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerVisible;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_AudioPlayerVisible");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible) == 0x000010, "Wrong size on W_PreMission_Tablet_Brief_C_AudioPlayerVisible");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible, PlayerWidget) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AudioPlayerVisible::PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible, PlayerVisible) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_AudioPlayerVisible::PlayerVisible' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetVisualTheme
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetVisualTheme final 
{
public:
	bool                                          UseDarkTheme;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetVisualTheme) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetVisualTheme");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetVisualTheme) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_SetVisualTheme");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetVisualTheme, UseDarkTheme) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetVisualTheme::UseDarkTheme' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.UpdateMission
// 0x07B0 (0x07B0 - 0x0000)
struct W_PreMission_Tablet_Brief_C_UpdateMission final 
{
public:
	class FString                                 MissionURL;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  MissionData;                                       // 0x0010(0x0788)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_GetSelectedModeName_OutName;              // 0x0798(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedModeName_ReturnValue;          // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_UpdateMission) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_UpdateMission");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_UpdateMission) == 0x0007B0, "Wrong size on W_PreMission_Tablet_Brief_C_UpdateMission");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_UpdateMission, MissionURL) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_UpdateMission::MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_UpdateMission, MissionData) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_UpdateMission::MissionData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_UpdateMission, CallFunc_GetSelectedModeName_OutName) == 0x000798, "Member 'W_PreMission_Tablet_Brief_C_UpdateMission::CallFunc_GetSelectedModeName_OutName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_UpdateMission, CallFunc_GetSelectedModeName_ReturnValue) == 0x0007A8, "Member 'W_PreMission_Tablet_Brief_C_UpdateMission::CallFunc_GetSelectedModeName_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.NavigatePage
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_Brief_C_NavigatePage final 
{
public:
	class UW_Button_C*                            ClickedButton;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_NavigatePage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_NavigatePage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_NavigatePage) == 0x000020, "Wrong size on W_PreMission_Tablet_Brief_C_NavigatePage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, ClickedButton) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::ClickedButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PopulateSuspects
// 0x0180 (0x0180 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PopulateSuspects final 
{
public:
	class UW_PreMission_Tablet_Brief_SubjectListItem_C* CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CB[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterBio                          CallFunc_Array_Get_Item;                           // 0x0038(0x0140)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PopulateSuspects) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_PopulateSuspects");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PopulateSuspects) == 0x000180, "Wrong size on W_PreMission_Tablet_Brief_C_PopulateSuspects");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, CallFunc_Create_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, K2Node_MakeStruct_Margin) == 0x000014, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000028, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateSuspects, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'W_PreMission_Tablet_Brief_C_PopulateSuspects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PopulateCivilians
// 0x0178 (0x0178 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PopulateCivilians final 
{
public:
	class UW_PreMission_Tablet_Brief_SubjectListItem_C* CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterBio                          CallFunc_Array_Get_Item;                           // 0x0020(0x0140)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CD[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PopulateCivilians) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_PopulateCivilians");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PopulateCivilians) == 0x000178, "Wrong size on W_PreMission_Tablet_Brief_C_PopulateCivilians");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, CallFunc_Create_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateCivilians, K2Node_MakeStruct_Margin) == 0x000168, "Member 'W_PreMission_Tablet_Brief_C_PopulateCivilians::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PopulateAudio
// 0x00A0 (0x00A0 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PopulateAudio final 
{
public:
	class UW_Briefing_Media_AudioEntry_C*         NewWidget;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Briefing_Media_AudioEntry_C*         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CE[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAudio                          CallFunc_Array_Get_Item;                           // 0x0020(0x0060)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33CF[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Briefing_Media_AudioEntry_C* AudioEntry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PopulateAudio) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_PopulateAudio");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PopulateAudio) == 0x0000A0, "Wrong size on W_PreMission_Tablet_Brief_C_PopulateAudio");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, NewWidget) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::NewWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateAudio, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000098, "Member 'W_PreMission_Tablet_Brief_C_PopulateAudio::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PopulateGallery
// 0x0100 (0x0100 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PopulateGallery final 
{
public:
	class UW_Briefing_Media_GalleryEntry_C*       NewWidget;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionPhoto                          PhotoData;                                         // 0x0010(0x0058)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D1[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Briefing_Media_GalleryEntry_C*       CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMissionPhoto                          CallFunc_Array_Get_Item;                           // 0x0080(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D2[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D3[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Briefing_Media_GalleryEntry_C* GalleryEntry)> K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PopulateGallery) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_PopulateGallery");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PopulateGallery) == 0x000100, "Wrong size on W_PreMission_Tablet_Brief_C_PopulateGallery");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, NewWidget) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::NewWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CurrentIndex) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, PhotoData) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::PhotoData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, Temp_int_Array_Index_Variable) == 0x000068, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_Create_ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_Array_Get_Item) == 0x000080, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000E0, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PopulateGallery, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'W_PreMission_Tablet_Brief_C_PopulateGallery::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetGalleryImage
// 0x0080 (0x0080 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetGalleryImage final 
{
public:
	struct FMissionPhoto                          MissionPhotoData;                                  // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D4[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetGalleryImage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetGalleryImage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetGalleryImage) == 0x000080, "Wrong size on W_PreMission_Tablet_Brief_C_SetGalleryImage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, MissionPhotoData) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::MissionPhotoData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, Temp_bool_Variable) == 0x000058, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, Temp_byte_Variable) == 0x000059, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, Temp_byte_Variable_1) == 0x00005A, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000060, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_PlayAnimationForward_ReturnValue) == 0x000068, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_IsVisible_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_IsVisible_ReturnValue_1) == 0x000071, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_IsVisible_ReturnValue_2) == 0x000073, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_IsVisible_ReturnValue_3) == 0x000075, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_Not_PreBool_ReturnValue_1) == 0x000076, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, CallFunc_BooleanOR_ReturnValue_1) == 0x000077, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetGalleryImage, K2Node_Select_Default) == 0x000078, "Member 'W_PreMission_Tablet_Brief_C_SetGalleryImage::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SelectGalleryImage
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SelectGalleryImage final 
{
public:
	class UW_Briefing_Media_GalleryEntry_C*       GalleryEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SelectGalleryImage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_SelectGalleryImage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SelectGalleryImage) == 0x000010, "Wrong size on W_PreMission_Tablet_Brief_C_SelectGalleryImage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectGalleryImage, GalleryEntry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SelectGalleryImage::GalleryEntry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectGalleryImage, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_SelectGalleryImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectGalleryImage, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'W_PreMission_Tablet_Brief_C_SelectGalleryImage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SelectAudioEntry
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SelectAudioEntry final 
{
public:
	class UW_Briefing_Media_AudioEntry_C*         AudioEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D5[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATablet*                                CallFunc_GetPlayerTablet_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SelectAudioEntry) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_SelectAudioEntry");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SelectAudioEntry) == 0x000020, "Wrong size on W_PreMission_Tablet_Brief_C_SelectAudioEntry");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, AudioEntry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::AudioEntry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_IsPlaying_ReturnValue) == 0x00000A, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000C, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_GetPlayerTablet_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_GetPlayerTablet_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SelectAudioEntry, CallFunc_PlayEventAttached_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_SelectAudioEntry::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AutoPauseDispatchAudio
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio final 
{
public:
	bool                                          CallFunc_DispatchPlayingNotPaused_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio, CallFunc_DispatchPlayingNotPaused_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio::CallFunc_DispatchPlayingNotPaused_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AutoPlayDispatchAudio
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio final 
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.DispatchPlayingNotPaused
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAudio_Playing;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused) == 0x000004, "Wrong size on W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, CallFunc_IsPlayingAudio_Playing) == 0x000001, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::CallFunc_IsPlayingAudio_Playing' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_GetFocusTarget::Focus' has a wrong offset!");

}

