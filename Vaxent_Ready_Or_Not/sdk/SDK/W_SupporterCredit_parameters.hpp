#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SupporterCredit

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_SupporterCredit.W_SupporterCredit_C.ExecuteUbergraph_W_SupporterCredit
// 0x0038 (0x0038 - 0x0000)
struct W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31F8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit) == 0x000008, "Wrong alignment on W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit");
static_assert(sizeof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit) == 0x000038, "Wrong size on W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, EntryPoint) == 0x000000, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, K2Node_Event_IsGamepad) == 0x000004, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, K2Node_Event_PageName) == 0x000008, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, K2Node_Event_IsDesignTime) == 0x000010, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, K2Node_Event_Delay_1) == 0x000014, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, K2Node_Event_Delay) == 0x000018, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, K2Node_Event_Collapse) == 0x00001C, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000020, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'W_SupporterCredit_C_ExecuteUbergraph_W_SupporterCredit::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_SupporterCredit_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SupporterCredit_C_Hide) == 0x000004, "Wrong alignment on W_SupporterCredit_C_Hide");
static_assert(sizeof(W_SupporterCredit_C_Hide) == 0x000008, "Wrong size on W_SupporterCredit_C_Hide");
static_assert(offsetof(W_SupporterCredit_C_Hide, Delay) == 0x000000, "Member 'W_SupporterCredit_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_Hide, Collapse) == 0x000004, "Member 'W_SupporterCredit_C_Hide::Collapse' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_SupporterCredit_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SupporterCredit_C_Reveal) == 0x000004, "Wrong alignment on W_SupporterCredit_C_Reveal");
static_assert(sizeof(W_SupporterCredit_C_Reveal) == 0x000004, "Wrong size on W_SupporterCredit_C_Reveal");
static_assert(offsetof(W_SupporterCredit_C_Reveal, Delay) == 0x000000, "Member 'W_SupporterCredit_C_Reveal::Delay' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SupporterCredit_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SupporterCredit_C_PreConstruct) == 0x000001, "Wrong alignment on W_SupporterCredit_C_PreConstruct");
static_assert(sizeof(W_SupporterCredit_C_PreConstruct) == 0x000001, "Wrong size on W_SupporterCredit_C_PreConstruct");
static_assert(offsetof(W_SupporterCredit_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SupporterCredit_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_SupporterCredit_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SupporterCredit_C_ChangePage) == 0x000004, "Wrong alignment on W_SupporterCredit_C_ChangePage");
static_assert(sizeof(W_SupporterCredit_C_ChangePage) == 0x000008, "Wrong size on W_SupporterCredit_C_ChangePage");
static_assert(offsetof(W_SupporterCredit_C_ChangePage, PageName) == 0x000000, "Member 'W_SupporterCredit_C_ChangePage::PageName' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_SupporterCredit_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SupporterCredit_C_SetInputMode) == 0x000001, "Wrong alignment on W_SupporterCredit_C_SetInputMode");
static_assert(sizeof(W_SupporterCredit_C_SetInputMode) == 0x000001, "Wrong size on W_SupporterCredit_C_SetInputMode");
static_assert(offsetof(W_SupporterCredit_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_SupporterCredit_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.IsAnimating
// 0x0002 (0x0002 - 0x0000)
struct W_SupporterCredit_C_IsAnimating final 
{
public:
	bool                                          Animating;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SupporterCredit_C_IsAnimating) == 0x000001, "Wrong alignment on W_SupporterCredit_C_IsAnimating");
static_assert(sizeof(W_SupporterCredit_C_IsAnimating) == 0x000002, "Wrong size on W_SupporterCredit_C_IsAnimating");
static_assert(offsetof(W_SupporterCredit_C_IsAnimating, Animating) == 0x000000, "Member 'W_SupporterCredit_C_IsAnimating::Animating' has a wrong offset!");
static_assert(offsetof(W_SupporterCredit_C_IsAnimating, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000001, "Member 'W_SupporterCredit_C_IsAnimating::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_SupporterCredit_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SupporterCredit_C_BackPage) == 0x000001, "Wrong alignment on W_SupporterCredit_C_BackPage");
static_assert(sizeof(W_SupporterCredit_C_BackPage) == 0x000001, "Wrong size on W_SupporterCredit_C_BackPage");
static_assert(offsetof(W_SupporterCredit_C_BackPage, Handled) == 0x000000, "Member 'W_SupporterCredit_C_BackPage::Handled' has a wrong offset!");

// Function W_SupporterCredit.W_SupporterCredit_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_SupporterCredit_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SupporterCredit_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_SupporterCredit_C_GetFocusTarget");
static_assert(sizeof(W_SupporterCredit_C_GetFocusTarget) == 0x000008, "Wrong size on W_SupporterCredit_C_GetFocusTarget");
static_assert(offsetof(W_SupporterCredit_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_SupporterCredit_C_GetFocusTarget::Focus' has a wrong offset!");

}

