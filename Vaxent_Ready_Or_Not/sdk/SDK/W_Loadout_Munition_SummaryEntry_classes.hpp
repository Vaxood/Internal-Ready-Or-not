#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Munition_SummaryEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C
// 0x02C0 (0x0520 - 0x0260)
class UW_Loadout_Munition_SummaryEntry_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB_Icons;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_icon;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Tag;                                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Tag;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             PrimaryMagazine;                                   // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             SidearmMagazine;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Shotgun;                                           // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Pepperball;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Taser;                                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconImage;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ItemData;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsAmmunition;                                      // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsPrimary;                                         // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C3[0x2];                                     // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AmmoType;                                          // 0x02C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateBrush                            BrushStyle;                                        // 0x02D0(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0358(0x0188)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Ammo_Variety;                                      // 0x04E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Ammo_Caliber;                                      // 0x0500(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HideCount;                                         // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_Loadout_Munition_SummaryEntry(int32 EntryPoint, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class FName K2Node_Event_OptionNameID, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool K2Node_Event_IsDesignTime, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, class UW_Loadout_C* K2Node_Event_LoadoutWidget, class UClass* K2Node_CustomEvent_Weapon, class FName K2Node_CustomEvent_AmmoType, int32 K2Node_CustomEvent_Count_1, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class UTexture2D* CallFunc_GetItemIcon_ReturnValue, class UClass* K2Node_CustomEvent_ItemData, int32 K2Node_CustomEvent_Count, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, bool Temp_bool_Variable, ESlateVisibility K2Node_Select_Default);
	void UpdateItem(class UClass* Param_ItemData, int32 Count);
	void UpdateAmmunition(class UClass* Weapon, class FName Param_AmmoType, int32 Count);
	void SetLoadoutWidget(class UW_Loadout_C* Param_LoadoutWidget);
	void UpdateActiveLoadout(const struct FSavedLoadout& Param_ActiveLoadout);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void GetAmmoInfo(class UDataTable* CallFunc_GetAmmoLookupDataTable_ReturnValue, const struct FAmmoTypeData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	class UTexture2D* GetItemIcon(bool CallFunc_IsValidClass_ReturnValue);
	void GetAmmoName(class FText* AmmoName, class UDataTable* CallFunc_GetAmmoLookupDataTable_ReturnValue, const struct FAmmoTypeData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	void GetAmmoIcon(bool Temp_bool_Variable, EItemCategory Temp_byte_Variable, class ABaseItem* CallFunc_GetClassDefaultObject_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, class UTexture2D* K2Node_Select_Default, class UClass* K2Node_ClassDynamicCast_AsShotgun, bool K2Node_ClassDynamicCast_bSuccess, class UClass* K2Node_ClassDynamicCast_AsTaser, bool K2Node_ClassDynamicCast_bSuccess_1, class UClass* K2Node_ClassDynamicCast_AsPepperball_Gun, bool K2Node_ClassDynamicCast_bSuccess_2);
	void CreateIcon(class UImage* Image, class UScaleBox* ScaleBox, class USizeBox* SizeBox, class UImage* CallFunc_SpawnObject_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UScaleBox* CallFunc_SpawnObject_ReturnValue_1, class UPanelSlot* CallFunc_AddChild_ReturnValue_1, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, class USizeBox* CallFunc_SpawnObject_ReturnValue_2);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Munition_SummaryEntry_C">();
	}
	static class UW_Loadout_Munition_SummaryEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Munition_SummaryEntry_C>();
	}
};
static_assert(alignof(UW_Loadout_Munition_SummaryEntry_C) == 0x000008, "Wrong alignment on UW_Loadout_Munition_SummaryEntry_C");
static_assert(sizeof(UW_Loadout_Munition_SummaryEntry_C) == 0x000520, "Wrong size on UW_Loadout_Munition_SummaryEntry_C");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, UberGraphFrame) == 0x000260, "Member 'UW_Loadout_Munition_SummaryEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, HB_Icons) == 0x000268, "Member 'UW_Loadout_Munition_SummaryEntry_C::HB_Icons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Img_icon) == 0x000270, "Member 'UW_Loadout_Munition_SummaryEntry_C::Img_icon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Tag) == 0x000278, "Member 'UW_Loadout_Munition_SummaryEntry_C::Tag' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Txt_Tag) == 0x000280, "Member 'UW_Loadout_Munition_SummaryEntry_C::Txt_Tag' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, PrimaryMagazine) == 0x000288, "Member 'UW_Loadout_Munition_SummaryEntry_C::PrimaryMagazine' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, SidearmMagazine) == 0x000290, "Member 'UW_Loadout_Munition_SummaryEntry_C::SidearmMagazine' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Shotgun) == 0x000298, "Member 'UW_Loadout_Munition_SummaryEntry_C::Shotgun' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Pepperball) == 0x0002A0, "Member 'UW_Loadout_Munition_SummaryEntry_C::Pepperball' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Taser) == 0x0002A8, "Member 'UW_Loadout_Munition_SummaryEntry_C::Taser' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, IconImage) == 0x0002B0, "Member 'UW_Loadout_Munition_SummaryEntry_C::IconImage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, ItemData) == 0x0002B8, "Member 'UW_Loadout_Munition_SummaryEntry_C::ItemData' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, IsAmmunition) == 0x0002C0, "Member 'UW_Loadout_Munition_SummaryEntry_C::IsAmmunition' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, IsPrimary) == 0x0002C1, "Member 'UW_Loadout_Munition_SummaryEntry_C::IsPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, AmmoType) == 0x0002C4, "Member 'UW_Loadout_Munition_SummaryEntry_C::AmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, ItemCount) == 0x0002CC, "Member 'UW_Loadout_Munition_SummaryEntry_C::ItemCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, BrushStyle) == 0x0002D0, "Member 'UW_Loadout_Munition_SummaryEntry_C::BrushStyle' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, ActiveLoadout) == 0x000358, "Member 'UW_Loadout_Munition_SummaryEntry_C::ActiveLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, LoadoutWidget) == 0x0004E0, "Member 'UW_Loadout_Munition_SummaryEntry_C::LoadoutWidget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Ammo_Variety) == 0x0004E8, "Member 'UW_Loadout_Munition_SummaryEntry_C::Ammo_Variety' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, Ammo_Caliber) == 0x000500, "Member 'UW_Loadout_Munition_SummaryEntry_C::Ammo_Caliber' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munition_SummaryEntry_C, HideCount) == 0x000518, "Member 'UW_Loadout_Munition_SummaryEntry_C::HideCount' has a wrong offset!");

}

