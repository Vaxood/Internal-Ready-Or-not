#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Sequencer_Body

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Sequencer_Body.ANIMBP_Sequencer_Body_C
// 0x09A0 (0x0C60 - 0x02C0)
class UANIMBP_Sequencer_Body_C final  : public UAnimInstance
{
public:
	uint8                                         Pad_32A2[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0340(0x00A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_5;                        // 0x03E0(0x0168)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_4;                        // 0x0548(0x0168)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_3;                        // 0x06B0(0x0168)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_2;                        // 0x0818(0x0168)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_1;                        // 0x0980(0x0168)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver;                          // 0x0AE8(0x0168)()
	bool                                          bDontControlPose;                                  // 0x0C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ANIMBP_Sequencer_Body(int32 EntryPoint, class AActor* CallFunc_GetOwningActor_ReturnValue, class AReadyOrNotCharacter* K2Node_DynamicCast_AsReady_or_Not_Character, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaTimeX, bool CallFunc_IsBeingArrested_ReturnValue, bool CallFunc_IsArrested_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Sequencer_Body_C">();
	}
	static class UANIMBP_Sequencer_Body_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Sequencer_Body_C>();
	}
};
static_assert(alignof(UANIMBP_Sequencer_Body_C) == 0x000010, "Wrong alignment on UANIMBP_Sequencer_Body_C");
static_assert(sizeof(UANIMBP_Sequencer_Body_C) == 0x000C60, "Wrong size on UANIMBP_Sequencer_Body_C");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, UberGraphFrame) == 0x0002C0, "Member 'UANIMBP_Sequencer_Body_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_Slot) == 0x0002F8, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_BlendListByBool) == 0x000340, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_PoseDriver_5) == 0x0003E0, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_PoseDriver_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_PoseDriver_4) == 0x000548, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_PoseDriver_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_PoseDriver_3) == 0x0006B0, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_PoseDriver_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_PoseDriver_2) == 0x000818, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_PoseDriver_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_PoseDriver_1) == 0x000980, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_PoseDriver_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, AnimGraphNode_PoseDriver) == 0x000AE8, "Member 'UANIMBP_Sequencer_Body_C::AnimGraphNode_PoseDriver' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sequencer_Body_C, bDontControlPose) == 0x000C50, "Member 'UANIMBP_Sequencer_Body_C::bDontControlPose' has a wrong offset!");

}

