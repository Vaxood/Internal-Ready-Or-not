#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Media_AudioEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.OnClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature final 
{
public:
	class UW_Briefing_Media_AudioEntry_C*         AudioEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature) == 0x000008, "Wrong size on W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature, AudioEntry) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_OnClick__DelegateSignature::AudioEntry' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.ExecuteUbergraph_W_Briefing_Media_AudioEntry
// 0x0018 (0x0018 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3255[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry) == 0x000018, "Wrong size on W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry, EntryPoint) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'W_Briefing_Media_AudioEntry_C_ExecuteUbergraph_W_Briefing_Media_AudioEntry::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_BndEvt__W_Briefing_Media_AudioEntry_btn_AudioEntry_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_Briefing_Media_AudioEntry_C_PreConstruct");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_PreConstruct) == 0x000001, "Wrong size on W_Briefing_Media_AudioEntry_C_PreConstruct");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.SetIsPlaying
// 0x0018 (0x0018 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_SetIsPlaying final 
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3256[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsNotEmpty_NotEmpty;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_SetIsPlaying) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_SetIsPlaying");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_SetIsPlaying) == 0x000018, "Wrong size on W_Briefing_Media_AudioEntry_C_SetIsPlaying");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, IsPlaying) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::IsPlaying' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, Temp_bool_Variable) == 0x000001, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, Temp_byte_Variable) == 0x000002, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, Temp_byte_Variable_1) == 0x000003, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, CallFunc_TextIsNotEmpty_NotEmpty) == 0x000010, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::CallFunc_TextIsNotEmpty_NotEmpty' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetIsPlaying, K2Node_Select_Default) == 0x000011, "Member 'W_Briefing_Media_AudioEntry_C_SetIsPlaying::K2Node_Select_Default' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.UpdateVisualState
// 0x0040 (0x0040 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_UpdateVisualState final 
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Selected;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Playing;                                           // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetIconColor_Color;                       // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3257[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetTextColor_Color;                       // 0x0018(0x0028)()
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_UpdateVisualState) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_UpdateVisualState");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_UpdateVisualState) == 0x000040, "Wrong size on W_Briefing_Media_AudioEntry_C_UpdateVisualState");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_UpdateVisualState, Hovered) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_UpdateVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_UpdateVisualState, Pressed) == 0x000001, "Member 'W_Briefing_Media_AudioEntry_C_UpdateVisualState::Pressed' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_UpdateVisualState, Selected) == 0x000002, "Member 'W_Briefing_Media_AudioEntry_C_UpdateVisualState::Selected' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_UpdateVisualState, Playing) == 0x000003, "Member 'W_Briefing_Media_AudioEntry_C_UpdateVisualState::Playing' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_UpdateVisualState, CallFunc_GetIconColor_Color) == 0x000004, "Member 'W_Briefing_Media_AudioEntry_C_UpdateVisualState::CallFunc_GetIconColor_Color' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_UpdateVisualState, CallFunc_GetTextColor_Color) == 0x000018, "Member 'W_Briefing_Media_AudioEntry_C_UpdateVisualState::CallFunc_GetTextColor_Color' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.GetIconColor
// 0x0178 (0x0178 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_GetIconColor final 
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0020(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_1;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_1;              // 0x0058(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_2;             // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_2;              // 0x0090(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_3;             // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_3;              // 0x00E8(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_4;             // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_4;              // 0x0130(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_GetIconColor) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_GetIconColor");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_GetIconColor) == 0x000178, "Wrong size on W_Briefing_Media_AudioEntry_C_GetIconColor");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, Color) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::Color' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_LinearColor) == 0x000010, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_SlateColor) == 0x000020, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_LinearColor_1) == 0x000048, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_SlateColor_1) == 0x000058, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_LinearColor_2) == 0x000080, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_LinearColor_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_SlateColor_2) == 0x000090, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_SelectColor_ReturnValue) == 0x0000B8, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_SelectColor_ReturnValue_1) == 0x0000C8, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_LinearColor_3) == 0x0000D8, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_LinearColor_3' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_SlateColor_3) == 0x0000E8, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_SlateColor_3' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_SelectColor_ReturnValue_2) == 0x000110, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_LinearColor_4) == 0x000120, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_LinearColor_4' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_GetColorByName_SlateColor_4) == 0x000130, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_GetColorByName_SlateColor_4' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_SelectColor_ReturnValue_3) == 0x000158, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetIconColor, CallFunc_SelectColor_ReturnValue_4) == 0x000168, "Member 'W_Briefing_Media_AudioEntry_C_GetIconColor::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.SetHoverState
// 0x0001 (0x0001 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_SetHoverState final 
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_SetHoverState) == 0x000001, "Wrong alignment on W_Briefing_Media_AudioEntry_C_SetHoverState");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_SetHoverState) == 0x000001, "Wrong size on W_Briefing_Media_AudioEntry_C_SetHoverState");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetHoverState, Hovered) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_SetHoverState::Hovered' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.SetPressedState
// 0x0001 (0x0001 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_SetPressedState final 
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_SetPressedState) == 0x000001, "Wrong alignment on W_Briefing_Media_AudioEntry_C_SetPressedState");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_SetPressedState) == 0x000001, "Wrong size on W_Briefing_Media_AudioEntry_C_SetPressedState");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_SetPressedState, Pressed) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_SetPressedState::Pressed' has a wrong offset!");

// Function W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C.GetTextColor
// 0x01E8 (0x01E8 - 0x0000)
struct W_Briefing_Media_AudioEntry_C_GetTextColor final 
{
public:
	struct FSlateColor                            Color;                                             // 0x0000(0x0028)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor;               // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3258[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor;                // 0x0040(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_1;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_1;              // 0x0078(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_2;             // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_2;              // 0x00B0(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00D8(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_3;             // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_3;              // 0x0110(0x0028)()
	struct FLinearColor                           CallFunc_GetColorByName_LinearColor_4;             // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetColorByName_SlateColor_4;              // 0x0148(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0170(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x0198(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_3;                           // 0x01C0(0x0028)()
};
static_assert(alignof(W_Briefing_Media_AudioEntry_C_GetTextColor) == 0x000008, "Wrong alignment on W_Briefing_Media_AudioEntry_C_GetTextColor");
static_assert(sizeof(W_Briefing_Media_AudioEntry_C_GetTextColor) == 0x0001E8, "Wrong size on W_Briefing_Media_AudioEntry_C_GetTextColor");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, Color) == 0x000000, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::Color' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, Temp_bool_Variable) == 0x000028, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, Temp_bool_Variable_1) == 0x000029, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, Temp_bool_Variable_2) == 0x00002A, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, Temp_bool_Variable_3) == 0x00002B, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_LinearColor) == 0x00002C, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_LinearColor' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_SlateColor) == 0x000040, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_LinearColor_1) == 0x000068, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_LinearColor_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_SlateColor_1) == 0x000078, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_LinearColor_2) == 0x0000A0, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_LinearColor_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_SlateColor_2) == 0x0000B0, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, K2Node_Select_Default) == 0x0000D8, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_LinearColor_3) == 0x000100, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_LinearColor_3' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_SlateColor_3) == 0x000110, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_SlateColor_3' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_LinearColor_4) == 0x000138, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_LinearColor_4' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, CallFunc_GetColorByName_SlateColor_4) == 0x000148, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::CallFunc_GetColorByName_SlateColor_4' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, K2Node_Select_Default_1) == 0x000170, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, K2Node_Select_Default_2) == 0x000198, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Briefing_Media_AudioEntry_C_GetTextColor, K2Node_Select_Default_3) == 0x0001C0, "Member 'W_Briefing_Media_AudioEntry_C_GetTextColor::K2Node_Select_Default_3' has a wrong offset!");

}

