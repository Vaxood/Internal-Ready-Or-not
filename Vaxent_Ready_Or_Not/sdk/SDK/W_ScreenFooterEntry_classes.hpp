#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScreenFooterEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ScreenFooterEntry.W_ScreenFooterEntry_C
// 0x00D0 (0x0440 - 0x0370)
class UW_ScreenFooterEntry_C final  : public UPageFooter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Button_C*                            Button;                                            // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_HotkeyHint;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               InputActionPC;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    InputActionWidget;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_ActionLabel;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_InputLabel;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          UseGamepad;                                        // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B84[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EntryID;                                           // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FScreenFooterEntry                     FooterEntryData;                                   // 0x03C0(0x0030)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnClicked__DelegateSignature(class UW_ScreenFooterEntry_C* FooterEntry);
	void OnHovered__DelegateSignature(class UW_ScreenFooterEntry_C* FooterEntry);
	void OnUnhovered__DelegateSignature();
	void OnPressed__DelegateSignature(class UW_ScreenFooterEntry_C* FooterEntry);
	void OnReleased__DelegateSignature(class UW_ScreenFooterEntry_C* FooterEntry);
	void ExecuteUbergraph_W_ScreenFooterEntry(int32 EntryPoint, TDelegate<void(bool bUsingGamepad)> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool K2Node_Event_IsDesignTime, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_CustomEvent_bUsingGamepad);
	void InputMethodChanged(bool bUsingGamepad);
	void OnInitialized();
	void BndEvt__W_ScreenFooterEntry_Button_K2Node_ComponentBoundEvent_4_Released__DelegateSignature();
	void BndEvt__W_ScreenFooterEntry_Button_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature();
	void BndEvt__W_ScreenFooterEntry_Button_K2Node_ComponentBoundEvent_2_Unhovered__DelegateSignature();
	void BndEvt__W_ScreenFooterEntry_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature(class UW_Button_C* Param_Button);
	void BndEvt__W_ScreenFooterEntry_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Param_Button);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void SetLabel(class FText InText);
	void SetInputAction(const struct FDataTableRowHandle& InputActionRow, class FText CallFunc_GetInputActionData_ActionName, const struct FKey& CallFunc_GetInputActionData_ActionKey, const class FString& CallFunc_Abbreviate_Key_Abreviated_Name, class FText CallFunc_Conv_StringToText_ReturnValue);
	void UpdateEntry(const struct FDataTableRowHandle& CallFunc_GetInputAction_InputAction);
	void SetFooterEntryData(const struct FScreenFooterEntry& Param_FooterEntryData);
	void InputSwitched(bool Param_UseGamepad);
	void SetInputVisibility(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1);
	void GetIsButton(bool* IsButton);
	void GetButtonLabel(class FText* ButtonLabel);
	void GetButtonID(class FString* ButtonID);
	void GetInputAction(struct FDataTableRowHandle* InputAction);
	void UpdateVisualState(ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, bool Temp_bool_Variable_1, TSubclassOf<class UCommonButtonStyle> Temp_class_Variable, TSubclassOf<class UCommonButtonStyle> Temp_class_Variable_1, bool Temp_bool_Variable_2, class FText Temp_text_Variable, bool Temp_bool_Variable_3, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_GetIsButton_IsButton, bool CallFunc_Not_PreBool_ReturnValue, class FText CallFunc_GetButtonLabel_ButtonLabel, bool CallFunc_BooleanAND_ReturnValue, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1, TSubclassOf<class UCommonButtonStyle> K2Node_Select_Default_2, class FText K2Node_Select_Default_3);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus, bool CallFunc_IsVisible_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ScreenFooterEntry_C">();
	}
	static class UW_ScreenFooterEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ScreenFooterEntry_C>();
	}
};
static_assert(alignof(UW_ScreenFooterEntry_C) == 0x000008, "Wrong alignment on UW_ScreenFooterEntry_C");
static_assert(sizeof(UW_ScreenFooterEntry_C) == 0x000440, "Wrong size on UW_ScreenFooterEntry_C");
static_assert(offsetof(UW_ScreenFooterEntry_C, UberGraphFrame) == 0x000370, "Member 'UW_ScreenFooterEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, Button) == 0x000378, "Member 'UW_ScreenFooterEntry_C::Button' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, HB_HotkeyHint) == 0x000380, "Member 'UW_ScreenFooterEntry_C::HB_HotkeyHint' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, InputActionPC) == 0x000388, "Member 'UW_ScreenFooterEntry_C::InputActionPC' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, InputActionWidget) == 0x000390, "Member 'UW_ScreenFooterEntry_C::InputActionWidget' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, Txt_ActionLabel) == 0x000398, "Member 'UW_ScreenFooterEntry_C::Txt_ActionLabel' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, Txt_InputLabel) == 0x0003A0, "Member 'UW_ScreenFooterEntry_C::Txt_InputLabel' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, UseGamepad) == 0x0003A8, "Member 'UW_ScreenFooterEntry_C::UseGamepad' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, EntryID) == 0x0003B0, "Member 'UW_ScreenFooterEntry_C::EntryID' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, FooterEntryData) == 0x0003C0, "Member 'UW_ScreenFooterEntry_C::FooterEntryData' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, OnClicked) == 0x0003F0, "Member 'UW_ScreenFooterEntry_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, OnHovered) == 0x000400, "Member 'UW_ScreenFooterEntry_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, OnUnhovered) == 0x000410, "Member 'UW_ScreenFooterEntry_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, OnPressed) == 0x000420, "Member 'UW_ScreenFooterEntry_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooterEntry_C, OnReleased) == 0x000430, "Member 'UW_ScreenFooterEntry_C::OnReleased' has a wrong offset!");

}

