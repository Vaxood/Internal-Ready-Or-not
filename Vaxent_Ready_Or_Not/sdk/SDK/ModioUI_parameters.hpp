#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUI

#include "Basic.hpp"

#include "Modio_structs.hpp"
#include "ModioUI_structs.hpp"
#include "ModioUICore_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ModioUI.ModioProceduralBrushParams.GetMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct ModioProceduralBrushParams_GetMaterialInstance final 
{
public:
	class UMaterialInterface*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioProceduralBrushParams_GetMaterialInstance) == 0x000008, "Wrong alignment on ModioProceduralBrushParams_GetMaterialInstance");
static_assert(sizeof(ModioProceduralBrushParams_GetMaterialInstance) == 0x000008, "Wrong size on ModioProceduralBrushParams_GetMaterialInstance");
static_assert(offsetof(ModioProceduralBrushParams_GetMaterialInstance, ReturnValue) == 0x000000, "Member 'ModioProceduralBrushParams_GetMaterialInstance::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDialogController.HandleBackgroundClick
// 0x0160 (0x0160 - 0x0000)
struct ModioDialogController_HandleBackgroundClick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDialogController_HandleBackgroundClick) == 0x000008, "Wrong alignment on ModioDialogController_HandleBackgroundClick");
static_assert(sizeof(ModioDialogController_HandleBackgroundClick) == 0x000160, "Wrong size on ModioDialogController_HandleBackgroundClick");
static_assert(offsetof(ModioDialogController_HandleBackgroundClick, MyGeometry) == 0x000000, "Member 'ModioDialogController_HandleBackgroundClick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ModioDialogController_HandleBackgroundClick, MouseEvent) == 0x000038, "Member 'ModioDialogController_HandleBackgroundClick::MouseEvent' has a wrong offset!");
static_assert(offsetof(ModioDialogController_HandleBackgroundClick, ReturnValue) == 0x0000A8, "Member 'ModioDialogController_HandleBackgroundClick::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDialogController.ShowErrorDialog
// 0x0010 (0x0010 - 0x0000)
struct ModioDialogController_ShowErrorDialog final 
{
public:
	struct FModioErrorCode                        Ec;                                                // 0x0000(0x0008)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCloseDialogsOnOK;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1827[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioDialogController_ShowErrorDialog) == 0x000008, "Wrong alignment on ModioDialogController_ShowErrorDialog");
static_assert(sizeof(ModioDialogController_ShowErrorDialog) == 0x000010, "Wrong size on ModioDialogController_ShowErrorDialog");
static_assert(offsetof(ModioDialogController_ShowErrorDialog, Ec) == 0x000000, "Member 'ModioDialogController_ShowErrorDialog::Ec' has a wrong offset!");
static_assert(offsetof(ModioDialogController_ShowErrorDialog, bCloseDialogsOnOK) == 0x000008, "Member 'ModioDialogController_ShowErrorDialog::bCloseDialogsOnOK' has a wrong offset!");

// Function ModioUI.ModioAuthenticationContextUIDetails.GetProviderInfo
// 0x0020 (0x0020 - 0x0000)
struct ModioAuthenticationContextUIDetails_GetProviderInfo final 
{
public:
	struct FModioUIAuthenticationProviderInfo     ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioAuthenticationContextUIDetails_GetProviderInfo) == 0x000008, "Wrong alignment on ModioAuthenticationContextUIDetails_GetProviderInfo");
static_assert(sizeof(ModioAuthenticationContextUIDetails_GetProviderInfo) == 0x000020, "Wrong size on ModioAuthenticationContextUIDetails_GetProviderInfo");
static_assert(offsetof(ModioAuthenticationContextUIDetails_GetProviderInfo, ReturnValue) == 0x000000, "Member 'ModioAuthenticationContextUIDetails_GetProviderInfo::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioAuthenticationContextUIDetails.GetTerms
// 0x00D0 (0x00D0 - 0x0000)
struct ModioAuthenticationContextUIDetails_GetTerms final 
{
public:
	struct FModioTerms                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioAuthenticationContextUIDetails_GetTerms) == 0x000008, "Wrong alignment on ModioAuthenticationContextUIDetails_GetTerms");
static_assert(sizeof(ModioAuthenticationContextUIDetails_GetTerms) == 0x0000D0, "Wrong size on ModioAuthenticationContextUIDetails_GetTerms");
static_assert(offsetof(ModioAuthenticationContextUIDetails_GetTerms, ReturnValue) == 0x000000, "Member 'ModioAuthenticationContextUIDetails_GetTerms::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioMenuBackgroundProvider.GetBackgroundMaterial
// 0x0008 (0x0008 - 0x0000)
struct ModioMenuBackgroundProvider_GetBackgroundMaterial final 
{
public:
	class UMaterialInterface*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioMenuBackgroundProvider_GetBackgroundMaterial) == 0x000008, "Wrong alignment on ModioMenuBackgroundProvider_GetBackgroundMaterial");
static_assert(sizeof(ModioMenuBackgroundProvider_GetBackgroundMaterial) == 0x000008, "Wrong size on ModioMenuBackgroundProvider_GetBackgroundMaterial");
static_assert(offsetof(ModioMenuBackgroundProvider_GetBackgroundMaterial, ReturnValue) == 0x000000, "Member 'ModioMenuBackgroundProvider_GetBackgroundMaterial::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIAsyncHandlerWidget.LinkAsyncOperationWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget final 
{
public:
	TScriptInterface<class IModioUIAsyncOperationWidget> Widget;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget) == 0x000008, "Wrong alignment on ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget");
static_assert(sizeof(ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget) == 0x000010, "Wrong size on ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget");
static_assert(offsetof(ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget, Widget) == 0x000000, "Member 'ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget::Widget' has a wrong offset!");

// Function ModioUI.ModioUserWidgetBase.FinishLoadExternalData
// 0x0008 (0x0008 - 0x0000)
struct ModioUserWidgetBase_FinishLoadExternalData final 
{
public:
	struct FModioErrorCode                        Ec;                                                // 0x0000(0x0008)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUserWidgetBase_FinishLoadExternalData) == 0x000008, "Wrong alignment on ModioUserWidgetBase_FinishLoadExternalData");
static_assert(sizeof(ModioUserWidgetBase_FinishLoadExternalData) == 0x000008, "Wrong size on ModioUserWidgetBase_FinishLoadExternalData");
static_assert(offsetof(ModioUserWidgetBase_FinishLoadExternalData, Ec) == 0x000000, "Member 'ModioUserWidgetBase_FinishLoadExternalData::Ec' has a wrong offset!");

// Function ModioUI.ModioUserWidgetBase.OnFinishLoadExternalData
// 0x0008 (0x0008 - 0x0000)
struct ModioUserWidgetBase_OnFinishLoadExternalData final 
{
public:
	struct FModioErrorCode                        Ec;                                                // 0x0000(0x0008)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUserWidgetBase_OnFinishLoadExternalData) == 0x000008, "Wrong alignment on ModioUserWidgetBase_OnFinishLoadExternalData");
static_assert(sizeof(ModioUserWidgetBase_OnFinishLoadExternalData) == 0x000008, "Wrong size on ModioUserWidgetBase_OnFinishLoadExternalData");
static_assert(offsetof(ModioUserWidgetBase_OnFinishLoadExternalData, Ec) == 0x000000, "Member 'ModioUserWidgetBase_OnFinishLoadExternalData::Ec' has a wrong offset!");

// Function ModioUI.ModioUserWidgetBase.SetDataSource
// 0x0008 (0x0008 - 0x0000)
struct ModioUserWidgetBase_SetDataSource final 
{
public:
	class UObject*                                NewDataSource;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUserWidgetBase_SetDataSource) == 0x000008, "Wrong alignment on ModioUserWidgetBase_SetDataSource");
static_assert(sizeof(ModioUserWidgetBase_SetDataSource) == 0x000008, "Wrong size on ModioUserWidgetBase_SetDataSource");
static_assert(offsetof(ModioUserWidgetBase_SetDataSource, NewDataSource) == 0x000000, "Member 'ModioUserWidgetBase_SetDataSource::NewDataSource' has a wrong offset!");

// Function ModioUI.ModioUIAsyncOperationWidget.NotifyOperationState
// 0x0001 (0x0001 - 0x0000)
struct ModioUIAsyncOperationWidget_NotifyOperationState final 
{
public:
	EModioUIAsyncOperationWidgetState             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAsyncOperationWidget_NotifyOperationState) == 0x000001, "Wrong alignment on ModioUIAsyncOperationWidget_NotifyOperationState");
static_assert(sizeof(ModioUIAsyncOperationWidget_NotifyOperationState) == 0x000001, "Wrong size on ModioUIAsyncOperationWidget_NotifyOperationState");
static_assert(offsetof(ModioUIAsyncOperationWidget_NotifyOperationState, NewState) == 0x000000, "Member 'ModioUIAsyncOperationWidget_NotifyOperationState::NewState' has a wrong offset!");

// Function ModioUI.ModioUIAsyncOperationWidget.SetOperationStateDelegate
// 0x0010 (0x0010 - 0x0000)
struct ModioUIAsyncOperationWidget_SetOperationStateDelegate final 
{
public:
	TDelegate<void(EModioUIAsyncOperationWidgetState NewState)> Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAsyncOperationWidget_SetOperationStateDelegate) == 0x000004, "Wrong alignment on ModioUIAsyncOperationWidget_SetOperationStateDelegate");
static_assert(sizeof(ModioUIAsyncOperationWidget_SetOperationStateDelegate) == 0x000010, "Wrong size on ModioUIAsyncOperationWidget_SetOperationStateDelegate");
static_assert(offsetof(ModioUIAsyncOperationWidget_SetOperationStateDelegate, Delegate) == 0x000000, "Member 'ModioUIAsyncOperationWidget_SetOperationStateDelegate::Delegate' has a wrong offset!");

// Function ModioUI.ModioDownloadQueueDrawer.OnSubsricptionChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioDownloadQueueDrawer_OnSubsricptionChanged final 
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Subscribed;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1833[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioDownloadQueueDrawer_OnSubsricptionChanged) == 0x000008, "Wrong alignment on ModioDownloadQueueDrawer_OnSubsricptionChanged");
static_assert(sizeof(ModioDownloadQueueDrawer_OnSubsricptionChanged) == 0x000010, "Wrong size on ModioDownloadQueueDrawer_OnSubsricptionChanged");
static_assert(offsetof(ModioDownloadQueueDrawer_OnSubsricptionChanged, ID) == 0x000000, "Member 'ModioDownloadQueueDrawer_OnSubsricptionChanged::ID' has a wrong offset!");
static_assert(offsetof(ModioDownloadQueueDrawer_OnSubsricptionChanged, Subscribed) == 0x000008, "Member 'ModioDownloadQueueDrawer_OnSubsricptionChanged::Subscribed' has a wrong offset!");

// Function ModioUI.ModioUIAsyncRetryWidget.SetRetryRequestedDelegate
// 0x0010 (0x0010 - 0x0000)
struct ModioUIAsyncRetryWidget_SetRetryRequestedDelegate final 
{
public:
	TDelegate<void()>                             Delegate;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAsyncRetryWidget_SetRetryRequestedDelegate) == 0x000004, "Wrong alignment on ModioUIAsyncRetryWidget_SetRetryRequestedDelegate");
static_assert(sizeof(ModioUIAsyncRetryWidget_SetRetryRequestedDelegate) == 0x000010, "Wrong size on ModioUIAsyncRetryWidget_SetRetryRequestedDelegate");
static_assert(offsetof(ModioUIAsyncRetryWidget_SetRetryRequestedDelegate, Delegate) == 0x000000, "Member 'ModioUIAsyncRetryWidget_SetRetryRequestedDelegate::Delegate' has a wrong offset!");

// Function ModioUI.ModioDownloadQueueEntry.OnEntryPressed
// 0x0160 (0x0160 - 0x0000)
struct ModioDownloadQueueEntry_OnEntryPressed final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDownloadQueueEntry_OnEntryPressed) == 0x000008, "Wrong alignment on ModioDownloadQueueEntry_OnEntryPressed");
static_assert(sizeof(ModioDownloadQueueEntry_OnEntryPressed) == 0x000160, "Wrong size on ModioDownloadQueueEntry_OnEntryPressed");
static_assert(offsetof(ModioDownloadQueueEntry_OnEntryPressed, MyGeometry) == 0x000000, "Member 'ModioDownloadQueueEntry_OnEntryPressed::MyGeometry' has a wrong offset!");
static_assert(offsetof(ModioDownloadQueueEntry_OnEntryPressed, MouseEvent) == 0x000038, "Member 'ModioDownloadQueueEntry_OnEntryPressed::MouseEvent' has a wrong offset!");
static_assert(offsetof(ModioDownloadQueueEntry_OnEntryPressed, ReturnValue) == 0x0000A8, "Member 'ModioDownloadQueueEntry_OnEntryPressed::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIAuthenticationDataProvider.GetAuthenticationParams
// 0x0080 (0x0080 - 0x0000)
struct ModioUIAuthenticationDataProvider_GetAuthenticationParams final 
{
public:
	EModioAuthenticationProvider                  Provider;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1836[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioAuthenticationParams             ReturnValue;                                       // 0x0008(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAuthenticationDataProvider_GetAuthenticationParams) == 0x000008, "Wrong alignment on ModioUIAuthenticationDataProvider_GetAuthenticationParams");
static_assert(sizeof(ModioUIAuthenticationDataProvider_GetAuthenticationParams) == 0x000080, "Wrong size on ModioUIAuthenticationDataProvider_GetAuthenticationParams");
static_assert(offsetof(ModioUIAuthenticationDataProvider_GetAuthenticationParams, Provider) == 0x000000, "Member 'ModioUIAuthenticationDataProvider_GetAuthenticationParams::Provider' has a wrong offset!");
static_assert(offsetof(ModioUIAuthenticationDataProvider_GetAuthenticationParams, ReturnValue) == 0x000008, "Member 'ModioUIAuthenticationDataProvider_GetAuthenticationParams::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIAuthenticationDataProvider.GetAuthenticationTypes
// 0x0010 (0x0010 - 0x0000)
struct ModioUIAuthenticationDataProvider_GetAuthenticationTypes final 
{
public:
	TArray<struct FModioUIAuthenticationProviderInfo> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAuthenticationDataProvider_GetAuthenticationTypes) == 0x000008, "Wrong alignment on ModioUIAuthenticationDataProvider_GetAuthenticationTypes");
static_assert(sizeof(ModioUIAuthenticationDataProvider_GetAuthenticationTypes) == 0x000010, "Wrong size on ModioUIAuthenticationDataProvider_GetAuthenticationTypes");
static_assert(offsetof(ModioUIAuthenticationDataProvider_GetAuthenticationTypes, ReturnValue) == 0x000000, "Member 'ModioUIAuthenticationDataProvider_GetAuthenticationTypes::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIAuthenticationDataProvider.ShouldOfferEmailAuthentication
// 0x0001 (0x0001 - 0x0000)
struct ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication) == 0x000001, "Wrong alignment on ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication");
static_assert(sizeof(ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication) == 0x000001, "Wrong size on ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication");
static_assert(offsetof(ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication, ReturnValue) == 0x000000, "Member 'ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIBusyStateWidget.EndBusyState
// 0x0001 (0x0001 - 0x0000)
struct ModioUIBusyStateWidget_EndBusyState final 
{
public:
	bool                                          bErrorOccurred;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIBusyStateWidget_EndBusyState) == 0x000001, "Wrong alignment on ModioUIBusyStateWidget_EndBusyState");
static_assert(sizeof(ModioUIBusyStateWidget_EndBusyState) == 0x000001, "Wrong size on ModioUIBusyStateWidget_EndBusyState");
static_assert(offsetof(ModioUIBusyStateWidget_EndBusyState, bErrorOccurred) == 0x000000, "Member 'ModioUIBusyStateWidget_EndBusyState::bErrorOccurred' has a wrong offset!");

// Function ModioUI.ModioDownloadQueueOpProgress.OperationCompletedDelegate
// 0x0010 (0x0010 - 0x0000)
struct ModioDownloadQueueOpProgress_OperationCompletedDelegate final 
{
public:
	TDelegate<void()>                             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDownloadQueueOpProgress_OperationCompletedDelegate) == 0x000004, "Wrong alignment on ModioDownloadQueueOpProgress_OperationCompletedDelegate");
static_assert(sizeof(ModioDownloadQueueOpProgress_OperationCompletedDelegate) == 0x000010, "Wrong size on ModioDownloadQueueOpProgress_OperationCompletedDelegate");
static_assert(offsetof(ModioDownloadQueueOpProgress_OperationCompletedDelegate, ReturnValue) == 0x000000, "Member 'ModioDownloadQueueOpProgress_OperationCompletedDelegate::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModTileBase.HandleModLogoOperationStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioModTileBase_HandleModLogoOperationStateChanged final 
{
public:
	EModioUIAsyncOperationWidgetState             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTileBase_HandleModLogoOperationStateChanged) == 0x000001, "Wrong alignment on ModioModTileBase_HandleModLogoOperationStateChanged");
static_assert(sizeof(ModioModTileBase_HandleModLogoOperationStateChanged) == 0x000001, "Wrong size on ModioModTileBase_HandleModLogoOperationStateChanged");
static_assert(offsetof(ModioModTileBase_HandleModLogoOperationStateChanged, NewState) == 0x000000, "Member 'ModioModTileBase_HandleModLogoOperationStateChanged::NewState' has a wrong offset!");

// Function ModioUI.ModioModTileBase.OnModSubscriptionStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioModTileBase_OnModSubscriptionStatusChanged final 
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Subscribed;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_183C[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModTileBase_OnModSubscriptionStatusChanged) == 0x000008, "Wrong alignment on ModioModTileBase_OnModSubscriptionStatusChanged");
static_assert(sizeof(ModioModTileBase_OnModSubscriptionStatusChanged) == 0x000010, "Wrong size on ModioModTileBase_OnModSubscriptionStatusChanged");
static_assert(offsetof(ModioModTileBase_OnModSubscriptionStatusChanged, ID) == 0x000000, "Member 'ModioModTileBase_OnModSubscriptionStatusChanged::ID' has a wrong offset!");
static_assert(offsetof(ModioModTileBase_OnModSubscriptionStatusChanged, Subscribed) == 0x000008, "Member 'ModioModTileBase_OnModSubscriptionStatusChanged::Subscribed' has a wrong offset!");

// Function ModioUI.ModioModTileBase.OnSetExpandedState
// 0x0001 (0x0001 - 0x0000)
struct ModioModTileBase_OnSetExpandedState final 
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTileBase_OnSetExpandedState) == 0x000001, "Wrong alignment on ModioModTileBase_OnSetExpandedState");
static_assert(sizeof(ModioModTileBase_OnSetExpandedState) == 0x000001, "Wrong size on ModioModTileBase_OnSetExpandedState");
static_assert(offsetof(ModioModTileBase_OnSetExpandedState, bExpanded) == 0x000000, "Member 'ModioModTileBase_OnSetExpandedState::bExpanded' has a wrong offset!");

// Function ModioUI.ModioModTileBase.SetExpandedState
// 0x0001 (0x0001 - 0x0000)
struct ModioModTileBase_SetExpandedState final 
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTileBase_SetExpandedState) == 0x000001, "Wrong alignment on ModioModTileBase_SetExpandedState");
static_assert(sizeof(ModioModTileBase_SetExpandedState) == 0x000001, "Wrong size on ModioModTileBase_SetExpandedState");
static_assert(offsetof(ModioModTileBase_SetExpandedState, bExpanded) == 0x000000, "Member 'ModioModTileBase_SetExpandedState::bExpanded' has a wrong offset!");

// Function ModioUI.ModioModCollectionTile.OnRatingSubmissionComplete
// 0x0010 (0x0010 - 0x0000)
struct ModioModCollectionTile_OnRatingSubmissionComplete final 
{
public:
	struct FModioErrorCode                        Ec;                                                // 0x0000(0x0008)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioRating                                  Rating;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_183F[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModCollectionTile_OnRatingSubmissionComplete) == 0x000008, "Wrong alignment on ModioModCollectionTile_OnRatingSubmissionComplete");
static_assert(sizeof(ModioModCollectionTile_OnRatingSubmissionComplete) == 0x000010, "Wrong size on ModioModCollectionTile_OnRatingSubmissionComplete");
static_assert(offsetof(ModioModCollectionTile_OnRatingSubmissionComplete, Ec) == 0x000000, "Member 'ModioModCollectionTile_OnRatingSubmissionComplete::Ec' has a wrong offset!");
static_assert(offsetof(ModioModCollectionTile_OnRatingSubmissionComplete, Rating) == 0x000008, "Member 'ModioModCollectionTile_OnRatingSubmissionComplete::Rating' has a wrong offset!");

// Function ModioUI.ModioUIClickableWidget.AddClickHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIClickableWidget_AddClickHandler final 
{
public:
	class UObject*                                UserObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FunctionName;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIClickableWidget_AddClickHandler) == 0x000008, "Wrong alignment on ModioUIClickableWidget_AddClickHandler");
static_assert(sizeof(ModioUIClickableWidget_AddClickHandler) == 0x000010, "Wrong size on ModioUIClickableWidget_AddClickHandler");
static_assert(offsetof(ModioUIClickableWidget_AddClickHandler, UserObject) == 0x000000, "Member 'ModioUIClickableWidget_AddClickHandler::UserObject' has a wrong offset!");
static_assert(offsetof(ModioUIClickableWidget_AddClickHandler, FunctionName) == 0x000008, "Member 'ModioUIClickableWidget_AddClickHandler::FunctionName' has a wrong offset!");

// Function ModioUI.ModioUIClickableWidget.RemoveClickHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIClickableWidget_RemoveClickHandler final 
{
public:
	class UObject*                                UserObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FunctionName;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIClickableWidget_RemoveClickHandler) == 0x000008, "Wrong alignment on ModioUIClickableWidget_RemoveClickHandler");
static_assert(sizeof(ModioUIClickableWidget_RemoveClickHandler) == 0x000010, "Wrong size on ModioUIClickableWidget_RemoveClickHandler");
static_assert(offsetof(ModioUIClickableWidget_RemoveClickHandler, UserObject) == 0x000000, "Member 'ModioUIClickableWidget_RemoveClickHandler::UserObject' has a wrong offset!");
static_assert(offsetof(ModioUIClickableWidget_RemoveClickHandler, FunctionName) == 0x000008, "Member 'ModioUIClickableWidget_RemoveClickHandler::FunctionName' has a wrong offset!");

// Function ModioUI.ModioUIDataSourceWidget.SetDataSource
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDataSourceWidget_SetDataSource final 
{
public:
	class UObject*                                InDataSource;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDataSourceWidget_SetDataSource) == 0x000008, "Wrong alignment on ModioUIDataSourceWidget_SetDataSource");
static_assert(sizeof(ModioUIDataSourceWidget_SetDataSource) == 0x000008, "Wrong size on ModioUIDataSourceWidget_SetDataSource");
static_assert(offsetof(ModioUIDataSourceWidget_SetDataSource, InDataSource) == 0x000000, "Member 'ModioUIDataSourceWidget_SetDataSource::InDataSource' has a wrong offset!");

// Function ModioUI.ModioUIDialogButtonWidget.SetDialogController
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDialogButtonWidget_SetDialogController final 
{
public:
	class UModioDialogController*                 Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialogButtonWidget_SetDialogController) == 0x000008, "Wrong alignment on ModioUIDialogButtonWidget_SetDialogController");
static_assert(sizeof(ModioUIDialogButtonWidget_SetDialogController) == 0x000008, "Wrong size on ModioUIDialogButtonWidget_SetDialogController");
static_assert(offsetof(ModioUIDialogButtonWidget_SetDialogController, Controller) == 0x000000, "Member 'ModioUIDialogButtonWidget_SetDialogController::Controller' has a wrong offset!");

// Function ModioUI.ModioUIDialogButtonWidget.SetStyle
// 0x00B8 (0x00B8 - 0x0000)
struct ModioUIDialogButtonWidget_SetStyle final 
{
public:
	struct FModioDialogStyle                      Style;                                             // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialogButtonWidget_SetStyle) == 0x000008, "Wrong alignment on ModioUIDialogButtonWidget_SetStyle");
static_assert(sizeof(ModioUIDialogButtonWidget_SetStyle) == 0x0000B8, "Wrong size on ModioUIDialogButtonWidget_SetStyle");
static_assert(offsetof(ModioUIDialogButtonWidget_SetStyle, Style) == 0x000000, "Member 'ModioUIDialogButtonWidget_SetStyle::Style' has a wrong offset!");

// Function ModioUI.ModioUIDownloadQueueWidget.DisplayUserInfo
// 0x0048 (0x0048 - 0x0000)
struct ModioUIDownloadQueueWidget_DisplayUserInfo final 
{
public:
	struct FModioOptionalUser                     NewUser;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDownloadQueueWidget_DisplayUserInfo) == 0x000008, "Wrong alignment on ModioUIDownloadQueueWidget_DisplayUserInfo");
static_assert(sizeof(ModioUIDownloadQueueWidget_DisplayUserInfo) == 0x000048, "Wrong size on ModioUIDownloadQueueWidget_DisplayUserInfo");
static_assert(offsetof(ModioUIDownloadQueueWidget_DisplayUserInfo, NewUser) == 0x000000, "Member 'ModioUIDownloadQueueWidget_DisplayUserInfo::NewUser' has a wrong offset!");

// Function ModioUI.ModioUIErrorDisplayWidget.DisplayError
// 0x0008 (0x0008 - 0x0000)
struct ModioUIErrorDisplayWidget_DisplayError final 
{
public:
	struct FModioErrorCode                        Ec;                                                // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIErrorDisplayWidget_DisplayError) == 0x000008, "Wrong alignment on ModioUIErrorDisplayWidget_DisplayError");
static_assert(sizeof(ModioUIErrorDisplayWidget_DisplayError) == 0x000008, "Wrong size on ModioUIErrorDisplayWidget_DisplayError");
static_assert(offsetof(ModioUIErrorDisplayWidget_DisplayError, Ec) == 0x000000, "Member 'ModioUIErrorDisplayWidget_DisplayError::Ec' has a wrong offset!");

// Function ModioUI.ModioUIErrorDisplayWidget.SetErrorString
// 0x0010 (0x0010 - 0x0000)
struct ModioUIErrorDisplayWidget_SetErrorString final 
{
public:
	class FString                                 InErrorString;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIErrorDisplayWidget_SetErrorString) == 0x000008, "Wrong alignment on ModioUIErrorDisplayWidget_SetErrorString");
static_assert(sizeof(ModioUIErrorDisplayWidget_SetErrorString) == 0x000010, "Wrong size on ModioUIErrorDisplayWidget_SetErrorString");
static_assert(offsetof(ModioUIErrorDisplayWidget_SetErrorString, InErrorString) == 0x000000, "Member 'ModioUIErrorDisplayWidget_SetErrorString::InErrorString' has a wrong offset!");

// Function ModioUI.ModioUIErrorDisplayWidget.SetErrorText
// 0x0018 (0x0018 - 0x0000)
struct ModioUIErrorDisplayWidget_SetErrorText final 
{
public:
	class FText                                   InErrorText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIErrorDisplayWidget_SetErrorText) == 0x000008, "Wrong alignment on ModioUIErrorDisplayWidget_SetErrorText");
static_assert(sizeof(ModioUIErrorDisplayWidget_SetErrorText) == 0x000018, "Wrong size on ModioUIErrorDisplayWidget_SetErrorText");
static_assert(offsetof(ModioUIErrorDisplayWidget_SetErrorText, InErrorText) == 0x000000, "Member 'ModioUIErrorDisplayWidget_SetErrorText::InErrorText' has a wrong offset!");

// Function ModioUI.ModioUIErrorDisplayWidget.IsErrorSet
// 0x0001 (0x0001 - 0x0000)
struct ModioUIErrorDisplayWidget_IsErrorSet final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIErrorDisplayWidget_IsErrorSet) == 0x000001, "Wrong alignment on ModioUIErrorDisplayWidget_IsErrorSet");
static_assert(sizeof(ModioUIErrorDisplayWidget_IsErrorSet) == 0x000001, "Wrong size on ModioUIErrorDisplayWidget_IsErrorSet");
static_assert(offsetof(ModioUIErrorDisplayWidget_IsErrorSet, ReturnValue) == 0x000000, "Member 'ModioUIErrorDisplayWidget_IsErrorSet::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIImageDisplay.DisplayImage
// 0x0088 (0x0088 - 0x0000)
struct ModioUIImageDisplay_DisplayImage final 
{
public:
	struct FSlateBrush                            Image;                                             // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplay_DisplayImage) == 0x000008, "Wrong alignment on ModioUIImageDisplay_DisplayImage");
static_assert(sizeof(ModioUIImageDisplay_DisplayImage) == 0x000088, "Wrong size on ModioUIImageDisplay_DisplayImage");
static_assert(offsetof(ModioUIImageDisplay_DisplayImage, Image) == 0x000000, "Member 'ModioUIImageDisplay_DisplayImage::Image' has a wrong offset!");

// Function ModioUI.ModioUIInputDeviceChangedReceiver.OnInputDeviceChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged final 
{
public:
	EModioUIInputMode                             InputDevice;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged) == 0x000001, "Wrong alignment on ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged");
static_assert(sizeof(ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged) == 0x000001, "Wrong size on ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged");
static_assert(offsetof(ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged, InputDevice) == 0x000000, "Member 'ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged::InputDevice' has a wrong offset!");

// Function ModioUI.ModioUIInputHintDisplayWidget.OnDisplayHintForInput
// 0x0018 (0x0018 - 0x0000)
struct ModioUIInputHintDisplayWidget_OnDisplayHintForInput final 
{
public:
	struct FKey                                   VirtualKey;                                        // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIInputHintDisplayWidget_OnDisplayHintForInput) == 0x000008, "Wrong alignment on ModioUIInputHintDisplayWidget_OnDisplayHintForInput");
static_assert(sizeof(ModioUIInputHintDisplayWidget_OnDisplayHintForInput) == 0x000018, "Wrong size on ModioUIInputHintDisplayWidget_OnDisplayHintForInput");
static_assert(offsetof(ModioUIInputHintDisplayWidget_OnDisplayHintForInput, VirtualKey) == 0x000000, "Member 'ModioUIInputHintDisplayWidget_OnDisplayHintForInput::VirtualKey' has a wrong offset!");

// Function ModioUI.ModioUIInputHintGlyphProvider.GetInputGlyphMaterialForInputType
// 0x0028 (0x0028 - 0x0000)
struct ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType final 
{
public:
	struct FKey                                   VirtualInput;                                      // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUIInputMode                             InputType;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1847[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType) == 0x000008, "Wrong alignment on ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType");
static_assert(sizeof(ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType) == 0x000028, "Wrong size on ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType");
static_assert(offsetof(ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType, VirtualInput) == 0x000000, "Member 'ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType::VirtualInput' has a wrong offset!");
static_assert(offsetof(ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType, InputType) == 0x000018, "Member 'ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType::InputType' has a wrong offset!");
static_assert(offsetof(ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType, ReturnValue) == 0x000020, "Member 'ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioImage.DisplayImageWithMaterial
// 0x0018 (0x0018 - 0x0000)
struct ModioImage_DisplayImageWithMaterial final 
{
public:
	class UTexture2DDynamic*                      Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ImageParameterName;                                // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImage_DisplayImageWithMaterial) == 0x000008, "Wrong alignment on ModioImage_DisplayImageWithMaterial");
static_assert(sizeof(ModioImage_DisplayImageWithMaterial) == 0x000018, "Wrong size on ModioImage_DisplayImageWithMaterial");
static_assert(offsetof(ModioImage_DisplayImageWithMaterial, Texture) == 0x000000, "Member 'ModioImage_DisplayImageWithMaterial::Texture' has a wrong offset!");
static_assert(offsetof(ModioImage_DisplayImageWithMaterial, Material) == 0x000008, "Member 'ModioImage_DisplayImageWithMaterial::Material' has a wrong offset!");
static_assert(offsetof(ModioImage_DisplayImageWithMaterial, ImageParameterName) == 0x000010, "Member 'ModioImage_DisplayImageWithMaterial::ImageParameterName' has a wrong offset!");

// Function ModioUI.ModioImage.ImageLoadHandler
// 0x0018 (0x0018 - 0x0000)
struct ModioImage_ImageLoadHandler final 
{
public:
	class UTexture2DDynamic*                      Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ImageParameterName;                                // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImage_ImageLoadHandler) == 0x000008, "Wrong alignment on ModioImage_ImageLoadHandler");
static_assert(sizeof(ModioImage_ImageLoadHandler) == 0x000018, "Wrong size on ModioImage_ImageLoadHandler");
static_assert(offsetof(ModioImage_ImageLoadHandler, Texture) == 0x000000, "Member 'ModioImage_ImageLoadHandler::Texture' has a wrong offset!");
static_assert(offsetof(ModioImage_ImageLoadHandler, Material) == 0x000008, "Member 'ModioImage_ImageLoadHandler::Material' has a wrong offset!");
static_assert(offsetof(ModioImage_ImageLoadHandler, ImageParameterName) == 0x000010, "Member 'ModioImage_ImageLoadHandler::ImageParameterName' has a wrong offset!");

// Function ModioUI.ModioImage.LoadImageFromFileAsync
// 0x0010 (0x0010 - 0x0000)
struct ModioImage_LoadImageFromFileAsync final 
{
public:
	struct FModioImageWrapper                     ImageLoader;                                       // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImage_LoadImageFromFileAsync) == 0x000008, "Wrong alignment on ModioImage_LoadImageFromFileAsync");
static_assert(sizeof(ModioImage_LoadImageFromFileAsync) == 0x000010, "Wrong size on ModioImage_LoadImageFromFileAsync");
static_assert(offsetof(ModioImage_LoadImageFromFileAsync, ImageLoader) == 0x000000, "Member 'ModioImage_LoadImageFromFileAsync::ImageLoader' has a wrong offset!");

// Function ModioUI.ModioImage.LoadImageFromFileWithMaterialAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioImage_LoadImageFromFileWithMaterialAsync final 
{
public:
	struct FModioImageWrapper                     ImageLoader;                                       // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     Material;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ImageParameterName;                                // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImage_LoadImageFromFileWithMaterialAsync) == 0x000008, "Wrong alignment on ModioImage_LoadImageFromFileWithMaterialAsync");
static_assert(sizeof(ModioImage_LoadImageFromFileWithMaterialAsync) == 0x000020, "Wrong size on ModioImage_LoadImageFromFileWithMaterialAsync");
static_assert(offsetof(ModioImage_LoadImageFromFileWithMaterialAsync, ImageLoader) == 0x000000, "Member 'ModioImage_LoadImageFromFileWithMaterialAsync::ImageLoader' has a wrong offset!");
static_assert(offsetof(ModioImage_LoadImageFromFileWithMaterialAsync, Material) == 0x000010, "Member 'ModioImage_LoadImageFromFileWithMaterialAsync::Material' has a wrong offset!");
static_assert(offsetof(ModioImage_LoadImageFromFileWithMaterialAsync, ImageParameterName) == 0x000018, "Member 'ModioImage_LoadImageFromFileWithMaterialAsync::ImageParameterName' has a wrong offset!");

// Function ModioUI.ModioInputBindingImage.GetInputModeVisibilityDelegate
// 0x0010 (0x0010 - 0x0000)
struct ModioInputBindingImage_GetInputModeVisibilityDelegate final 
{
public:
	TDelegate<void(EModioUIInputMode InputMode)>  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioInputBindingImage_GetInputModeVisibilityDelegate) == 0x000004, "Wrong alignment on ModioInputBindingImage_GetInputModeVisibilityDelegate");
static_assert(sizeof(ModioInputBindingImage_GetInputModeVisibilityDelegate) == 0x000010, "Wrong size on ModioInputBindingImage_GetInputModeVisibilityDelegate");
static_assert(offsetof(ModioInputBindingImage_GetInputModeVisibilityDelegate, ReturnValue) == 0x000000, "Member 'ModioInputBindingImage_GetInputModeVisibilityDelegate::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioInputBindingImage.SetKeyToShow
// 0x0018 (0x0018 - 0x0000)
struct ModioInputBindingImage_SetKeyToShow final 
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioInputBindingImage_SetKeyToShow) == 0x000008, "Wrong alignment on ModioInputBindingImage_SetKeyToShow");
static_assert(sizeof(ModioInputBindingImage_SetKeyToShow) == 0x000018, "Wrong size on ModioInputBindingImage_SetKeyToShow");
static_assert(offsetof(ModioInputBindingImage_SetKeyToShow, NewKey) == 0x000000, "Member 'ModioInputBindingImage_SetKeyToShow::NewKey' has a wrong offset!");

// Function ModioUI.ModioUIModDetailsDisplay.DisplayModDetails
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModDetailsDisplay_DisplayModDetails final 
{
public:
	TScriptInterface<class IModioModInfoUIDetails> Details;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModDetailsDisplay_DisplayModDetails) == 0x000008, "Wrong alignment on ModioUIModDetailsDisplay_DisplayModDetails");
static_assert(sizeof(ModioUIModDetailsDisplay_DisplayModDetails) == 0x000010, "Wrong size on ModioUIModDetailsDisplay_DisplayModDetails");
static_assert(offsetof(ModioUIModDetailsDisplay_DisplayModDetails, Details) == 0x000000, "Member 'ModioUIModDetailsDisplay_DisplayModDetails::Details' has a wrong offset!");

// Function ModioUI.ModioUIModDetailsDisplay.DisplayModDetailsForID
// 0x0008 (0x0008 - 0x0000)
struct ModioUIModDetailsDisplay_DisplayModDetailsForID final 
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModDetailsDisplay_DisplayModDetailsForID) == 0x000008, "Wrong alignment on ModioUIModDetailsDisplay_DisplayModDetailsForID");
static_assert(sizeof(ModioUIModDetailsDisplay_DisplayModDetailsForID) == 0x000008, "Wrong size on ModioUIModDetailsDisplay_DisplayModDetailsForID");
static_assert(offsetof(ModioUIModDetailsDisplay_DisplayModDetailsForID, ModId) == 0x000000, "Member 'ModioUIModDetailsDisplay_DisplayModDetailsForID::ModId' has a wrong offset!");

// Function ModioUI.ModioUIModDetailsDisplay.HandleDisplayModDetails
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModDetailsDisplay_HandleDisplayModDetails final 
{
public:
	TScriptInterface<class IModioModInfoUIDetails> Details;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModDetailsDisplay_HandleDisplayModDetails) == 0x000008, "Wrong alignment on ModioUIModDetailsDisplay_HandleDisplayModDetails");
static_assert(sizeof(ModioUIModDetailsDisplay_HandleDisplayModDetails) == 0x000010, "Wrong size on ModioUIModDetailsDisplay_HandleDisplayModDetails");
static_assert(offsetof(ModioUIModDetailsDisplay_HandleDisplayModDetails, Details) == 0x000000, "Member 'ModioUIModDetailsDisplay_HandleDisplayModDetails::Details' has a wrong offset!");

// Function ModioUI.ModioUIModDetailsDisplay.HandleDisplayModDetailsForID
// 0x0008 (0x0008 - 0x0000)
struct ModioUIModDetailsDisplay_HandleDisplayModDetailsForID final 
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModDetailsDisplay_HandleDisplayModDetailsForID) == 0x000008, "Wrong alignment on ModioUIModDetailsDisplay_HandleDisplayModDetailsForID");
static_assert(sizeof(ModioUIModDetailsDisplay_HandleDisplayModDetailsForID) == 0x000008, "Wrong size on ModioUIModDetailsDisplay_HandleDisplayModDetailsForID");
static_assert(offsetof(ModioUIModDetailsDisplay_HandleDisplayModDetailsForID, ModId) == 0x000000, "Member 'ModioUIModDetailsDisplay_HandleDisplayModDetailsForID::ModId' has a wrong offset!");

// Function ModioUI.ModioUIModDetailsDisplay.RegisterUserWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModDetailsDisplay_RegisterUserWidget final 
{
public:
	TScriptInterface<class IModioUIModDetailsDisplay> DisplayWidget;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModDetailsDisplay_RegisterUserWidget) == 0x000008, "Wrong alignment on ModioUIModDetailsDisplay_RegisterUserWidget");
static_assert(sizeof(ModioUIModDetailsDisplay_RegisterUserWidget) == 0x000010, "Wrong size on ModioUIModDetailsDisplay_RegisterUserWidget");
static_assert(offsetof(ModioUIModDetailsDisplay_RegisterUserWidget, DisplayWidget) == 0x000000, "Member 'ModioUIModDetailsDisplay_RegisterUserWidget::DisplayWidget' has a wrong offset!");

// Function ModioUI.ModioUIPopupMenuContentWidget.SetDesiredSize
// 0x0008 (0x0008 - 0x0000)
struct ModioUIPopupMenuContentWidget_SetDesiredSize final 
{
public:
	struct FVector2D                              DesiredSize;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIPopupMenuContentWidget_SetDesiredSize) == 0x000004, "Wrong alignment on ModioUIPopupMenuContentWidget_SetDesiredSize");
static_assert(sizeof(ModioUIPopupMenuContentWidget_SetDesiredSize) == 0x000008, "Wrong size on ModioUIPopupMenuContentWidget_SetDesiredSize");
static_assert(offsetof(ModioUIPopupMenuContentWidget_SetDesiredSize, DesiredSize) == 0x000000, "Member 'ModioUIPopupMenuContentWidget_SetDesiredSize::DesiredSize' has a wrong offset!");

// Function ModioUI.ModioUIPopupMenuContentWidget.SetMenuEntries
// 0x0050 (0x0050 - 0x0000)
struct ModioUIPopupMenuContentWidget_SetMenuEntries final 
{
public:
	struct FModioUIMenuCommandList                Entries;                                           // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIPopupMenuContentWidget_SetMenuEntries) == 0x000008, "Wrong alignment on ModioUIPopupMenuContentWidget_SetMenuEntries");
static_assert(sizeof(ModioUIPopupMenuContentWidget_SetMenuEntries) == 0x000050, "Wrong size on ModioUIPopupMenuContentWidget_SetMenuEntries");
static_assert(offsetof(ModioUIPopupMenuContentWidget_SetMenuEntries, Entries) == 0x000000, "Member 'ModioUIPopupMenuContentWidget_SetMenuEntries::Entries' has a wrong offset!");

// Function ModioUI.ModioUIPopupMenuContentWidget.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct ModioUIPopupMenuContentWidget_SetStyle final 
{
public:
	struct FModioUIStyleRef                       StyleRef;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIPopupMenuContentWidget_SetStyle) == 0x000004, "Wrong alignment on ModioUIPopupMenuContentWidget_SetStyle");
static_assert(sizeof(ModioUIPopupMenuContentWidget_SetStyle) == 0x000008, "Wrong size on ModioUIPopupMenuContentWidget_SetStyle");
static_assert(offsetof(ModioUIPopupMenuContentWidget_SetStyle, StyleRef) == 0x000000, "Member 'ModioUIPopupMenuContentWidget_SetStyle::StyleRef' has a wrong offset!");

// Function ModioUI.ModioUIRefineSearchWidget.GetSearchString
// 0x0010 (0x0010 - 0x0000)
struct ModioUIRefineSearchWidget_GetSearchString final 
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIRefineSearchWidget_GetSearchString) == 0x000008, "Wrong alignment on ModioUIRefineSearchWidget_GetSearchString");
static_assert(sizeof(ModioUIRefineSearchWidget_GetSearchString) == 0x000010, "Wrong size on ModioUIRefineSearchWidget_GetSearchString");
static_assert(offsetof(ModioUIRefineSearchWidget_GetSearchString, ReturnValue) == 0x000000, "Member 'ModioUIRefineSearchWidget_GetSearchString::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIRefineSearchWidget.GetSelectedTagValues
// 0x0010 (0x0010 - 0x0000)
struct ModioUIRefineSearchWidget_GetSelectedTagValues final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIRefineSearchWidget_GetSelectedTagValues) == 0x000008, "Wrong alignment on ModioUIRefineSearchWidget_GetSelectedTagValues");
static_assert(sizeof(ModioUIRefineSearchWidget_GetSelectedTagValues) == 0x000010, "Wrong size on ModioUIRefineSearchWidget_GetSelectedTagValues");
static_assert(offsetof(ModioUIRefineSearchWidget_GetSelectedTagValues, ReturnValue) == 0x000000, "Member 'ModioUIRefineSearchWidget_GetSelectedTagValues::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIRefineSearchWidget.NotifySettingsChanged
// 0x00A8 (0x00A8 - 0x0000)
struct ModioUIRefineSearchWidget_NotifySettingsChanged final 
{
public:
	struct FModioFilterParams                     SearchSettings;                                    // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIRefineSearchWidget_NotifySettingsChanged) == 0x000008, "Wrong alignment on ModioUIRefineSearchWidget_NotifySettingsChanged");
static_assert(sizeof(ModioUIRefineSearchWidget_NotifySettingsChanged) == 0x0000A8, "Wrong size on ModioUIRefineSearchWidget_NotifySettingsChanged");
static_assert(offsetof(ModioUIRefineSearchWidget_NotifySettingsChanged, SearchSettings) == 0x000000, "Member 'ModioUIRefineSearchWidget_NotifySettingsChanged::SearchSettings' has a wrong offset!");

// Function ModioUI.ModioUIStringInputWidget.GatherInput
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_GatherInput final 
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_GatherInput) == 0x000008, "Wrong alignment on ModioUIStringInputWidget_GatherInput");
static_assert(sizeof(ModioUIStringInputWidget_GatherInput) == 0x000010, "Wrong size on ModioUIStringInputWidget_GatherInput");
static_assert(offsetof(ModioUIStringInputWidget_GatherInput, ReturnValue) == 0x000000, "Member 'ModioUIStringInputWidget_GatherInput::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIStringInputWidget.SetHint
// 0x0018 (0x0018 - 0x0000)
struct ModioUIStringInputWidget_SetHint final 
{
public:
	class FText                                   HintText;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_SetHint) == 0x000008, "Wrong alignment on ModioUIStringInputWidget_SetHint");
static_assert(sizeof(ModioUIStringInputWidget_SetHint) == 0x000018, "Wrong size on ModioUIStringInputWidget_SetHint");
static_assert(offsetof(ModioUIStringInputWidget_SetHint, HintText) == 0x000000, "Member 'ModioUIStringInputWidget_SetHint::HintText' has a wrong offset!");

// Function ModioUI.ModioUIStringInputWidget.SetInput
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_SetInput final 
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_SetInput) == 0x000008, "Wrong alignment on ModioUIStringInputWidget_SetInput");
static_assert(sizeof(ModioUIStringInputWidget_SetInput) == 0x000010, "Wrong size on ModioUIStringInputWidget_SetInput");
static_assert(offsetof(ModioUIStringInputWidget_SetInput, Input) == 0x000000, "Member 'ModioUIStringInputWidget_SetInput::Input' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateAllLetters
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateAllLetters final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_184C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateAllLetters) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateAllLetters");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateAllLetters) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateAllLetters");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllLetters, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateAllLetters::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllLetters, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateAllLetters::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateAllNumeric
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateAllNumeric final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_184D[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateAllNumeric) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateAllNumeric");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateAllNumeric) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateAllNumeric");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllNumeric, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateAllNumeric::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllNumeric, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateAllNumeric::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateAlphanumeric
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateAlphanumeric final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_184E[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateAlphanumeric) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateAlphanumeric");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateAlphanumeric) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateAlphanumeric");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAlphanumeric, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateAlphanumeric::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAlphanumeric, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateAlphanumeric::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateEmailAddress
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateEmailAddress final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_184F[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateEmailAddress) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateEmailAddress");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateEmailAddress) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateEmailAddress");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateEmailAddress, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateEmailAddress::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateEmailAddress, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateEmailAddress::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateLength
// 0x0028 (0x0028 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateLength final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         DesiredMaximumLength;                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredMinimumLength;                              // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1850[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateLength) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateLength");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateLength) == 0x000028, "Wrong size on ModioUIInputValidationLibrary_ValidateLength");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateLength::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, DesiredMaximumLength) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateLength::DesiredMaximumLength' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, DesiredMinimumLength) == 0x00001C, "Member 'ModioUIInputValidationLibrary_ValidateLength::DesiredMinimumLength' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, ReturnValue) == 0x000020, "Member 'ModioUIInputValidationLibrary_ValidateLength::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateNotEmpty
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateNotEmpty final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1851[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateNotEmpty) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateNotEmpty");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateNotEmpty) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateNotEmpty");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNotEmpty, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateNotEmpty::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNotEmpty, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateNotEmpty::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateNoWhitespace
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateNoWhitespace final 
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1852[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateNoWhitespace) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateNoWhitespace");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateNoWhitespace) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateNoWhitespace");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNoWhitespace, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateNoWhitespace::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNoWhitespace, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateNoWhitespace::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIInputValidationLibrary.ValidateUsingRule
// 0x0060 (0x0060 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateUsingRule final 
{
public:
	struct FModioTextValidationRule               Rule;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   TextToValidate;                                    // 0x0028(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ValidationMessageText;                             // 0x0040(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1853[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateUsingRule) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateUsingRule");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateUsingRule) == 0x000060, "Wrong size on ModioUIInputValidationLibrary_ValidateUsingRule");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, Rule) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::Rule' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, TextToValidate) == 0x000028, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, ValidationMessageText) == 0x000040, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::ValidationMessageText' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, ReturnValue) == 0x000058, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUITextValidator.GetTextValidationRules
// 0x0010 (0x0010 - 0x0000)
struct ModioUITextValidator_GetTextValidationRules final 
{
public:
	TArray<struct FModioTextValidationRule>       Rules;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITextValidator_GetTextValidationRules) == 0x000008, "Wrong alignment on ModioUITextValidator_GetTextValidationRules");
static_assert(sizeof(ModioUITextValidator_GetTextValidationRules) == 0x000010, "Wrong size on ModioUITextValidator_GetTextValidationRules");
static_assert(offsetof(ModioUITextValidator_GetTextValidationRules, Rules) == 0x000000, "Member 'ModioUITextValidator_GetTextValidationRules::Rules' has a wrong offset!");

// Function ModioUI.ModioUITextValidator.SetValidationError
// 0x0018 (0x0018 - 0x0000)
struct ModioUITextValidator_SetValidationError final 
{
public:
	class FText                                   ErrorText;                                         // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITextValidator_SetValidationError) == 0x000008, "Wrong alignment on ModioUITextValidator_SetValidationError");
static_assert(sizeof(ModioUITextValidator_SetValidationError) == 0x000018, "Wrong size on ModioUITextValidator_SetValidationError");
static_assert(offsetof(ModioUITextValidator_SetValidationError, ErrorText) == 0x000000, "Member 'ModioUITextValidator_SetValidationError::ErrorText' has a wrong offset!");

// Function ModioUI.ModioUITextValidator.ValidateText
// 0x0038 (0x0038 - 0x0000)
struct ModioUITextValidator_ValidateText final 
{
public:
	class FText                                   InputText;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ValidationMessageText;                             // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1855[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUITextValidator_ValidateText) == 0x000008, "Wrong alignment on ModioUITextValidator_ValidateText");
static_assert(sizeof(ModioUITextValidator_ValidateText) == 0x000038, "Wrong size on ModioUITextValidator_ValidateText");
static_assert(offsetof(ModioUITextValidator_ValidateText, InputText) == 0x000000, "Member 'ModioUITextValidator_ValidateText::InputText' has a wrong offset!");
static_assert(offsetof(ModioUITextValidator_ValidateText, ValidationMessageText) == 0x000018, "Member 'ModioUITextValidator_ValidateText::ValidationMessageText' has a wrong offset!");
static_assert(offsetof(ModioUITextValidator_ValidateText, ReturnValue) == 0x000030, "Member 'ModioUITextValidator_ValidateText::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUIUserStringListEntry.SetListItemString
// 0x0010 (0x0010 - 0x0000)
struct ModioUIUserStringListEntry_SetListItemString final 
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserStringListEntry_SetListItemString) == 0x000008, "Wrong alignment on ModioUIUserStringListEntry_SetListItemString");
static_assert(sizeof(ModioUIUserStringListEntry_SetListItemString) == 0x000010, "Wrong size on ModioUIUserStringListEntry_SetListItemString");
static_assert(offsetof(ModioUIUserStringListEntry_SetListItemString, InString) == 0x000000, "Member 'ModioUIUserStringListEntry_SetListItemString::InString' has a wrong offset!");

// Function ModioUI.ModioAsyncOpWrapperWidget.SetActualAsyncOperationWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget final 
{
public:
	TScriptInterface<class IModioUIAsyncOperationWidget> Widget;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget) == 0x000008, "Wrong alignment on ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget");
static_assert(sizeof(ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget) == 0x000010, "Wrong size on ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget");
static_assert(offsetof(ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget, Widget) == 0x000000, "Member 'ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget::Widget' has a wrong offset!");

// Function ModioUI.ModioButton.SetButtonStyle
// 0x000C (0x000C - 0x0000)
struct ModioButton_SetButtonStyle final 
{
public:
	struct FModioUIStyleRef                       ButtonStyleRef;                                    // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bApplyStyle;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_185C[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioButton_SetButtonStyle) == 0x000004, "Wrong alignment on ModioButton_SetButtonStyle");
static_assert(sizeof(ModioButton_SetButtonStyle) == 0x00000C, "Wrong size on ModioButton_SetButtonStyle");
static_assert(offsetof(ModioButton_SetButtonStyle, ButtonStyleRef) == 0x000000, "Member 'ModioButton_SetButtonStyle::ButtonStyleRef' has a wrong offset!");
static_assert(offsetof(ModioButton_SetButtonStyle, bApplyStyle) == 0x000008, "Member 'ModioButton_SetButtonStyle::bApplyStyle' has a wrong offset!");

// Function ModioUI.ModioButton.SetLabel
// 0x0018 (0x0018 - 0x0000)
struct ModioButton_SetLabel final 
{
public:
	class FText                                   NewLabel;                                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioButton_SetLabel) == 0x000008, "Wrong alignment on ModioButton_SetLabel");
static_assert(sizeof(ModioButton_SetLabel) == 0x000018, "Wrong size on ModioButton_SetLabel");
static_assert(offsetof(ModioButton_SetLabel, NewLabel) == 0x000000, "Member 'ModioButton_SetLabel::NewLabel' has a wrong offset!");

// Function ModioUI.ModioRichTextButton.GetInputHintVisibility
// 0x0002 (0x0002 - 0x0000)
struct ModioRichTextButton_GetInputHintVisibility final 
{
public:
	EModioUIInputMode                             InputMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioRichTextButton_GetInputHintVisibility) == 0x000001, "Wrong alignment on ModioRichTextButton_GetInputHintVisibility");
static_assert(sizeof(ModioRichTextButton_GetInputHintVisibility) == 0x000002, "Wrong size on ModioRichTextButton_GetInputHintVisibility");
static_assert(offsetof(ModioRichTextButton_GetInputHintVisibility, InputMode) == 0x000000, "Member 'ModioRichTextButton_GetInputHintVisibility::InputMode' has a wrong offset!");
static_assert(offsetof(ModioRichTextButton_GetInputHintVisibility, ReturnValue) == 0x000001, "Member 'ModioRichTextButton_GetInputHintVisibility::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioRichTextButton.GetRichTextStyle
// 0x00A8 (0x00A8 - 0x0000)
struct ModioRichTextButton_GetRichTextStyle final 
{
public:
	struct FModioRichTextStyle                    ReturnValue;                                       // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioRichTextButton_GetRichTextStyle) == 0x000008, "Wrong alignment on ModioRichTextButton_GetRichTextStyle");
static_assert(sizeof(ModioRichTextButton_GetRichTextStyle) == 0x0000A8, "Wrong size on ModioRichTextButton_GetRichTextStyle");
static_assert(offsetof(ModioRichTextButton_GetRichTextStyle, ReturnValue) == 0x000000, "Member 'ModioRichTextButton_GetRichTextStyle::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioRichTextButton.GetStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioRichTextButton_GetStyleNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioRichTextButton_GetStyleNames) == 0x000008, "Wrong alignment on ModioRichTextButton_GetStyleNames");
static_assert(sizeof(ModioRichTextButton_GetStyleNames) == 0x000010, "Wrong size on ModioRichTextButton_GetStyleNames");
static_assert(offsetof(ModioRichTextButton_GetStyleNames, ReturnValue) == 0x000000, "Member 'ModioRichTextButton_GetStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioCircularProgressBar.GetProgress
// 0x0004 (0x0004 - 0x0000)
struct ModioCircularProgressBar_GetProgress final 
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCircularProgressBar_GetProgress) == 0x000004, "Wrong alignment on ModioCircularProgressBar_GetProgress");
static_assert(sizeof(ModioCircularProgressBar_GetProgress) == 0x000004, "Wrong size on ModioCircularProgressBar_GetProgress");
static_assert(offsetof(ModioCircularProgressBar_GetProgress, ReturnValue) == 0x000000, "Member 'ModioCircularProgressBar_GetProgress::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioCodeInputWidget.ValidateCodeInputCharacter
// 0x00C8 (0x00C8 - 0x0000)
struct ModioCodeInputWidget_ValidateCodeInputCharacter final 
{
public:
	class FString                                 Character;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x0010(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCodeInputWidget_ValidateCodeInputCharacter) == 0x000008, "Wrong alignment on ModioCodeInputWidget_ValidateCodeInputCharacter");
static_assert(sizeof(ModioCodeInputWidget_ValidateCodeInputCharacter) == 0x0000C8, "Wrong size on ModioCodeInputWidget_ValidateCodeInputCharacter");
static_assert(offsetof(ModioCodeInputWidget_ValidateCodeInputCharacter, Character) == 0x000000, "Member 'ModioCodeInputWidget_ValidateCodeInputCharacter::Character' has a wrong offset!");
static_assert(offsetof(ModioCodeInputWidget_ValidateCodeInputCharacter, ReturnValue) == 0x000010, "Member 'ModioCodeInputWidget_ValidateCodeInputCharacter::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioCollectionView.OnModGroupChanged
// 0x0020 (0x0020 - 0x0000)
struct ModioCollectionView_OnModGroupChanged final 
{
public:
	class FText                                   SelectedItem;                                      // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	ESelectInfo                                   SelectionType;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_186E[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioCollectionView_OnModGroupChanged) == 0x000008, "Wrong alignment on ModioCollectionView_OnModGroupChanged");
static_assert(sizeof(ModioCollectionView_OnModGroupChanged) == 0x000020, "Wrong size on ModioCollectionView_OnModGroupChanged");
static_assert(offsetof(ModioCollectionView_OnModGroupChanged, SelectedItem) == 0x000000, "Member 'ModioCollectionView_OnModGroupChanged::SelectedItem' has a wrong offset!");
static_assert(offsetof(ModioCollectionView_OnModGroupChanged, SelectionType) == 0x000018, "Member 'ModioCollectionView_OnModGroupChanged::SelectionType' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.BackCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_BackCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_BackCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_BackCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_BackCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_BackCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_BackCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_BackCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.CollapseCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_CollapseCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_CollapseCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_CollapseCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_CollapseCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_CollapseCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_CollapseCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_CollapseCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.ConfirmCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_ConfirmCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_ConfirmCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_ConfirmCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_ConfirmCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_ConfirmCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_ConfirmCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_ConfirmCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.DownloadQueueCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_DownloadQueueCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_DownloadQueueCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_DownloadQueueCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_DownloadQueueCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_DownloadQueueCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_DownloadQueueCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_DownloadQueueCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.MoreOptionsCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_MoreOptionsCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_MoreOptionsCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_MoreOptionsCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_MoreOptionsCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_MoreOptionsCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_MoreOptionsCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_MoreOptionsCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.NextPageCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_NextPageCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_NextPageCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_NextPageCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_NextPageCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_NextPageCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_NextPageCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_NextPageCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.PreviousPageCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_PreviousPageCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_PreviousPageCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_PreviousPageCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_PreviousPageCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_PreviousPageCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_PreviousPageCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_PreviousPageCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUICommandInfoLibrary.RefineSearchCommand
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandInfoLibrary_RefineSearchCommand final 
{
public:
	struct FModioUIMenuEntry                      ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandInfoLibrary_RefineSearchCommand) == 0x000008, "Wrong alignment on ModioUICommandInfoLibrary_RefineSearchCommand");
static_assert(sizeof(ModioUICommandInfoLibrary_RefineSearchCommand) == 0x000018, "Wrong size on ModioUICommandInfoLibrary_RefineSearchCommand");
static_assert(offsetof(ModioUICommandInfoLibrary_RefineSearchCommand, ReturnValue) == 0x000000, "Member 'ModioUICommandInfoLibrary_RefineSearchCommand::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDrawerContentBase.GetContentWidget
// 0x0008 (0x0008 - 0x0000)
struct ModioDrawerContentBase_GetContentWidget final 
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDrawerContentBase_GetContentWidget) == 0x000008, "Wrong alignment on ModioDrawerContentBase_GetContentWidget");
static_assert(sizeof(ModioDrawerContentBase_GetContentWidget) == 0x000008, "Wrong size on ModioDrawerContentBase_GetContentWidget");
static_assert(offsetof(ModioDrawerContentBase_GetContentWidget, ReturnValue) == 0x000000, "Member 'ModioDrawerContentBase_GetContentWidget::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDrawerContentBase.GetHeaderWidget
// 0x0008 (0x0008 - 0x0000)
struct ModioDrawerContentBase_GetHeaderWidget final 
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDrawerContentBase_GetHeaderWidget) == 0x000008, "Wrong alignment on ModioDrawerContentBase_GetHeaderWidget");
static_assert(sizeof(ModioDrawerContentBase_GetHeaderWidget) == 0x000008, "Wrong size on ModioDrawerContentBase_GetHeaderWidget");
static_assert(offsetof(ModioDrawerContentBase_GetHeaderWidget, ReturnValue) == 0x000000, "Member 'ModioDrawerContentBase_GetHeaderWidget::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDrawerContentBase.GetOptionalContentWidget
// 0x0008 (0x0008 - 0x0000)
struct ModioDrawerContentBase_GetOptionalContentWidget final 
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDrawerContentBase_GetOptionalContentWidget) == 0x000008, "Wrong alignment on ModioDrawerContentBase_GetOptionalContentWidget");
static_assert(sizeof(ModioDrawerContentBase_GetOptionalContentWidget) == 0x000008, "Wrong size on ModioDrawerContentBase_GetOptionalContentWidget");
static_assert(offsetof(ModioDrawerContentBase_GetOptionalContentWidget, ReturnValue) == 0x000000, "Member 'ModioDrawerContentBase_GetOptionalContentWidget::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDrawerController.SetDrawerExpanded
// 0x0008 (0x0008 - 0x0000)
struct ModioDrawerController_SetDrawerExpanded final 
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExpandedState;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCloseOtherDrawers;                                // 0x0005(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_187F[0x2];                                     // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioDrawerController_SetDrawerExpanded) == 0x000004, "Wrong alignment on ModioDrawerController_SetDrawerExpanded");
static_assert(sizeof(ModioDrawerController_SetDrawerExpanded) == 0x000008, "Wrong size on ModioDrawerController_SetDrawerExpanded");
static_assert(offsetof(ModioDrawerController_SetDrawerExpanded, SlotIndex) == 0x000000, "Member 'ModioDrawerController_SetDrawerExpanded::SlotIndex' has a wrong offset!");
static_assert(offsetof(ModioDrawerController_SetDrawerExpanded, bExpandedState) == 0x000004, "Member 'ModioDrawerController_SetDrawerExpanded::bExpandedState' has a wrong offset!");
static_assert(offsetof(ModioDrawerController_SetDrawerExpanded, bCloseOtherDrawers) == 0x000005, "Member 'ModioDrawerController_SetDrawerExpanded::bCloseOtherDrawers' has a wrong offset!");

// Function ModioUI.ModioDrawerController.ToggleDrawerExpanded
// 0x0008 (0x0008 - 0x0000)
struct ModioDrawerController_ToggleDrawerExpanded final 
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCloseOtherDrawers;                                // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1880[0x2];                                     // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioDrawerController_ToggleDrawerExpanded) == 0x000004, "Wrong alignment on ModioDrawerController_ToggleDrawerExpanded");
static_assert(sizeof(ModioDrawerController_ToggleDrawerExpanded) == 0x000008, "Wrong size on ModioDrawerController_ToggleDrawerExpanded");
static_assert(offsetof(ModioDrawerController_ToggleDrawerExpanded, SlotIndex) == 0x000000, "Member 'ModioDrawerController_ToggleDrawerExpanded::SlotIndex' has a wrong offset!");
static_assert(offsetof(ModioDrawerController_ToggleDrawerExpanded, bCloseOtherDrawers) == 0x000004, "Member 'ModioDrawerController_ToggleDrawerExpanded::bCloseOtherDrawers' has a wrong offset!");
static_assert(offsetof(ModioDrawerController_ToggleDrawerExpanded, ReturnValue) == 0x000005, "Member 'ModioDrawerController_ToggleDrawerExpanded::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioDrawerController.IsAnyDrawerExpanded
// 0x0001 (0x0001 - 0x0000)
struct ModioDrawerController_IsAnyDrawerExpanded final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDrawerController_IsAnyDrawerExpanded) == 0x000001, "Wrong alignment on ModioDrawerController_IsAnyDrawerExpanded");
static_assert(sizeof(ModioDrawerController_IsAnyDrawerExpanded) == 0x000001, "Wrong size on ModioDrawerController_IsAnyDrawerExpanded");
static_assert(offsetof(ModioDrawerController_IsAnyDrawerExpanded, ReturnValue) == 0x000000, "Member 'ModioDrawerController_IsAnyDrawerExpanded::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioEditableText.GetStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioEditableText_GetStyleNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditableText_GetStyleNames) == 0x000008, "Wrong alignment on ModioEditableText_GetStyleNames");
static_assert(sizeof(ModioEditableText_GetStyleNames) == 0x000010, "Wrong size on ModioEditableText_GetStyleNames");
static_assert(offsetof(ModioEditableText_GetStyleNames, ReturnValue) == 0x000000, "Member 'ModioEditableText_GetStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioErrorRetryWidget.SetErrorText
// 0x0010 (0x0010 - 0x0000)
struct ModioErrorRetryWidget_SetErrorText final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioErrorRetryWidget_SetErrorText) == 0x000008, "Wrong alignment on ModioErrorRetryWidget_SetErrorText");
static_assert(sizeof(ModioErrorRetryWidget_SetErrorText) == 0x000010, "Wrong size on ModioErrorRetryWidget_SetErrorText");
static_assert(offsetof(ModioErrorRetryWidget_SetErrorText, Error) == 0x000000, "Member 'ModioErrorRetryWidget_SetErrorText::Error' has a wrong offset!");

// Function ModioUI.ModioFeaturedCategory.HandleItemListEntryDetailsClicked
// 0x0008 (0x0008 - 0x0000)
struct ModioFeaturedCategory_HandleItemListEntryDetailsClicked final 
{
public:
	class UModioModInfoUI*                        ModInfo;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedCategory_HandleItemListEntryDetailsClicked) == 0x000008, "Wrong alignment on ModioFeaturedCategory_HandleItemListEntryDetailsClicked");
static_assert(sizeof(ModioFeaturedCategory_HandleItemListEntryDetailsClicked) == 0x000008, "Wrong size on ModioFeaturedCategory_HandleItemListEntryDetailsClicked");
static_assert(offsetof(ModioFeaturedCategory_HandleItemListEntryDetailsClicked, ModInfo) == 0x000000, "Member 'ModioFeaturedCategory_HandleItemListEntryDetailsClicked::ModInfo' has a wrong offset!");

// Function ModioUI.ModioFeaturedCategory.HandleItemListEntryReportClicked
// 0x0008 (0x0008 - 0x0000)
struct ModioFeaturedCategory_HandleItemListEntryReportClicked final 
{
public:
	class UModioModInfoUI*                        ModInfo;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedCategory_HandleItemListEntryReportClicked) == 0x000008, "Wrong alignment on ModioFeaturedCategory_HandleItemListEntryReportClicked");
static_assert(sizeof(ModioFeaturedCategory_HandleItemListEntryReportClicked) == 0x000008, "Wrong size on ModioFeaturedCategory_HandleItemListEntryReportClicked");
static_assert(offsetof(ModioFeaturedCategory_HandleItemListEntryReportClicked, ModInfo) == 0x000000, "Member 'ModioFeaturedCategory_HandleItemListEntryReportClicked::ModInfo' has a wrong offset!");

// Function ModioUI.ModioFeaturedCategory.HandleItemListEntrySubscribeClicked
// 0x0008 (0x0008 - 0x0000)
struct ModioFeaturedCategory_HandleItemListEntrySubscribeClicked final 
{
public:
	class UModioModInfoUI*                        ModInfo;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedCategory_HandleItemListEntrySubscribeClicked) == 0x000008, "Wrong alignment on ModioFeaturedCategory_HandleItemListEntrySubscribeClicked");
static_assert(sizeof(ModioFeaturedCategory_HandleItemListEntrySubscribeClicked) == 0x000008, "Wrong size on ModioFeaturedCategory_HandleItemListEntrySubscribeClicked");
static_assert(offsetof(ModioFeaturedCategory_HandleItemListEntrySubscribeClicked, ModInfo) == 0x000000, "Member 'ModioFeaturedCategory_HandleItemListEntrySubscribeClicked::ModInfo' has a wrong offset!");

// DelegateFunction ModioUI.ModioFeaturedCategory.OnCategorySelectionChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_188C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioFeaturedCategory*                 RealCategory;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature");
static_assert(sizeof(ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature) == 0x000010, "Wrong size on ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature");
static_assert(offsetof(ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature, Param_Index) == 0x000000, "Member 'ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature::Param_Index' has a wrong offset!");
static_assert(offsetof(ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature, RealCategory) == 0x000008, "Member 'ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature::RealCategory' has a wrong offset!");

// Function ModioUI.ModioFeaturedCategory.SetSelectionIndexDelegate
// 0x0010 (0x0010 - 0x0000)
struct ModioFeaturedCategory_SetSelectionIndexDelegate final 
{
public:
	TDelegate<void()>                             Delegate;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedCategory_SetSelectionIndexDelegate) == 0x000004, "Wrong alignment on ModioFeaturedCategory_SetSelectionIndexDelegate");
static_assert(sizeof(ModioFeaturedCategory_SetSelectionIndexDelegate) == 0x000010, "Wrong size on ModioFeaturedCategory_SetSelectionIndexDelegate");
static_assert(offsetof(ModioFeaturedCategory_SetSelectionIndexDelegate, Delegate) == 0x000000, "Member 'ModioFeaturedCategory_SetSelectionIndexDelegate::Delegate' has a wrong offset!");

// Function ModioUI.ModioFeaturedCategory.GetItemList
// 0x0008 (0x0008 - 0x0000)
struct ModioFeaturedCategory_GetItemList final 
{
public:
	class UModioTileView*                         ReturnValue;                                       // 0x0000(0x0008)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedCategory_GetItemList) == 0x000008, "Wrong alignment on ModioFeaturedCategory_GetItemList");
static_assert(sizeof(ModioFeaturedCategory_GetItemList) == 0x000008, "Wrong size on ModioFeaturedCategory_GetItemList");
static_assert(offsetof(ModioFeaturedCategory_GetItemList, ReturnValue) == 0x000000, "Member 'ModioFeaturedCategory_GetItemList::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioFeaturedModCarousel.NavigateToWidget
// 0x0008 (0x0008 - 0x0000)
struct ModioFeaturedModCarousel_NavigateToWidget final 
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedModCarousel_NavigateToWidget) == 0x000008, "Wrong alignment on ModioFeaturedModCarousel_NavigateToWidget");
static_assert(sizeof(ModioFeaturedModCarousel_NavigateToWidget) == 0x000008, "Wrong size on ModioFeaturedModCarousel_NavigateToWidget");
static_assert(offsetof(ModioFeaturedModCarousel_NavigateToWidget, InWidget) == 0x000000, "Member 'ModioFeaturedModCarousel_NavigateToWidget::InWidget' has a wrong offset!");

// Function ModioUI.ModioFeaturedView.CategorySelectionChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioFeaturedView_CategorySelectionChanged final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1891[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioFeaturedCategory*                 RealCategory;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedView_CategorySelectionChanged) == 0x000008, "Wrong alignment on ModioFeaturedView_CategorySelectionChanged");
static_assert(sizeof(ModioFeaturedView_CategorySelectionChanged) == 0x000010, "Wrong size on ModioFeaturedView_CategorySelectionChanged");
static_assert(offsetof(ModioFeaturedView_CategorySelectionChanged, Param_Index) == 0x000000, "Member 'ModioFeaturedView_CategorySelectionChanged::Param_Index' has a wrong offset!");
static_assert(offsetof(ModioFeaturedView_CategorySelectionChanged, RealCategory) == 0x000008, "Member 'ModioFeaturedView_CategorySelectionChanged::RealCategory' has a wrong offset!");

// Function ModioUI.ModioFeaturedView.GetSelectionIndex
// 0x0004 (0x0004 - 0x0000)
struct ModioFeaturedView_GetSelectionIndex final 
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFeaturedView_GetSelectionIndex) == 0x000004, "Wrong alignment on ModioFeaturedView_GetSelectionIndex");
static_assert(sizeof(ModioFeaturedView_GetSelectionIndex) == 0x000004, "Wrong size on ModioFeaturedView_GetSelectionIndex");
static_assert(offsetof(ModioFeaturedView_GetSelectionIndex, ReturnValue) == 0x000000, "Member 'ModioFeaturedView_GetSelectionIndex::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioImageGalleryBase.DisplayGalleryImageAtIndex
// 0x0008 (0x0008 - 0x0000)
struct ModioImageGalleryBase_DisplayGalleryImageAtIndex final 
{
public:
	EModioUIDirection                             Direction;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1894[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DirectIndex;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageGalleryBase_DisplayGalleryImageAtIndex) == 0x000004, "Wrong alignment on ModioImageGalleryBase_DisplayGalleryImageAtIndex");
static_assert(sizeof(ModioImageGalleryBase_DisplayGalleryImageAtIndex) == 0x000008, "Wrong size on ModioImageGalleryBase_DisplayGalleryImageAtIndex");
static_assert(offsetof(ModioImageGalleryBase_DisplayGalleryImageAtIndex, Direction) == 0x000000, "Member 'ModioImageGalleryBase_DisplayGalleryImageAtIndex::Direction' has a wrong offset!");
static_assert(offsetof(ModioImageGalleryBase_DisplayGalleryImageAtIndex, DirectIndex) == 0x000004, "Member 'ModioImageGalleryBase_DisplayGalleryImageAtIndex::DirectIndex' has a wrong offset!");

// DelegateFunction ModioUI.ModioImageGalleryBase.OnDisplayImage__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ModioImageGalleryBase_OnDisplayImage__DelegateSignature final 
{
public:
	class UWidget*                                ImageWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ImageIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1895[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioImageGalleryBase_OnDisplayImage__DelegateSignature) == 0x000008, "Wrong alignment on ModioImageGalleryBase_OnDisplayImage__DelegateSignature");
static_assert(sizeof(ModioImageGalleryBase_OnDisplayImage__DelegateSignature) == 0x000010, "Wrong size on ModioImageGalleryBase_OnDisplayImage__DelegateSignature");
static_assert(offsetof(ModioImageGalleryBase_OnDisplayImage__DelegateSignature, ImageWidget) == 0x000000, "Member 'ModioImageGalleryBase_OnDisplayImage__DelegateSignature::ImageWidget' has a wrong offset!");
static_assert(offsetof(ModioImageGalleryBase_OnDisplayImage__DelegateSignature, ImageIndex) == 0x000008, "Member 'ModioImageGalleryBase_OnDisplayImage__DelegateSignature::ImageIndex' has a wrong offset!");

// Function ModioUI.ModioInputMappingGlyphLibrary.GetInputGlyph
// 0x00D8 (0x00D8 - 0x0000)
struct ModioInputMappingGlyphLibrary_GetInputGlyph final 
{
public:
	struct FModioInputMappingGlyph                MappingGlyph;                                      // 0x0000(0x00C8)(Parm, OutParm, NativeAccessSpecifierPublic)
	EModioUIInputMode                             InputMode;                                         // 0x00C8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1896[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x00D0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioInputMappingGlyphLibrary_GetInputGlyph) == 0x000008, "Wrong alignment on ModioInputMappingGlyphLibrary_GetInputGlyph");
static_assert(sizeof(ModioInputMappingGlyphLibrary_GetInputGlyph) == 0x0000D8, "Wrong size on ModioInputMappingGlyphLibrary_GetInputGlyph");
static_assert(offsetof(ModioInputMappingGlyphLibrary_GetInputGlyph, MappingGlyph) == 0x000000, "Member 'ModioInputMappingGlyphLibrary_GetInputGlyph::MappingGlyph' has a wrong offset!");
static_assert(offsetof(ModioInputMappingGlyphLibrary_GetInputGlyph, InputMode) == 0x0000C8, "Member 'ModioInputMappingGlyphLibrary_GetInputGlyph::InputMode' has a wrong offset!");
static_assert(offsetof(ModioInputMappingGlyphLibrary_GetInputGlyph, ReturnValue) == 0x0000D0, "Member 'ModioInputMappingGlyphLibrary_GetInputGlyph::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioMenu.HandleViewChanged
// 0x0004 (0x0004 - 0x0000)
struct ModioMenu_HandleViewChanged final 
{
public:
	int32                                         ViewIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioMenu_HandleViewChanged) == 0x000004, "Wrong alignment on ModioMenu_HandleViewChanged");
static_assert(sizeof(ModioMenu_HandleViewChanged) == 0x000004, "Wrong size on ModioMenu_HandleViewChanged");
static_assert(offsetof(ModioMenu_HandleViewChanged, ViewIndex) == 0x000000, "Member 'ModioMenu_HandleViewChanged::ViewIndex' has a wrong offset!");

// Function ModioUI.ModioMenu.OnDrawerAnimatedOut
// 0x0004 (0x0004 - 0x0000)
struct ModioMenu_OnDrawerAnimatedOut final 
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioMenu_OnDrawerAnimatedOut) == 0x000004, "Wrong alignment on ModioMenu_OnDrawerAnimatedOut");
static_assert(sizeof(ModioMenu_OnDrawerAnimatedOut) == 0x000004, "Wrong size on ModioMenu_OnDrawerAnimatedOut");
static_assert(offsetof(ModioMenu_OnDrawerAnimatedOut, SlotIndex) == 0x000000, "Member 'ModioMenu_OnDrawerAnimatedOut::SlotIndex' has a wrong offset!");

// Function ModioUI.ModioMenu.OnSearchSettingsChanged
// 0x00A8 (0x00A8 - 0x0000)
struct ModioMenu_OnSearchSettingsChanged final 
{
public:
	struct FModioFilterParams                     Settings;                                          // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioMenu_OnSearchSettingsChanged) == 0x000008, "Wrong alignment on ModioMenu_OnSearchSettingsChanged");
static_assert(sizeof(ModioMenu_OnSearchSettingsChanged) == 0x0000A8, "Wrong size on ModioMenu_OnSearchSettingsChanged");
static_assert(offsetof(ModioMenu_OnSearchSettingsChanged, Settings) == 0x000000, "Member 'ModioMenu_OnSearchSettingsChanged::Settings' has a wrong offset!");

// Function ModioUI.ModioMenu.OnViewChanged
// 0x0008 (0x0008 - 0x0000)
struct ModioMenu_OnViewChanged final 
{
public:
	int64                                         ViewIndex;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioMenu_OnViewChanged) == 0x000008, "Wrong alignment on ModioMenu_OnViewChanged");
static_assert(sizeof(ModioMenu_OnViewChanged) == 0x000008, "Wrong size on ModioMenu_OnViewChanged");
static_assert(offsetof(ModioMenu_OnViewChanged, ViewIndex) == 0x000000, "Member 'ModioMenu_OnViewChanged::ViewIndex' has a wrong offset!");

// Function ModioUI.ModioModDetailsImageGallery.ApplyImageToWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsImageGallery_ApplyImageToWidget final 
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ImageIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18A9[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModDetailsImageGallery_ApplyImageToWidget) == 0x000008, "Wrong alignment on ModioModDetailsImageGallery_ApplyImageToWidget");
static_assert(sizeof(ModioModDetailsImageGallery_ApplyImageToWidget) == 0x000010, "Wrong size on ModioModDetailsImageGallery_ApplyImageToWidget");
static_assert(offsetof(ModioModDetailsImageGallery_ApplyImageToWidget, Widget) == 0x000000, "Member 'ModioModDetailsImageGallery_ApplyImageToWidget::Widget' has a wrong offset!");
static_assert(offsetof(ModioModDetailsImageGallery_ApplyImageToWidget, ImageIndex) == 0x000008, "Member 'ModioModDetailsImageGallery_ApplyImageToWidget::ImageIndex' has a wrong offset!");

// Function ModioUI.ModioModDetailsImageGallery.GetImageCount
// 0x0004 (0x0004 - 0x0000)
struct ModioModDetailsImageGallery_GetImageCount final 
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsImageGallery_GetImageCount) == 0x000004, "Wrong alignment on ModioModDetailsImageGallery_GetImageCount");
static_assert(sizeof(ModioModDetailsImageGallery_GetImageCount) == 0x000004, "Wrong size on ModioModDetailsImageGallery_GetImageCount");
static_assert(offsetof(ModioModDetailsImageGallery_GetImageCount, ReturnValue) == 0x000000, "Member 'ModioModDetailsImageGallery_GetImageCount::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModDetailsImageGallery.OnGalleryImageLoad
// 0x0018 (0x0018 - 0x0000)
struct ModioModDetailsImageGallery_OnGalleryImageLoad final 
{
public:
	class UTexture2DDynamic*                      LoadedImage;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioModID                            ModId;                                             // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18AA[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModDetailsImageGallery_OnGalleryImageLoad) == 0x000008, "Wrong alignment on ModioModDetailsImageGallery_OnGalleryImageLoad");
static_assert(sizeof(ModioModDetailsImageGallery_OnGalleryImageLoad) == 0x000018, "Wrong size on ModioModDetailsImageGallery_OnGalleryImageLoad");
static_assert(offsetof(ModioModDetailsImageGallery_OnGalleryImageLoad, LoadedImage) == 0x000000, "Member 'ModioModDetailsImageGallery_OnGalleryImageLoad::LoadedImage' has a wrong offset!");
static_assert(offsetof(ModioModDetailsImageGallery_OnGalleryImageLoad, ModId) == 0x000008, "Member 'ModioModDetailsImageGallery_OnGalleryImageLoad::ModId' has a wrong offset!");
static_assert(offsetof(ModioModDetailsImageGallery_OnGalleryImageLoad, Param_Index) == 0x000010, "Member 'ModioModDetailsImageGallery_OnGalleryImageLoad::Param_Index' has a wrong offset!");

// Function ModioUI.ModioModDetailsPropertyInspector.GetTextStyle
// 0x00B0 (0x00B0 - 0x0000)
struct ModioModDetailsPropertyInspector_GetTextStyle final 
{
public:
	struct FModioUIStyleRef                       TextStyle;                                         // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioRichTextStyle                    ReturnValue;                                       // 0x0008(0x00A8)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsPropertyInspector_GetTextStyle) == 0x000008, "Wrong alignment on ModioModDetailsPropertyInspector_GetTextStyle");
static_assert(sizeof(ModioModDetailsPropertyInspector_GetTextStyle) == 0x0000B0, "Wrong size on ModioModDetailsPropertyInspector_GetTextStyle");
static_assert(offsetof(ModioModDetailsPropertyInspector_GetTextStyle, TextStyle) == 0x000000, "Member 'ModioModDetailsPropertyInspector_GetTextStyle::TextStyle' has a wrong offset!");
static_assert(offsetof(ModioModDetailsPropertyInspector_GetTextStyle, ReturnValue) == 0x000008, "Member 'ModioModDetailsPropertyInspector_GetTextStyle::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModDetailsPropertyInspector.GetFillerStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsPropertyInspector_GetFillerStyleNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsPropertyInspector_GetFillerStyleNames) == 0x000008, "Wrong alignment on ModioModDetailsPropertyInspector_GetFillerStyleNames");
static_assert(sizeof(ModioModDetailsPropertyInspector_GetFillerStyleNames) == 0x000010, "Wrong size on ModioModDetailsPropertyInspector_GetFillerStyleNames");
static_assert(offsetof(ModioModDetailsPropertyInspector_GetFillerStyleNames, ReturnValue) == 0x000000, "Member 'ModioModDetailsPropertyInspector_GetFillerStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModDetailsPropertyInspector.GetPropertyNameStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsPropertyInspector_GetPropertyNameStyleNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsPropertyInspector_GetPropertyNameStyleNames) == 0x000008, "Wrong alignment on ModioModDetailsPropertyInspector_GetPropertyNameStyleNames");
static_assert(sizeof(ModioModDetailsPropertyInspector_GetPropertyNameStyleNames) == 0x000010, "Wrong size on ModioModDetailsPropertyInspector_GetPropertyNameStyleNames");
static_assert(offsetof(ModioModDetailsPropertyInspector_GetPropertyNameStyleNames, ReturnValue) == 0x000000, "Member 'ModioModDetailsPropertyInspector_GetPropertyNameStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModDetailsPropertyInspector.GetPropertyValueStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsPropertyInspector_GetPropertyValueStyleNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsPropertyInspector_GetPropertyValueStyleNames) == 0x000008, "Wrong alignment on ModioModDetailsPropertyInspector_GetPropertyValueStyleNames");
static_assert(sizeof(ModioModDetailsPropertyInspector_GetPropertyValueStyleNames) == 0x000010, "Wrong size on ModioModDetailsPropertyInspector_GetPropertyValueStyleNames");
static_assert(offsetof(ModioModDetailsPropertyInspector_GetPropertyValueStyleNames, ReturnValue) == 0x000000, "Member 'ModioModDetailsPropertyInspector_GetPropertyValueStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModDetailsView.OnModSubscriptionStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsView_OnModSubscriptionStatusChanged final 
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Subscribed;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18B1[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModDetailsView_OnModSubscriptionStatusChanged) == 0x000008, "Wrong alignment on ModioModDetailsView_OnModSubscriptionStatusChanged");
static_assert(sizeof(ModioModDetailsView_OnModSubscriptionStatusChanged) == 0x000010, "Wrong size on ModioModDetailsView_OnModSubscriptionStatusChanged");
static_assert(offsetof(ModioModDetailsView_OnModSubscriptionStatusChanged, ID) == 0x000000, "Member 'ModioModDetailsView_OnModSubscriptionStatusChanged::ID' has a wrong offset!");
static_assert(offsetof(ModioModDetailsView_OnModSubscriptionStatusChanged, Subscribed) == 0x000008, "Member 'ModioModDetailsView_OnModSubscriptionStatusChanged::Subscribed' has a wrong offset!");

// Function ModioUI.ModioModDetailsView.OnRatingSubmissionComplete
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsView_OnRatingSubmissionComplete final 
{
public:
	struct FModioErrorCode                        Ec;                                                // 0x0000(0x0008)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioRating                                  SubmittedRating;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18B2[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModDetailsView_OnRatingSubmissionComplete) == 0x000008, "Wrong alignment on ModioModDetailsView_OnRatingSubmissionComplete");
static_assert(sizeof(ModioModDetailsView_OnRatingSubmissionComplete) == 0x000010, "Wrong size on ModioModDetailsView_OnRatingSubmissionComplete");
static_assert(offsetof(ModioModDetailsView_OnRatingSubmissionComplete, Ec) == 0x000000, "Member 'ModioModDetailsView_OnRatingSubmissionComplete::Ec' has a wrong offset!");
static_assert(offsetof(ModioModDetailsView_OnRatingSubmissionComplete, SubmittedRating) == 0x000008, "Member 'ModioModDetailsView_OnRatingSubmissionComplete::SubmittedRating' has a wrong offset!");

// Function ModioUI.ModioModTile.OnThumbnailMouseDown
// 0x0160 (0x0160 - 0x0000)
struct ModioModTile_OnThumbnailMouseDown final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTile_OnThumbnailMouseDown) == 0x000008, "Wrong alignment on ModioModTile_OnThumbnailMouseDown");
static_assert(sizeof(ModioModTile_OnThumbnailMouseDown) == 0x000160, "Wrong size on ModioModTile_OnThumbnailMouseDown");
static_assert(offsetof(ModioModTile_OnThumbnailMouseDown, MyGeometry) == 0x000000, "Member 'ModioModTile_OnThumbnailMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(ModioModTile_OnThumbnailMouseDown, MouseEvent) == 0x000038, "Member 'ModioModTile_OnThumbnailMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(ModioModTile_OnThumbnailMouseDown, ReturnValue) == 0x0000A8, "Member 'ModioModTile_OnThumbnailMouseDown::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioModTile.SetSizeOverride
// 0x0008 (0x0008 - 0x0000)
struct ModioModTile_SetSizeOverride final 
{
public:
	struct FVector2D                              NewSize;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTile_SetSizeOverride) == 0x000004, "Wrong alignment on ModioModTile_SetSizeOverride");
static_assert(sizeof(ModioModTile_SetSizeOverride) == 0x000008, "Wrong size on ModioModTile_SetSizeOverride");
static_assert(offsetof(ModioModTile_SetSizeOverride, NewSize) == 0x000000, "Member 'ModioModTile_SetSizeOverride::NewSize' has a wrong offset!");

// Function ModioUI.ModioNamedGlyphMaterialParams.GetValidGlyphNames
// 0x0010 (0x0010 - 0x0000)
struct ModioNamedGlyphMaterialParams_GetValidGlyphNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioNamedGlyphMaterialParams_GetValidGlyphNames) == 0x000008, "Wrong alignment on ModioNamedGlyphMaterialParams_GetValidGlyphNames");
static_assert(sizeof(ModioNamedGlyphMaterialParams_GetValidGlyphNames) == 0x000010, "Wrong size on ModioNamedGlyphMaterialParams_GetValidGlyphNames");
static_assert(offsetof(ModioNamedGlyphMaterialParams_GetValidGlyphNames, ReturnValue) == 0x000000, "Member 'ModioNamedGlyphMaterialParams_GetValidGlyphNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioNotificationControllerBase.OnNotificationExpired
// 0x0008 (0x0008 - 0x0000)
struct ModioNotificationControllerBase_OnNotificationExpired final 
{
public:
	class UWidget*                                Notification;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioNotificationControllerBase_OnNotificationExpired) == 0x000008, "Wrong alignment on ModioNotificationControllerBase_OnNotificationExpired");
static_assert(sizeof(ModioNotificationControllerBase_OnNotificationExpired) == 0x000008, "Wrong size on ModioNotificationControllerBase_OnNotificationExpired");
static_assert(offsetof(ModioNotificationControllerBase_OnNotificationExpired, Notification) == 0x000000, "Member 'ModioNotificationControllerBase_OnNotificationExpired::Notification' has a wrong offset!");

// Function ModioUI.ModioNotificationWidgetBase.CreateFromParams
// 0x00D0 (0x00D0 - 0x0000)
struct ModioNotificationWidgetBase_CreateFromParams final 
{
public:
	TSubclassOf<class UWidget>                    NotificationClass;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioNotificationParams               Params_0;                                          // 0x0008(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                Param_Outer;                                       // 0x00C0(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x00C8(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioNotificationWidgetBase_CreateFromParams) == 0x000008, "Wrong alignment on ModioNotificationWidgetBase_CreateFromParams");
static_assert(sizeof(ModioNotificationWidgetBase_CreateFromParams) == 0x0000D0, "Wrong size on ModioNotificationWidgetBase_CreateFromParams");
static_assert(offsetof(ModioNotificationWidgetBase_CreateFromParams, NotificationClass) == 0x000000, "Member 'ModioNotificationWidgetBase_CreateFromParams::NotificationClass' has a wrong offset!");
static_assert(offsetof(ModioNotificationWidgetBase_CreateFromParams, Params_0) == 0x000008, "Member 'ModioNotificationWidgetBase_CreateFromParams::Params_0' has a wrong offset!");
static_assert(offsetof(ModioNotificationWidgetBase_CreateFromParams, Param_Outer) == 0x0000C0, "Member 'ModioNotificationWidgetBase_CreateFromParams::Param_Outer' has a wrong offset!");
static_assert(offsetof(ModioNotificationWidgetBase_CreateFromParams, ReturnValue) == 0x0000C8, "Member 'ModioNotificationWidgetBase_CreateFromParams::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioPopupMenu.GeneratePopupMenuContent
// 0x0008 (0x0008 - 0x0000)
struct ModioPopupMenu_GeneratePopupMenuContent final 
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPopupMenu_GeneratePopupMenuContent) == 0x000008, "Wrong alignment on ModioPopupMenu_GeneratePopupMenuContent");
static_assert(sizeof(ModioPopupMenu_GeneratePopupMenuContent) == 0x000008, "Wrong size on ModioPopupMenu_GeneratePopupMenuContent");
static_assert(offsetof(ModioPopupMenu_GeneratePopupMenuContent, ReturnValue) == 0x000000, "Member 'ModioPopupMenu_GeneratePopupMenuContent::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioPopupMenu.SetMenuEntries
// 0x0050 (0x0050 - 0x0000)
struct ModioPopupMenu_SetMenuEntries final 
{
public:
	struct FModioUIMenuCommandList                Entries;                                           // 0x0000(0x0050)(Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPopupMenu_SetMenuEntries) == 0x000008, "Wrong alignment on ModioPopupMenu_SetMenuEntries");
static_assert(sizeof(ModioPopupMenu_SetMenuEntries) == 0x000050, "Wrong size on ModioPopupMenu_SetMenuEntries");
static_assert(offsetof(ModioPopupMenu_SetMenuEntries, Entries) == 0x000000, "Member 'ModioPopupMenu_SetMenuEntries::Entries' has a wrong offset!");

// Function ModioUI.ModioProgressBar.SetStyleRef
// 0x0008 (0x0008 - 0x0000)
struct ModioProgressBar_SetStyleRef final 
{
public:
	struct FModioUIStyleRef                       NewStyle;                                          // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioProgressBar_SetStyleRef) == 0x000004, "Wrong alignment on ModioProgressBar_SetStyleRef");
static_assert(sizeof(ModioProgressBar_SetStyleRef) == 0x000008, "Wrong size on ModioProgressBar_SetStyleRef");
static_assert(offsetof(ModioProgressBar_SetStyleRef, NewStyle) == 0x000000, "Member 'ModioProgressBar_SetStyleRef::NewStyle' has a wrong offset!");

// Function ModioUI.ModioRichTextBlock.GetStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioRichTextBlock_GetStyleNames final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioRichTextBlock_GetStyleNames) == 0x000008, "Wrong alignment on ModioRichTextBlock_GetStyleNames");
static_assert(sizeof(ModioRichTextBlock_GetStyleNames) == 0x000010, "Wrong size on ModioRichTextBlock_GetStyleNames");
static_assert(offsetof(ModioRichTextBlock_GetStyleNames, ReturnValue) == 0x000000, "Member 'ModioRichTextBlock_GetStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioSelectableTag.OnCheckboxCheckStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioSelectableTag_OnCheckboxCheckStateChanged final 
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSelectableTag_OnCheckboxCheckStateChanged) == 0x000001, "Wrong alignment on ModioSelectableTag_OnCheckboxCheckStateChanged");
static_assert(sizeof(ModioSelectableTag_OnCheckboxCheckStateChanged) == 0x000001, "Wrong size on ModioSelectableTag_OnCheckboxCheckStateChanged");
static_assert(offsetof(ModioSelectableTag_OnCheckboxCheckStateChanged, bIsChecked) == 0x000000, "Member 'ModioSelectableTag_OnCheckboxCheckStateChanged::bIsChecked' has a wrong offset!");

// Function ModioUI.ModioTabBar.OnTabIndexChanged
// 0x0004 (0x0004 - 0x0000)
struct ModioTabBar_OnTabIndexChanged final 
{
public:
	int32                                         TabIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTabBar_OnTabIndexChanged) == 0x000004, "Wrong alignment on ModioTabBar_OnTabIndexChanged");
static_assert(sizeof(ModioTabBar_OnTabIndexChanged) == 0x000004, "Wrong size on ModioTabBar_OnTabIndexChanged");
static_assert(offsetof(ModioTabBar_OnTabIndexChanged, TabIndex) == 0x000000, "Member 'ModioTabBar_OnTabIndexChanged::TabIndex' has a wrong offset!");

// Function ModioUI.ModioTabController.GetInputHintVisibility
// 0x0002 (0x0002 - 0x0000)
struct ModioTabController_GetInputHintVisibility final 
{
public:
	EModioUIInputMode                             InputMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTabController_GetInputHintVisibility) == 0x000001, "Wrong alignment on ModioTabController_GetInputHintVisibility");
static_assert(sizeof(ModioTabController_GetInputHintVisibility) == 0x000002, "Wrong size on ModioTabController_GetInputHintVisibility");
static_assert(offsetof(ModioTabController_GetInputHintVisibility, InputMode) == 0x000000, "Member 'ModioTabController_GetInputHintVisibility::InputMode' has a wrong offset!");
static_assert(offsetof(ModioTabController_GetInputHintVisibility, ReturnValue) == 0x000001, "Member 'ModioTabController_GetInputHintVisibility::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioTabController.SetCurrentTab
// 0x0008 (0x0008 - 0x0000)
struct ModioTabController_SetCurrentTab final 
{
public:
	int64                                         TabIndex;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTabController_SetCurrentTab) == 0x000008, "Wrong alignment on ModioTabController_SetCurrentTab");
static_assert(sizeof(ModioTabController_SetCurrentTab) == 0x000008, "Wrong size on ModioTabController_SetCurrentTab");
static_assert(offsetof(ModioTabController_SetCurrentTab, TabIndex) == 0x000000, "Member 'ModioTabController_SetCurrentTab::TabIndex' has a wrong offset!");

// Function ModioUI.ModioTabController.SetTabItems
// 0x0010 (0x0010 - 0x0000)
struct ModioTabController_SetTabItems final 
{
public:
	TArray<class UObject*>                        NewItems;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTabController_SetTabItems) == 0x000008, "Wrong alignment on ModioTabController_SetTabItems");
static_assert(sizeof(ModioTabController_SetTabItems) == 0x000010, "Wrong size on ModioTabController_SetTabItems");
static_assert(offsetof(ModioTabController_SetTabItems, NewItems) == 0x000000, "Member 'ModioTabController_SetTabItems::NewItems' has a wrong offset!");

// Function ModioUI.ModioTagList.SetTags
// 0x0010 (0x0010 - 0x0000)
struct ModioTagList_SetTags final 
{
public:
	TArray<struct FModioModTag>                   NewTags;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagList_SetTags) == 0x000008, "Wrong alignment on ModioTagList_SetTags");
static_assert(sizeof(ModioTagList_SetTags) == 0x000010, "Wrong size on ModioTagList_SetTags");
static_assert(offsetof(ModioTagList_SetTags, NewTags) == 0x000000, "Member 'ModioTagList_SetTags::NewTags' has a wrong offset!");

// Function ModioUI.ModioTagListWidgetBase.GetSelectedTags
// 0x0010 (0x0010 - 0x0000)
struct ModioTagListWidgetBase_GetSelectedTags final 
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagListWidgetBase_GetSelectedTags) == 0x000008, "Wrong alignment on ModioTagListWidgetBase_GetSelectedTags");
static_assert(sizeof(ModioTagListWidgetBase_GetSelectedTags) == 0x000010, "Wrong size on ModioTagListWidgetBase_GetSelectedTags");
static_assert(offsetof(ModioTagListWidgetBase_GetSelectedTags, ReturnValue) == 0x000000, "Member 'ModioTagListWidgetBase_GetSelectedTags::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioTagSelectorWidgetBase.OnCheckboxChecked
// 0x0010 (0x0010 - 0x0000)
struct ModioTagSelectorWidgetBase_OnCheckboxChecked final 
{
public:
	class UModioSelectableTag*                    SourceTag;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChecked;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18E0[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioTagSelectorWidgetBase_OnCheckboxChecked) == 0x000008, "Wrong alignment on ModioTagSelectorWidgetBase_OnCheckboxChecked");
static_assert(sizeof(ModioTagSelectorWidgetBase_OnCheckboxChecked) == 0x000010, "Wrong size on ModioTagSelectorWidgetBase_OnCheckboxChecked");
static_assert(offsetof(ModioTagSelectorWidgetBase_OnCheckboxChecked, SourceTag) == 0x000000, "Member 'ModioTagSelectorWidgetBase_OnCheckboxChecked::SourceTag' has a wrong offset!");
static_assert(offsetof(ModioTagSelectorWidgetBase_OnCheckboxChecked, bIsChecked) == 0x000008, "Member 'ModioTagSelectorWidgetBase_OnCheckboxChecked::bIsChecked' has a wrong offset!");

// Function ModioUI.ModioTagWidgetBase.GetTagTextStyle
// 0x00A8 (0x00A8 - 0x0000)
struct ModioTagWidgetBase_GetTagTextStyle final 
{
public:
	struct FModioRichTextStyle                    ReturnValue;                                       // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagWidgetBase_GetTagTextStyle) == 0x000008, "Wrong alignment on ModioTagWidgetBase_GetTagTextStyle");
static_assert(sizeof(ModioTagWidgetBase_GetTagTextStyle) == 0x0000A8, "Wrong size on ModioTagWidgetBase_GetTagTextStyle");
static_assert(offsetof(ModioTagWidgetBase_GetTagTextStyle, ReturnValue) == 0x000000, "Member 'ModioTagWidgetBase_GetTagTextStyle::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioTagWidgetBase.SetTagTextFormat
// 0x0018 (0x0018 - 0x0000)
struct ModioTagWidgetBase_SetTagTextFormat final 
{
public:
	class FText                                   NewFormat;                                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagWidgetBase_SetTagTextFormat) == 0x000008, "Wrong alignment on ModioTagWidgetBase_SetTagTextFormat");
static_assert(sizeof(ModioTagWidgetBase_SetTagTextFormat) == 0x000018, "Wrong size on ModioTagWidgetBase_SetTagTextFormat");
static_assert(offsetof(ModioTagWidgetBase_SetTagTextFormat, NewFormat) == 0x000000, "Member 'ModioTagWidgetBase_SetTagTextFormat::NewFormat' has a wrong offset!");

// Function ModioUI.ModioTagWidgetBase.SetTagValue
// 0x0020 (0x0020 - 0x0000)
struct ModioTagWidgetBase_SetTagValue final 
{
public:
	class FString                                 Category;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewValue;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagWidgetBase_SetTagValue) == 0x000008, "Wrong alignment on ModioTagWidgetBase_SetTagValue");
static_assert(sizeof(ModioTagWidgetBase_SetTagValue) == 0x000020, "Wrong size on ModioTagWidgetBase_SetTagValue");
static_assert(offsetof(ModioTagWidgetBase_SetTagValue, Category) == 0x000000, "Member 'ModioTagWidgetBase_SetTagValue::Category' has a wrong offset!");
static_assert(offsetof(ModioTagWidgetBase_SetTagValue, NewValue) == 0x000010, "Member 'ModioTagWidgetBase_SetTagValue::NewValue' has a wrong offset!");

// Function ModioUI.ModioTileView.SetAllowPartialItems
// 0x0001 (0x0001 - 0x0000)
struct ModioTileView_SetAllowPartialItems final 
{
public:
	bool                                          bAllowPartialItems;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTileView_SetAllowPartialItems) == 0x000001, "Wrong alignment on ModioTileView_SetAllowPartialItems");
static_assert(sizeof(ModioTileView_SetAllowPartialItems) == 0x000001, "Wrong size on ModioTileView_SetAllowPartialItems");
static_assert(offsetof(ModioTileView_SetAllowPartialItems, bAllowPartialItems) == 0x000000, "Member 'ModioTileView_SetAllowPartialItems::bAllowPartialItems' has a wrong offset!");

// Function ModioUI.ModioTileView.SetCenterPanelItems
// 0x0001 (0x0001 - 0x0000)
struct ModioTileView_SetCenterPanelItems final 
{
public:
	bool                                          bCenterPanelItems;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTileView_SetCenterPanelItems) == 0x000001, "Wrong alignment on ModioTileView_SetCenterPanelItems");
static_assert(sizeof(ModioTileView_SetCenterPanelItems) == 0x000001, "Wrong size on ModioTileView_SetCenterPanelItems");
static_assert(offsetof(ModioTileView_SetCenterPanelItems, bCenterPanelItems) == 0x000000, "Member 'ModioTileView_SetCenterPanelItems::bCenterPanelItems' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.GetAllNamedStyleNames
// 0x0010 (0x0010 - 0x0000)
struct ModioUI4Subsystem_GetAllNamedStyleNames final 
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_GetAllNamedStyleNames) == 0x000008, "Wrong alignment on ModioUI4Subsystem_GetAllNamedStyleNames");
static_assert(sizeof(ModioUI4Subsystem_GetAllNamedStyleNames) == 0x000010, "Wrong size on ModioUI4Subsystem_GetAllNamedStyleNames");
static_assert(offsetof(ModioUI4Subsystem_GetAllNamedStyleNames, ReturnValue) == 0x000000, "Member 'ModioUI4Subsystem_GetAllNamedStyleNames::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.GetCurrentFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct ModioUI4Subsystem_GetCurrentFocusTarget final 
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_GetCurrentFocusTarget) == 0x000008, "Wrong alignment on ModioUI4Subsystem_GetCurrentFocusTarget");
static_assert(sizeof(ModioUI4Subsystem_GetCurrentFocusTarget) == 0x000008, "Wrong size on ModioUI4Subsystem_GetCurrentFocusTarget");
static_assert(offsetof(ModioUI4Subsystem_GetCurrentFocusTarget, ReturnValue) == 0x000000, "Member 'ModioUI4Subsystem_GetCurrentFocusTarget::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.GetDefaultStyleSet
// 0x0008 (0x0008 - 0x0000)
struct ModioUI4Subsystem_GetDefaultStyleSet final 
{
public:
	class UModioUIStyleSet*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_GetDefaultStyleSet) == 0x000008, "Wrong alignment on ModioUI4Subsystem_GetDefaultStyleSet");
static_assert(sizeof(ModioUI4Subsystem_GetDefaultStyleSet) == 0x000008, "Wrong size on ModioUI4Subsystem_GetDefaultStyleSet");
static_assert(offsetof(ModioUI4Subsystem_GetDefaultStyleSet, ReturnValue) == 0x000000, "Member 'ModioUI4Subsystem_GetDefaultStyleSet::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.GetInputGlyphMaterialForInputType
// 0x0028 (0x0028 - 0x0000)
struct ModioUI4Subsystem_GetInputGlyphMaterialForInputType final 
{
public:
	struct FKey                                   VirtualInput;                                      // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUIInputMode                             InputType;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18E7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_GetInputGlyphMaterialForInputType) == 0x000008, "Wrong alignment on ModioUI4Subsystem_GetInputGlyphMaterialForInputType");
static_assert(sizeof(ModioUI4Subsystem_GetInputGlyphMaterialForInputType) == 0x000028, "Wrong size on ModioUI4Subsystem_GetInputGlyphMaterialForInputType");
static_assert(offsetof(ModioUI4Subsystem_GetInputGlyphMaterialForInputType, VirtualInput) == 0x000000, "Member 'ModioUI4Subsystem_GetInputGlyphMaterialForInputType::VirtualInput' has a wrong offset!");
static_assert(offsetof(ModioUI4Subsystem_GetInputGlyphMaterialForInputType, InputType) == 0x000018, "Member 'ModioUI4Subsystem_GetInputGlyphMaterialForInputType::InputType' has a wrong offset!");
static_assert(offsetof(ModioUI4Subsystem_GetInputGlyphMaterialForInputType, ReturnValue) == 0x000020, "Member 'ModioUI4Subsystem_GetInputGlyphMaterialForInputType::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.GetLocalizedTag
// 0x0028 (0x0028 - 0x0000)
struct ModioUI4Subsystem_GetLocalizedTag final 
{
public:
	class FString                                 InTag;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_GetLocalizedTag) == 0x000008, "Wrong alignment on ModioUI4Subsystem_GetLocalizedTag");
static_assert(sizeof(ModioUI4Subsystem_GetLocalizedTag) == 0x000028, "Wrong size on ModioUI4Subsystem_GetLocalizedTag");
static_assert(offsetof(ModioUI4Subsystem_GetLocalizedTag, InTag) == 0x000000, "Member 'ModioUI4Subsystem_GetLocalizedTag::InTag' has a wrong offset!");
static_assert(offsetof(ModioUI4Subsystem_GetLocalizedTag, ReturnValue) == 0x000010, "Member 'ModioUI4Subsystem_GetLocalizedTag::ReturnValue' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.HandleInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioUI4Subsystem_HandleInputModeChanged final 
{
public:
	EModioUIInputMode                             NewDevice;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_HandleInputModeChanged) == 0x000001, "Wrong alignment on ModioUI4Subsystem_HandleInputModeChanged");
static_assert(sizeof(ModioUI4Subsystem_HandleInputModeChanged) == 0x000001, "Wrong size on ModioUI4Subsystem_HandleInputModeChanged");
static_assert(offsetof(ModioUI4Subsystem_HandleInputModeChanged, NewDevice) == 0x000000, "Member 'ModioUI4Subsystem_HandleInputModeChanged::NewDevice' has a wrong offset!");

// Function ModioUI.ModioUI4Subsystem.SetCurrentFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct ModioUI4Subsystem_SetCurrentFocusTarget final 
{
public:
	class UWidget*                                CurrentTarget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUI4Subsystem_SetCurrentFocusTarget) == 0x000008, "Wrong alignment on ModioUI4Subsystem_SetCurrentFocusTarget");
static_assert(sizeof(ModioUI4Subsystem_SetCurrentFocusTarget) == 0x000008, "Wrong size on ModioUI4Subsystem_SetCurrentFocusTarget");
static_assert(offsetof(ModioUI4Subsystem_SetCurrentFocusTarget, CurrentTarget) == 0x000000, "Member 'ModioUI4Subsystem_SetCurrentFocusTarget::CurrentTarget' has a wrong offset!");

// Function ModioUI.ModioUIAsyncLoader.NativeHandleAsyncOperationStateChange
// 0x0001 (0x0001 - 0x0000)
struct ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange final 
{
public:
	EModioUIAsyncOperationWidgetState             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange) == 0x000001, "Wrong alignment on ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange");
static_assert(sizeof(ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange) == 0x000001, "Wrong size on ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange");
static_assert(offsetof(ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange, NewState) == 0x000000, "Member 'ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange::NewState' has a wrong offset!");

// Function ModioUI.ModioWidgetCarousel.SetItems
// 0x0010 (0x0010 - 0x0000)
struct ModioWidgetCarousel_SetItems final 
{
public:
	TArray<class UObject*>                        Items;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioWidgetCarousel_SetItems) == 0x000008, "Wrong alignment on ModioWidgetCarousel_SetItems");
static_assert(sizeof(ModioWidgetCarousel_SetItems) == 0x000010, "Wrong size on ModioWidgetCarousel_SetItems");
static_assert(offsetof(ModioWidgetCarousel_SetItems, Items) == 0x000000, "Member 'ModioWidgetCarousel_SetItems::Items' has a wrong offset!");

}

