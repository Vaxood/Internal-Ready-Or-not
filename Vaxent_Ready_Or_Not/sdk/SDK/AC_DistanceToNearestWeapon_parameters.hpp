#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_DistanceToNearestWeapon

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AC_DistanceToNearestWeapon.AC_DistanceToNearestWeapon_C.Score
// 0x0080 (0x0080 - 0x0000)
struct AC_DistanceToNearestWeapon_C_Score final 
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4108[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Closest_Distance;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    Target_Weapon;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   Target;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4109[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACyberneticCharacter*                   CallFunc_GetCharacter_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseMagazineWeapon*>            CallFunc_FindWeaponsInRange_Return_Value;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_410B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_410C[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_DistanceToNearestWeapon_C_Score) == 0x000008, "Wrong alignment on AC_DistanceToNearestWeapon_C_Score");
static_assert(sizeof(AC_DistanceToNearestWeapon_C_Score) == 0x000080, "Wrong size on AC_DistanceToNearestWeapon_C_Score");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Context) == 0x000000, "Member 'AC_DistanceToNearestWeapon_C_Score::Context' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, bSuccess) == 0x000010, "Member 'AC_DistanceToNearestWeapon_C_Score::bSuccess' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, ReturnValue) == 0x000014, "Member 'AC_DistanceToNearestWeapon_C_Score::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Distance) == 0x000018, "Member 'AC_DistanceToNearestWeapon_C_Score::Distance' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Closest_Distance) == 0x00001C, "Member 'AC_DistanceToNearestWeapon_C_Score::Closest_Distance' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Target_Weapon) == 0x000020, "Member 'AC_DistanceToNearestWeapon_C_Score::Target_Weapon' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Target) == 0x000028, "Member 'AC_DistanceToNearestWeapon_C_Score::Target' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AC_DistanceToNearestWeapon_C_Score::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_GetCharacter_ReturnValue) == 0x000038, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_FindWeaponsInRange_Return_Value) == 0x000040, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_FindWeaponsInRange_Return_Value' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'AC_DistanceToNearestWeapon_C_Score::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_Array_Get_Item) == 0x000058, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_GetDistanceTo_ReturnValue) == 0x00006C, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007A, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_Score, CallFunc_MapRangeClamped_ReturnValue) == 0x00007C, "Member 'AC_DistanceToNearestWeapon_C_Score::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function AC_DistanceToNearestWeapon.AC_DistanceToNearestWeapon_C.CalculateCurve
// 0x000C (0x000C - 0x0000)
struct AC_DistanceToNearestWeapon_C_CalculateCurve final 
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_DistanceToNearestWeapon_C_CalculateCurve) == 0x000004, "Wrong alignment on AC_DistanceToNearestWeapon_C_CalculateCurve");
static_assert(sizeof(AC_DistanceToNearestWeapon_C_CalculateCurve) == 0x00000C, "Wrong size on AC_DistanceToNearestWeapon_C_CalculateCurve");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_CalculateCurve, X) == 0x000000, "Member 'AC_DistanceToNearestWeapon_C_CalculateCurve::X' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_CalculateCurve, ReturnValue) == 0x000004, "Member 'AC_DistanceToNearestWeapon_C_CalculateCurve::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_CalculateCurve, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'AC_DistanceToNearestWeapon_C_CalculateCurve::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AC_DistanceToNearestWeapon.AC_DistanceToNearestWeapon_C.FindWeaponsInRange
// 0x0078 (0x0078 - 0x0000)
struct AC_DistanceToNearestWeapon_C_FindWeaponsInRange final 
{
public:
	class ACyberneticCharacter*                   Start;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseMagazineWeapon*>            Return_Value;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABaseMagazineWeapon*>            WeaponsNearby;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_410F[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4110[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4111[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyAmmo_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange) == 0x000008, "Wrong alignment on AC_DistanceToNearestWeapon_C_FindWeaponsInRange");
static_assert(sizeof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange) == 0x000078, "Wrong size on AC_DistanceToNearestWeapon_C_FindWeaponsInRange");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, Start) == 0x000000, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::Start' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, Return_Value) == 0x000008, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::Return_Value' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, WeaponsNearby) == 0x000018, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::WeaponsNearby' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000038, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_Array_Get_Item) == 0x000048, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_GetDistanceTo_ReturnValue) == 0x000054, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000060, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_Array_AddUnique_ReturnValue) == 0x00006C, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_HasAnyAmmo_ReturnValue) == 0x000070, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_HasAnyAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToNearestWeapon_C_FindWeaponsInRange, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'AC_DistanceToNearestWeapon_C_FindWeaponsInRange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

