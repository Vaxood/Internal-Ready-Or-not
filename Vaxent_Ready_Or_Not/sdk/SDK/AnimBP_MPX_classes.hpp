#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_MPX

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_MPX.ANIMBP_MPX_C
// 0x0A50 (0x0D20 - 0x02D0)
class UANIMBP_MPX_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0308(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0350(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0470(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x04F0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x05F8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0700(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0808(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0828(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0848(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0908(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0950(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0AA8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0AD0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0AF8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0C00(0x0108)()
	float                                         Mag01Alpha;                                        // 0x0D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScopeAdjustAlpha;                                  // 0x0D0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSemi;                                           // 0x0D10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ANIMBP_MPX(int32 EntryPoint, int32 CallFunc_FTrunc_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, int32 CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_Event_DeltaTimeX, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, class AActor* CallFunc_GetOwningActor_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue, class USkeletalMeshComponent* CallFunc_GetItemMesh_ReturnValue);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_MPX_AnimGraphNode_BlendListByBool_DF4CA0A943CB2A4BF9E3008B64199A35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_MPX_AnimGraphNode_ModifyBone_4145EDEF444AE51BD88897AEB2156270();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_MPX_C">();
	}
	static class UANIMBP_MPX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_MPX_C>();
	}
};
static_assert(alignof(UANIMBP_MPX_C) == 0x000010, "Wrong alignment on UANIMBP_MPX_C");
static_assert(sizeof(UANIMBP_MPX_C) == 0x000D20, "Wrong size on UANIMBP_MPX_C");
static_assert(offsetof(UANIMBP_MPX_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_MPX_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_MPX_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_Slot_1) == 0x000308, "Member 'UANIMBP_MPX_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_BlendListByBool) == 0x000350, "Member 'UANIMBP_MPX_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_SequencePlayer_1) == 0x0003F0, "Member 'UANIMBP_MPX_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_SequencePlayer) == 0x000470, "Member 'UANIMBP_MPX_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_ModifyBone_4) == 0x0004F0, "Member 'UANIMBP_MPX_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_ModifyBone_3) == 0x0005F8, "Member 'UANIMBP_MPX_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_ModifyBone_2) == 0x000700, "Member 'UANIMBP_MPX_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_LocalToComponentSpace) == 0x000808, "Member 'UANIMBP_MPX_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_ComponentToLocalSpace) == 0x000828, "Member 'UANIMBP_MPX_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_LayeredBoneBlend) == 0x000848, "Member 'UANIMBP_MPX_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_Slot) == 0x000908, "Member 'UANIMBP_MPX_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_SaveCachedPose) == 0x000950, "Member 'UANIMBP_MPX_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_UseCachedPose_1) == 0x000AA8, "Member 'UANIMBP_MPX_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_UseCachedPose) == 0x000AD0, "Member 'UANIMBP_MPX_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_ModifyBone_1) == 0x000AF8, "Member 'UANIMBP_MPX_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, AnimGraphNode_ModifyBone) == 0x000C00, "Member 'UANIMBP_MPX_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, Mag01Alpha) == 0x000D08, "Member 'UANIMBP_MPX_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, ScopeAdjustAlpha) == 0x000D0C, "Member 'UANIMBP_MPX_C::ScopeAdjustAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_MPX_C, bIsSemi) == 0x000D10, "Member 'UANIMBP_MPX_C::bIsSemi' has a wrong offset!");

}

