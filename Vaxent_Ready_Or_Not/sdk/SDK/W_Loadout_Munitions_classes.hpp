#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Munitions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Munitions.W_Loadout_Munitions_C
// 0x00A8 (0x03C8 - 0x0320)
class UW_Loadout_Munitions_C final  : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScrollBox*                             ItemBox;                                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lbl_Grenades;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lbl_PrimaryAmmo;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lbl_SecondaryAmmo;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lbl_Tactical;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_Slots;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_GrenadeBox;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Grenades;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Primary;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_PrimaryAmmoBox;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Secondary;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_SecondaryAmmoBox;                               // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Tactical;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_TacticalBox;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowPrimary;                                       // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowSecondary;                                     // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowGrenades;                                      // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowTactical;                                      // 0x039B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3180[0x4];                                     // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    LastHoveredSlot;                                   // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_LoadoutSlot_v2_C*>            SlotWidgets;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnMunitionHovered;                                 // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnMunitionHovered__DelegateSignature(class UW_Loadout_Munitions_C* TriggeringList, class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void ExecuteUbergraph_W_Loadout_Munitions(int32 EntryPoint, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_Loadout_C* K2Node_Event_LoadoutWidget, class FName K2Node_Event_OptionNameID, bool K2Node_Event_IsDesignTime, class FName K2Node_Event_PageName, bool K2Node_Event_IsGamepad, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, float K2Node_Event_Delay, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot_2, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot_1, class FText CallFunc_GetItemClassText_Category_Text, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot);
	void SecondaryAmmoSlotHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void DeployableSlotHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void SlotUnhovered();
	void PrimaryAmmoSlotHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void SetInputMode(bool IsGamepad);
	void ChangePage(class FName PageName);
	void BP_OnActivated();
	void OnInitialized();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void Initialize(const TArray<class UW_ItemSlotTactical_V2_C*>& Deployables, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_LastIndex_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item_1, TArray<class UW_LoadoutSlot_v2_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets);
	void CreatePrimarySlots(class UW_LoadoutSlot_v2_C* NewSlot, class UW_ItemSlotTactical_V2_C* NewSlotTactical, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(EUINavigation Navigation)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, class UW_LoadoutSlot_v2_C* CallFunc_Create_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TArray<class FName>& CallFunc_GetPrimaryAmmoTypes_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void CreateSecondarySlots(class UW_LoadoutSlot_v2_C* NewSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(EUINavigation Navigation)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, class UW_LoadoutSlot_v2_C* CallFunc_Create_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, TArray<class FName>& CallFunc_GetSecondaryAmmoTypes_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void CreateGrenadeSlots(class UW_LoadoutSlot_v2_C* NewSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Create_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(EUINavigation Navigation)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, class UPanelSlot* CallFunc_AddChild_ReturnValue, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FDeviceData& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class ABaseItem* CallFunc_GetClassDefaultObject_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void CreateTacticalSlots(class UW_LoadoutSlot_v2_C* NewSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Create_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(EUINavigation Navigation)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, class UPanelSlot* CallFunc_AddChild_ReturnValue, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FDeviceData& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class ABaseItem* CallFunc_GetClassDefaultObject_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void UpdateSlotUsage(const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, int32 CallFunc_GetMaximumSlotCount_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, int32 CallFunc_GetCurrentSlotCount_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, class FText CallFunc_Format_ReturnValue_2);
	void SetVisibleCategories(bool Primary, bool Secondary, bool Grenades, bool Tactical, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, bool Temp_bool_Variable_2, ESlateVisibility Temp_byte_Variable_4, ESlateVisibility Temp_byte_Variable_5, bool Temp_bool_Variable_3, ESlateVisibility Temp_byte_Variable_6, ESlateVisibility Temp_byte_Variable_7, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1, ESlateVisibility K2Node_Select_Default_2, ESlateVisibility K2Node_Select_Default_3);
	void RefreshAllSlots(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void PrimaryHasFocus(bool* HasFocus, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_WidgetOrChildHasFocus_HasFocus);
	void SecondaryHasFocus(bool* HasFocus, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_WidgetOrChildHasFocus_HasFocus);
	class UWidget* CustomNavigation(EUINavigation Param_Navigation, const TArray<class UW_LoadoutSlot_v2_C*>& Slots, class UWidget* NextFocus, bool LeaveDown, int32 CurrentIndex, int32 LastIndex, EUINavigation Direction, int32 Temp_int_Variable, int32 Temp_int_Variable_1, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, int32 CallFunc_Array_Find_ReturnValue);
	void BackPage(bool* Handled);

	class UWidget* BP_GetDesiredFocusTarget(bool CallFunc_IsValid_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item) const;
	void GetFocusTarget(class UWidget** Focus, bool CallFunc_IsValid_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Munitions_C">();
	}
	static class UW_Loadout_Munitions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Munitions_C>();
	}
};
static_assert(alignof(UW_Loadout_Munitions_C) == 0x000008, "Wrong alignment on UW_Loadout_Munitions_C");
static_assert(sizeof(UW_Loadout_Munitions_C) == 0x0003C8, "Wrong size on UW_Loadout_Munitions_C");
static_assert(offsetof(UW_Loadout_Munitions_C, UberGraphFrame) == 0x000320, "Member 'UW_Loadout_Munitions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ItemBox) == 0x000328, "Member 'UW_Loadout_Munitions_C::ItemBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, Lbl_Grenades) == 0x000330, "Member 'UW_Loadout_Munitions_C::Lbl_Grenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, Lbl_PrimaryAmmo) == 0x000338, "Member 'UW_Loadout_Munitions_C::Lbl_PrimaryAmmo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, Lbl_SecondaryAmmo) == 0x000340, "Member 'UW_Loadout_Munitions_C::Lbl_SecondaryAmmo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, Lbl_Tactical) == 0x000348, "Member 'UW_Loadout_Munitions_C::Lbl_Tactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, Txt_Slots) == 0x000350, "Member 'UW_Loadout_Munitions_C::Txt_Slots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_GrenadeBox) == 0x000358, "Member 'UW_Loadout_Munitions_C::VB_GrenadeBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Grenades) == 0x000360, "Member 'UW_Loadout_Munitions_C::VB_Grenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Primary) == 0x000368, "Member 'UW_Loadout_Munitions_C::VB_Primary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_PrimaryAmmoBox) == 0x000370, "Member 'UW_Loadout_Munitions_C::VB_PrimaryAmmoBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Secondary) == 0x000378, "Member 'UW_Loadout_Munitions_C::VB_Secondary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_SecondaryAmmoBox) == 0x000380, "Member 'UW_Loadout_Munitions_C::VB_SecondaryAmmoBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Tactical) == 0x000388, "Member 'UW_Loadout_Munitions_C::VB_Tactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_TacticalBox) == 0x000390, "Member 'UW_Loadout_Munitions_C::VB_TacticalBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowPrimary) == 0x000398, "Member 'UW_Loadout_Munitions_C::ShowPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowSecondary) == 0x000399, "Member 'UW_Loadout_Munitions_C::ShowSecondary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowGrenades) == 0x00039A, "Member 'UW_Loadout_Munitions_C::ShowGrenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowTactical) == 0x00039B, "Member 'UW_Loadout_Munitions_C::ShowTactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, LastHoveredSlot) == 0x0003A0, "Member 'UW_Loadout_Munitions_C::LastHoveredSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, SlotWidgets) == 0x0003A8, "Member 'UW_Loadout_Munitions_C::SlotWidgets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, OnMunitionHovered) == 0x0003B8, "Member 'UW_Loadout_Munitions_C::OnMunitionHovered' has a wrong offset!");

}

