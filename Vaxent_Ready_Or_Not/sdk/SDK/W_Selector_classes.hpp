#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Selector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Selector.W_Selector_C
// 0x0120 (0x03A8 - 0x0288)
class UW_Selector_C final  : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Button_C*                            Button;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Carousel_C*                          Carousel;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Dropdown_C*                          Dropdown;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       VisSwitcher;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FString, class FText>              OptionsMap;                                        // 0x02B0(0x0050)(Edit, BlueprintVisible)
	class FText                                   DescriptionText;                                   // 0x0300(0x0018)(Edit, BlueprintVisible)
	class UTextBlock*                             DescriptionWidget;                                 // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseGamepad;                                       // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E00[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SelectedOptionID;                                  // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x0338(0x0018)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OptionSelected;                                    // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bInitialized;                                      // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E01[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSelectorClicked;                                 // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnOptionHovered;                                   // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDropdownClosed;                                  // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnOptionUnhovered;                                 // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OptionSelected__DelegateSignature(const class FString& OptionID, int32 Param_Index);
	void OnSelectorClicked__DelegateSignature(class UW_Selector_C* TriggeringSelector);
	void OnOptionHovered__DelegateSignature(class FName OptionID);
	void OnDropdownClosed__DelegateSignature();
	void OnOptionUnhovered__DelegateSignature();
	void ExecuteUbergraph_W_Selector(int32 EntryPoint, ECommonInputType K2Node_CustomEvent_bNewInputType, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool K2Node_Event_IsDesignTime, TArray<class FString>& CallFunc_Map_Keys_Keys, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class FName K2Node_ComponentBoundEvent_OptionID_2, const class FString& K2Node_ComponentBoundEvent_OptionID_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_GetOptionIndex_Index, int32 CallFunc_GetOptionIndex_Index_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button, const class FString& K2Node_ComponentBoundEvent_OptionID, class FName CallFunc_Conv_StringToName_ReturnValue, class UW_Dropdown_C* K2Node_ComponentBoundEvent_TriggeringDropdown, class UW_Dropdown_C* K2Node_ComponentBoundEvent_Dropdown, bool CallFunc_IsValid_ReturnValue_1);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void OnInitialized();
	void BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_9_OnUnhovered__DelegateSignature();
	void BndEvt__W_Selector_Dropdown_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature(class UW_Dropdown_C* Param_Dropdown);
	void BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_7_OnOptionUnhovered__DelegateSignature();
	void BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature(class UW_Dropdown_C* TriggeringDropdown);
	void BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature(const class FString& OptionID);
	void BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature(class UW_Button_C* Param_Button);
	void BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_3_Unhovered__DelegateSignature();
	void BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature(const class FString& OptionID);
	void BndEvt__W_Customization_Selector_Carousel_K2Node_ComponentBoundEvent_1_OnOptionSelected__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature(class UW_Button_C* Param_Button);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void UpdateStyle(bool Param_bUseGamepad, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, class UWidget* K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1);
	void SetOptions(const TMap<class FString, class FText>& NewOptionsMap, class FText OptionText, const class FString& NewOptionID, int32 Temp_int_Array_Index_Variable, TArray<class FString>& CallFunc_Map_Keys_Keys, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_StringIsEmpty_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue_1, class FText CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void SetSelection(const class FString& EquippedID);
	void ClearOptions();
	void AddOption(class FString& ID, class FText& Text);
	void GetOptionIndex(const class FString& OptionID, int32* Param_Index, TArray<class FString>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Find_ReturnValue);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Selector_C">();
	}
	static class UW_Selector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Selector_C>();
	}
};
static_assert(alignof(UW_Selector_C) == 0x000008, "Wrong alignment on UW_Selector_C");
static_assert(sizeof(UW_Selector_C) == 0x0003A8, "Wrong size on UW_Selector_C");
static_assert(offsetof(UW_Selector_C, UberGraphFrame) == 0x000288, "Member 'UW_Selector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, Button) == 0x000290, "Member 'UW_Selector_C::Button' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, Carousel) == 0x000298, "Member 'UW_Selector_C::Carousel' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, Dropdown) == 0x0002A0, "Member 'UW_Selector_C::Dropdown' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, VisSwitcher) == 0x0002A8, "Member 'UW_Selector_C::VisSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, OptionsMap) == 0x0002B0, "Member 'UW_Selector_C::OptionsMap' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, DescriptionText) == 0x000300, "Member 'UW_Selector_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, DescriptionWidget) == 0x000318, "Member 'UW_Selector_C::DescriptionWidget' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, bUseGamepad) == 0x000320, "Member 'UW_Selector_C::bUseGamepad' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, SelectedOptionID) == 0x000328, "Member 'UW_Selector_C::SelectedOptionID' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, Label) == 0x000338, "Member 'UW_Selector_C::Label' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, OptionSelected) == 0x000350, "Member 'UW_Selector_C::OptionSelected' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, bInitialized) == 0x000360, "Member 'UW_Selector_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, OnSelectorClicked) == 0x000368, "Member 'UW_Selector_C::OnSelectorClicked' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, OnOptionHovered) == 0x000378, "Member 'UW_Selector_C::OnOptionHovered' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, OnDropdownClosed) == 0x000388, "Member 'UW_Selector_C::OnDropdownClosed' has a wrong offset!");
static_assert(offsetof(UW_Selector_C, OnOptionUnhovered) == 0x000398, "Member 'UW_Selector_C::OnOptionUnhovered' has a wrong offset!");

}

