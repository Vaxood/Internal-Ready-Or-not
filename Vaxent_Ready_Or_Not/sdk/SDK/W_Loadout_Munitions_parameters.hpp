#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Munitions

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.OnMunitionHovered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature final 
{
public:
	class UW_Loadout_Munitions_C*                 TriggeringList;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature");
static_assert(sizeof(W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature) == 0x000010, "Wrong size on W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature");
static_assert(offsetof(W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature, TriggeringList) == 0x000000, "Member 'W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature::TriggeringList' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature, TriggeringSlot) == 0x000008, "Member 'W_Loadout_Munitions_C_OnMunitionHovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.ExecuteUbergraph_W_Loadout_Munitions
// 0x0270 (0x0270 - 0x0000)
struct W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3181[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0010(0x0188)()
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x01A0(0x0050)()
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_OptionNameID;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3182[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0204(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3183[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3184[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay;                                // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3185[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    K2Node_CustomEvent_TriggeringSlot_2;               // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item;                           // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1;        // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_CustomEvent_TriggeringSlot_1;               // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemClassText_Category_Text;           // 0x0240(0x0018)()
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2;        // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3;        // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_CustomEvent_TriggeringSlot;                 // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions");
static_assert(sizeof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions) == 0x000270, "Wrong size on W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, EntryPoint) == 0x000000, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, CallFunc_GetLoadoutWidget_AsW_Loadout_V2) == 0x000008, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::CallFunc_GetLoadoutWidget_AsW_Loadout_V2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_ActiveLoadout) == 0x000010, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_CurrentSlot) == 0x000198, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_ItemCategory) == 0x0001A0, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_LoadoutWidget) == 0x0001F0, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_OptionNameID) == 0x0001F8, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_IsDesignTime) == 0x000200, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_PageName) == 0x000204, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_IsGamepad) == 0x00020C, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_Delay_1) == 0x000210, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_Collapse) == 0x000214, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_Event_Delay) == 0x000218, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_CustomEvent_TriggeringSlot_2) == 0x000220, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_CustomEvent_TriggeringSlot_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, CallFunc_Array_Get_Item) == 0x000228, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1) == 0x000230, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_CustomEvent_TriggeringSlot_1) == 0x000238, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_CustomEvent_TriggeringSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, CallFunc_GetItemClassText_Category_Text) == 0x000240, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::CallFunc_GetItemClassText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2) == 0x000258, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3) == 0x000260, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions, K2Node_CustomEvent_TriggeringSlot) == 0x000268, "Member 'W_Loadout_Munitions_C_ExecuteUbergraph_W_Loadout_Munitions::K2Node_CustomEvent_TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.SecondaryAmmoSlotHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_SecondaryAmmoSlotHovered final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_SecondaryAmmoSlotHovered) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_SecondaryAmmoSlotHovered");
static_assert(sizeof(W_Loadout_Munitions_C_SecondaryAmmoSlotHovered) == 0x000008, "Wrong size on W_Loadout_Munitions_C_SecondaryAmmoSlotHovered");
static_assert(offsetof(W_Loadout_Munitions_C_SecondaryAmmoSlotHovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_SecondaryAmmoSlotHovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.DeployableSlotHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_DeployableSlotHovered final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_DeployableSlotHovered) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_DeployableSlotHovered");
static_assert(sizeof(W_Loadout_Munitions_C_DeployableSlotHovered) == 0x000008, "Wrong size on W_Loadout_Munitions_C_DeployableSlotHovered");
static_assert(offsetof(W_Loadout_Munitions_C_DeployableSlotHovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_DeployableSlotHovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.PrimaryAmmoSlotHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_PrimaryAmmoSlotHovered final 
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_PrimaryAmmoSlotHovered) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_PrimaryAmmoSlotHovered");
static_assert(sizeof(W_Loadout_Munitions_C_PrimaryAmmoSlotHovered) == 0x000008, "Wrong size on W_Loadout_Munitions_C_PrimaryAmmoSlotHovered");
static_assert(offsetof(W_Loadout_Munitions_C_PrimaryAmmoSlotHovered, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_PrimaryAmmoSlotHovered::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_Munitions_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_Reveal) == 0x000004, "Wrong alignment on W_Loadout_Munitions_C_Reveal");
static_assert(sizeof(W_Loadout_Munitions_C_Reveal) == 0x000004, "Wrong size on W_Loadout_Munitions_C_Reveal");
static_assert(offsetof(W_Loadout_Munitions_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_Munitions_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_Hide) == 0x000004, "Wrong alignment on W_Loadout_Munitions_C_Hide");
static_assert(sizeof(W_Loadout_Munitions_C_Hide) == 0x000008, "Wrong size on W_Loadout_Munitions_C_Hide");
static_assert(offsetof(W_Loadout_Munitions_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_Munitions_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_Hide, Collapse) == 0x000004, "Member 'W_Loadout_Munitions_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Munitions_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_Munitions_C_SetInputMode");
static_assert(sizeof(W_Loadout_Munitions_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_Munitions_C_SetInputMode");
static_assert(offsetof(W_Loadout_Munitions_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_Munitions_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_Munitions_C_ChangePage");
static_assert(sizeof(W_Loadout_Munitions_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_Munitions_C_ChangePage");
static_assert(offsetof(W_Loadout_Munitions_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_Munitions_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Munitions_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_PreConstruct) == 0x000001, "Wrong alignment on W_Loadout_Munitions_C_PreConstruct");
static_assert(sizeof(W_Loadout_Munitions_C_PreConstruct) == 0x000001, "Wrong size on W_Loadout_Munitions_C_PreConstruct");
static_assert(offsetof(W_Loadout_Munitions_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Loadout_Munitions_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_HeaderSubpageNavigation final 
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_Munitions_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_Munitions_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_Munitions_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_Munitions_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_Munitions_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_SetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_SetLoadoutWidget");
static_assert(sizeof(W_Loadout_Munitions_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_Loadout_Munitions_C_SetLoadoutWidget");
static_assert(offsetof(W_Loadout_Munitions_C_SetLoadoutWidget, LoadoutWidget) == 0x000000, "Member 'W_Loadout_Munitions_C_SetLoadoutWidget::LoadoutWidget' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_Munitions_C_UpdateCurrentItemMap final 
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Munitions_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_Munitions_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_Munitions_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_Loadout_Munitions_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munitions_C_UpdateCurrentSlot final 
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_UpdateCurrentSlot");
static_assert(sizeof(W_Loadout_Munitions_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_Loadout_Munitions_C_UpdateCurrentSlot");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.UpdateActiveLoadout
// 0x0188 (0x0188 - 0x0000)
struct W_Loadout_Munitions_C_UpdateActiveLoadout final 
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Munitions_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_Munitions_C_UpdateActiveLoadout) == 0x000188, "Wrong size on W_Loadout_Munitions_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_Loadout_Munitions_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.Initialize
// 0x0038 (0x0038 - 0x0000)
struct W_Loadout_Munitions_C_Initialize final 
{
public:
	TArray<class UW_ItemSlotTactical_V2_C*>       Deployables;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3186[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_LoadoutSlot_v2_C*>            CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(W_Loadout_Munitions_C_Initialize) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_Initialize");
static_assert(sizeof(W_Loadout_Munitions_C_Initialize) == 0x000038, "Wrong size on W_Loadout_Munitions_C_Initialize");
static_assert(offsetof(W_Loadout_Munitions_C_Initialize, Deployables) == 0x000000, "Member 'W_Loadout_Munitions_C_Initialize::Deployables' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_Initialize, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Loadout_Munitions_C_Initialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_Initialize, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'W_Loadout_Munitions_C_Initialize::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_Initialize, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'W_Loadout_Munitions_C_Initialize::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_Initialize, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000028, "Member 'W_Loadout_Munitions_C_Initialize::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.CreatePrimarySlots
// 0x0098 (0x0098 - 0x0000)
struct W_Loadout_Munitions_C_CreatePrimarySlots final 
{
public:
	class UW_LoadoutSlot_v2_C*                    NewSlot;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ItemSlotTactical_V2_C*               NewSlotTactical;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3187[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetPrimaryAmmoTypes_ReturnValue;          // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_CreatePrimarySlots) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_CreatePrimarySlots");
static_assert(sizeof(W_Loadout_Munitions_C_CreatePrimarySlots) == 0x000098, "Wrong size on W_Loadout_Munitions_C_CreatePrimarySlots");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, NewSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::NewSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, NewSlotTactical) == 0x000008, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::NewSlotTactical' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_Create_ReturnValue) == 0x000050, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_AddChild_ReturnValue) == 0x000058, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000070, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_GetPrimaryAmmoTypes_ReturnValue) == 0x000078, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_GetPrimaryAmmoTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_Array_Get_Item) == 0x00008C, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreatePrimarySlots, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'W_Loadout_Munitions_C_CreatePrimarySlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.CreateSecondarySlots
// 0x0090 (0x0090 - 0x0000)
struct W_Loadout_Munitions_C_CreateSecondarySlots final 
{
public:
	class UW_LoadoutSlot_v2_C*                    NewSlot;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3188[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetSecondaryAmmoTypes_ReturnValue;        // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_CreateSecondarySlots) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_CreateSecondarySlots");
static_assert(sizeof(W_Loadout_Munitions_C_CreateSecondarySlots) == 0x000090, "Wrong size on W_Loadout_Munitions_C_CreateSecondarySlots");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, NewSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::NewSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_Create_ReturnValue) == 0x000048, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000060, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_AddChild_ReturnValue) == 0x000068, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_GetSecondaryAmmoTypes_ReturnValue) == 0x000070, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_GetSecondaryAmmoTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_Array_Get_Item) == 0x000084, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateSecondarySlots, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'W_Loadout_Munitions_C_CreateSecondarySlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.CreateGrenadeSlots
// 0x01E0 (0x01E0 - 0x0000)
struct W_Loadout_Munitions_C_CreateGrenadeSlots final 
{
public:
	class UW_LoadoutSlot_v2_C*                    NewSlot;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3189[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldBP_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              CallFunc_GetItemData_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318A[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeviceData                            CallFunc_Array_Get_Item;                           // 0x0088(0x0140)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318B[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_CreateGrenadeSlots) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_CreateGrenadeSlots");
static_assert(sizeof(W_Loadout_Munitions_C_CreateGrenadeSlots) == 0x0001E0, "Wrong size on W_Loadout_Munitions_C_CreateGrenadeSlots");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, NewSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::NewSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_Create_ReturnValue) == 0x000018, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_GetOwningPlayer_ReturnValue) == 0x000068, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_GetWorldBP_ReturnValue) == 0x000070, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_GetWorldBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_GetItemData_ReturnValue) == 0x000078, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0001D0, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateGrenadeSlots, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D8, "Member 'W_Loadout_Munitions_C_CreateGrenadeSlots::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.CreateTacticalSlots
// 0x01E0 (0x01E0 - 0x0000)
struct W_Loadout_Munitions_C_CreateTacticalSlots final 
{
public:
	class UW_LoadoutSlot_v2_C*                    NewSlot;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldBP_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              CallFunc_GetItemData_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318D[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeviceData                            CallFunc_Array_Get_Item;                           // 0x0088(0x0140)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318E[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_CreateTacticalSlots) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_CreateTacticalSlots");
static_assert(sizeof(W_Loadout_Munitions_C_CreateTacticalSlots) == 0x0001E0, "Wrong size on W_Loadout_Munitions_C_CreateTacticalSlots");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, NewSlot) == 0x000000, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::NewSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_Create_ReturnValue) == 0x000018, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_GetOwningPlayer_ReturnValue) == 0x000068, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_GetWorldBP_ReturnValue) == 0x000070, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_GetWorldBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_GetItemData_ReturnValue) == 0x000078, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0001D0, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CreateTacticalSlots, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D8, "Member 'W_Loadout_Munitions_C_CreateTacticalSlots::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.UpdateSlotUsage
// 0x0190 (0x0190 - 0x0000)
struct W_Loadout_Munitions_C_UpdateSlotUsage final 
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	int32                                         CallFunc_GetMaximumSlotCount_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318F[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentSlotCount_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3190[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0128(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0178(0x0018)()
};
static_assert(alignof(W_Loadout_Munitions_C_UpdateSlotUsage) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_UpdateSlotUsage");
static_assert(sizeof(W_Loadout_Munitions_C_UpdateSlotUsage) == 0x000190, "Wrong size on W_Loadout_Munitions_C_UpdateSlotUsage");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000040, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeArray_Array) == 0x000048, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, CallFunc_Format_ReturnValue) == 0x000058, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, CallFunc_GetMaximumSlotCount_ReturnValue) == 0x000070, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::CallFunc_GetMaximumSlotCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, CallFunc_GetCurrentSlotCount_ReturnValue) == 0x0000B8, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::CallFunc_GetCurrentSlotCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C0, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeArray_Array_1) == 0x000100, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeStruct_FormatArgumentData_3) == 0x000128, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, K2Node_MakeArray_Array_2) == 0x000168, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_UpdateSlotUsage, CallFunc_Format_ReturnValue_2) == 0x000178, "Member 'W_Loadout_Munitions_C_UpdateSlotUsage::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.SetVisibleCategories
// 0x0014 (0x0014 - 0x0000)
struct W_Loadout_Munitions_C_SetVisibleCategories final 
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Secondary;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Grenades;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Tactical;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_SetVisibleCategories) == 0x000001, "Wrong alignment on W_Loadout_Munitions_C_SetVisibleCategories");
static_assert(sizeof(W_Loadout_Munitions_C_SetVisibleCategories) == 0x000014, "Wrong size on W_Loadout_Munitions_C_SetVisibleCategories");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Primary) == 0x000000, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Primary' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Secondary) == 0x000001, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Secondary' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Grenades) == 0x000002, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Grenades' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Tactical) == 0x000003, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Tactical' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_bool_Variable) == 0x000004, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable) == 0x000005, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_1) == 0x000006, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_bool_Variable_1) == 0x000007, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_2) == 0x000008, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_3) == 0x000009, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_bool_Variable_2) == 0x00000A, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_4) == 0x00000B, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_5) == 0x00000C, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_bool_Variable_3) == 0x00000D, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_6) == 0x00000E, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, Temp_byte_Variable_7) == 0x00000F, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, K2Node_Select_Default) == 0x000010, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, K2Node_Select_Default_1) == 0x000011, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, K2Node_Select_Default_2) == 0x000012, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SetVisibleCategories, K2Node_Select_Default_3) == 0x000013, "Member 'W_Loadout_Munitions_C_SetVisibleCategories::K2Node_Select_Default_3' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.RefreshAllSlots
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_Munitions_C_RefreshAllSlots final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_RefreshAllSlots) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_RefreshAllSlots");
static_assert(sizeof(W_Loadout_Munitions_C_RefreshAllSlots) == 0x000020, "Wrong size on W_Loadout_Munitions_C_RefreshAllSlots");
static_assert(offsetof(W_Loadout_Munitions_C_RefreshAllSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Loadout_Munitions_C_RefreshAllSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_RefreshAllSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Loadout_Munitions_C_RefreshAllSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_RefreshAllSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Loadout_Munitions_C_RefreshAllSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_RefreshAllSlots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'W_Loadout_Munitions_C_RefreshAllSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_RefreshAllSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Loadout_Munitions_C_RefreshAllSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_RefreshAllSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_Loadout_Munitions_C_RefreshAllSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.PrimaryHasFocus
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_Munitions_C_PrimaryHasFocus final 
{
public:
	bool                                          HasFocus;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3191[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WidgetOrChildHasFocus_HasFocus;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_PrimaryHasFocus) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_PrimaryHasFocus");
static_assert(sizeof(W_Loadout_Munitions_C_PrimaryHasFocus) == 0x000018, "Wrong size on W_Loadout_Munitions_C_PrimaryHasFocus");
static_assert(offsetof(W_Loadout_Munitions_C_PrimaryHasFocus, HasFocus) == 0x000000, "Member 'W_Loadout_Munitions_C_PrimaryHasFocus::HasFocus' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_PrimaryHasFocus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'W_Loadout_Munitions_C_PrimaryHasFocus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_PrimaryHasFocus, CallFunc_WidgetOrChildHasFocus_HasFocus) == 0x000010, "Member 'W_Loadout_Munitions_C_PrimaryHasFocus::CallFunc_WidgetOrChildHasFocus_HasFocus' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.SecondaryHasFocus
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_Munitions_C_SecondaryHasFocus final 
{
public:
	bool                                          HasFocus;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3192[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WidgetOrChildHasFocus_HasFocus;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_SecondaryHasFocus) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_SecondaryHasFocus");
static_assert(sizeof(W_Loadout_Munitions_C_SecondaryHasFocus) == 0x000018, "Wrong size on W_Loadout_Munitions_C_SecondaryHasFocus");
static_assert(offsetof(W_Loadout_Munitions_C_SecondaryHasFocus, HasFocus) == 0x000000, "Member 'W_Loadout_Munitions_C_SecondaryHasFocus::HasFocus' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SecondaryHasFocus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'W_Loadout_Munitions_C_SecondaryHasFocus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_SecondaryHasFocus, CallFunc_WidgetOrChildHasFocus_HasFocus) == 0x000010, "Member 'W_Loadout_Munitions_C_SecondaryHasFocus::CallFunc_WidgetOrChildHasFocus_HasFocus' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.CustomNavigation
// 0x0078 (0x0078 - 0x0000)
struct W_Loadout_Munitions_C_CustomNavigation final 
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3193[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_LoadoutSlot_v2_C*>            Slots;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UWidget*                                NextFocus;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeaveDown;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3194[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentIndex;                                      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Direction;                                         // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3195[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3196[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3197[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3198[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_CustomNavigation) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_CustomNavigation");
static_assert(sizeof(W_Loadout_Munitions_C_CustomNavigation) == 0x000078, "Wrong size on W_Loadout_Munitions_C_CustomNavigation");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, Param_Navigation) == 0x000000, "Member 'W_Loadout_Munitions_C_CustomNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, ReturnValue) == 0x000008, "Member 'W_Loadout_Munitions_C_CustomNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, Slots) == 0x000010, "Member 'W_Loadout_Munitions_C_CustomNavigation::Slots' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, NextFocus) == 0x000020, "Member 'W_Loadout_Munitions_C_CustomNavigation::NextFocus' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, LeaveDown) == 0x000028, "Member 'W_Loadout_Munitions_C_CustomNavigation::LeaveDown' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CurrentIndex) == 0x00002C, "Member 'W_Loadout_Munitions_C_CustomNavigation::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, LastIndex) == 0x000030, "Member 'W_Loadout_Munitions_C_CustomNavigation::LastIndex' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, Direction) == 0x000034, "Member 'W_Loadout_Munitions_C_CustomNavigation::Direction' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, Temp_int_Variable) == 0x000038, "Member 'W_Loadout_Munitions_C_CustomNavigation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, Temp_int_Variable_1) == 0x00003C, "Member 'W_Loadout_Munitions_C_CustomNavigation::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Array_LastIndex_ReturnValue) == 0x000048, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005C, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005E, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_BooleanAND_ReturnValue) == 0x00005F, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000068, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_BooleanAND_ReturnValue_1) == 0x000070, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_CustomNavigation, CallFunc_Array_Find_ReturnValue) == 0x000074, "Member 'W_Loadout_Munitions_C_CustomNavigation::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Munitions_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Munitions_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_Munitions_C_BackPage");
static_assert(sizeof(W_Loadout_Munitions_C_BackPage) == 0x000001, "Wrong size on W_Loadout_Munitions_C_BackPage");
static_assert(offsetof(W_Loadout_Munitions_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_Munitions_C_BackPage::Handled' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.BP_GetDesiredFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_Munitions_C_BP_GetDesiredFocusTarget final 
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3199[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_Loadout_Munitions_C_BP_GetDesiredFocusTarget) == 0x000018, "Wrong size on W_Loadout_Munitions_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_Loadout_Munitions_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_Loadout_Munitions_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Loadout_Munitions_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Loadout_Munitions_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_Loadout_Munitions.W_Loadout_Munitions_C.GetFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_Munitions_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munitions_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Munitions_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_Munitions_C_GetFocusTarget) == 0x000018, "Wrong size on W_Loadout_Munitions_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_Munitions_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_Munitions_C_GetFocusTarget::Focus' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_GetFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Loadout_Munitions_C_GetFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munitions_C_GetFocusTarget, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Loadout_Munitions_C_GetFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");

}

