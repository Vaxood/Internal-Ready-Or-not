#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_EntryPoint

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature final 
{
public:
	class UW_PreMission_Tablet_EntryPoint_C*      Clicked;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature, Clicked) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_OnClicked__DelegateSignature::Clicked' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.ExecuteUbergraph_W_PreMission_Tablet_EntryPoint
// 0x0080 (0x0080 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3207[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	float                                         K2Node_Event_Delay_1;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3208[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3209[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint) == 0x000080, "Wrong size on W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_Event_Delay_1) == 0x000030, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_Event_Delay) == 0x000034, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_Event_Collapse) == 0x000038, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_Event_IsGamepad) == 0x000039, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_Event_PageName) == 0x00003C, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_Event_IsDesignTime) == 0x000044, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_ComponentBoundEvent_Button_1) == 0x000048, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_ComponentBoundEvent_Button) == 0x000050, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'W_PreMission_Tablet_EntryPoint_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_BndEvt__W_PreMission_Tablet_EntryPoint_btn_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_PreConstruct) == 0x000001, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_PreConstruct");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_PreConstruct) == 0x000001, "Wrong size on W_PreMission_Tablet_EntryPoint_C_PreConstruct");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_EntryPoint_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_Hide) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_Hide) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_Hide, Collapse) == 0x000004, "Member 'W_PreMission_Tablet_EntryPoint_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_Reveal) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_Reveal) == 0x000004, "Wrong size on W_PreMission_Tablet_EntryPoint_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.SetActive
// 0x0005 (0x0005 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_SetActive final 
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_SetActive) == 0x000001, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_SetActive");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_SetActive) == 0x000005, "Wrong size on W_PreMission_Tablet_EntryPoint_C_SetActive");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_SetActive, Param_Active) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_SetActive::Param_Active' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_SetActive, Temp_bool_Variable) == 0x000001, "Member 'W_PreMission_Tablet_EntryPoint_C_SetActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_SetActive, Temp_byte_Variable) == 0x000002, "Member 'W_PreMission_Tablet_EntryPoint_C_SetActive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_SetActive, Temp_byte_Variable_1) == 0x000003, "Member 'W_PreMission_Tablet_EntryPoint_C_SetActive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_SetActive, K2Node_Select_Default) == 0x000004, "Member 'W_PreMission_Tablet_EntryPoint_C_SetActive::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_EntryPoint_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint.W_PreMission_Tablet_EntryPoint_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_C_GetFocusTarget::Focus' has a wrong offset!");

}

