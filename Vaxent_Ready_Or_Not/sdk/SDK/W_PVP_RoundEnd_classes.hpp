#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PVP_RoundEnd

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PVP_RoundEnd.W_PVP_RoundEnd_C
// 0x0068 (0x02E8 - 0x0280)
class UW_PVP_RoundEnd_C final  : public URoundEndWidget_PVP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           Master_Container;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MLO_Container;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MLO_Label_Text;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MLO_Score_Text;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PVP_Ribbon_TeamColor;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RoundStatus_Text;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RoundTagline_Text;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RoundTagline_Text_2;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ScoreInfo_Container;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SWAT_Container;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SWAT_Label_Text;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SWAT_Score_Text;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_PVP_RoundEnd(int32 EntryPoint, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FSlateColor& K2Node_MakeStruct_SlateColor, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, const struct FSlateColor& CallFunc_GetWinningTeamTextColor_Return_Value, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FLinearColor& CallFunc_GetWinningTeamRibbonColor_Return_Value, class FText CallFunc_GetRoundWinningTeamText_Return_Value, int32 CallFunc_GetSWATScore_Return_Value, int32 CallFunc_GetMLOScore_Return_Value, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, class FText CallFunc_GetWinningTaglineText_Return_Value, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State_1, bool K2Node_DynamicCast_bSuccess_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue);
	void OnWinsUpdated_Event_0();
	void Construct();
	void UpdateRoundTagline();
	void UpdateMLOScore();
	void UpdateSWATScore();
	void UpdateRoundColors();
	void GetWinningTeamTextColor(struct FSlateColor* Return_Value, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1, bool K2Node_DynamicCast_bSuccess_1, ETeamType CallFunc_GetTeamType_ReturnValue, ETeamType CallFunc_GetTeamType_ReturnValue_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor_2, const struct FSlateColor& K2Node_MakeStruct_SlateColor_3, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1);
	void GetWinningTeamRibbonColor(struct FLinearColor* Return_Value, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1, bool K2Node_DynamicCast_bSuccess_1, ETeamType CallFunc_GetTeamType_ReturnValue, ETeamType CallFunc_GetTeamType_ReturnValue_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1);
	void GetLosingTeamTextColor(struct FSlateColor* Return_Value, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, bool K2Node_SwitchEnum_CmpSuccess, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor_2);
	void GetLosingTeamRibbonColor(struct FLinearColor* Return_Value, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void GetRoundWinningTeamText(class FText* Return_Value, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess, ETeamType CallFunc_GetTeamType_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess);
	void GetSWATScore(int32* Return_Value, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAuthority_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue);
	void GetMLOScore(int32* Return_Value, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAuthority_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue);
	void GetWinningTaglineText(class FText* Return_Value, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2);
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_0();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_1();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_2();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_3();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PVP_RoundEnd_C">();
	}
	static class UW_PVP_RoundEnd_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PVP_RoundEnd_C>();
	}
};
static_assert(alignof(UW_PVP_RoundEnd_C) == 0x000008, "Wrong alignment on UW_PVP_RoundEnd_C");
static_assert(sizeof(UW_PVP_RoundEnd_C) == 0x0002E8, "Wrong size on UW_PVP_RoundEnd_C");
static_assert(offsetof(UW_PVP_RoundEnd_C, UberGraphFrame) == 0x000280, "Member 'UW_PVP_RoundEnd_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, Master_Container) == 0x000288, "Member 'UW_PVP_RoundEnd_C::Master_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, MLO_Container) == 0x000290, "Member 'UW_PVP_RoundEnd_C::MLO_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, MLO_Label_Text) == 0x000298, "Member 'UW_PVP_RoundEnd_C::MLO_Label_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, MLO_Score_Text) == 0x0002A0, "Member 'UW_PVP_RoundEnd_C::MLO_Score_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, PVP_Ribbon_TeamColor) == 0x0002A8, "Member 'UW_PVP_RoundEnd_C::PVP_Ribbon_TeamColor' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, RoundStatus_Text) == 0x0002B0, "Member 'UW_PVP_RoundEnd_C::RoundStatus_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, RoundTagline_Text) == 0x0002B8, "Member 'UW_PVP_RoundEnd_C::RoundTagline_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, RoundTagline_Text_2) == 0x0002C0, "Member 'UW_PVP_RoundEnd_C::RoundTagline_Text_2' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, ScoreInfo_Container) == 0x0002C8, "Member 'UW_PVP_RoundEnd_C::ScoreInfo_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, SWAT_Container) == 0x0002D0, "Member 'UW_PVP_RoundEnd_C::SWAT_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, SWAT_Label_Text) == 0x0002D8, "Member 'UW_PVP_RoundEnd_C::SWAT_Label_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, SWAT_Score_Text) == 0x0002E0, "Member 'UW_PVP_RoundEnd_C::SWAT_Score_Text' has a wrong offset!");

}

