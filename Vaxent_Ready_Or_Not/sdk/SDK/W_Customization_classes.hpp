#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Customization

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "E_BoxShape_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_CustomizationGroups_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Customization.W_Customization_C
// 0x0380 (0x0A58 - 0x06D8)
class UW_Customization_C final  : public UCustomizationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           AnimsVerticalBox;                                  // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientLeft;                            // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientRight;                           // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* btn_Group_Accessories;                             // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* btn_Group_Gear;                                    // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* btn_Group_Uniform;                                 // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        CharacterSectionWidgetSwitcher;                    // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CharacterVoiceSelectBox;                           // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Clickrotatearea;                                   // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DoneButton;                                        // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DoneButton_1;                                      // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           EquippedList;                                      // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_AccessoySlots;                                  // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_GearSlots;                                      // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemList;                                          // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SelectionList;                                     // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Selector_C*            Selector_Character;                                // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Selector_C*            Selector_Voice;                                    // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Belt;                                         // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Boots;                                        // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Eyewear;                                      // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Facewear;                                     // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Gloves;                                       // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Helmet;                                       // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Pants;                                        // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Tattoos;                                      // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Torso;                                        // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Vest;                                         // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Watch;                                        // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               UnitSelectBox;                                     // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_VariantCarousel_C*     VariantList;                                       // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CategoryOverview;                               // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_UniformSlots;                                   // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_InfoBox_C*             W_Customization_InfoBox;                           // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Carousel_C*                          W_ItemCategoryCarousel;                            // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_UnitSelect_C*                W_Loadout_UnitSelect;                              // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_86;                                 // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Wrap_ItemList;                                     // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget*                                LastHovered;                                       // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECustomizationType, class FString>       CategoryPoses;                                     // 0x0818(0x0050)(Edit, BlueprintVisible)
	TMap<ECustomizationType, class FName>         CategoryCameraTags;                                // 0x0868(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, class ULoadoutCustomization*> CharacterMap;                                      // 0x08B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FMargin                                ListMargin;                                        // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Rot;                                               // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D65[0x7];                                     // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Customization_Slot_C*>        AllSlots;                                          // 0x0920(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bUseGamepad;                                       // 0x0930(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bItemListOpen;                                     // 0x0931(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVariantListOpen;                                  // 0x0932(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D66[0x5];                                     // 0x0933(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Customization_Slot_C*>        UniformSlots;                                      // 0x0938(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_Customization_Slot_C*>        GearSlots;                                         // 0x0948(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_Customization_Slot_C*>        AccessorySlots;                                    // 0x0958(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	ECustomizationType                            CurrentCategory;                                   // 0x0968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D67[0x7];                                     // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                CarouselOptionsMap;                                // 0x0970(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_CustomizationGroups                         BrowsingGroup;                                     // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D68[0x7];                                     // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Customization_Slot_C*                SelectedSlot;                                      // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCategorySelected;                                // 0x09D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_Customization_Slot_C*                EquippedItemSlot;                                  // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* SelectedGroupButton;                               // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class ULoadoutCustomization*> VoiceMap;                                          // 0x09F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_Customization_Slot_C*                EquippedVariantSlot;                               // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                HighlightedVariant;                                // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULoadoutCustomization*                  VariantParent;                                     // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCategorySelected__DelegateSignature(class FName CameraTag, const class FString& CharacterPose);
	void ExecuteUbergraph_W_Customization(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, class UW_Loadout_C* K2Node_Event_LoadoutWidget, class FName K2Node_Event_OptionNameID, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess, const struct FFocusEvent& K2Node_Event_InFocusEvent, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, class UW_Customization_Slot_C* K2Node_CustomEvent_Slot, TArray<class UW_Customization_Slot_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, ECommonInputType K2Node_CustomEvent_bNewInputType, class UW_Customization_Slot_C* K2Node_CustomEvent_TriggeringSlot_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, TDelegate<void(class UW_Customization_Slot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, class UW_Customization_Slot_C* K2Node_CustomEvent_TriggeringSlot_2, TDelegate<void(class UW_Customization_Slot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, class FName CallFunc_GetCategoryNameID_NameID, class FText CallFunc_GetCustomizationCategoryText_Category_Text, class UW_Customization_Slot_C* K2Node_CustomEvent_TriggeringSlot_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class UW_Customization_Slot_C* CallFunc_Array_Get_Item, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue_1, class FName K2Node_ComponentBoundEvent_OptionID_4, ECustomizationType CallFunc_GetCategoryByName_Category, TArray<class UW_Customization_Slot_C*>& CallFunc_GetGroupSlotsByCategory_ReturnValue, class UW_Customization_Slot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue_1, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller_1, bool K2Node_DynamicCast_bSuccess_1, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_3, class FName K2Node_ComponentBoundEvent_OptionID_3, class ULoadoutCustomization* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class FName CallFunc_GetEquippedNameID_OutName, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_5, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_4, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_3, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_2, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button_1, class UCommonButtonBase* K2Node_ComponentBoundEvent_Button, class UWidget* CallFunc_GetFocusTarget_Focus, class FName K2Node_ComponentBoundEvent_OptionID_2, class FName CallFunc_GetEquippedNameID_OutName_1, bool CallFunc_NotEqual_NameName_ReturnValue_1, class ULoadoutCustomization* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, class UW_Customization_Selector_C* K2Node_ComponentBoundEvent_TriggeringSelector, class FName K2Node_ComponentBoundEvent_OptionID_1, int32 Temp_int_Loop_Counter_Variable, class ULoadoutCustomization* CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue_2, class FName K2Node_ComponentBoundEvent_OptionID, class ULoadoutCustomization* CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_6, bool K2Node_ComponentBoundEvent_HasVariants, class UW_Customization_Slot_C* K2Node_ComponentBoundEvent_TriggeringSlot_1, class UW_Customization_Slot_C* K2Node_ComponentBoundEvent_TriggeringSlot, bool CallFunc_IsValid_ReturnValue_7, class UW_Customization_Slot_C* K2Node_ComponentBoundEvent_EquippedSlot, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable_1, class UW_Customization_Slot_C* K2Node_ComponentBoundEvent_NewParam, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class UW_Customization_Slot_C* K2Node_CustomEvent_TriggeringSlot, bool CallFunc_IsHoveredEquipped_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, const struct FST_EquippingUnit& K2Node_ComponentBoundEvent_EquippingUnitInfo, bool CallFunc_IsMultiplayer_ReturnValue, class UWidget* K2Node_Select_Default);
	void BndEvt__W_Customization_W_Loadout_UnitSelect_K2Node_ComponentBoundEvent_21_OnEquippingUnitSelected__DelegateSignature(const struct FST_EquippingUnit& EquippingUnitInfo);
	void ListItemRightClickReleased();
	void ListItemRightClickPressed(class UW_Customization_Slot_C* TriggeringSlot);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_19_OnVariantHighlighted__DelegateSignature(class UW_Customization_Slot_C* NewParam);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_20_OnVariantSlotEquipped__DelegateSignature(class UW_Customization_Slot_C* EquippedSlot);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_18_OnVariantUnhovered__DelegateSignature();
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_17_OnVariantHovered__DelegateSignature(class UW_Customization_Slot_C* TriggeringSlot);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_11_OnVariantClicked__DelegateSignature(class UW_Customization_Slot_C* TriggeringSlot);
	void BndEvt__W_Customization_W_Customization_VariantCarousel_K2Node_ComponentBoundEvent_10_OnVariantListPopulated__DelegateSignature(bool HasVariants);
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_9_OnDropdownClosed__DelegateSignature();
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_8_OnOptionHovered__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_7_OnOptionHovered__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_6_OnDropdownClosed__DelegateSignature();
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_16_OnSelectorClicked__DelegateSignature(class UW_Customization_Selector_C* TriggeringSelector);
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_btn_Group_Accessories_K2Node_ComponentBoundEvent_14_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Accessories_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Gear_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Uniform_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Gear_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Uniform_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_W_ItemCategoryCarousel_K2Node_ComponentBoundEvent_12_OnOptionSelected__DelegateSignature(class FName OptionID);
	void ListItemUnhovered();
	void ListItemHovered(class UW_Customization_Slot_C* TriggeringSlot);
	void CategorySlotClicked(class UW_Customization_Slot_C* TriggeringSlot);
	void CategorySlotUnhovered();
	void CategorySlotHovered(class UW_Customization_Slot_C* TriggeringSlot);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void OnInitialized();
	void UpdateCategorySlots();
	void ListItemClicked(class UW_Customization_Slot_C* Param_Slot);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void SetupEquippedList();
	void Destruct();
	void BndEvt__W_CustomizationTest_DoneButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void UpdateStyle(bool Param_bUseGamepad, bool CallFunc_IsValid_ReturnValue, E_CustomizationGroups Temp_byte_Variable, TArray<class UW_Customization_Slot_C*>& Temp_object_Variable, TArray<class UW_Customization_Slot_C*>& Temp_object_Variable_1, TArray<class UW_Customization_Slot_C*>& Temp_object_Variable_2, TArray<class UW_Customization_Slot_C*>& K2Node_Select_Default);
	void GroupUniformButton(class UW_Customization_Slot_C* K2Node_DynamicCast_AsW_Customization_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, TArray<class UW_Customization_Slot_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets);
	void UngroupButtons(class UW_Customization_Slot_C* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UW_Customization_Slot_C* CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, class UW_Customization_Slot_C* CallFunc_Array_Get_Item_2, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_2);
	void GroupGearButton(class UW_Customization_Slot_C* K2Node_DynamicCast_AsW_Customization_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, TArray<class UW_Customization_Slot_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets);
	void GroupAccessoryButton(class UW_Customization_Slot_C* K2Node_DynamicCast_AsW_Customization_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, TArray<class UW_Customization_Slot_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets);
	void GetSlotShapeByCategory(ECustomizationType Category, E_BoxShape* Shape, ECustomizationType Temp_byte_Variable, E_BoxShape Temp_byte_Variable_1, E_BoxShape Temp_byte_Variable_2, E_BoxShape Temp_byte_Variable_3, E_BoxShape Temp_byte_Variable_4, E_BoxShape Temp_byte_Variable_5, E_BoxShape Temp_byte_Variable_6, E_BoxShape Temp_byte_Variable_7, E_BoxShape Temp_byte_Variable_8, E_BoxShape Temp_byte_Variable_9, E_BoxShape Temp_byte_Variable_10, E_BoxShape Temp_byte_Variable_11, E_BoxShape Temp_byte_Variable_12, E_BoxShape Temp_byte_Variable_13, E_BoxShape Temp_byte_Variable_14, E_BoxShape Temp_byte_Variable_15, E_BoxShape Temp_byte_Variable_16, E_BoxShape K2Node_Select_Default);
	void GetCategoryByName(class FName Param_Name, ECustomizationType* Category, ECustomizationType NewCategory, bool K2Node_SwitchName_CmpSuccess);
	void FocusNewItemList(class UW_Customization_Slot_C* EquippedSlot, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool Temp_bool_Variable, class UWidget* CallFunc_GetChildAt_ReturnValue, class UWidget* K2Node_Select_Default);
	bool BP_OnHandleBackAction(bool CallFunc_BackPage_Handled);
	void SetBrowsingGroupByCurrentCategory(bool CallFunc_NotEqual_ByteByte_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class UW_Customization_Gamepad_GroupButton_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets, bool CallFunc_IsValid_ReturnValue_1, class UW_Customization_Gamepad_GroupButton_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue_1, E_CustomizationGroups CallFunc_GetCustomizationGroupByCategory_Group);
	void CloseItemList(E_CustomizationGroups Temp_byte_Variable, class UWidget* Temp_object_Variable, class UWidget* Temp_object_Variable_1, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput, bool CallFunc_Not_PreBool_ReturnValue, class UWidget* K2Node_Select_Default);
	void OpenItemList(class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue);
	void GetCategoryNameID(ECustomizationType Category, class FName* NameID, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_Replace_ReturnValue, const class FString& CallFunc_Replace_ReturnValue_1, class FName CallFunc_Conv_StringToName_ReturnValue);
	void SetCarouselOptions(ECustomizationType ActiveCategory, bool Temp_bool_Variable, bool CallFunc_NotEqual_ByteByte_ReturnValue, class FName CallFunc_GetOptionAtIndex_ReturnValue, E_CustomizationGroups CallFunc_GetBrowsingGroupByCategory_ReturnValue, class FName CallFunc_GetCategoryNameID_NameID, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class FName K2Node_Select_Default);
	void SetCarouselOptionMap(TArray<class UW_Customization_Slot_C*>& Slots, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UW_Customization_Slot_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class FText CallFunc_GetCustomizationCategoryText_Category_Text, bool CallFunc_Less_IntInt_ReturnValue, class FName CallFunc_GetCategoryNameID_NameID);
	E_CustomizationGroups GetBrowsingGroupByCategory(ECustomizationType Category, ECustomizationType Temp_byte_Variable, E_CustomizationGroups Temp_byte_Variable_1, E_CustomizationGroups Temp_byte_Variable_2, E_CustomizationGroups Temp_byte_Variable_3, E_CustomizationGroups Temp_byte_Variable_4, E_CustomizationGroups Temp_byte_Variable_5, E_CustomizationGroups Temp_byte_Variable_6, E_CustomizationGroups Temp_byte_Variable_7, E_CustomizationGroups Temp_byte_Variable_8, E_CustomizationGroups Temp_byte_Variable_9, E_CustomizationGroups Temp_byte_Variable_10, E_CustomizationGroups Temp_byte_Variable_11, E_CustomizationGroups Temp_byte_Variable_12, E_CustomizationGroups Temp_byte_Variable_13, E_CustomizationGroups Temp_byte_Variable_14, E_CustomizationGroups Temp_byte_Variable_15, E_CustomizationGroups Temp_byte_Variable_16, E_CustomizationGroups K2Node_Select_Default);
	void SelectSlot(class UW_Customization_Slot_C* Param_Slot, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2);
	void UpdateCharacterSelector(const TMap<class FName, class FText>& CharacterOptions, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class FName CallFunc_GetEquippedNameID_OutName, TArray<class ULoadoutCustomization*>& CallFunc_GetCustomizationItems_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class ULoadoutCustomization* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class FName CallFunc_TextToName_OutName);
	void GetEquippedNameID(ECustomizationType Type, class FName* OutName, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue, class FName CallFunc_TextToName_OutName);
	void ChangeCurrentCategory(ECustomizationType Param_CurrentCategory, const class FString& NewPoseTag, class FName NewCameraTag, bool Temp_bool_Variable, const class FString& Temp_string_Variable, bool Temp_bool_Variable_1, class FName Temp_name_Variable, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, class FName K2Node_Select_Default, const class FString& K2Node_Select_Default_1);
	void UpdateItemListEquipped(class UW_Customization_Slot_C* NewEquippedSlot, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CreateItemListEntry();
	void ViewCategoryItems(ECustomizationType Category, class UW_Customization_Slot_C* EquippedSlot, class UW_Customization_Slot_C* NewSlot, class ULoadoutCustomization* NewItem, int32 Temp_int_Array_Index_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_Customization_Slot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, class UW_Customization_Slot_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsItemFamilyEquipped_IsEquipped, E_BoxShape CallFunc_GetSlotShapeByCategory_Shape, TArray<class ULoadoutCustomization*>& CallFunc_GetCustomizationItems_ReturnValue, class ULoadoutCustomization* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TDelegate<void(class UW_Customization_Slot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_Customization_Slot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, int32 Temp_int_Loop_Counter_Variable, class UWrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void UpdateVoiceSelector(const TMap<class FName, class FText>& VoiceOptions, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class FName CallFunc_GetEquippedNameID_OutName, TArray<class ULoadoutCustomization*>& CallFunc_GetCustomizationItems_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class ULoadoutCustomization* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class FName CallFunc_TextToName_OutName);
	void ViewItemVariants(class ULoadoutCustomization* Item, class UW_Customization_Slot_C* DefaultWidget, class UW_Customization_Slot_C* NewWidget, class ULoadoutCustomization* NewItem, const TArray<class ULoadoutCustomization*>& Variants, bool CallFunc_IsValid_ReturnValue, ECustomizationType CallFunc_GetCustomizationType_ReturnValue, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue);
	void OpenVariantList(TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput);
	void CloseVariantList(bool ReturnToItemList, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput);
	void LeaveVariantList();
	void UpdateVariantListEquipped(class UW_Customization_Slot_C* NewEquippedSlot);
	void CheckItemEquipped(class ULoadoutCustomization* Item, bool* IsEquipped, ECustomizationType CallFunc_GetCustomizationType_ReturnValue, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void SetHoveredItem(class UW_Customization_Slot_C* Target);
	TArray<class UW_Customization_Slot_C*> GetGroupSlotsByCategory(ECustomizationType Category, E_CustomizationGroups Temp_byte_Variable, TArray<class UW_Customization_Slot_C*>& Temp_object_Variable, TArray<class UW_Customization_Slot_C*>& Temp_object_Variable_1, TArray<class UW_Customization_Slot_C*>& Temp_object_Variable_2, E_CustomizationGroups CallFunc_GetBrowsingGroupByCategory_ReturnValue, TArray<class UW_Customization_Slot_C*>& K2Node_Select_Default);
	void IsItemFamilyEquipped(class ULoadoutCustomization* Item, bool* IsEquipped, bool B, const TArray<class ULoadoutCustomization*>& ItemArray, TArray<class ULoadoutCustomization*>& CallFunc_GroupItemFamily_Family, bool Temp_bool_True_if_break_was_hit_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class ULoadoutCustomization* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class ULoadoutCustomization* CallFunc_GetEquippedCustomizationItem_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	bool IsHoveredEquipped(bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void SelectItemSlot(class ULoadoutCustomization* SlotItem, class ULoadoutCustomization* SelectedItem, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ULoadoutCustomization*>& CallFunc_GroupItemFamily_Family, class ULoadoutCustomization* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GroupItemFamily(class ULoadoutCustomization* InItem, TArray<class ULoadoutCustomization*>* Family, const TArray<class ULoadoutCustomization*>& ItemArray, int32 CallFunc_Array_Add_ReturnValue);
	void BackPage(bool* Handled);

	class UWidget* BP_GetDesiredFocusTarget(class UWidget* CallFunc_GetFocusTarget_Focus) const;
	void GetFocusTarget(class UWidget** Focus, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, class UWidget* CallFunc_GetFocusTarget_Focus, TScriptInterface<class IReadyOrNotUI_C> CallFunc_GetFocusTarget_self_CastInput, class UWidget* CallFunc_GetFocusTarget_Focus_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Customization_C">();
	}
	static class UW_Customization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Customization_C>();
	}
};
static_assert(alignof(UW_Customization_C) == 0x000008, "Wrong alignment on UW_Customization_C");
static_assert(sizeof(UW_Customization_C) == 0x000A58, "Wrong size on UW_Customization_C");
static_assert(offsetof(UW_Customization_C, UberGraphFrame) == 0x0006D8, "Member 'UW_Customization_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, AnimsVerticalBox) == 0x0006E0, "Member 'UW_Customization_C::AnimsVerticalBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, BackgroundGradientLeft) == 0x0006E8, "Member 'UW_Customization_C::BackgroundGradientLeft' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, BackgroundGradientRight) == 0x0006F0, "Member 'UW_Customization_C::BackgroundGradientRight' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, btn_Group_Accessories) == 0x0006F8, "Member 'UW_Customization_C::btn_Group_Accessories' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, btn_Group_Gear) == 0x000700, "Member 'UW_Customization_C::btn_Group_Gear' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, btn_Group_Uniform) == 0x000708, "Member 'UW_Customization_C::btn_Group_Uniform' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CharacterSectionWidgetSwitcher) == 0x000710, "Member 'UW_Customization_C::CharacterSectionWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CharacterVoiceSelectBox) == 0x000718, "Member 'UW_Customization_C::CharacterVoiceSelectBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Clickrotatearea) == 0x000720, "Member 'UW_Customization_C::Clickrotatearea' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, DoneButton) == 0x000728, "Member 'UW_Customization_C::DoneButton' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, DoneButton_1) == 0x000730, "Member 'UW_Customization_C::DoneButton_1' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, EquippedList) == 0x000738, "Member 'UW_Customization_C::EquippedList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HB_AccessoySlots) == 0x000740, "Member 'UW_Customization_C::HB_AccessoySlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HB_GearSlots) == 0x000748, "Member 'UW_Customization_C::HB_GearSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, ItemList) == 0x000750, "Member 'UW_Customization_C::ItemList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SelectionList) == 0x000758, "Member 'UW_Customization_C::SelectionList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Selector_Character) == 0x000760, "Member 'UW_Customization_C::Selector_Character' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Selector_Voice) == 0x000768, "Member 'UW_Customization_C::Selector_Voice' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Belt) == 0x000770, "Member 'UW_Customization_C::Slot_Belt' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Boots) == 0x000778, "Member 'UW_Customization_C::Slot_Boots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Eyewear) == 0x000780, "Member 'UW_Customization_C::Slot_Eyewear' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Facewear) == 0x000788, "Member 'UW_Customization_C::Slot_Facewear' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Gloves) == 0x000790, "Member 'UW_Customization_C::Slot_Gloves' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Helmet) == 0x000798, "Member 'UW_Customization_C::Slot_Helmet' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Pants) == 0x0007A0, "Member 'UW_Customization_C::Slot_Pants' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Tattoos) == 0x0007A8, "Member 'UW_Customization_C::Slot_Tattoos' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Torso) == 0x0007B0, "Member 'UW_Customization_C::Slot_Torso' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Vest) == 0x0007B8, "Member 'UW_Customization_C::Slot_Vest' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Watch) == 0x0007C0, "Member 'UW_Customization_C::Slot_Watch' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, UnitSelectBox) == 0x0007C8, "Member 'UW_Customization_C::UnitSelectBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VariantList) == 0x0007D0, "Member 'UW_Customization_C::VariantList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VB_CategoryOverview) == 0x0007D8, "Member 'UW_Customization_C::VB_CategoryOverview' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VB_UniformSlots) == 0x0007E0, "Member 'UW_Customization_C::VB_UniformSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_Customization_InfoBox) == 0x0007E8, "Member 'UW_Customization_C::W_Customization_InfoBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_ItemCategoryCarousel) == 0x0007F0, "Member 'UW_Customization_C::W_ItemCategoryCarousel' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_Loadout_UnitSelect) == 0x0007F8, "Member 'UW_Customization_C::W_Loadout_UnitSelect' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, WidgetSwitcher_86) == 0x000800, "Member 'UW_Customization_C::WidgetSwitcher_86' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Wrap_ItemList) == 0x000808, "Member 'UW_Customization_C::Wrap_ItemList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, LastHovered) == 0x000810, "Member 'UW_Customization_C::LastHovered' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CategoryPoses) == 0x000818, "Member 'UW_Customization_C::CategoryPoses' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CategoryCameraTags) == 0x000868, "Member 'UW_Customization_C::CategoryCameraTags' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CharacterMap) == 0x0008B8, "Member 'UW_Customization_C::CharacterMap' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, ListMargin) == 0x000908, "Member 'UW_Customization_C::ListMargin' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Rot) == 0x000918, "Member 'UW_Customization_C::Rot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, AllSlots) == 0x000920, "Member 'UW_Customization_C::AllSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bUseGamepad) == 0x000930, "Member 'UW_Customization_C::bUseGamepad' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bItemListOpen) == 0x000931, "Member 'UW_Customization_C::bItemListOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bVariantListOpen) == 0x000932, "Member 'UW_Customization_C::bVariantListOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, UniformSlots) == 0x000938, "Member 'UW_Customization_C::UniformSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, GearSlots) == 0x000948, "Member 'UW_Customization_C::GearSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, AccessorySlots) == 0x000958, "Member 'UW_Customization_C::AccessorySlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CurrentCategory) == 0x000968, "Member 'UW_Customization_C::CurrentCategory' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CarouselOptionsMap) == 0x000970, "Member 'UW_Customization_C::CarouselOptionsMap' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, BrowsingGroup) == 0x0009C0, "Member 'UW_Customization_C::BrowsingGroup' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SelectedSlot) == 0x0009C8, "Member 'UW_Customization_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, OnCategorySelected) == 0x0009D0, "Member 'UW_Customization_C::OnCategorySelected' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, EquippedItemSlot) == 0x0009E0, "Member 'UW_Customization_C::EquippedItemSlot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SelectedGroupButton) == 0x0009E8, "Member 'UW_Customization_C::SelectedGroupButton' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VoiceMap) == 0x0009F0, "Member 'UW_Customization_C::VoiceMap' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, EquippedVariantSlot) == 0x000A40, "Member 'UW_Customization_C::EquippedVariantSlot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HighlightedVariant) == 0x000A48, "Member 'UW_Customization_C::HighlightedVariant' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VariantParent) == 0x000A50, "Member 'UW_Customization_C::VariantParent' has a wrong offset!");

}

