#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BasePlayer

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BasePlayer.BasePlayer_C.ExecuteUbergraph_BasePlayer
// 0x01D0 (0x01D0 - 0x0000)
struct BasePlayer_C_ExecuteUbergraph_BasePlayer final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4E[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue_1;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_2;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue_2;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C50[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_3;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue_3;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C51[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_4;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue_4;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C52[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C53[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x00A8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ledge;                                // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ledgeWallNormal;                      // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ledgeTraceDown;                       // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ledgeZ;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELedgeWidth                                   K2Node_Event_ledgeWidth;                           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELedgeHeight                                  K2Node_Event_ledgeHeight;                          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C54[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C55[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C56[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_1;     // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_3;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_4;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_1;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Strength;                             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C57[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_5;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_HalfHeightAdjust_1;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust_1;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0190(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x01A8(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C58[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DirectionForward;                     // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DirectionRight;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_ExecuteUbergraph_BasePlayer) == 0x000010, "Wrong alignment on BasePlayer_C_ExecuteUbergraph_BasePlayer");
static_assert(sizeof(BasePlayer_C_ExecuteUbergraph_BasePlayer) == 0x0001D0, "Wrong size on BasePlayer_C_ExecuteUbergraph_BasePlayer");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, EntryPoint) == 0x000000, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_IsLocalPlayer_ReturnValue) == 0x000010, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000020, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_IsLocalPlayer_ReturnValue_1) == 0x000050, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_IsLocalPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAttached_ReturnValue) == 0x000058, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAttached_ReturnValue_1) == 0x000060, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAttached_ReturnValue_2) == 0x000068, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_IsLocalPlayer_ReturnValue_2) == 0x000070, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_IsLocalPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAttached_ReturnValue_3) == 0x000078, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_IsLocalPlayer_ReturnValue_3) == 0x000080, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_IsLocalPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAttached_ReturnValue_4) == 0x000088, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_IsLocalPlayer_ReturnValue_4) == 0x000090, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_IsLocalPlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_DeltaSeconds) == 0x000094, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000098, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_InputKeyEvent_Key) == 0x0000A8, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_GetPlayLength_ReturnValue) == 0x0000C0, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ledge) == 0x0000C8, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ledge' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ledgeWallNormal) == 0x0000D4, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ledgeWallNormal' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ledgeTraceDown) == 0x0000E0, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ledgeTraceDown' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ledgeZ) == 0x0000EC, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ledgeZ' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ledgeWidth) == 0x0000F0, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ledgeWidth' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ledgeHeight) == 0x0000F1, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ledgeHeight' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEvent2D_ReturnValue) == 0x0000F8, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000100, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000101, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000104, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000110, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_Conv_VectorToTransform_ReturnValue_1) == 0x000120, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_Conv_VectorToTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEvent2D_ReturnValue_2) == 0x000150, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEvent2D_ReturnValue_3) == 0x000158, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEvent2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEvent2D_ReturnValue_4) == 0x000160, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEvent2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEventAtLocation_ReturnValue_1) == 0x000168, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_Strength) == 0x000170, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_Strength' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, CallFunc_PlayEvent2D_ReturnValue_5) == 0x000178, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::CallFunc_PlayEvent2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_HalfHeightAdjust_1) == 0x000180, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_HalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ScaledHalfHeightAdjust_1) == 0x000184, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ScaledHalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_HalfHeightAdjust) == 0x000188, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_ScaledHalfHeightAdjust) == 0x00018C, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_InputKeyEvent_Key_1) == 0x000190, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_InputKeyEvent_Key_2) == 0x0001A8, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_CustomEvent_Active) == 0x0001C0, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_DirectionForward) == 0x0001C4, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_DirectionForward' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_ExecuteUbergraph_BasePlayer, K2Node_Event_DirectionRight) == 0x0001C8, "Member 'BasePlayer_C_ExecuteUbergraph_BasePlayer::K2Node_Event_DirectionRight' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.OnBulletImpact
// 0x0008 (0x0008 - 0x0000)
struct BasePlayer_C_OnBulletImpact final 
{
public:
	float                                         DirectionForward;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionRight;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_OnBulletImpact) == 0x000004, "Wrong alignment on BasePlayer_C_OnBulletImpact");
static_assert(sizeof(BasePlayer_C_OnBulletImpact) == 0x000008, "Wrong size on BasePlayer_C_OnBulletImpact");
static_assert(offsetof(BasePlayer_C_OnBulletImpact, DirectionForward) == 0x000000, "Member 'BasePlayer_C_OnBulletImpact::DirectionForward' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_OnBulletImpact, DirectionRight) == 0x000004, "Member 'BasePlayer_C_OnBulletImpact::DirectionRight' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.ToggleTabletCursor
// 0x0001 (0x0001 - 0x0000)
struct BasePlayer_C_ToggleTabletCursor final 
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BasePlayer_C_ToggleTabletCursor) == 0x000001, "Wrong alignment on BasePlayer_C_ToggleTabletCursor");
static_assert(sizeof(BasePlayer_C_ToggleTabletCursor) == 0x000001, "Wrong size on BasePlayer_C_ToggleTabletCursor");
static_assert(offsetof(BasePlayer_C_ToggleTabletCursor, Active) == 0x000000, "Member 'BasePlayer_C_ToggleTabletCursor::Active' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct BasePlayer_C_K2_OnStartCrouch final 
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on BasePlayer_C_K2_OnStartCrouch");
static_assert(sizeof(BasePlayer_C_K2_OnStartCrouch) == 0x000008, "Wrong size on BasePlayer_C_K2_OnStartCrouch");
static_assert(offsetof(BasePlayer_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'BasePlayer_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'BasePlayer_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct BasePlayer_C_K2_OnEndCrouch final 
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on BasePlayer_C_K2_OnEndCrouch");
static_assert(sizeof(BasePlayer_C_K2_OnEndCrouch) == 0x000008, "Wrong size on BasePlayer_C_K2_OnEndCrouch");
static_assert(offsetof(BasePlayer_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'BasePlayer_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'BasePlayer_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.OnSupression
// 0x0004 (0x0004 - 0x0000)
struct BasePlayer_C_OnSupression final 
{
public:
	float                                         Strength;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_OnSupression) == 0x000004, "Wrong alignment on BasePlayer_C_OnSupression");
static_assert(sizeof(BasePlayer_C_OnSupression) == 0x000004, "Wrong size on BasePlayer_C_OnSupression");
static_assert(offsetof(BasePlayer_C_OnSupression, Strength) == 0x000000, "Member 'BasePlayer_C_OnSupression::Strength' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.PlayVaultAnimation
// 0x002C (0x002C - 0x0000)
struct BasePlayer_C_PlayVaultAnimation final 
{
public:
	struct FVector                                Ledge;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LedgeWallNormal;                                   // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LedgeTraceDown;                                    // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LedgeZ;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELedgeWidth                                   LedgeWidth;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELedgeHeight                                  LedgeHeight;                                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_PlayVaultAnimation) == 0x000004, "Wrong alignment on BasePlayer_C_PlayVaultAnimation");
static_assert(sizeof(BasePlayer_C_PlayVaultAnimation) == 0x00002C, "Wrong size on BasePlayer_C_PlayVaultAnimation");
static_assert(offsetof(BasePlayer_C_PlayVaultAnimation, Ledge) == 0x000000, "Member 'BasePlayer_C_PlayVaultAnimation::Ledge' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_PlayVaultAnimation, LedgeWallNormal) == 0x00000C, "Member 'BasePlayer_C_PlayVaultAnimation::LedgeWallNormal' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_PlayVaultAnimation, LedgeTraceDown) == 0x000018, "Member 'BasePlayer_C_PlayVaultAnimation::LedgeTraceDown' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_PlayVaultAnimation, LedgeZ) == 0x000024, "Member 'BasePlayer_C_PlayVaultAnimation::LedgeZ' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_PlayVaultAnimation, LedgeWidth) == 0x000028, "Member 'BasePlayer_C_PlayVaultAnimation::LedgeWidth' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_PlayVaultAnimation, LedgeHeight) == 0x000029, "Member 'BasePlayer_C_PlayVaultAnimation::LedgeHeight' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BasePlayer_C_ReceiveTick final 
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on BasePlayer_C_ReceiveTick");
static_assert(sizeof(BasePlayer_C_ReceiveTick) == 0x000004, "Wrong size on BasePlayer_C_ReceiveTick");
static_assert(offsetof(BasePlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BasePlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.InpActEvt_F1_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0");
static_assert(sizeof(BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0");
static_assert(offsetof(BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BasePlayer_C_InpActEvt_F1_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.InpActEvt_F2_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1");
static_assert(sizeof(BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1");
static_assert(offsetof(BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BasePlayer_C_InpActEvt_F2_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.InpActEvt_F3_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2 final 
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2");
static_assert(sizeof(BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2");
static_assert(offsetof(BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BasePlayer_C_InpActEvt_F3_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.UpdateFirstPersonShake
// 0x0030 (0x0030 - 0x0000)
struct BasePlayer_C_UpdateFirstPersonShake final 
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C59[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_UpdateFirstPersonShake) == 0x000004, "Wrong alignment on BasePlayer_C_UpdateFirstPersonShake");
static_assert(sizeof(BasePlayer_C_UpdateFirstPersonShake) == 0x000030, "Wrong size on BasePlayer_C_UpdateFirstPersonShake");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, DeltaSeconds) == 0x000000, "Member 'BasePlayer_C_UpdateFirstPersonShake::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_FMax_ReturnValue) == 0x000004, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_FMax_ReturnValue_1) == 0x000008, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_FMax_ReturnValue_2) == 0x000010, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_FClamp_ReturnValue_1) == 0x00001C, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_IsSprinting_ReturnValue) == 0x000020, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_UpdateFirstPersonShake, CallFunc_FClamp_ReturnValue_2) == 0x00002C, "Member 'BasePlayer_C_UpdateFirstPersonShake::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.AddFirstPersonShakeFromSuppression
// 0x0010 (0x0010 - 0x0000)
struct BasePlayer_C_AddFirstPersonShakeFromSuppression final 
{
public:
	float                                         Strength;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_AddFirstPersonShakeFromSuppression) == 0x000004, "Wrong alignment on BasePlayer_C_AddFirstPersonShakeFromSuppression");
static_assert(sizeof(BasePlayer_C_AddFirstPersonShakeFromSuppression) == 0x000010, "Wrong size on BasePlayer_C_AddFirstPersonShakeFromSuppression");
static_assert(offsetof(BasePlayer_C_AddFirstPersonShakeFromSuppression, Strength) == 0x000000, "Member 'BasePlayer_C_AddFirstPersonShakeFromSuppression::Strength' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_AddFirstPersonShakeFromSuppression, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BasePlayer_C_AddFirstPersonShakeFromSuppression::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_AddFirstPersonShakeFromSuppression, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BasePlayer_C_AddFirstPersonShakeFromSuppression::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_AddFirstPersonShakeFromSuppression, CallFunc_FMin_ReturnValue) == 0x00000C, "Member 'BasePlayer_C_AddFirstPersonShakeFromSuppression::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BasePlayer.BasePlayer_C.GetTabletZoomFOV
// 0x0038 (0x0038 - 0x0000)
struct BasePlayer_C_GetTabletZoomFOV final 
{
public:
	float                                         FOV;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePlayer_C_GetTabletZoomFOV) == 0x000004, "Wrong alignment on BasePlayer_C_GetTabletZoomFOV");
static_assert(sizeof(BasePlayer_C_GetTabletZoomFOV) == 0x000038, "Wrong size on BasePlayer_C_GetTabletZoomFOV");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, FOV) == 0x000000, "Member 'BasePlayer_C_GetTabletZoomFOV::FOV' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000004, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000008, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_GetViewportSize_ReturnValue) == 0x00000C, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_BreakVector2D_X) == 0x000018, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_DegTan_ReturnValue) == 0x000020, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_DegAtan_ReturnValue) == 0x00002C, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePlayer_C_GetTabletZoomFOV, CallFunc_FMax_ReturnValue) == 0x000034, "Member 'BasePlayer_C_GetTabletZoomFOV::CallFunc_FMax_ReturnValue' has a wrong offset!");

}

