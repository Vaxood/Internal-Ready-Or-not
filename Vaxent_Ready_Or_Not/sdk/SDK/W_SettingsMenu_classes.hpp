#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SettingsMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SKeybinding_structs.hpp"
#include "SGraphicPreset_structs.hpp"
#include "SStandardModalDetails_structs.hpp"
#include "InputRemapping_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SettingsMenu.W_SettingsMenu_C
// 0x09F0 (0x0D10 - 0x0320)
class UW_SettingsMenu_C final  : public UMenuWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Header_C*                            AdvancedGraphicsHeader;                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           AdvancedGraphicsSettings;                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            AdvanceMirrorOptionsHeader_1;                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            AdvanceOptiwandOptionsHeader;                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGrahpics_Check_BounceLight;                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_DepthOfField;                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_FlashlightShadows;               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_FrameLimit;                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_MeshPainting;                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_MotionBlurEnable;                // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_OptiwandFPSEnabled;              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_Raytracing;                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_RaytracingAmbientOcclusion;      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_RaytracingGlobalIllumination;    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_RaytracingReflections;           // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_RaytracingShadows;               // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_RaytracingTranslucency;          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Check_VSync;                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  AdvGraphics_Checkbox_DecalsEnabled;                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_AAQuality;                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_DecalDensity;                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_DecalFadeScreenSize;            // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_DLSSQuality;                    // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_EffectsQuality;                 // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_FrameLimiter;                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_FSRQuality;                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_MirrorFPS_1;                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_MotionBlurScale;                // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_OptiwandFPS;                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_OptiwandScale;                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_PPQuality;                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_ShadowQuality;                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_TextureQuality;                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    AdvGraphics_Slider_ViewDistance;                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Analytics;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            AnalyticsHeader;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardButton_C*                    ApplySettingsButton;                               // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Audio_Slider_MasterVolume;                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Audio_Slider_MicGainVolume;                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Audio_Slider_MusicVolume;                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Audio_Slider_SFXVolume;                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Audio_Slider_UIVolume;                             // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Audio_Slider_VOIPVolume;                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            AudioHeader;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           AudioMenu;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               AudioOptionsButton;                                // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            BasicGraphicsHeader;                               // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Blackout;                                          // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Apply;                                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_AudioOptions;                                  // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlOptions;                                // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsEquipment;                             // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsInteraction;                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsMisc;                                  // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsMovement;                              // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsReplay;                                // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsTeamwork;                              // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ControlsVehicle;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Exit;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_GameOptions;                                   // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_GraphicsOptions;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Reset;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            ClearModioUserData;                                // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            CommandHeader;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               ControlOptionsButton;                              // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Controls_Equipment;                                // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Equipment_Widget;                         // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Controls_Interaction;                              // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Interaction_Widget;                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Controls_Misc;                                     // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Miscellaneous_Widget;                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Controls_Movement;                                 // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Movement_Widget;                          // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Movement_Widget_1;                        // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Replay_Widget;                            // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Controls_Teamwork;                                 // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Teamwork_Widget;                          // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Controls_Vehicle_Widget;                           // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Controls_Vehicles;                                 // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           ControlsMenu;                                      // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ControlsWidgetSwitcher;                            // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            CopySupporterCode;                                 // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DescriptionText;                                   // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            DLSS_Header;                                       // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      DLSSQualityLabel;                                  // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardButton_C*                    ExitSettingsMenu;                                  // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            FSR_Header;                                        // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      FSRQualityLabel;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           GameMenu;                                          // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               GameOptionsButton;                                 // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               GraphicOptionsButton;                              // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        GraphicOptionsSwitcher;                            // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           GraphicsMenu;                                      // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HighFOVWarning;                                    // 0x0610(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            HudHeader;                                         // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeybindDescriptionText;                            // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            LanguageHeader;                                    // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           MainNavigation;                                    // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            MiscHeader;                                        // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            ModioHeader;                                       // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ModioSubCategory;                                  // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            MouseHeader;                                       // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_InvertMousePitch;                 // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_InvertMouseYaw;                   // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_MapAnalytics;                     // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ServersideChecksum;               // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowChat;                         // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowCommandContextHint;           // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowCommandMarkers;               // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowCompass;                      // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowFPS;                          // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowHealthIcons;                  // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowHesitationBar;                // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowHotkeys;                      // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowHUD;                          // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowIcons;                        // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowNames;                        // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowPatches;                      // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_ShowTeamStatus;                   // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_StaticReload;                     // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_SwayHUD;                          // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  Options_Checkbox_TeamViewFPS;                      // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_CommandStyle;                        // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_DefaultOpenDoorCommand;              // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_DefaultSurfaceCommand;               // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_DefaultTargetCommand;                // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_DefaultUnknownDoorCommand;           // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_DefaultVoipChannel;                  // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_EmptyMagReloadStyle;                 // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_GrenadeStyle;                        // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_InputAudioDevice;                    // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_ItemSelectionStyle;                  // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_Language;                            // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_LockedDoorcommand;                   // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_MirrorReflectionMode;                // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_NVGStyle;                            // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_OptiwandViewMode;                    // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_ScoreReadoutMode;                    // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_ShotgunReloadStyle;                  // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Options_Combo_UnlockedDoorCommand;                 // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Options_Image_PatchPreview;                        // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Options_Slider_FreelookSensitivity;                // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Options_Slider_MouseSensitivity;                   // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    Options_Slider_TeamView_PIP_FPS;                   // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Options_Text_PatchPreview;                         // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       Options_Textbox_OfficerName;                       // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       Options_Textbox_PatchURL;                          // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            PresetsHeader;                                     // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            ProfilingBtn;                                      // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            ProfilingHeader;                                   // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ProfilingSubCategory;                              // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      RaytracingAmbientOcclusion;                        // 0x07E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      RayTracingEnabledLabel;                            // 0x07E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            RayTracingHeader;                                  // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      RaytracingReflectionsLabel;                        // 0x07F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      RaytracingShadowsLabel;                            // 0x0800(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              Reflex_Combo;                                      // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  ReflexGameLatencyChkBox;                           // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      ReflexGameLatencyLabel;                            // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  ReflexGameToRenderLatency_ChkBox;                  // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      ReflexGameToRenderLatencyLabel;                    // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            ReflexHeader;                                      // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      ReflexLowLatencyLabel;                             // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  ReflexRenderLatency_ChkBox;                        // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SettingLabel_C*                      ReflexRenderLatencyLabel;                          // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ReflexSettingsBox;                                 // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardButton_C*                    ResetKeybindsButton;                               // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            ServerHeader;                                      // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ServerSubCategory;                                 // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       SettingsSwitcher;                                  // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCheckbox_C*                  SimpleGraphics_ADSZoom;                            // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              SimpleGraphics_Combo_Preset;                       // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              SimpleGraphics_Combo_ScreenMode;                   // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    SimpleGraphics_Slider_FieldOfView;                 // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    SimpleGraphics_Slider_Resolution;                  // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    SimpleGraphics_Slider_ResolutionScale;             // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    SimpleGraphics_Slider_SafeZone_X;                  // 0x08A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    SimpleGraphics_Slider_SafeZone_Y;                  // 0x08B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SimpleGraphicsSettings;                            // 0x08B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            Supporter_Header;                                  // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SupporterSubCategory;                              // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Tab_AdvancedGraphicOptions;                        // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            Tab_AdvancedGraphicsOptions;                       // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Tab_Audio;                                         // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardRadioButton_C*               Tab_BasicGraphicOptions;                           // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Tab_Controls;                                      // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Tab_Game;                                          // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Tab_Graphics;                                      // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            Tab_SimpleGraphicsOptions;                         // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardModal_C*                     VideoOptionsModal;                                 // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageHeader;                                      // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FSKeybinding>                   MovementControls;                                  // 0x0920(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSKeybinding>                   DroneControls;                                     // 0x0930(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSKeybinding>                   EquipmentControls;                                 // 0x0940(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSKeybinding>                   InteractionControls;                               // 0x0950(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSKeybinding>                   TeamworkControls;                                  // 0x0960(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSKeybinding>                   MiscellaneousControls;                             // 0x0970(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_ControlsBind_C*                      Temp_FirstInput;                                   // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ControlsBind_C*                      Temp_SecondInput;                                  // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                BindNamePadding;                                   // 0x0990(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FMargin                                Bind1Padding;                                      // 0x09A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FMargin                                Bind2Padding;                                      // 0x09B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FMargin                                BindResetPadding;                                  // 0x09C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          VideoSettingsChanged;                              // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E82[0x7];                                     // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSGraphicPreset>                GraphicsPresets;                                   // 0x09D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 StagedResolution;                                  // 0x09E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         StagedResolutionScale;                             // 0x09F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StagedFOV;                                         // 0x09FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSGraphicPreset                        StagedGraphicsPreset;                              // 0x0A00(0x0034)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StagedScreenMode;                                  // 0x0A34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnMenuExited;                                      // 0x0A38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 PatchPreviewURL;                                   // 0x0A48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSlateBrush                            DefaultPatchPreviewBrush;                          // 0x0A58(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_ControlsBind_C*                      ListeningBinding;                                  // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBlackout;                                     // 0x0AE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E83[0x7];                                     // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ControlsBind_C*                      ConflictingBindPending;                            // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ConflictingBindFormat;                             // 0x0AF8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsAxis;                                            // 0x0B10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E84[0x7];                                     // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSKeybinding>                   CharacterControls;                                 // 0x0B18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSKeybinding>                   SharedControls;                                    // 0x0B28(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UW_ControlsBind_C*, struct FAxisMappingStruct> AxesControlBinds;                                  // 0x0B38(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UW_ControlsBind_C*, struct FActionMappingStruct> ActionsControlBinds;                               // 0x0B88(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FSKeybinding>                   UnbindableControls;                                // 0x0BD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_BindConflictModal_C*                 ConflictDetectedPopUp;                             // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_IllegalUnbindModal_C*                IllegalKeyConflictDetectedPopUp;                   // 0x0BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSStandardModalDetails                 BindConflictModalDetails;                          // 0x0BF8(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSStandardModalDetails                 IllegalKeyConflictModalDetails;                    // 0x0C70(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UW_Button_C*                            ActivePageButton;                                  // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            ActiveControlTabButton;                            // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ControlTabInit;                                    // 0x0CF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DecalsStateChanged;                                // 0x0CF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E85[0x2];                                     // 0x0CFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MotionBlurScalar;                                  // 0x0CFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSKeybinding>                   ReplayControls;                                    // 0x0D00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnMenuExited__DelegateSignature();
	void ExecuteUbergraph_W_SettingsMenu(int32 EntryPoint, int32 K2Node_ComponentBoundEvent_NewOption, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, int32 Temp_int_Variable, TDelegate<void(class UW_ControlsBind_C* CallingBind, TArray<struct FActionMappingStruct>& ActionMappings, TArray<struct FAxisMappingStruct>& AxisMappings, const struct FKey& Key, TArray<class FText>& ConflictBindsText)> K2Node_CreateDelegate_OutputDelegate, EGrenadeThrowSettingType Temp_byte_Variable_2, EGrenadeThrowSettingType Temp_byte_Variable_3, int32 Temp_int_Variable_1, EShotgunReloadType Temp_byte_Variable_4, EShotgunReloadType Temp_byte_Variable_5, int32 Temp_int_Variable_2, EItemSelectionInterfaceType Temp_byte_Variable_6, EItemSelectionInterfaceType Temp_byte_Variable_7, int32 Temp_int_Variable_3, EEmptyMagReloadType Temp_byte_Variable_8, EEmptyMagReloadType Temp_byte_Variable_9, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate_2, int32 Temp_int_Variable_4, TDelegate<void(class UStandardModal* CallingModal)> K2Node_CreateDelegate_OutputDelegate_3, EScoreReadoutMode Temp_byte_Variable_10, EScoreReadoutMode Temp_byte_Variable_11, EScoreReadoutMode Temp_byte_Variable_12, EScoreReadoutMode Temp_byte_Variable_13, int32 Temp_int_Variable_5, ESwatCommand Temp_byte_Variable_14, ESwatCommand Temp_byte_Variable_15, ESwatCommand Temp_byte_Variable_16, ESwatCommand Temp_byte_Variable_17, ESwatCommand Temp_byte_Variable_18, ESwatCommand Temp_byte_Variable_19, ESwatCommand Temp_byte_Variable_20, ESwatCommand Temp_byte_Variable_21, ESwatCommand Temp_byte_Variable_22, int32 Temp_int_Variable_6, ESwatCommand Temp_byte_Variable_23, ESwatCommand Temp_byte_Variable_24, ESwatCommand Temp_byte_Variable_25, ESwatCommand Temp_byte_Variable_26, int32 Temp_int_Variable_7, ESwatCommand Temp_byte_Variable_27, ESwatCommand Temp_byte_Variable_28, ESwatCommand Temp_byte_Variable_29, ESwatCommand Temp_byte_Variable_30, int32 Temp_int_Variable_8, ESwatCommand Temp_byte_Variable_31, ESwatCommand Temp_byte_Variable_32, ESwatCommand Temp_byte_Variable_33, ESwatCommand Temp_byte_Variable_34, ESwatCommand Temp_byte_Variable_35, ESwatCommand Temp_byte_Variable_36, ESwatCommand Temp_byte_Variable_37, int32 Temp_int_Variable_9, EOptiwandViewMode Temp_byte_Variable_38, EOptiwandViewMode Temp_byte_Variable_39, int32 Temp_int_Variable_10, ENVGStyle Temp_byte_Variable_40, ENVGStyle Temp_byte_Variable_41, int32 Temp_int_Variable_11, EVoiceType Temp_byte_Variable_42, EVoiceType Temp_byte_Variable_43, int32 Temp_int_Variable_12, ESwatCommand Temp_byte_Variable_44, EVoiceType K2Node_Select_Default, ESwatCommand Temp_byte_Variable_45, ESwatCommand Temp_byte_Variable_46, ESwatCommand Temp_byte_Variable_47, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_Variable, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable_3, bool K2Node_Event_IsDesignTime, TArray<struct FSKeybinding>& K2Node_CustomEvent_Bindings, class UGridPanel* K2Node_CustomEvent_Grid_Panel, int32 CallFunc_Array_Length_ReturnValue, TDelegate<void(class UW_ControlsBind_C* CallingWidget, const struct FKey& NewKey)> K2Node_CreateDelegate_OutputDelegate_4, TDelegate<void(class UW_ControlsBind_C* CallingWidget)> K2Node_CreateDelegate_OutputDelegate_5, TArray<class UW_ControlsBind_C*>& K2Node_MakeArray_Array, TDelegate<void(class UW_ControlsBind_C* CallingWidget)> K2Node_CreateDelegate_OutputDelegate_6, float K2Node_ComponentBoundEvent_NewFloatValue_17, float K2Node_ComponentBoundEvent_NewSliderValue_30, bool K2Node_ComponentBoundEvent_bNewCheckState_43, bool K2Node_ComponentBoundEvent_bNewCheckState_42, bool CallFunc_SetShowFPS_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_41, bool K2Node_ComponentBoundEvent_bNewCheckState_40, bool K2Node_ComponentBoundEvent_bNewCheckState_39, bool K2Node_ComponentBoundEvent_bNewCheckState_38, bool K2Node_ComponentBoundEvent_bNewCheckState_37, bool K2Node_ComponentBoundEvent_bNewCheckState_36, bool CallFunc_LoadHUDSettings_bShowHud, bool CallFunc_LoadHUDSettings_bCurvedHUD, bool CallFunc_LoadHUDSettings_bShowCompass, bool CallFunc_LoadHUDSettings_bShowWeaponHUD, bool CallFunc_LoadHUDSettings_bShowMagazineHUD, bool CallFunc_LoadHUDSettings_bShowChat, bool CallFunc_LoadHUDSettings_bSwayHUD, bool CallFunc_LoadHUDSettings_b2DReload, float CallFunc_LoadHUDSettings_IconScale, float CallFunc_LoadHUDSettings_QuickThrowScale, int32 CallFunc_LoadHUDSettings_FireModeDisplayOption, bool CallFunc_LoadHUDSettings_bShowPlayerNames, bool CallFunc_LoadHUDSettings_bShowButtonPrompts, bool CallFunc_LoadHUDSettings_ReturnValue, int32 Temp_int_Loop_Counter_Variable_4, bool CallFunc_SaveHUDSettings_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, bool CallFunc_SaveHUDSettings_ReturnValue_1, bool CallFunc_SaveHUDSettings_ReturnValue_2, bool CallFunc_SaveHUDSettings_ReturnValue_3, bool CallFunc_SaveHUDSettings_ReturnValue_4, bool CallFunc_SaveHUDSettings_ReturnValue_5, bool CallFunc_SaveHUDSettings_ReturnValue_6, bool CallFunc_SaveHUDSettings_ReturnValue_7, float K2Node_ComponentBoundEvent_NewFloatValue_16, float K2Node_ComponentBoundEvent_NewSliderValue_29, float K2Node_ComponentBoundEvent_NewFloatValue_15, float K2Node_ComponentBoundEvent_NewSliderValue_28, bool CallFunc_SaveSFXVolume_ReturnValue, bool CallFunc_SaveMasterVolume_ReturnValue, float K2Node_ComponentBoundEvent_NewFloatValue_14, float K2Node_ComponentBoundEvent_NewSliderValue_27, float K2Node_ComponentBoundEvent_NewFloatValue_13, float K2Node_ComponentBoundEvent_NewSliderValue_26, bool CallFunc_SaveMusicVolume_ReturnValue, bool CallFunc_SaveUIVolume_ReturnValue, float K2Node_ComponentBoundEvent_NewFloatValue_12, float K2Node_ComponentBoundEvent_NewSliderValue_25, bool CallFunc_SaveVOIPVolume_ReturnValue, const class FString& K2Node_ComponentBoundEvent_NewResolutionValue, float K2Node_ComponentBoundEvent_NewSliderValue_24, int32 K2Node_ComponentBoundEvent_NewIntegerValue_5, float K2Node_ComponentBoundEvent_NewSliderValue_23, int32 K2Node_ComponentBoundEvent_NewQualityValue_5, float K2Node_ComponentBoundEvent_NewSliderValue_22, int32 K2Node_ComponentBoundEvent_NewQualityValue_4, float K2Node_ComponentBoundEvent_NewSliderValue_21, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, uint8 CallFunc_GetValidValue_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue_1, int32 K2Node_ComponentBoundEvent_NewQualityValue_3, float K2Node_ComponentBoundEvent_NewSliderValue_20, int32 K2Node_ComponentBoundEvent_NewQualityValue_2, float K2Node_ComponentBoundEvent_NewSliderValue_19, uint8 CallFunc_Conv_IntToByte_ReturnValue_2, uint8 CallFunc_Conv_IntToByte_ReturnValue_3, uint8 CallFunc_GetValidValue_ReturnValue_2, uint8 CallFunc_GetValidValue_ReturnValue_3, int32 K2Node_ComponentBoundEvent_NewQualityValue_1, float K2Node_ComponentBoundEvent_NewSliderValue_18, int32 K2Node_ComponentBoundEvent_NewQualityValue, float K2Node_ComponentBoundEvent_NewSliderValue_17, uint8 CallFunc_Conv_IntToByte_ReturnValue_4, uint8 CallFunc_Conv_IntToByte_ReturnValue_5, uint8 CallFunc_GetValidValue_ReturnValue_4, uint8 CallFunc_GetValidValue_ReturnValue_5, int32 K2Node_ComponentBoundEvent_NewIntegerValue_4, float K2Node_ComponentBoundEvent_NewSliderValue_16, float K2Node_ComponentBoundEvent_NewFloatValue_11, float K2Node_ComponentBoundEvent_NewSliderValue_15, int32 Temp_int_Array_Index_Variable_4, class UW_StandardModal_C* K2Node_ComponentBoundEvent_CallingModal_2, class FText K2Node_ComponentBoundEvent_TextEntry_1, class UStandardModal* K2Node_ComponentBoundEvent_CallingModal_1, class UW_StandardModal_C* K2Node_ComponentBoundEvent_CallingModal, class FText K2Node_ComponentBoundEvent_TextEntry, bool CallFunc_SetMotionBlurStrength_ReturnValue, bool CallFunc_SetMotionBlurEnabled_ReturnValue, bool CallFunc_SetUseMeshpainting_ReturnValue, bool CallFunc_SetDepthofFieldSetting_ReturnValue, bool CallFunc_SaveSafeZoneSettings_ReturnValue, bool CallFunc_SavePiPResolutionScale_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, int32 CallFunc_Conv_ByteToInt_ReturnValue_2, int32 CallFunc_Conv_ByteToInt_ReturnValue_3, int32 CallFunc_Conv_ByteToInt_ReturnValue_4, int32 CallFunc_Conv_ByteToInt_ReturnValue_5, bool CallFunc_SaveVideoModeAndQuality_ReturnValue, bool CallFunc_SetVideoQualitySettings_ReturnValue, class UW_SettingLabel_C* CallFunc_Create_ReturnValue, const class FString& CallFunc_Split_LeftS, const class FString& CallFunc_Split_RightS, bool CallFunc_Split_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue_1, class UGridSlot* CallFunc_AddChildToGrid_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_20, uint8 CallFunc_Conv_IntToByte_ReturnValue_6, uint8 CallFunc_GetValidValue_ReturnValue_6, int32 K2Node_ComponentBoundEvent_NewOption_19, const struct FSGraphicPreset& CallFunc_Array_Get_Item, bool CallFunc_SetScreenResolution_ReturnValue, bool CallFunc_ChangeScreenResolution_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, float CallFunc_Conv_IntToFloat_ReturnValue_1, bool CallFunc_SetFoV_ReturnValue, class UW_StandardButton_C* K2Node_ComponentBoundEvent_CallingButton_1, class UW_StandardButton_C* K2Node_ComponentBoundEvent_CallingButton, class FText K2Node_ComponentBoundEvent_Text, ETextCommit K2Node_ComponentBoundEvent_CommitMethod, class UW_ControlsBind_C* K2Node_CustomEvent_CallingWidget_2, class UW_ControlsResetBinding_C* CallFunc_Create_ReturnValue_1, class UGridSlot* CallFunc_AddChildToGrid_ReturnValue_1, TArray<class UW_StandardButton_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, TArray<class UW_ControlsBind_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_1, int32 CallFunc_Array_Length_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_5, TArray<class UW_ControlsResetBinding_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_2, class UW_ControlsResetBinding_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_5, class UW_ControlsBind_C* K2Node_CustomEvent_CallingWidget_1, TArray<class UW_ControlsBind_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_3, TArray<class UW_ControlsResetBinding_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_4, class UW_ControlsBind_C* CallFunc_Array_Get_Item_2, class UW_ControlsResetBinding_C* CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Length_ReturnValue_4, int32 CallFunc_Array_Length_ReturnValue_5, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_3, TArray<class UW_StandardButton_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_5, class UW_ControlsBind_C* K2Node_CustomEvent_CallingWidget, const struct FKey& K2Node_CustomEvent_NewKey, class UW_StandardButton_C* CallFunc_Array_Get_Item_4, int32 CallFunc_Array_Length_ReturnValue_6, bool CallFunc_Less_IntInt_ReturnValue_4, bool K2Node_ComponentBoundEvent_bNewCheckState_35, bool K2Node_ComponentBoundEvent_bNewCheckState_34, float K2Node_ComponentBoundEvent_NewFloatValue_10, float K2Node_ComponentBoundEvent_NewSliderValue_14, bool CallFunc_GetMouseInverted_bInvertVertical, bool CallFunc_GetMouseInverted_bInvertHorizontal, bool CallFunc_GetMouseInverted_ReturnValue, bool CallFunc_SetMouseSensitivity_ReturnValue, bool CallFunc_SetMouseInverted_ReturnValue, bool CallFunc_SetMouseInverted_ReturnValue_1, int32 K2Node_ComponentBoundEvent_NewOption_18, ESlateVisibility K2Node_Select_Default_1, const class FString& CallFunc_Array_Get_Item_5, bool CallFunc_SetCurrentCulture_ReturnValue, TArray<class ABP_BaseController_C*>& CallFunc_GetAllActorsOfClass_OutActors, class APawn* CallFunc_GetOwningPlayerPawn_ReturnValue, class UW_ControlsBind_C* K2Node_CustomEvent_CallingBind, TArray<struct FActionMappingStruct>& K2Node_CustomEvent_ActionMappings, TArray<struct FAxisMappingStruct>& K2Node_CustomEvent_AxisMappings, const struct FKey& K2Node_CustomEvent_Key, TArray<class FText>& K2Node_CustomEvent_ConflictBindsText, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_GetConflictingKeybindText_Text, bool K2Node_ComponentBoundEvent_bNewCheckState_33, bool CallFunc_SaveKeybinds_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_32, float K2Node_ComponentBoundEvent_NewFloatValue_9, float K2Node_ComponentBoundEvent_NewSliderValue_13, float K2Node_ComponentBoundEvent_NewFloatValue_8, float K2Node_ComponentBoundEvent_NewSliderValue_12, bool CallFunc_SetFreelookSensitivity_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_31, bool CallFunc_SetShowControls_ReturnValue, TArray<class UW_KeyDisplay_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets_6, int32 Temp_int_Array_Index_Variable_5, class UW_KeyDisplay_C* CallFunc_Array_Get_Item_6, const struct FSKeybinding& CallFunc_Array_Get_Item_7, bool CallFunc_Try_Assign_Unbindable_Control_bSuccess, bool CallFunc_Try_Assign_Unbindable_Control_bSuccess_1, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_7, bool K2Node_ComponentBoundEvent_bNewCheckState_30, bool CallFunc_Less_IntInt_ReturnValue_5, int32 K2Node_ComponentBoundEvent_NewIntegerValue_3, float K2Node_ComponentBoundEvent_NewSliderValue_11, bool K2Node_ComponentBoundEvent_bNewCheckState_29, bool K2Node_ComponentBoundEvent_bNewCheckState_28, bool K2Node_ComponentBoundEvent_bNewCheckState_27, bool K2Node_ComponentBoundEvent_bNewCheckState_26, bool K2Node_ComponentBoundEvent_bNewCheckState_25, bool CallFunc_SetRaytracingSettings_ReturnValue, bool CallFunc_SetFrameRateLimit_ReturnValue, bool CallFunc_SetVSyncEnabled_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_24, bool K2Node_ComponentBoundEvent_bNewCheckState_23, float K2Node_ComponentBoundEvent_NewFloatValue_7, float K2Node_ComponentBoundEvent_NewSliderValue_10, int32 K2Node_ComponentBoundEvent_NewOption_17, bool CallFunc_SaveHUDSettings_ReturnValue_8, int32 K2Node_ComponentBoundEvent_NewOption_16, EGrenadeThrowSettingType K2Node_Select_Default_2, bool CallFunc_SaveGrenadeSettings_ReturnValue, EShotgunReloadType K2Node_Select_Default_3, bool K2Node_ComponentBoundEvent_bNewCheckState_22, bool CallFunc_SaveShotgunSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_21, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_SaveHitmarkerSfxEnabled_ReturnValue, class UReadyOrNotGameUserSettings* CallFunc_GetReadyOrNotGameUserSettings_ReturnValue, int32 Temp_int_Array_Index_Variable_6, class UW_ControlsBind_C* CallFunc_Array_Get_Item_8, bool CallFunc_NotEqual_ObjectObject_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_15, class APawn* CallFunc_GetOwningPlayerPawn_ReturnValue_1, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character_1, bool K2Node_DynamicCast_bSuccess_2, EItemSelectionInterfaceType K2Node_Select_Default_4, bool K2Node_ComponentBoundEvent_bNewCheckState_20, bool CallFunc_SaveHUDSettings_ReturnValue_9, bool CallFunc_SaveItemSelectionStyleSettings_ReturnValue, float K2Node_ComponentBoundEvent_NewFloatValue_6, float K2Node_ComponentBoundEvent_NewSliderValue_9, float K2Node_ComponentBoundEvent_NewFloatValue_5, float K2Node_ComponentBoundEvent_NewSliderValue_8, bool CallFunc_IsDLSSEnabled_ReturnValue, int32 K2Node_ComponentBoundEvent_NewIntegerValue_2, float K2Node_ComponentBoundEvent_NewSliderValue_7, bool CallFunc_SetDlssQuality_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_14, int32 K2Node_ComponentBoundEvent_NewIntegerValue_1, float K2Node_ComponentBoundEvent_NewSliderValue_6, bool CallFunc_SaveHUDSettings_ReturnValue_10, bool CallFunc_SaveTeamViewSetting_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_13, EEmptyMagReloadType K2Node_Select_Default_5, bool CallFunc_SaveEmptyMagReloadSettings_ReturnValue, TArray<struct FAxisMappingStruct>& K2Node_MakeArray_Array_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, TArray<struct FActionMappingStruct>& K2Node_MakeArray_Array_2, class UW_ControlsBind_C* CallFunc_Create_ReturnValue_2, class UGridSlot* CallFunc_AddChildToGrid_ReturnValue_2, class UW_ControlsBind_C* CallFunc_Create_ReturnValue_3, class UGridSlot* CallFunc_AddChildToGrid_ReturnValue_3, class UW_StandardModal_C* K2Node_CustomEvent_CallingModal_2, class FText K2Node_CustomEvent_TextEntry, class UStandardModal* K2Node_CustomEvent_CallingModal_1, class UW_StandardModal_C* CallFunc_Initialise_Or_Get_Pop_Up_OutputPopUp, class UW_BindConflictModal_C* K2Node_DynamicCast_AsW_Bind_Conflict_Modal, bool K2Node_DynamicCast_bSuccess_3, class UStandardModal* K2Node_CustomEvent_CallingModal, int32 Temp_int_Loop_Counter_Variable_6, bool CallFunc_Less_IntInt_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_7, int32 K2Node_ComponentBoundEvent_NewOption_12, bool K2Node_ComponentBoundEvent_bNewCheckState_19, bool CallFunc_SaveShowHealthIconSetting_ReturnValue, EScoreReadoutMode K2Node_Select_Default_6, bool K2Node_ComponentBoundEvent_bNewCheckState_18, bool CallFunc_SaveScoreReadoutSetting_ReturnValue, bool CallFunc_SaveHotkeyHintSetting_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_11, ESwatCommand CallFunc_LoadDefaultCommands_DefaultCommand, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnknownCommand, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorOpenCommand, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorLockedCommand, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnlockedCommand, bool CallFunc_LoadDefaultCommands_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_10, ESwatCommand K2Node_Select_Default_7, bool CallFunc_SaveDefaultCommand_ReturnValue, ESwatCommand K2Node_Select_Default_8, ESwatCommand CallFunc_LoadDefaultCommands_DefaultCommand_1, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnknownCommand_1, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorOpenCommand_1, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorLockedCommand_1, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnlockedCommand_1, bool CallFunc_LoadDefaultCommands_ReturnValue_1, int32 K2Node_ComponentBoundEvent_NewOption_9, bool CallFunc_SaveDefaultCommand_ReturnValue_1, ESwatCommand CallFunc_LoadDefaultCommands_DefaultCommand_2, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnknownCommand_2, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorOpenCommand_2, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorLockedCommand_2, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnlockedCommand_2, bool CallFunc_LoadDefaultCommands_ReturnValue_2, ESwatCommand K2Node_Select_Default_9, int32 K2Node_ComponentBoundEvent_NewOption_8, bool CallFunc_SaveDefaultCommand_ReturnValue_2, ESwatCommand CallFunc_LoadDefaultCommands_DefaultCommand_3, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnknownCommand_3, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorOpenCommand_3, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorLockedCommand_3, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnlockedCommand_3, bool CallFunc_LoadDefaultCommands_ReturnValue_3, ESwatCommand K2Node_Select_Default_10, int32 K2Node_ComponentBoundEvent_NewOption_7, bool CallFunc_SaveDefaultCommand_ReturnValue_3, ESwatCommand CallFunc_LoadDefaultCommands_DefaultCommand_4, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnknownCommand_4, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorOpenCommand_4, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorLockedCommand_4, ESwatCommand CallFunc_LoadDefaultCommands_DefaultDoorUnlockedCommand_4, bool CallFunc_LoadDefaultCommands_ReturnValue_4, int32 K2Node_ComponentBoundEvent_NewOption_6, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnknownCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorOpenCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorLockedCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnlockedCommandOption, bool CallFunc_LoadDefaultCommandsAsOption_ReturnValue, bool CallFunc_SaveDefaultCommandAsOption_ReturnValue, ESwatCommand K2Node_Select_Default_11, int32 Temp_int_Loop_Counter_Variable_7, bool CallFunc_SaveDefaultCommand_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_7, int32 CallFunc_Add_IntInt_ReturnValue_8, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultCommandOption_1, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnknownCommandOption_1, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorOpenCommandOption_1, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorLockedCommandOption_1, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnlockedCommandOption_1, bool CallFunc_LoadDefaultCommandsAsOption_ReturnValue_1, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultCommandOption_2, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnknownCommandOption_2, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorOpenCommandOption_2, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorLockedCommandOption_2, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnlockedCommandOption_2, bool CallFunc_LoadDefaultCommandsAsOption_ReturnValue_2, bool CallFunc_SaveDefaultCommandAsOption_ReturnValue_1, bool CallFunc_SaveDefaultCommandAsOption_ReturnValue_2, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultCommandOption_3, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnknownCommandOption_3, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorOpenCommandOption_3, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorLockedCommandOption_3, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnlockedCommandOption_3, bool CallFunc_LoadDefaultCommandsAsOption_ReturnValue_3, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultCommandOption_4, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnknownCommandOption_4, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorOpenCommandOption_4, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorLockedCommandOption_4, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnlockedCommandOption_4, bool CallFunc_LoadDefaultCommandsAsOption_ReturnValue_4, bool CallFunc_SaveDefaultCommandAsOption_ReturnValue_3, bool CallFunc_SaveDefaultCommandAsOption_ReturnValue_4, class UW_Button_C* K2Node_ComponentBoundEvent_Button_18, class UW_Button_C* K2Node_ComponentBoundEvent_Button_17, class UW_Button_C* K2Node_ComponentBoundEvent_Button_16, class UW_Button_C* K2Node_ComponentBoundEvent_Button_15, class UW_Button_C* K2Node_ComponentBoundEvent_Button_14, class UW_Button_C* K2Node_ComponentBoundEvent_Button_13, class UW_Button_C* K2Node_ComponentBoundEvent_Button_12, class UW_Button_C* K2Node_ComponentBoundEvent_Button_11, class UW_Button_C* K2Node_ComponentBoundEvent_Button_10, class UW_Button_C* K2Node_ComponentBoundEvent_Button_9, class UW_Button_C* K2Node_ComponentBoundEvent_Button_8, class UW_Button_C* K2Node_ComponentBoundEvent_Button_7, class UW_Button_C* K2Node_ComponentBoundEvent_Button_6, bool K2Node_ComponentBoundEvent_bNewCheckState_17, bool CallFunc_SaveShowPlayerIconSetting_ReturnValue, class UInputSettings* CallFunc_GetInputSettings_ReturnValue, int32 Temp_int_Array_Index_Variable_7, class UW_StandardButton_C* CallFunc_Array_Get_Item_9, bool K2Node_ComponentBoundEvent_bNewCheckState_16, bool CallFunc_SaveShowHesitationBarSetting_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_5, class UW_Button_C* K2Node_ComponentBoundEvent_Button_5, EOptiwandViewMode K2Node_Select_Default_12, class UW_Button_C* K2Node_ComponentBoundEvent_Button_4, bool CallFunc_SaveOptiwandViewMode_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_15, bool CallFunc_SaveKeybinds_ReturnValue_1, bool CallFunc_SaveShowTeamStatus_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_14, bool K2Node_ComponentBoundEvent_bNewCheckState_13, bool CallFunc_SaveShowCommandContextHintSetting_ReturnValue, bool CallFunc_SaveZoomADSSetting_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_12, bool K2Node_ComponentBoundEvent_bNewCheckState_11, bool CallFunc_SetBounceLightEnabled_ReturnValue, bool CallFunc_SetFlashlightShadows_ReturnValue, bool CallFunc_SetFSRQuality_ReturnValue, int32 K2Node_ComponentBoundEvent_NewIntegerValue, float K2Node_ComponentBoundEvent_NewSliderValue_5, bool CallFunc_SetDlssQuality_ReturnValue_1, bool CallFunc_SetFSRQuality_ReturnValue_1, float K2Node_ComponentBoundEvent_NewFloatValue_4, float K2Node_ComponentBoundEvent_NewSliderValue_4, int32 K2Node_ComponentBoundEvent_NewOption_4, bool CallFunc_SetMicInputGain_ReturnValue, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue, const class FString& CallFunc_GetCurrentOptionAsString_OptionAsString, float K2Node_ComponentBoundEvent_NewFloatValue_3, float K2Node_ComponentBoundEvent_NewSliderValue_3, bool CallFunc_SetInputAudioDevice_ReturnValue, bool CallFunc_SaveMirrorResolutionScale_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button_3, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, const class FString& CallFunc_GetDiscordOneTimeUseCode_ReturnValue, const struct FBPUniqueNetId& CallFunc_GetUniqueNetID_UniqueNetId, bool K2Node_ComponentBoundEvent_bNewCheckState_10, const class FString& CallFunc_UniqueNetIdToString_String, bool CallFunc_SaveServersideChecksum_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue_2, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue_3, bool K2Node_ComponentBoundEvent_bNewCheckState_9, bool CallFunc_SaveMirrorAntiAliasEnabled_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool K2Node_ComponentBoundEvent_bNewCheckState_8, bool CallFunc_SaveMirrorDecalsEnabled_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_7, bool K2Node_ComponentBoundEvent_bNewCheckState_6, bool CallFunc_SaveMirrorDynamicShadowsEnabled_ReturnValue, bool CallFunc_LoadPiPFPS_bEnabled, float CallFunc_LoadPiPFPS_FPS, bool CallFunc_LoadPiPFPS_ReturnValue, bool CallFunc_SavePiPFPS_ReturnValue, bool K2Node_ComponentBoundEvent_bNewCheckState_5, bool CallFunc_LoadTeamViewFPSSetting_bEnabled, int32 CallFunc_LoadTeamViewFPSSetting_TeamViewFPS, bool CallFunc_LoadTeamViewFPSSetting_ReturnValue, bool CallFunc_SaveTeamViewSetting_ReturnValue_1, bool K2Node_ComponentBoundEvent_bNewCheckState_4, float K2Node_ComponentBoundEvent_NewFloatValue_2, float K2Node_ComponentBoundEvent_NewSliderValue_2, float K2Node_ComponentBoundEvent_NewFloatValue_1, float K2Node_ComponentBoundEvent_NewSliderValue_1, bool CallFunc_GetWorldDecalsEnabled_bEnabled, float CallFunc_GetWorldDecalsEnabled_FadeDistance, float CallFunc_GetWorldDecalsEnabled_Density, bool CallFunc_GetWorldDecalsEnabled_ReturnValue, bool CallFunc_GetWorldDecalsEnabled_bEnabled_1, float CallFunc_GetWorldDecalsEnabled_FadeDistance_1, float CallFunc_GetWorldDecalsEnabled_Density_1, bool CallFunc_GetWorldDecalsEnabled_ReturnValue_1, bool CallFunc_SetWorldDecalEnabled_ReturnValue, bool CallFunc_SetWorldDecalEnabled_ReturnValue_1, bool CallFunc_GetWorldDecalsEnabled_bEnabled_2, float CallFunc_GetWorldDecalsEnabled_FadeDistance_2, float CallFunc_GetWorldDecalsEnabled_Density_2, bool CallFunc_GetWorldDecalsEnabled_ReturnValue_2, bool CallFunc_SetWorldDecalEnabled_ReturnValue_2, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue_4, bool CallFunc_IsNvidiaReflexEnabled_ReturnValue, int32 K2Node_ComponentBoundEvent_NewOption_3, bool K2Node_ComponentBoundEvent_bNewCheckState_3, bool K2Node_SwitchInteger_CmpSuccess_1, bool K2Node_ComponentBoundEvent_bNewCheckState_2, bool K2Node_ComponentBoundEvent_bNewCheckState_1, bool CallFunc_GetReflexLatencyOptions_bGameToRenderLatencyEnabled, bool CallFunc_GetReflexLatencyOptions_bGameLatencyEnabled, bool CallFunc_GetReflexLatencyOptions_bRenderLatencyEnabled, bool CallFunc_GetReflexLatencyOptions_ReturnValue, bool CallFunc_GetReflexLatencyOptions_bGameToRenderLatencyEnabled_1, bool CallFunc_GetReflexLatencyOptions_bGameLatencyEnabled_1, bool CallFunc_GetReflexLatencyOptions_bRenderLatencyEnabled_1, bool CallFunc_GetReflexLatencyOptions_ReturnValue_1, bool CallFunc_SetReflexLatencyOptions_ReturnValue, bool CallFunc_SetReflexLatencyOptions_ReturnValue_1, bool CallFunc_GetReflexLatencyOptions_bGameToRenderLatencyEnabled_2, bool CallFunc_GetReflexLatencyOptions_bGameLatencyEnabled_2, bool CallFunc_GetReflexLatencyOptions_bRenderLatencyEnabled_2, bool CallFunc_GetReflexLatencyOptions_ReturnValue_2, bool CallFunc_LoadPiPFPS_bEnabled_1, float CallFunc_LoadPiPFPS_FPS_1, bool CallFunc_LoadPiPFPS_ReturnValue_1, bool CallFunc_SetReflexLatencyOptions_ReturnValue_2, bool CallFunc_SavePiPFPS_ReturnValue_1, int32 K2Node_ComponentBoundEvent_NewOption_2, bool CallFunc_SetReflexEnabled_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_8, bool CallFunc_SaveMirrorEnabledOnlyInLobby_ReturnValue, bool CallFunc_SaveMirrorReflectionEnabled_ReturnValue, bool CallFunc_SetReflexEnabled_ReturnValue_1, bool CallFunc_SetReflexEnabled_ReturnValue_2, int32 K2Node_ComponentBoundEvent_NewOption_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, ENVGStyle K2Node_Select_Default_13, class UModioManager* CallFunc_GetInstance_ReturnValue, bool CallFunc_SaveNVGStyle_ReturnValue, bool CallFunc_IsValid_ReturnValue, float K2Node_ComponentBoundEvent_NewFloatValue, float K2Node_ComponentBoundEvent_NewSliderValue, bool K2Node_ComponentBoundEvent_bNewCheckState, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_SetSendMapStatistics_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button, class UReadyOrNotGameInstance* CallFunc_GetRONGameInstance_ReturnValue, bool CallFunc_IsReplaySystemEnabled_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void BndEvt__W_SettingsMenu_Options_Combo_DefaultVoipChannel_K2Node_ComponentBoundEvent_124_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__W_SettingsMenu_ControlsMenu_K2Node_ComponentBoundEvent_123_HandleBackPress__DelegateSignature();
	void BndEvt__W_SettingsMenu_AudioMenu_K2Node_ComponentBoundEvent_122_HandleBackPress__DelegateSignature();
	void BndEvt__W_SettingsMenu_GraphicsMenu_K2Node_ComponentBoundEvent_121_HandleBackPress__DelegateSignature();
	void BndEvt__W_SettingsMenu_GameMenu_K2Node_ComponentBoundEvent_6_HandleBackPress__DelegateSignature();
	void BndEvt__W_SettingsMenu_btn_ControlsReplay_K2Node_ComponentBoundEvent_120_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_SettingsMenu_Options_Checkbox_MapAnalytics_K2Node_ComponentBoundEvent_78_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_AdvGraphics_Slider_MotionBlurScale_K2Node_ComponentBoundEvent_119_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__W_SettingsMenu_ClearModioUserData_K2Node_ComponentBoundEvent_118_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_SettingsMenu_Options_Combo_NVGStyle_K2Node_ComponentBoundEvent_94_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__W_SettingsMenu_Options_Combo_MirrorReflectionMode_K2Node_ComponentBoundEvent_115_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__W_SettingsMenu_ReflexRenderLatency_ChkBox_K2Node_ComponentBoundEvent_117_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_ReflexGameLatencyChkBox_K2Node_ComponentBoundEvent_116_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_ReflexGameToRenderLatency_ChkBox_K2Node_ComponentBoundEvent_114_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_Reflex_Combo_K2Node_ComponentBoundEvent_113_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__W_SettingsMenu_AdvGraphics_Slider_DecalFadeScreenSize_K2Node_ComponentBoundEvent_112_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__W_SettingsMenu_AdvGraphics_Slider_DecalDensity_K2Node_ComponentBoundEvent_111_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__W_SettingsMenu_AdvGraphics_Checkbox_DecalsEnabled_K2Node_ComponentBoundEvent_110_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_Options_Checkbox_TeamViewFPS_K2Node_ComponentBoundEvent_109_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_AdvGraphics_Check_OptiwandFPSEnabled_K2Node_ComponentBoundEvent_108_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_AdvGraphics_Checkbox_MirrorDynamicShadows_K2Node_ComponentBoundEvent_106_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_AdvGraphics_Checkbox_MirrorDecals_K2Node_ComponentBoundEvent_105_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_AdvGraphics_Checkbox_MirrorAntiAlias_K2Node_ComponentBoundEvent_104_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_ProfilingBtn_K2Node_ComponentBoundEvent_103_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_SettingsMenu_Options_Checkbox_ServersideChecksum_K2Node_ComponentBoundEvent_98_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_CopySupporterCode_K2Node_ComponentBoundEvent_79_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_SettingsMenu_AdvGraphics_Slider_MirrorScale_K2Node_ComponentBoundEvent_49_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__W_SettingsMenu_Options_Combo_InputAudioDevice_K2Node_ComponentBoundEvent_48_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__W_SettingsMenu_Audio_Slider_MicGainVolume_K2Node_ComponentBoundEvent_43_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__W_SettingsMenu_AdvGraphics_Slider_FSRQuality_K2Node_ComponentBoundEvent_44_OnDlssValueChanged__DelegateSignature(int32 NewIntegerValue, float NewSliderValue);
	void BndEvt__W_SettingsMenu_AdvGraphics_Check_FlashlightShadows_K2Node_ComponentBoundEvent_42_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_AdvGrahpics_Check_BounceLight_K2Node_ComponentBoundEvent_41_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_SimpleGraphics_ADSZoom_K2Node_ComponentBoundEvent_40_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_Options_Checkbox_ShowCommandContextHint_K2Node_ComponentBoundEvent_39_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_Options_Checkbox_ShowHealthIcons_1_K2Node_ComponentBoundEvent_38_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_SettingsMenu_Tab_AdvancedGraphicsOptions_K2Node_ComponentBoundEvent_36_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_SettingsMenu_Tab_SimpleGraphicsOptions_K2Node_ComponentBoundEvent_35_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__Options_Combo_ScoreReadoutMode_1_K2Node_ComponentBoundEvent_16_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Checkbox_ShowHesitationBar_K2Node_ComponentBoundEvent_15_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowIcons_K2Node_ComponentBoundEvent_31_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__btn_ControlsVehicle_K2Node_ComponentBoundEvent_107_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_ControlsEquipment_K2Node_ComponentBoundEvent_102_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_ControlsInteraction_K2Node_ComponentBoundEvent_101_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_ControlsMovement_K2Node_ComponentBoundEvent_100_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_ControlsTeamwork_K2Node_ComponentBoundEvent_99_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_ControlsMisc_K2Node_ComponentBoundEvent_96_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_Exit_K2Node_ComponentBoundEvent_92_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_Apply_K2Node_ComponentBoundEvent_37_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_Reset_K2Node_ComponentBoundEvent_30_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_ControlOptions_K2Node_ComponentBoundEvent_97_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_AudioOptions_K2Node_ComponentBoundEvent_95_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_GraphicsOptions_K2Node_ComponentBoundEvent_93_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__btn_GameOptions_K2Node_ComponentBoundEvent_91_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__Options_Combo_DefaultOpenDoorCommand_K2Node_ComponentBoundEvent_90_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Combo_DefaultTargetCommand_K2Node_ComponentBoundEvent_89_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Combo_LockedDoorcommand_K2Node_ComponentBoundEvent_88_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Combo_UnlockedDoorCommand_K2Node_ComponentBoundEvent_75_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Combo_DefaultUnknownDoorCommand_K2Node_ComponentBoundEvent_74_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Combo_DefaultSurfaceCommand_K2Node_ComponentBoundEvent_73_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Checkbox_ShowHotkeys_K2Node_ComponentBoundEvent_72_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowHealthIcons_K2Node_ComponentBoundEvent_71_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Combo_ScoreReadoutMode_K2Node_ComponentBoundEvent_54_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void OnCancelIllegalBindClicked(class UStandardModal* CallingModal);
	void InitialisePopUps();
	void Conflicting_Bind_Cancel_Clicked(class UStandardModal* CallingModal);
	void Conflicting_Bind_Ok_Clicked(class UW_StandardModal_C* CallingModal, class FText TextEntry);
	void DisplayNoKeysBoundWarning();
	void BndEvt__Options_Combo_LastMagReloadStyle_1_K2Node_ComponentBoundEvent_87_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Slider_TeamView_PIP_FPS_K2Node_ComponentBoundEvent_86_OnIntegralValueChanged__DelegateSignature(int32 NewIntegerValue, float NewSliderValue);
	void BndEvt__Options_Combo_FireModeStyle_K2Node_ComponentBoundEvent_85_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__AdvGraphics_Slider_DLSSQuality_K2Node_ComponentBoundEvent_84_OnDlssValueChanged__DelegateSignature(int32 NewIntegerValue, float NewSliderValue);
	void BndEvt__SimpleGraphics_Slider_SafeZone_Y_K2Node_ComponentBoundEvent_83_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__SimpleGraphics_Slider_SafeZone_X_K2Node_ComponentBoundEvent_82_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Options_Checkbox_CurvedHUD_K2Node_ComponentBoundEvent_81_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Combo_ItemSelectionStyle_K2Node_ComponentBoundEvent_80_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Audio_Checkbox_DisableHitmarker_K2Node_ComponentBoundEvent_77_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Check_MotionBlurEnable_K2Node_ComponentBoundEvent_76_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Combo_ShotgunReloadStyle_K2Node_ComponentBoundEvent_70_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Combo_GrenadeStyle_K2Node_ComponentBoundEvent_69_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Slider_QuickThrowScale_K2Node_ComponentBoundEvent_68_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Check_RaytracingTranslucency_K2Node_ComponentBoundEvent_67_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Check_RaytracingGlobalIllumination_K2Node_ComponentBoundEvent_66_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__FrameLimitEnabledCheckbox_K2Node_ComponentBoundEvent_65_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Check_RaytracingAmbientOcclusion_K2Node_ComponentBoundEvent_64_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Check_RaytracingReflections_K2Node_ComponentBoundEvent_63_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Check_RaytracingShadows_K2Node_ComponentBoundEvent_62_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Check_Raytracing_K2Node_ComponentBoundEvent_61_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__AdvGraphics_Slider_FrameLimiter_K2Node_ComponentBoundEvent_60_OnIntegralValueChanged__DelegateSignature(int32 NewIntegerValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Check_VSync_K2Node_ComponentBoundEvent_59_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void Destruct();
	void BndEvt__Options_Checkbox_Controls_K2Node_ComponentBoundEvent_58_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Slider_FreelookSensitivity_K2Node_ComponentBoundEvent_20_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__SimpleGraphics_Slider_ResolutionScale_K2Node_ComponentBoundEvent_57_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__W_MeshPaitingChoice_K2Node_ComponentBoundEvent_56_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__W_DepthOfFieldChoice_K2Node_ComponentBoundEvent_55_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void Conflicting_Bind_Detected(class UW_ControlsBind_C* CallingBind, TArray<struct FActionMappingStruct>& ActionMappings, TArray<struct FAxisMappingStruct>& AxisMappings, const struct FKey& Key, TArray<class FText>& ConflictBindsText);
	void BndEvt__Options_Combo_Language_K2Node_ComponentBoundEvent_53_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__Options_Slider_MouseSensitivity_K2Node_ComponentBoundEvent_52_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Options_Checkbox_InvertMouseYaw_K2Node_ComponentBoundEvent_51_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_InvertMousePitch_K2Node_ComponentBoundEvent_50_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void End_Buttons_Disabled_For_Binding();
	void On_Binding_Committed(class UW_ControlsBind_C* CallingWidget, const struct FKey& NewKey);
	void On_Binding_Canceled(class UW_ControlsBind_C* CallingWidget);
	void On_Binding_Started(class UW_ControlsBind_C* CallingWidget);
	void BndEvt__Options_Textbox_OfficerName_K2Node_ComponentBoundEvent_47_OnEditableTextBoxCommittedEvent__DelegateSignature(class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Tab_AdvancedGraphicOptions_K2Node_ComponentBoundEvent_46_OnClicked__DelegateSignature(class UW_StandardButton_C* CallingButton);
	void BndEvt__Tab_BasicGraphicOptions_K2Node_ComponentBoundEvent_45_OnClicked__DelegateSignature(class UW_StandardButton_C* CallingButton);
	void BndEvt__W_StandardCombobox_New_K2Node_ComponentBoundEvent_18_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void BndEvt__W_StandardCombobox_New_K2Node_ComponentBoundEvent_17_OnNewOptionSelected__DelegateSignature(int32 NewOption);
	void Apply_Video_Settings();
	void Exit_Menu();
	void BndEvt__VideoOptionsModal_K2Node_ComponentBoundEvent_34_OnApplyClicked__DelegateSignature(class UW_StandardModal_C* CallingModal, class FText TextEntry);
	void BndEvt__VideoOptionsModal_K2Node_ComponentBoundEvent_33_OnCancelClicked__DelegateSignature(class UStandardModal* CallingModal);
	void BndEvt__VideoOptionsModal_K2Node_ComponentBoundEvent_32_OnOkClicked__DelegateSignature(class UW_StandardModal_C* CallingModal, class FText TextEntry);
	void BndEvt__AdvGraphics_Slider_OptiwandScale_K2Node_ComponentBoundEvent_29_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_OptiwandFPS_K2Node_ComponentBoundEvent_28_OnIntegralValueChanged__DelegateSignature(int32 NewIntegerValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_ViewDistance_K2Node_ComponentBoundEvent_27_OnQualityValueChanged__DelegateSignature(int32 NewQualityValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_EffectsQuality_K2Node_ComponentBoundEvent_26_OnQualityValueChanged__DelegateSignature(int32 NewQualityValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_AAQuality_K2Node_ComponentBoundEvent_25_OnQualityValueChanged__DelegateSignature(int32 NewQualityValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_PPQuality_K2Node_ComponentBoundEvent_24_OnQualityValueChanged__DelegateSignature(int32 NewQualityValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_ShadowQuality_K2Node_ComponentBoundEvent_23_OnQualityValueChanged__DelegateSignature(int32 NewQualityValue, float NewSliderValue);
	void BndEvt__AdvGraphics_Slider_TextureQuality_K2Node_ComponentBoundEvent_22_OnQualityValueChanged__DelegateSignature(int32 NewQualityValue, float NewSliderValue);
	void BndEvt__SimpleGraphics_Slider_FieldOfView_K2Node_ComponentBoundEvent_21_OnIntegralValueChanged__DelegateSignature(int32 NewIntegerValue, float NewSliderValue);
	void BndEvt__SimpleGraphics_Slider_Resolution_K2Node_ComponentBoundEvent_19_OnResolutionValueChanged__DelegateSignature(const class FString& NewResolutionValue, float NewSliderValue);
	void BndEvt__Audio_Slider_VOIPVolume_K2Node_ComponentBoundEvent_14_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Audio_Slider_MusicVolume_K2Node_ComponentBoundEvent_13_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Audio_Slider_UIVolume_K2Node_ComponentBoundEvent_12_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Audio_Slider_SFXVolume_K2Node_ComponentBoundEvent_11_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Audio_Slider_MasterVolume_K2Node_ComponentBoundEvent_10_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void BndEvt__Options_Checkbox_ShowCompass_K2Node_ComponentBoundEvent_9_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_StaticReload_K2Node_ComponentBoundEvent_8_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowHints_K2Node_ComponentBoundEvent_7_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowNames_K2Node_ComponentBoundEvent_5_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowChat_K2Node_ComponentBoundEvent_4_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_SwayHUD_K2Node_ComponentBoundEvent_3_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowHUD_K2Node_ComponentBoundEvent_2_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Checkbox_ShowFPS_K2Node_ComponentBoundEvent_1_OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void BndEvt__Options_Slider_IconScale_K2Node_ComponentBoundEvent_0_OnFloatValueChanged__DelegateSignature(float NewFloatValue, float NewSliderValue);
	void AddControlsToGridPanel(TArray<struct FSKeybinding>& Bindings, class UGridPanel* Grid_Panel);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ConstructControls();
	void PopulateVideoOptions(bool bIsDesignTime, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable_1, const class FString& Temp_string_Variable_2, float CallFunc_GetMotionBlurStrength_Strength, bool CallFunc_GetMotionBlurStrength_ReturnValue, bool CallFunc_GetMotionBlurEnabled_bEnabled, bool CallFunc_GetMotionBlurEnabled_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_GetMotionBlurStrength_Strength_1, bool CallFunc_GetMotionBlurStrength_ReturnValue_1, bool CallFunc_GetMotionBlurEnabled_bEnabled_1, bool CallFunc_GetMotionBlurEnabled_ReturnValue_1, ENVGStyle CallFunc_LoadNVGStyle_NVGStyle, bool CallFunc_LoadNVGStyle_ReturnValue, uint8 CallFunc_GetReflexEnabled_ReflexMode, bool CallFunc_GetReflexEnabled_bFlashIndicatorEnabled, bool CallFunc_GetReflexEnabled_ReturnValue, bool CallFunc_LoadMirrorEnabledOnlyInLobby_bEnabled, bool CallFunc_LoadMirrorEnabledOnlyInLobby_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_GetReflexLatencyOptions_bGameToRenderLatencyEnabled, bool CallFunc_GetReflexLatencyOptions_bGameLatencyEnabled, bool CallFunc_GetReflexLatencyOptions_bRenderLatencyEnabled, bool CallFunc_GetReflexLatencyOptions_ReturnValue, bool CallFunc_GetWorldDecalsEnabled_bEnabled, float CallFunc_GetWorldDecalsEnabled_FadeDistance, float CallFunc_GetWorldDecalsEnabled_Density, bool CallFunc_GetWorldDecalsEnabled_ReturnValue, float CallFunc_SetFloatValue_NewValue, bool CallFunc_LoadTeamViewFPSSetting_bEnabled, int32 CallFunc_LoadTeamViewFPSSetting_TeamViewFPS, bool CallFunc_LoadTeamViewFPSSetting_ReturnValue, float CallFunc_SetFloatValue_NewValue_1, bool CallFunc_LoadPiPFPS_bEnabled, float CallFunc_LoadPiPFPS_FPS, bool CallFunc_LoadPiPFPS_ReturnValue, bool CallFunc_LoadMirrorReflectionEnabled_bEnabled, bool CallFunc_LoadMirrorReflectionEnabled_ReturnValue, int32 CallFunc_GetFSRQuality_Quality, bool CallFunc_GetFSRQuality_ReturnValue, const class FString& K2Node_Select_Default, const class FString& K2Node_Select_Default_1, bool CallFunc_GetFlashlightShadows_bFlashLightShadows, bool CallFunc_GetFlashlightShadows_ReturnValue, bool CallFunc_GetBounceLightEnabled_bBounceLightEnabled, bool CallFunc_GetBounceLightEnabled_ReturnValue, bool CallFunc_LoadZoomADSSetting_bZoomADS, bool CallFunc_LoadZoomADSSetting_ReturnValue, int32 CallFunc_GetDlssQuality_Quality, bool CallFunc_GetDlssQuality_ReturnValue, float CallFunc_LoadSafeZoneSettings_SafeZoneX, float CallFunc_LoadSafeZoneSettings_SafeZoneY, bool CallFunc_LoadSafeZoneSettings_ReturnValue, float CallFunc_SetFloatValue_NewValue_2, float CallFunc_SetFloatValue_NewValue_3, float CallFunc_LoadSafeZoneSettings_SafeZoneX_1, float CallFunc_LoadSafeZoneSettings_SafeZoneY_1, bool CallFunc_LoadSafeZoneSettings_ReturnValue_1, float CallFunc_SetFloatValue_NewValue_4, int32 CallFunc_SetIntegralValue_NewValue, bool CallFunc_GetRaytracingSettings_bRTXEnabled, bool CallFunc_GetRaytracingSettings_bRTXReflectionsEnabled, bool CallFunc_GetRaytracingSettings_bRTXShadowsEnabled, bool CallFunc_GetRaytracingSettings_bRTXAmbientOcclusionEnabled, bool CallFunc_GetRaytracingSettings_bRTXGlobalIllumination, bool CallFunc_GetRaytracingSettings_bRTXTranslucency, bool CallFunc_GetRaytracingSettings_ReturnValue, int32 CallFunc_GetFrameRateLimit_FrameRateLimit, bool CallFunc_GetFrameRateLimit_bEnabled, bool CallFunc_GetFrameRateLimit_ReturnValue, int32 CallFunc_SetIntegralValue_NewValue_1, bool CallFunc_GetVSyncEnabled_bEnabled, bool CallFunc_GetVSyncEnabled_ReturnValue, bool CallFunc_GetUseMeshpainting_bUseMeshPainting, bool CallFunc_GetUseMeshpainting_ReturnValue, bool CallFunc_GetDepthOfFieldSetting_bDoFEnabled, bool CallFunc_GetDepthOfFieldSetting_ReturnValue, EWindowMode CallFunc_GetCurrentScreenMode_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, float CallFunc_LoadPiPResolutionScale_ResolutionScale, bool CallFunc_LoadPiPResolutionScale_ReturnValue, bool CallFunc_LoadPiPFPS_bEnabled_1, float CallFunc_LoadPiPFPS_FPS_1, bool CallFunc_LoadPiPFPS_ReturnValue_1, int32 Temp_int_Variable, int32 CallFunc_FTrunc_ReturnValue, int32 Temp_int_Variable_1, ENVGStyle Temp_byte_Variable, int32 CallFunc_GetVideoQualitySettings_AntiAliasing, int32 CallFunc_GetVideoQualitySettings_Effects, int32 CallFunc_GetVideoQualitySettings_PostProcess, float CallFunc_GetVideoQualitySettings_ResolutionScaling, int32 CallFunc_GetVideoQualitySettings_Shadow, int32 CallFunc_GetVideoQualitySettings_Texture, int32 CallFunc_GetVideoQualitySettings_ViewDistance, bool CallFunc_GetVideoQualitySettings_ReturnValue, int32 K2Node_Select_Default_2, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue_1, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, uint8 CallFunc_GetValidValue_ReturnValue_2, uint8 CallFunc_Conv_IntToByte_ReturnValue_2, uint8 CallFunc_GetValidValue_ReturnValue_3, uint8 CallFunc_Conv_IntToByte_ReturnValue_3, uint8 CallFunc_GetValidValue_ReturnValue_4, uint8 CallFunc_Conv_IntToByte_ReturnValue_4, uint8 CallFunc_GetValidValue_ReturnValue_5, uint8 CallFunc_Conv_IntToByte_ReturnValue_5, uint8 CallFunc_GetValidValue_ReturnValue_6, float CallFunc_GetFoV_FOV, bool CallFunc_GetFoV_ReturnValue, const class FString& CallFunc_GetCurrentScreenResolution_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, int32 CallFunc_SetIntegralValue_NewValue_2, bool CallFunc_LoadPiPFPS_bEnabled_2, float CallFunc_LoadPiPFPS_FPS_2, bool CallFunc_LoadPiPFPS_ReturnValue_2, float CallFunc_LoadPiPResolutionScale_ResolutionScale_1, bool CallFunc_LoadPiPResolutionScale_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue_2, float CallFunc_SetFloatValue_NewValue_5, int32 CallFunc_SetIntegralValue_NewValue_3, int32 CallFunc_GetVideoQualitySettings_AntiAliasing_1, int32 CallFunc_GetVideoQualitySettings_Effects_1, int32 CallFunc_GetVideoQualitySettings_PostProcess_1, float CallFunc_GetVideoQualitySettings_ResolutionScaling_1, int32 CallFunc_GetVideoQualitySettings_Shadow_1, int32 CallFunc_GetVideoQualitySettings_Texture_1, int32 CallFunc_GetVideoQualitySettings_ViewDistance_1, bool CallFunc_GetVideoQualitySettings_ReturnValue_1, float CallFunc_SetFloatValue_NewValue_6);
	void PopulateAudioOptions(bool bIsDesignTime, EVoiceType Temp_byte_Variable, bool CallFunc_Not_PreBool_ReturnValue, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, EVoiceType CallFunc_GetVoiceType_OutVoiceType, bool CallFunc_GetVoiceType_ReturnValue, const class FString& CallFunc_LoadSelectedAudioDevice_OutAudioDevice, bool CallFunc_LoadSelectedAudioDevice_ReturnValue, const class FString& K2Node_Select_Default, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue, float CallFunc_GetMicInputGain_MicInputGain, bool CallFunc_GetMicInputGain_ReturnValue, TArray<class FString>& CallFunc_GetAvailableAudioDevices_OutAudioDevices, bool CallFunc_GetAvailableAudioDevices_ReturnValue, float CallFunc_SetFloatValue_NewValue, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_GetVolumes_MasterVolume, float CallFunc_GetVolumes_UIVolume, float CallFunc_GetVolumes_SFXVolume, float CallFunc_GetVolumes_MusicVolume, float CallFunc_GetVolumes_VOIPVolume, bool CallFunc_GetVolumes_ReturnValue, float CallFunc_SetFloatValue_NewValue_1, float CallFunc_SetFloatValue_NewValue_2, float CallFunc_SetFloatValue_NewValue_3, float CallFunc_SetFloatValue_NewValue_4, float CallFunc_SetFloatValue_NewValue_5);
	void PopulateGameOptions(bool bIsDesignTime, EOptiwandViewMode Temp_byte_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Variable_1, EScoreReadoutMode Temp_byte_Variable_1, int32 Temp_int_Variable_2, int32 Temp_int_Variable_3, int32 Temp_int_Variable_4, int32 Temp_int_Variable_5, EEmptyMagReloadType Temp_byte_Variable_2, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, EItemSelectionInterfaceType Temp_byte_Variable_3, const class FString& Temp_string_Variable_2, const class FString& Temp_string_Variable_3, EShotgunReloadType Temp_byte_Variable_4, const class FString& Temp_string_Variable_4, const class FString& Temp_string_Variable_5, EGrenadeThrowSettingType Temp_byte_Variable_5, const class FString& Temp_string_Variable_6, const class FString& Temp_string_Variable_7, bool CallFunc_GetSendMapStatistics_bSendMapStatistics, bool CallFunc_GetSendMapStatistics_ReturnValue, class UModioManager* CallFunc_GetInstance_ReturnValue, bool CallFunc_LoadServersideChecksum_bServerSideChecksumEnabled, bool CallFunc_LoadServersideChecksum_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_LoadShowCommandContextHintSetting_bShowCommandContextHint, bool CallFunc_LoadShowCommandContextHintSetting_ReturnValue, bool CallFunc_LoadShowTeamStatus_bShowTeamStatus, bool CallFunc_LoadShowTeamStatus_ReturnValue, EOptiwandViewMode CallFunc_LoadOptiwandViewMode_OptiwandViewMode, bool CallFunc_LoadOptiwandViewMode_ReturnValue, bool CallFunc_LoadShowHesitationBarSetting_bShowHesitationBar, bool CallFunc_LoadShowHesitationBarSetting_ReturnValue, int32 K2Node_Select_Default, bool CallFunc_LoadShowPlayerIconSetting_bShowPlayerIcon, bool CallFunc_LoadShowPlayerIconSetting_ReturnValue, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnknownCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorOpenCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorLockedCommandOption, int32 CallFunc_LoadDefaultCommandsAsOption_DefaultDoorUnlockedCommandOption, bool CallFunc_LoadDefaultCommandsAsOption_ReturnValue, bool CallFunc_LoadHotkeyHintSetting_bShowHotkeyHint, bool CallFunc_LoadHotkeyHintSetting_ReturnValue, bool CallFunc_LoadShowHealthIconSetting_bShowHealthIcons, bool CallFunc_LoadShowHealthIconSetting_ReturnValue, EScoreReadoutMode CallFunc_LoadScoreReadoutSetting_OutScoreReadoutMode, bool CallFunc_LoadScoreReadoutSetting_ReturnValue, EEmptyMagReloadType CallFunc_LoadEmptyMagReloadSettings_EmptyMagReloadType, bool CallFunc_LoadEmptyMagReloadSettings_ReturnValue, int32 K2Node_Select_Default_1, const class FString& K2Node_Select_Default_2, bool CallFunc_LoadTeamViewFPSSetting_bEnabled, int32 CallFunc_LoadTeamViewFPSSetting_TeamViewFPS, bool CallFunc_LoadTeamViewFPSSetting_ReturnValue, EItemSelectionInterfaceType CallFunc_LoadItemSelectionStyleSettings_ItemSelectionInterface, bool CallFunc_LoadItemSelectionStyleSettings_ReturnValue, int32 CallFunc_SetIntegralValue_NewValue, const class FString& K2Node_Select_Default_3, EShotgunReloadType CallFunc_LoadShotgunSettings_ShotgunReloadType, bool CallFunc_LoadShotgunSettings_ReturnValue, EGrenadeThrowSettingType CallFunc_LoadGrenadeSettings_GrenadeThrowType, bool CallFunc_LoadGrenadeSettings_ReturnValue, const class FString& K2Node_Select_Default_4, const class FString& K2Node_Select_Default_5, float CallFunc_GetFreelookSensitivity_Sensitivity, bool CallFunc_GetFreelookSensitivity_ReturnValue, const class FString& CallFunc_GetCurrentCulture_ReturnValue, float CallFunc_SetFloatValue_NewValue, bool CallFunc_GetMouseInverted_bInvertVertical, bool CallFunc_GetMouseInverted_bInvertHorizontal, bool CallFunc_GetMouseInverted_ReturnValue, float CallFunc_GetMouseSensitivity_MouseSensitvity, bool CallFunc_GetMouseSensitivity_ReturnValue, float CallFunc_SetFloatValue_NewValue_1, bool CallFunc_GetShowFPS_bShowFPS, bool CallFunc_GetShowFPS_ReturnValue, bool CallFunc_LoadHUDSettings_bShowHud, bool CallFunc_LoadHUDSettings_bCurvedHUD, bool CallFunc_LoadHUDSettings_bShowCompass, bool CallFunc_LoadHUDSettings_bShowWeaponHUD, bool CallFunc_LoadHUDSettings_bShowMagazineHUD, bool CallFunc_LoadHUDSettings_bShowChat, bool CallFunc_LoadHUDSettings_bSwayHUD, bool CallFunc_LoadHUDSettings_b2DReload, float CallFunc_LoadHUDSettings_IconScale, float CallFunc_LoadHUDSettings_QuickThrowScale, int32 CallFunc_LoadHUDSettings_FireModeDisplayOption, bool CallFunc_LoadHUDSettings_bShowPlayerNames, bool CallFunc_LoadHUDSettings_bShowButtonPrompts, bool CallFunc_LoadHUDSettings_ReturnValue);
	void StageGraphicsPreset(const struct FSGraphicPreset& Preset, float CallFunc_GetMotionBlurStrength_Strength, bool CallFunc_GetMotionBlurStrength_ReturnValue, bool CallFunc_GetMotionBlurEnabled_bEnabled, bool CallFunc_GetMotionBlurEnabled_ReturnValue, int32 CallFunc_GetFrameRateLimit_FrameRateLimit, bool CallFunc_GetFrameRateLimit_bEnabled, bool CallFunc_GetFrameRateLimit_ReturnValue, bool CallFunc_GetVSyncEnabled_bEnabled, bool CallFunc_GetVSyncEnabled_ReturnValue);
	void InitGraphicsPreset(const struct FSGraphicPreset& CurrentPresetCandidate, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, float CallFunc_LoadPiPResolutionScale_ResolutionScale, bool CallFunc_LoadPiPResolutionScale_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_LoadPiPFPS_bEnabled, float CallFunc_LoadPiPFPS_FPS, bool CallFunc_LoadPiPFPS_ReturnValue, bool CallFunc_GetRaytracingSettings_bRTXEnabled, bool CallFunc_GetRaytracingSettings_bRTXReflectionsEnabled, bool CallFunc_GetRaytracingSettings_bRTXShadowsEnabled, bool CallFunc_GetRaytracingSettings_bRTXAmbientOcclusionEnabled, bool CallFunc_GetRaytracingSettings_bRTXGlobalIllumination, bool CallFunc_GetRaytracingSettings_bRTXTranslucency, bool CallFunc_GetRaytracingSettings_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_GetFrameRateLimit_FrameRateLimit, bool CallFunc_GetFrameRateLimit_bEnabled, bool CallFunc_GetFrameRateLimit_ReturnValue, bool CallFunc_GetVSyncEnabled_bEnabled, bool CallFunc_GetVSyncEnabled_ReturnValue, bool CallFunc_GetUseMeshpainting_bUseMeshPainting, bool CallFunc_GetUseMeshpainting_ReturnValue, bool CallFunc_GetDepthOfFieldSetting_bDoFEnabled, bool CallFunc_GetDepthOfFieldSetting_ReturnValue, int32 CallFunc_GetVideoQualitySettings_AntiAliasing, int32 CallFunc_GetVideoQualitySettings_Effects, int32 CallFunc_GetVideoQualitySettings_PostProcess, float CallFunc_GetVideoQualitySettings_ResolutionScaling, int32 CallFunc_GetVideoQualitySettings_Shadow, int32 CallFunc_GetVideoQualitySettings_Texture, int32 CallFunc_GetVideoQualitySettings_ViewDistance, bool CallFunc_GetVideoQualitySettings_ReturnValue, const struct FSGraphicPreset& CallFunc_Array_Get_Item, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue_4, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, uint8 CallFunc_Conv_IntToByte_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, uint8 CallFunc_GetValidValue_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_4, uint8 CallFunc_Conv_IntToByte_ReturnValue_3, uint8 CallFunc_Conv_IntToByte_ReturnValue_4, uint8 CallFunc_GetValidValue_ReturnValue_3, uint8 CallFunc_GetValidValue_ReturnValue_4, uint8 CallFunc_Conv_IntToByte_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue_5, bool CallFunc_Less_IntInt_ReturnValue, const struct FSGraphicPreset& K2Node_MakeStruct_SGraphicPreset);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FEventReply& CallFunc_HandleMouseButtonDown_Reply, bool CallFunc_IsValid_ReturnValue);
	void GetConflictingKeybindText(const struct FKey& Key, TArray<struct FActionMappingStruct>& ConflictingActions, TArray<struct FAxisMappingStruct>& ConflictingAxes, TArray<class FText>& ConflictBindNames, class FText* Text, class FText CallFunc_GetConflictingKeybindListText_Text, const class FString& CallFunc_Abbreviate_Key_Abreviated_Name, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void GetConflictingKeybindListText(TArray<struct FAxisMappingStruct>& Axes, TArray<struct FActionMappingStruct>& Actions, TArray<class FText>& ConflictBinds, class FText* Text, class FText LocalizedActionChain, class FText Inputs_2LocalizedComma, class FText Inputs_2LocalizedAnd, const TArray<class FText>& LocalizedActions, class FText CallFunc_Array_Get_Item, class FText CallFunc_Array_Get_Item_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue, class FText CallFunc_Format_ReturnValue, int32 Temp_int_Array_Index_Variable, class FText CallFunc_Array_Get_Item_2, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, bool CallFunc_EqualEqual_IntInt_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_5, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, class FText CallFunc_Format_ReturnValue_1, class FText CallFunc_Format_ReturnValue_2);
	void AddAllKeybindsInList(TArray<struct FSKeybinding>& Keybinds, class FName MatchingName, TArray<class FText>& KeyList, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FSKeybinding& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	ESlateVisibility IsRaytracingSupportedVisibility();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, bool CallFunc_SaveSettings_ReturnValue, bool CallFunc_JoyIsKey_Ctrl, bool CallFunc_JoyIsKey_Shift, bool CallFunc_JoyIsKey_Alt, bool CallFunc_JoyIsKey_Cmd, bool CallFunc_JoyIsKey_Match, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotPlayerController* K2Node_DynamicCast_AsReady_or_Not_Player_Controller, bool K2Node_DynamicCast_bSuccess);
	void Setup_Category_Controls_();
	void AddToControlBindsLists(class UW_ControlsBind_C* ControlBInd, const struct FAxisMappingStruct& InputAxis, const struct FActionMappingStruct& InputAction, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1);
	void ClearControlBindsLists();
	void Initialise_Or_Get_Pop_Up(class UClass* PopUpType, const struct FSStandardModalDetails& StandardModalDetails, class UW_StandardModal_C** OutputPopUp, class UClass* PopupClass, class UW_StandardModal_C* TempPopUp, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UW_StandardModal_C* CallFunc_Create_ReturnValue, TArray<class UW_StandardModal_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UW_StandardModal_C* CallFunc_Array_Get_Item);
	void SwitchTab(class UW_Button_C* Button, class UWidget* MenuWidget, class FText Tab_Name, bool bShowResetButton, class UW_Button_C* ActiveButton, bool CallFunc_IsValid_ReturnValue, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, ESlateVisibility K2Node_Select_Default);
	void SwitchControlsTab(class UW_Button_C* Button, class UWidget* MenuWidget, class UW_Button_C* ActiveButton, bool CallFunc_IsValid_ReturnValue);
	void SetDefaultControlsTab();
	bool Get_Apply_Button_Enabled();
	void Try_Assign_Unbindable_Control(const struct FSKeybinding& KeyBinding, bool* bSuccess, bool CannotBeUnbindable, int32 CallFunc_Array_AddUnique_ReturnValue);
	bool Get_SimpleGraphics_Slider_Resolution_bIsEnabled_0(bool CallFunc_NotEqual_IntInt_ReturnValue);
	struct FLinearColor Get_SimpleGraphics_Slider_FieldOfView_ColorAndOpacity_0(bool CallFunc_Greater_IntInt_ReturnValue);
	ESlateVisibility Get_FOVWarning_Visibility(bool CallFunc_Greater_IntInt_ReturnValue);
	ESlateVisibility IsFSREnabledVisibility(bool CallFunc_IsFSREnabled_ReturnValue);
	ESlateVisibility Get_SupporterSubCategory_Visibility_0(bool CallFunc_IsGameVersionEnabled_ReturnValue);
	class FText GetSupporterCode(class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue, const class FString& CallFunc_GetDiscordOneTimeUseCode_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SettingsMenu_C">();
	}
	static class UW_SettingsMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SettingsMenu_C>();
	}
};
static_assert(alignof(UW_SettingsMenu_C) == 0x000008, "Wrong alignment on UW_SettingsMenu_C");
static_assert(sizeof(UW_SettingsMenu_C) == 0x000D10, "Wrong size on UW_SettingsMenu_C");
static_assert(offsetof(UW_SettingsMenu_C, UberGraphFrame) == 0x000320, "Member 'UW_SettingsMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvancedGraphicsHeader) == 0x000328, "Member 'UW_SettingsMenu_C::AdvancedGraphicsHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvancedGraphicsSettings) == 0x000330, "Member 'UW_SettingsMenu_C::AdvancedGraphicsSettings' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvanceMirrorOptionsHeader_1) == 0x000338, "Member 'UW_SettingsMenu_C::AdvanceMirrorOptionsHeader_1' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvanceOptiwandOptionsHeader) == 0x000340, "Member 'UW_SettingsMenu_C::AdvanceOptiwandOptionsHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGrahpics_Check_BounceLight) == 0x000348, "Member 'UW_SettingsMenu_C::AdvGrahpics_Check_BounceLight' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_DepthOfField) == 0x000350, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_DepthOfField' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_FlashlightShadows) == 0x000358, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_FlashlightShadows' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_FrameLimit) == 0x000360, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_FrameLimit' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_MeshPainting) == 0x000368, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_MeshPainting' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_MotionBlurEnable) == 0x000370, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_MotionBlurEnable' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_OptiwandFPSEnabled) == 0x000378, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_OptiwandFPSEnabled' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_Raytracing) == 0x000380, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_Raytracing' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_RaytracingAmbientOcclusion) == 0x000388, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_RaytracingAmbientOcclusion' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_RaytracingGlobalIllumination) == 0x000390, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_RaytracingGlobalIllumination' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_RaytracingReflections) == 0x000398, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_RaytracingReflections' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_RaytracingShadows) == 0x0003A0, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_RaytracingShadows' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_RaytracingTranslucency) == 0x0003A8, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_RaytracingTranslucency' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Check_VSync) == 0x0003B0, "Member 'UW_SettingsMenu_C::AdvGraphics_Check_VSync' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Checkbox_DecalsEnabled) == 0x0003B8, "Member 'UW_SettingsMenu_C::AdvGraphics_Checkbox_DecalsEnabled' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_AAQuality) == 0x0003C0, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_AAQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_DecalDensity) == 0x0003C8, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_DecalDensity' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_DecalFadeScreenSize) == 0x0003D0, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_DecalFadeScreenSize' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_DLSSQuality) == 0x0003D8, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_DLSSQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_EffectsQuality) == 0x0003E0, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_EffectsQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_FrameLimiter) == 0x0003E8, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_FrameLimiter' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_FSRQuality) == 0x0003F0, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_FSRQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_MirrorFPS_1) == 0x0003F8, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_MirrorFPS_1' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_MotionBlurScale) == 0x000400, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_MotionBlurScale' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_OptiwandFPS) == 0x000408, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_OptiwandFPS' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_OptiwandScale) == 0x000410, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_OptiwandScale' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_PPQuality) == 0x000418, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_PPQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_ShadowQuality) == 0x000420, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_ShadowQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_TextureQuality) == 0x000428, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_TextureQuality' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AdvGraphics_Slider_ViewDistance) == 0x000430, "Member 'UW_SettingsMenu_C::AdvGraphics_Slider_ViewDistance' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Analytics) == 0x000438, "Member 'UW_SettingsMenu_C::Analytics' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AnalyticsHeader) == 0x000440, "Member 'UW_SettingsMenu_C::AnalyticsHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ApplySettingsButton) == 0x000448, "Member 'UW_SettingsMenu_C::ApplySettingsButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Audio_Slider_MasterVolume) == 0x000450, "Member 'UW_SettingsMenu_C::Audio_Slider_MasterVolume' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Audio_Slider_MicGainVolume) == 0x000458, "Member 'UW_SettingsMenu_C::Audio_Slider_MicGainVolume' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Audio_Slider_MusicVolume) == 0x000460, "Member 'UW_SettingsMenu_C::Audio_Slider_MusicVolume' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Audio_Slider_SFXVolume) == 0x000468, "Member 'UW_SettingsMenu_C::Audio_Slider_SFXVolume' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Audio_Slider_UIVolume) == 0x000470, "Member 'UW_SettingsMenu_C::Audio_Slider_UIVolume' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Audio_Slider_VOIPVolume) == 0x000478, "Member 'UW_SettingsMenu_C::Audio_Slider_VOIPVolume' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AudioHeader) == 0x000480, "Member 'UW_SettingsMenu_C::AudioHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AudioMenu) == 0x000488, "Member 'UW_SettingsMenu_C::AudioMenu' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AudioOptionsButton) == 0x000490, "Member 'UW_SettingsMenu_C::AudioOptionsButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, BasicGraphicsHeader) == 0x000498, "Member 'UW_SettingsMenu_C::BasicGraphicsHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Blackout) == 0x0004A0, "Member 'UW_SettingsMenu_C::Blackout' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_Apply) == 0x0004A8, "Member 'UW_SettingsMenu_C::btn_Apply' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_AudioOptions) == 0x0004B0, "Member 'UW_SettingsMenu_C::btn_AudioOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlOptions) == 0x0004B8, "Member 'UW_SettingsMenu_C::btn_ControlOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsEquipment) == 0x0004C0, "Member 'UW_SettingsMenu_C::btn_ControlsEquipment' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsInteraction) == 0x0004C8, "Member 'UW_SettingsMenu_C::btn_ControlsInteraction' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsMisc) == 0x0004D0, "Member 'UW_SettingsMenu_C::btn_ControlsMisc' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsMovement) == 0x0004D8, "Member 'UW_SettingsMenu_C::btn_ControlsMovement' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsReplay) == 0x0004E0, "Member 'UW_SettingsMenu_C::btn_ControlsReplay' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsTeamwork) == 0x0004E8, "Member 'UW_SettingsMenu_C::btn_ControlsTeamwork' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_ControlsVehicle) == 0x0004F0, "Member 'UW_SettingsMenu_C::btn_ControlsVehicle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_Exit) == 0x0004F8, "Member 'UW_SettingsMenu_C::btn_Exit' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_GameOptions) == 0x000500, "Member 'UW_SettingsMenu_C::btn_GameOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_GraphicsOptions) == 0x000508, "Member 'UW_SettingsMenu_C::btn_GraphicsOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, btn_Reset) == 0x000510, "Member 'UW_SettingsMenu_C::btn_Reset' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ClearModioUserData) == 0x000518, "Member 'UW_SettingsMenu_C::ClearModioUserData' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, CommandHeader) == 0x000520, "Member 'UW_SettingsMenu_C::CommandHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ControlOptionsButton) == 0x000528, "Member 'UW_SettingsMenu_C::ControlOptionsButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Equipment) == 0x000530, "Member 'UW_SettingsMenu_C::Controls_Equipment' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Equipment_Widget) == 0x000538, "Member 'UW_SettingsMenu_C::Controls_Equipment_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Interaction) == 0x000540, "Member 'UW_SettingsMenu_C::Controls_Interaction' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Interaction_Widget) == 0x000548, "Member 'UW_SettingsMenu_C::Controls_Interaction_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Misc) == 0x000550, "Member 'UW_SettingsMenu_C::Controls_Misc' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Miscellaneous_Widget) == 0x000558, "Member 'UW_SettingsMenu_C::Controls_Miscellaneous_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Movement) == 0x000560, "Member 'UW_SettingsMenu_C::Controls_Movement' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Movement_Widget) == 0x000568, "Member 'UW_SettingsMenu_C::Controls_Movement_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Movement_Widget_1) == 0x000570, "Member 'UW_SettingsMenu_C::Controls_Movement_Widget_1' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Replay_Widget) == 0x000578, "Member 'UW_SettingsMenu_C::Controls_Replay_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Teamwork) == 0x000580, "Member 'UW_SettingsMenu_C::Controls_Teamwork' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Teamwork_Widget) == 0x000588, "Member 'UW_SettingsMenu_C::Controls_Teamwork_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Vehicle_Widget) == 0x000590, "Member 'UW_SettingsMenu_C::Controls_Vehicle_Widget' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Controls_Vehicles) == 0x000598, "Member 'UW_SettingsMenu_C::Controls_Vehicles' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ControlsMenu) == 0x0005A0, "Member 'UW_SettingsMenu_C::ControlsMenu' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ControlsWidgetSwitcher) == 0x0005A8, "Member 'UW_SettingsMenu_C::ControlsWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, CopySupporterCode) == 0x0005B0, "Member 'UW_SettingsMenu_C::CopySupporterCode' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, DescriptionText) == 0x0005B8, "Member 'UW_SettingsMenu_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, DLSS_Header) == 0x0005C0, "Member 'UW_SettingsMenu_C::DLSS_Header' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, DLSSQualityLabel) == 0x0005C8, "Member 'UW_SettingsMenu_C::DLSSQualityLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ExitSettingsMenu) == 0x0005D0, "Member 'UW_SettingsMenu_C::ExitSettingsMenu' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, FSR_Header) == 0x0005D8, "Member 'UW_SettingsMenu_C::FSR_Header' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, FSRQualityLabel) == 0x0005E0, "Member 'UW_SettingsMenu_C::FSRQualityLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, GameMenu) == 0x0005E8, "Member 'UW_SettingsMenu_C::GameMenu' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, GameOptionsButton) == 0x0005F0, "Member 'UW_SettingsMenu_C::GameOptionsButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, GraphicOptionsButton) == 0x0005F8, "Member 'UW_SettingsMenu_C::GraphicOptionsButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, GraphicOptionsSwitcher) == 0x000600, "Member 'UW_SettingsMenu_C::GraphicOptionsSwitcher' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, GraphicsMenu) == 0x000608, "Member 'UW_SettingsMenu_C::GraphicsMenu' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, HighFOVWarning) == 0x000610, "Member 'UW_SettingsMenu_C::HighFOVWarning' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, HudHeader) == 0x000618, "Member 'UW_SettingsMenu_C::HudHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, KeybindDescriptionText) == 0x000620, "Member 'UW_SettingsMenu_C::KeybindDescriptionText' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, LanguageHeader) == 0x000628, "Member 'UW_SettingsMenu_C::LanguageHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, MainNavigation) == 0x000630, "Member 'UW_SettingsMenu_C::MainNavigation' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, MiscHeader) == 0x000638, "Member 'UW_SettingsMenu_C::MiscHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ModioHeader) == 0x000640, "Member 'UW_SettingsMenu_C::ModioHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ModioSubCategory) == 0x000648, "Member 'UW_SettingsMenu_C::ModioSubCategory' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, MouseHeader) == 0x000650, "Member 'UW_SettingsMenu_C::MouseHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_InvertMousePitch) == 0x000658, "Member 'UW_SettingsMenu_C::Options_Checkbox_InvertMousePitch' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_InvertMouseYaw) == 0x000660, "Member 'UW_SettingsMenu_C::Options_Checkbox_InvertMouseYaw' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_MapAnalytics) == 0x000668, "Member 'UW_SettingsMenu_C::Options_Checkbox_MapAnalytics' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ServersideChecksum) == 0x000670, "Member 'UW_SettingsMenu_C::Options_Checkbox_ServersideChecksum' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowChat) == 0x000678, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowChat' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowCommandContextHint) == 0x000680, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowCommandContextHint' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowCommandMarkers) == 0x000688, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowCommandMarkers' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowCompass) == 0x000690, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowCompass' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowFPS) == 0x000698, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowFPS' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowHealthIcons) == 0x0006A0, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowHealthIcons' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowHesitationBar) == 0x0006A8, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowHesitationBar' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowHotkeys) == 0x0006B0, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowHotkeys' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowHUD) == 0x0006B8, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowHUD' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowIcons) == 0x0006C0, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowIcons' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowNames) == 0x0006C8, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowNames' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowPatches) == 0x0006D0, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowPatches' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_ShowTeamStatus) == 0x0006D8, "Member 'UW_SettingsMenu_C::Options_Checkbox_ShowTeamStatus' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_StaticReload) == 0x0006E0, "Member 'UW_SettingsMenu_C::Options_Checkbox_StaticReload' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_SwayHUD) == 0x0006E8, "Member 'UW_SettingsMenu_C::Options_Checkbox_SwayHUD' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Checkbox_TeamViewFPS) == 0x0006F0, "Member 'UW_SettingsMenu_C::Options_Checkbox_TeamViewFPS' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_CommandStyle) == 0x0006F8, "Member 'UW_SettingsMenu_C::Options_Combo_CommandStyle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_DefaultOpenDoorCommand) == 0x000700, "Member 'UW_SettingsMenu_C::Options_Combo_DefaultOpenDoorCommand' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_DefaultSurfaceCommand) == 0x000708, "Member 'UW_SettingsMenu_C::Options_Combo_DefaultSurfaceCommand' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_DefaultTargetCommand) == 0x000710, "Member 'UW_SettingsMenu_C::Options_Combo_DefaultTargetCommand' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_DefaultUnknownDoorCommand) == 0x000718, "Member 'UW_SettingsMenu_C::Options_Combo_DefaultUnknownDoorCommand' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_DefaultVoipChannel) == 0x000720, "Member 'UW_SettingsMenu_C::Options_Combo_DefaultVoipChannel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_EmptyMagReloadStyle) == 0x000728, "Member 'UW_SettingsMenu_C::Options_Combo_EmptyMagReloadStyle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_GrenadeStyle) == 0x000730, "Member 'UW_SettingsMenu_C::Options_Combo_GrenadeStyle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_InputAudioDevice) == 0x000738, "Member 'UW_SettingsMenu_C::Options_Combo_InputAudioDevice' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_ItemSelectionStyle) == 0x000740, "Member 'UW_SettingsMenu_C::Options_Combo_ItemSelectionStyle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_Language) == 0x000748, "Member 'UW_SettingsMenu_C::Options_Combo_Language' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_LockedDoorcommand) == 0x000750, "Member 'UW_SettingsMenu_C::Options_Combo_LockedDoorcommand' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_MirrorReflectionMode) == 0x000758, "Member 'UW_SettingsMenu_C::Options_Combo_MirrorReflectionMode' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_NVGStyle) == 0x000760, "Member 'UW_SettingsMenu_C::Options_Combo_NVGStyle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_OptiwandViewMode) == 0x000768, "Member 'UW_SettingsMenu_C::Options_Combo_OptiwandViewMode' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_ScoreReadoutMode) == 0x000770, "Member 'UW_SettingsMenu_C::Options_Combo_ScoreReadoutMode' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_ShotgunReloadStyle) == 0x000778, "Member 'UW_SettingsMenu_C::Options_Combo_ShotgunReloadStyle' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Combo_UnlockedDoorCommand) == 0x000780, "Member 'UW_SettingsMenu_C::Options_Combo_UnlockedDoorCommand' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Image_PatchPreview) == 0x000788, "Member 'UW_SettingsMenu_C::Options_Image_PatchPreview' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Slider_FreelookSensitivity) == 0x000790, "Member 'UW_SettingsMenu_C::Options_Slider_FreelookSensitivity' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Slider_MouseSensitivity) == 0x000798, "Member 'UW_SettingsMenu_C::Options_Slider_MouseSensitivity' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Slider_TeamView_PIP_FPS) == 0x0007A0, "Member 'UW_SettingsMenu_C::Options_Slider_TeamView_PIP_FPS' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Text_PatchPreview) == 0x0007A8, "Member 'UW_SettingsMenu_C::Options_Text_PatchPreview' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Textbox_OfficerName) == 0x0007B0, "Member 'UW_SettingsMenu_C::Options_Textbox_OfficerName' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Options_Textbox_PatchURL) == 0x0007B8, "Member 'UW_SettingsMenu_C::Options_Textbox_PatchURL' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, PresetsHeader) == 0x0007C0, "Member 'UW_SettingsMenu_C::PresetsHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ProfilingBtn) == 0x0007C8, "Member 'UW_SettingsMenu_C::ProfilingBtn' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ProfilingHeader) == 0x0007D0, "Member 'UW_SettingsMenu_C::ProfilingHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ProfilingSubCategory) == 0x0007D8, "Member 'UW_SettingsMenu_C::ProfilingSubCategory' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, RaytracingAmbientOcclusion) == 0x0007E0, "Member 'UW_SettingsMenu_C::RaytracingAmbientOcclusion' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, RayTracingEnabledLabel) == 0x0007E8, "Member 'UW_SettingsMenu_C::RayTracingEnabledLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, RayTracingHeader) == 0x0007F0, "Member 'UW_SettingsMenu_C::RayTracingHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, RaytracingReflectionsLabel) == 0x0007F8, "Member 'UW_SettingsMenu_C::RaytracingReflectionsLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, RaytracingShadowsLabel) == 0x000800, "Member 'UW_SettingsMenu_C::RaytracingShadowsLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Reflex_Combo) == 0x000808, "Member 'UW_SettingsMenu_C::Reflex_Combo' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexGameLatencyChkBox) == 0x000810, "Member 'UW_SettingsMenu_C::ReflexGameLatencyChkBox' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexGameLatencyLabel) == 0x000818, "Member 'UW_SettingsMenu_C::ReflexGameLatencyLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexGameToRenderLatency_ChkBox) == 0x000820, "Member 'UW_SettingsMenu_C::ReflexGameToRenderLatency_ChkBox' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexGameToRenderLatencyLabel) == 0x000828, "Member 'UW_SettingsMenu_C::ReflexGameToRenderLatencyLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexHeader) == 0x000830, "Member 'UW_SettingsMenu_C::ReflexHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexLowLatencyLabel) == 0x000838, "Member 'UW_SettingsMenu_C::ReflexLowLatencyLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexRenderLatency_ChkBox) == 0x000840, "Member 'UW_SettingsMenu_C::ReflexRenderLatency_ChkBox' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexRenderLatencyLabel) == 0x000848, "Member 'UW_SettingsMenu_C::ReflexRenderLatencyLabel' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReflexSettingsBox) == 0x000850, "Member 'UW_SettingsMenu_C::ReflexSettingsBox' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ResetKeybindsButton) == 0x000858, "Member 'UW_SettingsMenu_C::ResetKeybindsButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ServerHeader) == 0x000860, "Member 'UW_SettingsMenu_C::ServerHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ServerSubCategory) == 0x000868, "Member 'UW_SettingsMenu_C::ServerSubCategory' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SettingsSwitcher) == 0x000870, "Member 'UW_SettingsMenu_C::SettingsSwitcher' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_ADSZoom) == 0x000878, "Member 'UW_SettingsMenu_C::SimpleGraphics_ADSZoom' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Combo_Preset) == 0x000880, "Member 'UW_SettingsMenu_C::SimpleGraphics_Combo_Preset' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Combo_ScreenMode) == 0x000888, "Member 'UW_SettingsMenu_C::SimpleGraphics_Combo_ScreenMode' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Slider_FieldOfView) == 0x000890, "Member 'UW_SettingsMenu_C::SimpleGraphics_Slider_FieldOfView' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Slider_Resolution) == 0x000898, "Member 'UW_SettingsMenu_C::SimpleGraphics_Slider_Resolution' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Slider_ResolutionScale) == 0x0008A0, "Member 'UW_SettingsMenu_C::SimpleGraphics_Slider_ResolutionScale' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Slider_SafeZone_X) == 0x0008A8, "Member 'UW_SettingsMenu_C::SimpleGraphics_Slider_SafeZone_X' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphics_Slider_SafeZone_Y) == 0x0008B0, "Member 'UW_SettingsMenu_C::SimpleGraphics_Slider_SafeZone_Y' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SimpleGraphicsSettings) == 0x0008B8, "Member 'UW_SettingsMenu_C::SimpleGraphicsSettings' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Supporter_Header) == 0x0008C0, "Member 'UW_SettingsMenu_C::Supporter_Header' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SupporterSubCategory) == 0x0008C8, "Member 'UW_SettingsMenu_C::SupporterSubCategory' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_AdvancedGraphicOptions) == 0x0008D0, "Member 'UW_SettingsMenu_C::Tab_AdvancedGraphicOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_AdvancedGraphicsOptions) == 0x0008D8, "Member 'UW_SettingsMenu_C::Tab_AdvancedGraphicsOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_Audio) == 0x0008E0, "Member 'UW_SettingsMenu_C::Tab_Audio' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_BasicGraphicOptions) == 0x0008E8, "Member 'UW_SettingsMenu_C::Tab_BasicGraphicOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_Controls) == 0x0008F0, "Member 'UW_SettingsMenu_C::Tab_Controls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_Game) == 0x0008F8, "Member 'UW_SettingsMenu_C::Tab_Game' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_Graphics) == 0x000900, "Member 'UW_SettingsMenu_C::Tab_Graphics' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Tab_SimpleGraphicsOptions) == 0x000908, "Member 'UW_SettingsMenu_C::Tab_SimpleGraphicsOptions' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, VideoOptionsModal) == 0x000910, "Member 'UW_SettingsMenu_C::VideoOptionsModal' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, W_PageHeader) == 0x000918, "Member 'UW_SettingsMenu_C::W_PageHeader' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, MovementControls) == 0x000920, "Member 'UW_SettingsMenu_C::MovementControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, DroneControls) == 0x000930, "Member 'UW_SettingsMenu_C::DroneControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, EquipmentControls) == 0x000940, "Member 'UW_SettingsMenu_C::EquipmentControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, InteractionControls) == 0x000950, "Member 'UW_SettingsMenu_C::InteractionControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, TeamworkControls) == 0x000960, "Member 'UW_SettingsMenu_C::TeamworkControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, MiscellaneousControls) == 0x000970, "Member 'UW_SettingsMenu_C::MiscellaneousControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Temp_FirstInput) == 0x000980, "Member 'UW_SettingsMenu_C::Temp_FirstInput' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Temp_SecondInput) == 0x000988, "Member 'UW_SettingsMenu_C::Temp_SecondInput' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, BindNamePadding) == 0x000990, "Member 'UW_SettingsMenu_C::BindNamePadding' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Bind1Padding) == 0x0009A0, "Member 'UW_SettingsMenu_C::Bind1Padding' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, Bind2Padding) == 0x0009B0, "Member 'UW_SettingsMenu_C::Bind2Padding' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, BindResetPadding) == 0x0009C0, "Member 'UW_SettingsMenu_C::BindResetPadding' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, VideoSettingsChanged) == 0x0009D0, "Member 'UW_SettingsMenu_C::VideoSettingsChanged' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, GraphicsPresets) == 0x0009D8, "Member 'UW_SettingsMenu_C::GraphicsPresets' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, StagedResolution) == 0x0009E8, "Member 'UW_SettingsMenu_C::StagedResolution' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, StagedResolutionScale) == 0x0009F8, "Member 'UW_SettingsMenu_C::StagedResolutionScale' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, StagedFOV) == 0x0009FC, "Member 'UW_SettingsMenu_C::StagedFOV' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, StagedGraphicsPreset) == 0x000A00, "Member 'UW_SettingsMenu_C::StagedGraphicsPreset' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, StagedScreenMode) == 0x000A34, "Member 'UW_SettingsMenu_C::StagedScreenMode' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, OnMenuExited) == 0x000A38, "Member 'UW_SettingsMenu_C::OnMenuExited' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, PatchPreviewURL) == 0x000A48, "Member 'UW_SettingsMenu_C::PatchPreviewURL' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, DefaultPatchPreviewBrush) == 0x000A58, "Member 'UW_SettingsMenu_C::DefaultPatchPreviewBrush' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ListeningBinding) == 0x000AE0, "Member 'UW_SettingsMenu_C::ListeningBinding' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, bShowBlackout) == 0x000AE8, "Member 'UW_SettingsMenu_C::bShowBlackout' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ConflictingBindPending) == 0x000AF0, "Member 'UW_SettingsMenu_C::ConflictingBindPending' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ConflictingBindFormat) == 0x000AF8, "Member 'UW_SettingsMenu_C::ConflictingBindFormat' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, IsAxis) == 0x000B10, "Member 'UW_SettingsMenu_C::IsAxis' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, CharacterControls) == 0x000B18, "Member 'UW_SettingsMenu_C::CharacterControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, SharedControls) == 0x000B28, "Member 'UW_SettingsMenu_C::SharedControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, AxesControlBinds) == 0x000B38, "Member 'UW_SettingsMenu_C::AxesControlBinds' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ActionsControlBinds) == 0x000B88, "Member 'UW_SettingsMenu_C::ActionsControlBinds' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, UnbindableControls) == 0x000BD8, "Member 'UW_SettingsMenu_C::UnbindableControls' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ConflictDetectedPopUp) == 0x000BE8, "Member 'UW_SettingsMenu_C::ConflictDetectedPopUp' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, IllegalKeyConflictDetectedPopUp) == 0x000BF0, "Member 'UW_SettingsMenu_C::IllegalKeyConflictDetectedPopUp' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, BindConflictModalDetails) == 0x000BF8, "Member 'UW_SettingsMenu_C::BindConflictModalDetails' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, IllegalKeyConflictModalDetails) == 0x000C70, "Member 'UW_SettingsMenu_C::IllegalKeyConflictModalDetails' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ActivePageButton) == 0x000CE8, "Member 'UW_SettingsMenu_C::ActivePageButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ActiveControlTabButton) == 0x000CF0, "Member 'UW_SettingsMenu_C::ActiveControlTabButton' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ControlTabInit) == 0x000CF8, "Member 'UW_SettingsMenu_C::ControlTabInit' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, DecalsStateChanged) == 0x000CF9, "Member 'UW_SettingsMenu_C::DecalsStateChanged' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, MotionBlurScalar) == 0x000CFC, "Member 'UW_SettingsMenu_C::MotionBlurScalar' has a wrong offset!");
static_assert(offsetof(UW_SettingsMenu_C, ReplayControls) == 0x000D00, "Member 'UW_SettingsMenu_C::ReplayControls' has a wrong offset!");

}

