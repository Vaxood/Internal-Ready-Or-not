#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Therapist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function W_Therapist.W_Therapist_C.ExecuteUbergraph_W_Therapist
// 0x0180 (0x0180 - 0x0000)
struct W_Therapist_C_ExecuteUbergraph_W_Therapist final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_ButtonID;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)(ConstParm)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4420[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_StandardModal_C*                     CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0040(0x0010)(NoDestructor)
	TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Delay_1;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4421[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BackPage_Handled;                         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4422[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Therapist_OfficerEntry_C*            K2Node_CustomEvent_Entry;                          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0018)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4423[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_StandardModal_C*                     K2Node_CustomEvent_CallingModal;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_TextEntry;                      // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0040)(HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	TDelegate<void(class UStandardModal* CallingModal)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Therapist_C_ExecuteUbergraph_W_Therapist) == 0x000008, "Wrong alignment on W_Therapist_C_ExecuteUbergraph_W_Therapist");
static_assert(sizeof(W_Therapist_C_ExecuteUbergraph_W_Therapist) == 0x000180, "Wrong size on W_Therapist_C_ExecuteUbergraph_W_Therapist");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, EntryPoint) == 0x000000, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_ComponentBoundEvent_ButtonID) == 0x000008, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_ComponentBoundEvent_ButtonID' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, Temp_text_Variable) == 0x000018, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_SwitchString_CmpSuccess) == 0x000030, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, CallFunc_Create_ReturnValue) == 0x000038, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_MakeStruct_Anchors) == 0x000040, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_Event_Delay_1) == 0x000060, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_Event_Delay) == 0x000064, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_Event_Collapse) == 0x000068, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_Event_IsGamepad) == 0x000069, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_Event_PageName) == 0x00006C, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, CallFunc_BackPage_Handled) == 0x000074, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::CallFunc_BackPage_Handled' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_CustomEvent_Entry) == 0x000078, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_CustomEvent_Entry' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, Temp_text_Variable_1) == 0x000080, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_CustomEvent_CallingModal) == 0x0000A0, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_CustomEvent_CallingModal' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_CustomEvent_TextEntry) == 0x0000A8, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_CustomEvent_TextEntry' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, CallFunc_AddChildToCanvas_ReturnValue) == 0x000140, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_MakeArray_Array) == 0x000148, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, CallFunc_Format_ReturnValue) == 0x000158, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ExecuteUbergraph_W_Therapist, K2Node_CreateDelegate_OutputDelegate_1) == 0x000170, "Member 'W_Therapist_C_ExecuteUbergraph_W_Therapist::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature final 
{
public:
	class FString                                 ButtonID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");
static_assert(sizeof(W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature) == 0x000010, "Wrong size on W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");
static_assert(offsetof(W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature, ButtonID) == 0x000000, "Member 'W_Therapist_C_BndEvt__W_Therapist_W_PageHeader_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature::ButtonID' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.ReplacePatient
// 0x0020 (0x0020 - 0x0000)
struct W_Therapist_C_ReplacePatient final 
{
public:
	class UW_StandardModal_C*                     CallingModal;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextEntry;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Therapist_C_ReplacePatient) == 0x000008, "Wrong alignment on W_Therapist_C_ReplacePatient");
static_assert(sizeof(W_Therapist_C_ReplacePatient) == 0x000020, "Wrong size on W_Therapist_C_ReplacePatient");
static_assert(offsetof(W_Therapist_C_ReplacePatient, CallingModal) == 0x000000, "Member 'W_Therapist_C_ReplacePatient::CallingModal' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_ReplacePatient, TextEntry) == 0x000008, "Member 'W_Therapist_C_ReplacePatient::TextEntry' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.OfficerEntryClicked
// 0x0008 (0x0008 - 0x0000)
struct W_Therapist_C_OfficerEntryClicked final 
{
public:
	class UW_Therapist_OfficerEntry_C*            Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Therapist_C_OfficerEntryClicked) == 0x000008, "Wrong alignment on W_Therapist_C_OfficerEntryClicked");
static_assert(sizeof(W_Therapist_C_OfficerEntryClicked) == 0x000008, "Wrong size on W_Therapist_C_OfficerEntryClicked");
static_assert(offsetof(W_Therapist_C_OfficerEntryClicked, Entry) == 0x000000, "Member 'W_Therapist_C_OfficerEntryClicked::Entry' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Therapist_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Therapist_C_ChangePage) == 0x000004, "Wrong alignment on W_Therapist_C_ChangePage");
static_assert(sizeof(W_Therapist_C_ChangePage) == 0x000008, "Wrong size on W_Therapist_C_ChangePage");
static_assert(offsetof(W_Therapist_C_ChangePage, PageName) == 0x000000, "Member 'W_Therapist_C_ChangePage::PageName' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Therapist_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_SetInputMode) == 0x000001, "Wrong alignment on W_Therapist_C_SetInputMode");
static_assert(sizeof(W_Therapist_C_SetInputMode) == 0x000001, "Wrong size on W_Therapist_C_SetInputMode");
static_assert(offsetof(W_Therapist_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Therapist_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Therapist_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_Hide) == 0x000004, "Wrong alignment on W_Therapist_C_Hide");
static_assert(sizeof(W_Therapist_C_Hide) == 0x000008, "Wrong size on W_Therapist_C_Hide");
static_assert(offsetof(W_Therapist_C_Hide, Delay) == 0x000000, "Member 'W_Therapist_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_Hide, Collapse) == 0x000004, "Member 'W_Therapist_C_Hide::Collapse' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Therapist_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Therapist_C_Reveal) == 0x000004, "Wrong alignment on W_Therapist_C_Reveal");
static_assert(sizeof(W_Therapist_C_Reveal) == 0x000004, "Wrong size on W_Therapist_C_Reveal");
static_assert(offsetof(W_Therapist_C_Reveal, Delay) == 0x000000, "Member 'W_Therapist_C_Reveal::Delay' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.BP_OnHandleBackAction
// 0x0002 (0x0002 - 0x0000)
struct W_Therapist_C_BP_OnHandleBackAction final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BackPage_Handled;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_Therapist_C_BP_OnHandleBackAction");
static_assert(sizeof(W_Therapist_C_BP_OnHandleBackAction) == 0x000002, "Wrong size on W_Therapist_C_BP_OnHandleBackAction");
static_assert(offsetof(W_Therapist_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_Therapist_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_BP_OnHandleBackAction, CallFunc_BackPage_Handled) == 0x000001, "Member 'W_Therapist_C_BP_OnHandleBackAction::CallFunc_BackPage_Handled' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.PopulateOfficerList
// 0x0058 (0x0058 - 0x0000)
struct W_Therapist_C_PopulateOfficerList final 
{
public:
	TArray<class URosterCharacter*>               RosterCharacters;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UW_Therapist_OfficerEntry_C*            NewEntryWidget;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Therapist_OfficerEntry_C*            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Therapist_OfficerEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4424[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URosterCharacter*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_PopulateOfficerList) == 0x000008, "Wrong alignment on W_Therapist_C_PopulateOfficerList");
static_assert(sizeof(W_Therapist_C_PopulateOfficerList) == 0x000058, "Wrong size on W_Therapist_C_PopulateOfficerList");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, RosterCharacters) == 0x000000, "Member 'W_Therapist_C_PopulateOfficerList::RosterCharacters' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, NewEntryWidget) == 0x000010, "Member 'W_Therapist_C_PopulateOfficerList::NewEntryWidget' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, CallFunc_Create_ReturnValue) == 0x000018, "Member 'W_Therapist_C_PopulateOfficerList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'W_Therapist_C_PopulateOfficerList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_Therapist_C_PopulateOfficerList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'W_Therapist_C_PopulateOfficerList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'W_Therapist_C_PopulateOfficerList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'W_Therapist_C_PopulateOfficerList::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_Therapist_C_PopulateOfficerList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_Therapist_C_PopulateOfficerList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_PopulateOfficerList, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'W_Therapist_C_PopulateOfficerList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.CloseReplacementModal
// 0x0010 (0x0010 - 0x0000)
struct W_Therapist_C_CloseReplacementModal final 
{
public:
	class UStandardModal*                         CallingModal;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_CloseReplacementModal) == 0x000008, "Wrong alignment on W_Therapist_C_CloseReplacementModal");
static_assert(sizeof(W_Therapist_C_CloseReplacementModal) == 0x000010, "Wrong size on W_Therapist_C_CloseReplacementModal");
static_assert(offsetof(W_Therapist_C_CloseReplacementModal, CallingModal) == 0x000000, "Member 'W_Therapist_C_CloseReplacementModal::CallingModal' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_CloseReplacementModal, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Therapist_C_CloseReplacementModal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.UpdateTherapyScreen
// 0x00D8 (0x00D8 - 0x0000)
struct W_Therapist_C_UpdateTherapyScreen final 
{
public:
	class FText                                   CallFunc_GetTherapistText_ReturnValue;             // 0x0000(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	TArray<class URosterCharacter*>               CallFunc_GetCharactersInTherapy_ReturnValue;       // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4425[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterCharacter*                       CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_UpdateTherapyScreen) == 0x000008, "Wrong alignment on W_Therapist_C_UpdateTherapyScreen");
static_assert(sizeof(W_Therapist_C_UpdateTherapyScreen) == 0x0000D8, "Wrong size on W_Therapist_C_UpdateTherapyScreen");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_GetTherapistText_ReturnValue) == 0x000000, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_GetTherapistText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000030, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'W_Therapist_C_UpdateTherapyScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, K2Node_MakeArray_Array) == 0x000088, "Member 'W_Therapist_C_UpdateTherapyScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_Format_ReturnValue) == 0x000098, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_GetCharactersInTherapy_ReturnValue) == 0x0000B0, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_GetCharactersInTherapy_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_UpdateTherapyScreen, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'W_Therapist_C_UpdateTherapyScreen::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.BackPage
// 0x0002 (0x0002 - 0x0000)
struct W_Therapist_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Therapist_C_BackPage) == 0x000001, "Wrong alignment on W_Therapist_C_BackPage");
static_assert(sizeof(W_Therapist_C_BackPage) == 0x000002, "Wrong size on W_Therapist_C_BackPage");
static_assert(offsetof(W_Therapist_C_BackPage, Handled) == 0x000000, "Member 'W_Therapist_C_BackPage::Handled' has a wrong offset!");
static_assert(offsetof(W_Therapist_C_BackPage, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'W_Therapist_C_BackPage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_Therapist.W_Therapist_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Therapist_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Therapist_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Therapist_C_GetFocusTarget");
static_assert(sizeof(W_Therapist_C_GetFocusTarget) == 0x000008, "Wrong size on W_Therapist_C_GetFocusTarget");
static_assert(offsetof(W_Therapist_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Therapist_C_GetFocusTarget::Focus' has a wrong offset!");

}

