#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionScore_ScorePanel_SubEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C
// 0x00C0 (0x0320 - 0x0260)
class UW_MissionScore_ScorePanel_SubEntry_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimReveal;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_PenaltyBG;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ScoreBG;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_ScoreCount;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_PenaltyCount;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_PenaltyName;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_PenaltyValue;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_ScoreCount;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_ScoreName;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_ScoreValue;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_W_MissionScore_ScorePanel_SubEntry_C;         // 0x02C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Count;                                             // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Total;                                             // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2DC3[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             SubEntryReady;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Penalty;                                           // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2DC4[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             ScoreSound;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             PenaltySound;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             ScoreNumberSound;                                  // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ObjectiveEntry;                                    // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void SubEntryReady__DelegateSignature(class UW_MissionScore_ScorePanel_SubEntry_C* EntryWidget, int32 Param_Score);
	void ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry(int32 EntryPoint, float K2Node_Event_Delay, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_1, class UObject* K2Node_CustomEvent_Event_Receiver, bool K2Node_Event_IsDesignTime, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_2, class UUMGSequencePlayer* CallFunc_CreatePlayAnimationProxyObject_Result, class UWidgetAnimationPlayCallbackProxy* CallFunc_CreatePlayAnimationProxyObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse);
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void NumberSound(class UObject* Event_Receiver);
	void RevealSound();
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Finished_FABCC80443E68187381FC1BDCAC03A54();
	void SetCountText(bool Temp_bool_Variable, bool Temp_bool_Variable_1, class UTextBlock* K2Node_Select_Default, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class FText CallFunc_Conv_IntToText_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default_1);
	void SetNameText(bool Temp_bool_Variable, const struct FSlateColor& CallFunc_GetSlateColorScheme_White, const struct FSlateColor& CallFunc_GetSlateColorScheme_Dark, const struct FSlateColor& CallFunc_GetSlateColorScheme_Red, const struct FSlateColor& CallFunc_GetSlateColorScheme_Yellow, const struct FSlateColor& CallFunc_GetSlateColorScheme_Blue, const struct FSlateColor& CallFunc_GetSlateColorScheme_Green, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UTextBlock* K2Node_Select_Default);
	void SetValueText(bool Temp_bool_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, const struct FSlateColor& CallFunc_GetSlateColorScheme_White, const struct FSlateColor& CallFunc_GetSlateColorScheme_Dark, const struct FSlateColor& CallFunc_GetSlateColorScheme_Red, const struct FSlateColor& CallFunc_GetSlateColorScheme_Yellow, const struct FSlateColor& CallFunc_GetSlateColorScheme_Blue, const struct FSlateColor& CallFunc_GetSlateColorScheme_Green, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class FText K2Node_Select_Default, class UTextBlock* K2Node_Select_Default_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, class FText CallFunc_Conv_IntToText_ReturnValue, class FText K2Node_Select_Default_2);
	void SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_0();
	void SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1(class UObject* Event_Receiver);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MissionScore_ScorePanel_SubEntry_C">();
	}
	static class UW_MissionScore_ScorePanel_SubEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MissionScore_ScorePanel_SubEntry_C>();
	}
};
static_assert(alignof(UW_MissionScore_ScorePanel_SubEntry_C) == 0x000008, "Wrong alignment on UW_MissionScore_ScorePanel_SubEntry_C");
static_assert(sizeof(UW_MissionScore_ScorePanel_SubEntry_C) == 0x000320, "Wrong size on UW_MissionScore_ScorePanel_SubEntry_C");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, UberGraphFrame) == 0x000260, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, AnimReveal) == 0x000268, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::AnimReveal' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Img_PenaltyBG) == 0x000270, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Img_PenaltyBG' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Img_ScoreBG) == 0x000278, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Img_ScoreBG' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Size_ScoreCount) == 0x000280, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Size_ScoreCount' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Txt_PenaltyCount) == 0x000288, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Txt_PenaltyCount' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Txt_PenaltyName) == 0x000290, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Txt_PenaltyName' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Txt_PenaltyValue) == 0x000298, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Txt_PenaltyValue' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Txt_ScoreCount) == 0x0002A0, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Txt_ScoreCount' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Txt_ScoreName) == 0x0002A8, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Txt_ScoreName' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Txt_ScoreValue) == 0x0002B0, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Txt_ScoreValue' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, WidgetSwitcher_0) == 0x0002B8, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Name_W_MissionScore_ScorePanel_SubEntry_C) == 0x0002C0, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Name_W_MissionScore_ScorePanel_SubEntry_C' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Count) == 0x0002D8, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Count' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Total) == 0x0002DC, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Total' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Score) == 0x0002E0, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Score' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, SubEntryReady) == 0x0002E8, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::SubEntryReady' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, Penalty) == 0x0002F8, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::Penalty' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, ScoreSound) == 0x000300, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::ScoreSound' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, PenaltySound) == 0x000308, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::PenaltySound' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, ScoreNumberSound) == 0x000310, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::ScoreNumberSound' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_ScorePanel_SubEntry_C, ObjectiveEntry) == 0x000318, "Member 'UW_MissionScore_ScorePanel_SubEntry_C::ObjectiveEntry' has a wrong offset!");

}

