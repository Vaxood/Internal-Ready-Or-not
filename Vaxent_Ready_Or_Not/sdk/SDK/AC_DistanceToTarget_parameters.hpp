#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_DistanceToTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AC_DistanceToTarget.AC_DistanceToTarget_C.Score
// 0x0078 (0x0078 - 0x0000)
struct AC_DistanceToTarget_C_Score final 
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_414D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   Target;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_414E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotCharacter*                   CallFunc_GetLastTrackedTarget_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   CallFunc_GetTrackedTarget_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrackedInKnownNeutrals_ReturnValue;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrackedInKnownFriendlies_ReturnValue;   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrackedInKnownEnemies_ReturnValue;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_414F[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4150[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4151[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_DistanceToTarget_C_Score) == 0x000008, "Wrong alignment on AC_DistanceToTarget_C_Score");
static_assert(sizeof(AC_DistanceToTarget_C_Score) == 0x000078, "Wrong size on AC_DistanceToTarget_C_Score");
static_assert(offsetof(AC_DistanceToTarget_C_Score, Context) == 0x000000, "Member 'AC_DistanceToTarget_C_Score::Context' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, bSuccess) == 0x000010, "Member 'AC_DistanceToTarget_C_Score::bSuccess' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, ReturnValue) == 0x000014, "Member 'AC_DistanceToTarget_C_Score::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, Target) == 0x000018, "Member 'AC_DistanceToTarget_C_Score::Target' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'AC_DistanceToTarget_C_Score::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_GetLastTrackedTarget_ReturnValue) == 0x000028, "Member 'AC_DistanceToTarget_C_Score::CallFunc_GetLastTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_GetTrackedTarget_ReturnValue) == 0x000030, "Member 'AC_DistanceToTarget_C_Score::CallFunc_GetTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_IsTrackedInKnownNeutrals_ReturnValue) == 0x000038, "Member 'AC_DistanceToTarget_C_Score::CallFunc_IsTrackedInKnownNeutrals_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_IsTrackedInKnownFriendlies_ReturnValue) == 0x000039, "Member 'AC_DistanceToTarget_C_Score::CallFunc_IsTrackedInKnownFriendlies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_IsTrackedInKnownEnemies_ReturnValue) == 0x00003A, "Member 'AC_DistanceToTarget_C_Score::CallFunc_IsTrackedInKnownEnemies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'AC_DistanceToTarget_C_Score::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'AC_DistanceToTarget_C_Score::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'AC_DistanceToTarget_C_Score::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'AC_DistanceToTarget_C_Score::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_BooleanAND_ReturnValue_1) == 0x000056, "Member 'AC_DistanceToTarget_C_Score::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_BooleanAND_ReturnValue_2) == 0x000057, "Member 'AC_DistanceToTarget_C_Score::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'AC_DistanceToTarget_C_Score::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00005C, "Member 'AC_DistanceToTarget_C_Score::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_BooleanOR_ReturnValue_1) == 0x000068, "Member 'AC_DistanceToTarget_C_Score::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_Vector_Distance_ReturnValue) == 0x00006C, "Member 'AC_DistanceToTarget_C_Score::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_Score, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'AC_DistanceToTarget_C_Score::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function AC_DistanceToTarget.AC_DistanceToTarget_C.CalculateCurve
// 0x000C (0x000C - 0x0000)
struct AC_DistanceToTarget_C_CalculateCurve final 
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_DistanceToTarget_C_CalculateCurve) == 0x000004, "Wrong alignment on AC_DistanceToTarget_C_CalculateCurve");
static_assert(sizeof(AC_DistanceToTarget_C_CalculateCurve) == 0x00000C, "Wrong size on AC_DistanceToTarget_C_CalculateCurve");
static_assert(offsetof(AC_DistanceToTarget_C_CalculateCurve, X) == 0x000000, "Member 'AC_DistanceToTarget_C_CalculateCurve::X' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_CalculateCurve, ReturnValue) == 0x000004, "Member 'AC_DistanceToTarget_C_CalculateCurve::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_DistanceToTarget_C_CalculateCurve, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'AC_DistanceToTarget_C_CalculateCurve::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

