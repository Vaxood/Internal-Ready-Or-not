#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemSlotTactical_V2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.OnClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_ItemSlotTactical_V2_C_OnClick__DelegateSignature final 
{
public:
	class UW_ItemSlot_v2_C*                       TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_OnClick__DelegateSignature) == 0x000008, "Wrong alignment on W_ItemSlotTactical_V2_C_OnClick__DelegateSignature");
static_assert(sizeof(W_ItemSlotTactical_V2_C_OnClick__DelegateSignature) == 0x000008, "Wrong size on W_ItemSlotTactical_V2_C_OnClick__DelegateSignature");
static_assert(offsetof(W_ItemSlotTactical_V2_C_OnClick__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_OnClick__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.ExecuteUbergraph_W_ItemSlotTactical_V2
// 0x0048 (0x0048 - 0x0000)
struct W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2 final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x001C(0x0008)(NoDestructor)
	uint8                                         Pad_2F8E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8F[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_OnNavigateLeft_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_OnNavigateRight_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2) == 0x000008, "Wrong alignment on W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2");
static_assert(sizeof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2) == 0x000048, "Wrong size on W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, EntryPoint) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, K2Node_Event_IsDesignTime) == 0x000018, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, K2Node_Event_InFocusEvent) == 0x00001C, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, CallFunc_HasUserFocus_ReturnValue) == 0x000030, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, CallFunc_IsHovered_ReturnValue) == 0x000031, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, CallFunc_OnNavigateLeft_ReturnValue) == 0x000038, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::CallFunc_OnNavigateLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2, CallFunc_OnNavigateRight_ReturnValue) == 0x000040, "Member 'W_ItemSlotTactical_V2_C_ExecuteUbergraph_W_ItemSlotTactical_V2::CallFunc_OnNavigateRight_ReturnValue' has a wrong offset!");

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_ItemSlotTactical_V2_C_OnAddedToFocusPath final 
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_ItemSlotTactical_V2_C_OnAddedToFocusPath");
static_assert(sizeof(W_ItemSlotTactical_V2_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_ItemSlotTactical_V2_C_OnAddedToFocusPath");
static_assert(offsetof(W_ItemSlotTactical_V2_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ItemSlotTactical_V2_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_PreConstruct) == 0x000001, "Wrong alignment on W_ItemSlotTactical_V2_C_PreConstruct");
static_assert(sizeof(W_ItemSlotTactical_V2_C_PreConstruct) == 0x000001, "Wrong size on W_ItemSlotTactical_V2_C_PreConstruct");
static_assert(offsetof(W_ItemSlotTactical_V2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final 
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final 
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_ItemSlotTactical_V2.W_ItemSlotTactical_V2_C.SetVisualState
// 0x0004 (0x0004 - 0x0000)
struct W_ItemSlotTactical_V2_C_SetVisualState final 
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Equipped;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemSlotTactical_V2_C_SetVisualState) == 0x000001, "Wrong alignment on W_ItemSlotTactical_V2_C_SetVisualState");
static_assert(sizeof(W_ItemSlotTactical_V2_C_SetVisualState) == 0x000004, "Wrong size on W_ItemSlotTactical_V2_C_SetVisualState");
static_assert(offsetof(W_ItemSlotTactical_V2_C_SetVisualState, Hovered) == 0x000000, "Member 'W_ItemSlotTactical_V2_C_SetVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_SetVisualState, Equipped) == 0x000001, "Member 'W_ItemSlotTactical_V2_C_SetVisualState::Equipped' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_SetVisualState, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'W_ItemSlotTactical_V2_C_SetVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSlotTactical_V2_C_SetVisualState, CallFunc_BooleanNOR_ReturnValue) == 0x000003, "Member 'W_ItemSlotTactical_V2_C_SetVisualState::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");

}

