#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_ItemStat

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C.ExecuteUbergraph_W_WeaponWheel_ItemStat
// 0x0058 (0x0058 - 0x0000)
struct W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_446C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_446D[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat) == 0x000004, "Wrong alignment on W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat");
static_assert(sizeof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat) == 0x000058, "Wrong size on W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, EntryPoint) == 0x000000, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat, CallFunc_Ease_ReturnValue) == 0x000054, "Member 'W_WeaponWheel_ItemStat_C_ExecuteUbergraph_W_WeaponWheel_ItemStat::CallFunc_Ease_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_WeaponWheel_ItemStat_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_ItemStat_C_Tick) == 0x000004, "Wrong alignment on W_WeaponWheel_ItemStat_C_Tick");
static_assert(sizeof(W_WeaponWheel_ItemStat_C_Tick) == 0x00003C, "Wrong size on W_WeaponWheel_ItemStat_C_Tick");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_Tick, MyGeometry) == 0x000000, "Member 'W_WeaponWheel_ItemStat_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_Tick, InDeltaTime) == 0x000038, "Member 'W_WeaponWheel_ItemStat_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WeaponWheel_ItemStat_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WeaponWheel_ItemStat_C_PreConstruct) == 0x000001, "Wrong alignment on W_WeaponWheel_ItemStat_C_PreConstruct");
static_assert(sizeof(W_WeaponWheel_ItemStat_C_PreConstruct) == 0x000001, "Wrong size on W_WeaponWheel_ItemStat_C_PreConstruct");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WeaponWheel_ItemStat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C.Initialize
// 0x0004 (0x0004 - 0x0000)
struct W_WeaponWheel_ItemStat_C_Initialize final 
{
public:
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_ItemStat_C_Initialize) == 0x000004, "Wrong alignment on W_WeaponWheel_ItemStat_C_Initialize");
static_assert(sizeof(W_WeaponWheel_ItemStat_C_Initialize) == 0x000004, "Wrong size on W_WeaponWheel_ItemStat_C_Initialize");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_Initialize, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_ItemStat_C_Initialize::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C.SetupFontSize
// 0x0080 (0x0080 - 0x0000)
struct W_WeaponWheel_ItemStat_C_SetupFontSize final 
{
public:
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0028(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_ItemStat_C_SetupFontSize) == 0x000008, "Wrong alignment on W_WeaponWheel_ItemStat_C_SetupFontSize");
static_assert(sizeof(W_WeaponWheel_ItemStat_C_SetupFontSize) == 0x000080, "Wrong size on W_WeaponWheel_ItemStat_C_SetupFontSize");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupFontSize, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_ItemStat_C_SetupFontSize::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupFontSize, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_ItemStat_C_SetupFontSize::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupFontSize, K2Node_MakeStruct_Margin) == 0x000010, "Member 'W_WeaponWheel_ItemStat_C_SetupFontSize::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupFontSize, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'W_WeaponWheel_ItemStat_C_SetupFontSize::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupFontSize, CallFunc_FTrunc_ReturnValue) == 0x000024, "Member 'W_WeaponWheel_ItemStat_C_SetupFontSize::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupFontSize, K2Node_MakeStruct_SlateFontInfo) == 0x000028, "Member 'W_WeaponWheel_ItemStat_C_SetupFontSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C.SetupWidgetSize
// 0x0008 (0x0008 - 0x0000)
struct W_WeaponWheel_ItemStat_C_SetupWidgetSize final 
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_ItemStat_C_SetupWidgetSize) == 0x000008, "Wrong alignment on W_WeaponWheel_ItemStat_C_SetupWidgetSize");
static_assert(sizeof(W_WeaponWheel_ItemStat_C_SetupWidgetSize) == 0x000008, "Wrong size on W_WeaponWheel_ItemStat_C_SetupWidgetSize");
static_assert(offsetof(W_WeaponWheel_ItemStat_C_SetupWidgetSize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'W_WeaponWheel_ItemStat_C_SetupWidgetSize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

}

