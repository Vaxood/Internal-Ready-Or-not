#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Roster_Entry

#include "Basic.hpp"

#include "W_PreMission_Tablet_Roster_Entry_classes.hpp"
#include "W_PreMission_Tablet_Roster_Entry_parameters.hpp"


namespace SDK
{

// Function W_PreMission_Tablet_Roster_Entry.W_PreMission_Tablet_Roster_Entry_C.ExecuteUbergraph_W_PreMission_Tablet_Roster_Entry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetPlayerName_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()

void UW_PreMission_Tablet_Roster_Entry_C::ExecuteUbergraph_W_PreMission_Tablet_Roster_Entry(int32 EntryPoint, const class FString& CallFunc_GetPlayerName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_Tablet_Roster_Entry_C", "ExecuteUbergraph_W_PreMission_Tablet_Roster_Entry");

	Params::W_PreMission_Tablet_Roster_Entry_C_ExecuteUbergraph_W_PreMission_Tablet_Roster_Entry Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_GetPlayerName_ReturnValue = std::move(CallFunc_GetPlayerName_ReturnValue);
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PreMission_Tablet_Roster_Entry.W_PreMission_Tablet_Roster_Entry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_PreMission_Tablet_Roster_Entry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PreMission_Tablet_Roster_Entry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

