#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RoundupWidgetEntry

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_RoundupWidgetEntry.W_RoundupWidgetEntry_C.ExecuteUbergraph_W_RoundupWidgetEntry
// 0x0020 (0x0020 - 0x0000)
struct W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0008(0x0018)()
};
static_assert(alignof(W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry) == 0x000008, "Wrong alignment on W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry");
static_assert(sizeof(W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry) == 0x000020, "Wrong size on W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry");
static_assert(offsetof(W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry, EntryPoint) == 0x000000, "Member 'W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry, K2Node_CustomEvent_Text) == 0x000008, "Member 'W_RoundupWidgetEntry_C_ExecuteUbergraph_W_RoundupWidgetEntry::K2Node_CustomEvent_Text' has a wrong offset!");

// Function W_RoundupWidgetEntry.W_RoundupWidgetEntry_C.Set Text
// 0x0018 (0x0018 - 0x0000)
struct W_RoundupWidgetEntry_C_Set_Text final 
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_RoundupWidgetEntry_C_Set_Text) == 0x000008, "Wrong alignment on W_RoundupWidgetEntry_C_Set_Text");
static_assert(sizeof(W_RoundupWidgetEntry_C_Set_Text) == 0x000018, "Wrong size on W_RoundupWidgetEntry_C_Set_Text");
static_assert(offsetof(W_RoundupWidgetEntry_C_Set_Text, Text) == 0x000000, "Member 'W_RoundupWidgetEntry_C_Set_Text::Text' has a wrong offset!");

// Function W_RoundupWidgetEntry.W_RoundupWidgetEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_RoundupWidgetEntry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoundupWidgetEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_RoundupWidgetEntry_C_PreConstruct");
static_assert(sizeof(W_RoundupWidgetEntry_C_PreConstruct) == 0x000001, "Wrong size on W_RoundupWidgetEntry_C_PreConstruct");
static_assert(offsetof(W_RoundupWidgetEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_RoundupWidgetEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

