#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReplayLoadingScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ReplayLoadingScreen.W_ReplayLoadingScreen_C
// 0x0028 (0x0348 - 0x0320)
class UW_ReplayLoadingScreen_C final  : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_0;                                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Loading;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageWrapper;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         LoadingPercentage;                                 // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_ReplayLoadingScreen(int32 EntryPoint, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ReplayLoadingScreen_C">();
	}
	static class UW_ReplayLoadingScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ReplayLoadingScreen_C>();
	}
};
static_assert(alignof(UW_ReplayLoadingScreen_C) == 0x000008, "Wrong alignment on UW_ReplayLoadingScreen_C");
static_assert(sizeof(UW_ReplayLoadingScreen_C) == 0x000348, "Wrong size on UW_ReplayLoadingScreen_C");
static_assert(offsetof(UW_ReplayLoadingScreen_C, UberGraphFrame) == 0x000320, "Member 'UW_ReplayLoadingScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ReplayLoadingScreen_C, Image_0) == 0x000328, "Member 'UW_ReplayLoadingScreen_C::Image_0' has a wrong offset!");
static_assert(offsetof(UW_ReplayLoadingScreen_C, Loading) == 0x000330, "Member 'UW_ReplayLoadingScreen_C::Loading' has a wrong offset!");
static_assert(offsetof(UW_ReplayLoadingScreen_C, W_PageWrapper) == 0x000338, "Member 'UW_ReplayLoadingScreen_C::W_PageWrapper' has a wrong offset!");
static_assert(offsetof(UW_ReplayLoadingScreen_C, LoadingPercentage) == 0x000340, "Member 'UW_ReplayLoadingScreen_C::LoadingPercentage' has a wrong offset!");

}

