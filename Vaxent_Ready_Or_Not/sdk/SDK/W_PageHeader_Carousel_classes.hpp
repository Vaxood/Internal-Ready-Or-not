#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PageHeader_Carousel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PageHeader_Carousel.W_PageHeader_Carousel_C
// 0x0110 (0x0470 - 0x0360)
class UW_PageHeader_Carousel_C final  : public UCommonCarousel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimPrevPressed;                                   // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimNextPressed;                                   // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimSwitch;                                        // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Left;                                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Right;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Buttons;                                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    LeftActionWidget;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    RightActionWidget;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size;                                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Left;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Right;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 SpacerTextStyle;                                   // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClickableNavigation;                               // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9D[0x3];                                     // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IconHeight;                                        // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightActionIconRatio;                              // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftActionIconRatio;                               // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ButtonStyle;                                       // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UW_Button_C*, class FName>         ButtonMap;                                         // 0x03E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_Button_C*                            ActiveButton;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                SpacerPadding;                                     // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   DisabledOption;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NextTerminated;                                    // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PrevTerminated;                                    // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Next;                                              // 0x0452(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Prev;                                              // 0x0453(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   LastSelectedOption;                                // 0x0454(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingGamepad;                                      // 0x045C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SingleOption;                                      // 0x045D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IgnoreGamepad;                                     // 0x045E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInitialized;                                      // 0x045F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWaitingForButton;                                 // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9E[0x3];                                     // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QueuedButton;                                      // 0x0464(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_PageHeader_Carousel(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool K2Node_Event_IsDesignTime, float CallFunc_GetActionIconSizeRatio_IconRatio, float CallFunc_GetActionIconSizeRatio_IconRatio_1, class FName K2Node_Event_OptionNameID, bool K2Node_Event_Terminated_1, bool CallFunc_NotEqual_NameName_ReturnValue, bool K2Node_Event_Terminated, class FName K2Node_CustomEvent_OptionID_1, bool Temp_bool_True_if_break_was_hit_Variable, class FName K2Node_CustomEvent_OptionID, bool CallFunc_Not_PreBool_ReturnValue, class UW_Button_C* K2Node_CustomEvent_Button, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, float CallFunc_SelectFloat_ReturnValue, TArray<class UW_Button_C*>& CallFunc_Map_Keys_Keys, bool CallFunc_Not_PreBool_ReturnValue_2, class UW_Button_C* CallFunc_Array_Get_Item, float CallFunc_SelectFloat_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class FName CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_GetButtonByOptionID_ButtonFound, class UW_Button_C* CallFunc_GetButtonByOptionID_Button, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, ECommonInputType K2Node_CustomEvent_bNewInputType, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class FName K2Node_CustomEvent_OptionNameID_1, class FName K2Node_CustomEvent_OptionNameID, bool CallFunc_GetButtonByOptionID_ButtonFound_1, class UW_Button_C* CallFunc_GetButtonByOptionID_Button_1, bool CallFunc_NotEqual_NameName_ReturnValue_1, ESlateVisibility CallFunc_GetInputIconVisibility_Visibility, ESlateVisibility CallFunc_GetInputIconVisibility_Visibility_1, TDelegate<void(class FName OptionID)> K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_NotEqual_NameName_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, TDelegate<void(class FName OptionID)> K2Node_CreateDelegate_OutputDelegate_2, TArray<class FName>& CallFunc_Map_Keys_Keys_1, bool CallFunc_Array_IsValidIndex_ReturnValue);
	void Destruct();
	void EnableOption(class FName OptionNameID);
	void DisableOption(class FName OptionNameID);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void ButtonClicked(class UW_Button_C* Button);
	void PrevNavigated(class FName OptionID);
	void NextNavigated(class FName OptionID);
	void NavigatePrevTerminated(bool Terminated);
	void NavigateNextTerminated(bool Terminated);
	void OptionSelected(class FName OptionNameID);
	void OnInitialized();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void GetActionIconSizeRatio(class UCommonActionWidget* CommonActionWidget, float* IconRatio, const struct FSlateBrush& CallFunc_GetIcon_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_NotEqual_Vector2DVector2D_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue);
	void SetIconSize(float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1);
	void PopulateButtons(int32 LastIndex, int32 CurrentIndex, class UW_Button_C* Button, class FName Option, bool FirstButton, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UW_Button_C* CallFunc_Create_ReturnValue, class UCommonTextBlock* CallFunc_SpawnObject_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, TDelegate<void(class UW_Button_C* Button)> K2Node_CreateDelegate_OutputDelegate, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue_1, class FText CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, TArray<class FName>& CallFunc_Map_Keys_Keys, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue);
	void GetButtonByOptionID(class FName OptionNameID, bool* ButtonFound, class UW_Button_C** Button, class UW_Button_C* FoundButton, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class UW_Button_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class UW_Button_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);
	void IgnoreDisabledOption(const TArray<class FName>& Keys, int32 NextIndex, int32 PreviousIndex, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_1, TArray<class FName>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Find_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_3);
	void CheckForNewOptions(TArray<class UW_Button_C*>& CallFunc_Map_Keys_Keys, TArray<class FName>& CallFunc_Map_Keys_Keys_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_NotEqual_IntInt_ReturnValue);
	void GetInputIconVisibility(ESlateVisibility* Param_Visibility, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable_2, bool CallFunc_BooleanOR_ReturnValue, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1);
	void SelectButton(class UW_Button_C* Button, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PageHeader_Carousel_C">();
	}
	static class UW_PageHeader_Carousel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PageHeader_Carousel_C>();
	}
};
static_assert(alignof(UW_PageHeader_Carousel_C) == 0x000008, "Wrong alignment on UW_PageHeader_Carousel_C");
static_assert(sizeof(UW_PageHeader_Carousel_C) == 0x000470, "Wrong size on UW_PageHeader_Carousel_C");
static_assert(offsetof(UW_PageHeader_Carousel_C, UberGraphFrame) == 0x000360, "Member 'UW_PageHeader_Carousel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, AnimPrevPressed) == 0x000368, "Member 'UW_PageHeader_Carousel_C::AnimPrevPressed' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, AnimNextPressed) == 0x000370, "Member 'UW_PageHeader_Carousel_C::AnimNextPressed' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, AnimSwitch) == 0x000378, "Member 'UW_PageHeader_Carousel_C::AnimSwitch' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, btn_Left) == 0x000380, "Member 'UW_PageHeader_Carousel_C::btn_Left' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, btn_Right) == 0x000388, "Member 'UW_PageHeader_Carousel_C::btn_Right' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, HB_Buttons) == 0x000390, "Member 'UW_PageHeader_Carousel_C::HB_Buttons' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, LeftActionWidget) == 0x000398, "Member 'UW_PageHeader_Carousel_C::LeftActionWidget' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, RightActionWidget) == 0x0003A0, "Member 'UW_PageHeader_Carousel_C::RightActionWidget' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Size) == 0x0003A8, "Member 'UW_PageHeader_Carousel_C::Size' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Size_Left) == 0x0003B0, "Member 'UW_PageHeader_Carousel_C::Size_Left' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Size_Right) == 0x0003B8, "Member 'UW_PageHeader_Carousel_C::Size_Right' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, SpacerTextStyle) == 0x0003C0, "Member 'UW_PageHeader_Carousel_C::SpacerTextStyle' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ClickableNavigation) == 0x0003C8, "Member 'UW_PageHeader_Carousel_C::ClickableNavigation' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, IconHeight) == 0x0003CC, "Member 'UW_PageHeader_Carousel_C::IconHeight' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, RightActionIconRatio) == 0x0003D0, "Member 'UW_PageHeader_Carousel_C::RightActionIconRatio' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, LeftActionIconRatio) == 0x0003D4, "Member 'UW_PageHeader_Carousel_C::LeftActionIconRatio' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ButtonStyle) == 0x0003D8, "Member 'UW_PageHeader_Carousel_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ButtonMap) == 0x0003E0, "Member 'UW_PageHeader_Carousel_C::ButtonMap' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ActiveButton) == 0x000430, "Member 'UW_PageHeader_Carousel_C::ActiveButton' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, SpacerPadding) == 0x000438, "Member 'UW_PageHeader_Carousel_C::SpacerPadding' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, DisabledOption) == 0x000448, "Member 'UW_PageHeader_Carousel_C::DisabledOption' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, NextTerminated) == 0x000450, "Member 'UW_PageHeader_Carousel_C::NextTerminated' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, PrevTerminated) == 0x000451, "Member 'UW_PageHeader_Carousel_C::PrevTerminated' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Next) == 0x000452, "Member 'UW_PageHeader_Carousel_C::Next' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Prev) == 0x000453, "Member 'UW_PageHeader_Carousel_C::Prev' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, LastSelectedOption) == 0x000454, "Member 'UW_PageHeader_Carousel_C::LastSelectedOption' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, UsingGamepad) == 0x00045C, "Member 'UW_PageHeader_Carousel_C::UsingGamepad' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, SingleOption) == 0x00045D, "Member 'UW_PageHeader_Carousel_C::SingleOption' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, IgnoreGamepad) == 0x00045E, "Member 'UW_PageHeader_Carousel_C::IgnoreGamepad' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, bInitialized) == 0x00045F, "Member 'UW_PageHeader_Carousel_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, bWaitingForButton) == 0x000460, "Member 'UW_PageHeader_Carousel_C::bWaitingForButton' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, QueuedButton) == 0x000464, "Member 'UW_PageHeader_Carousel_C::QueuedButton' has a wrong offset!");

}

