#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioEx

#include "Basic.hpp"

#include "Modio_structs.hpp"
#include "ModioEx_structs.hpp"


namespace SDK::Params
{

// Function ModioEx.ModioSubmissionExtensionLibrary.K2_LoadModFileToMemory
// 0x0028 (0x0028 - 0x0000)
struct ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory final 
{
public:
	class UModioSubsystem*                        Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioModID                            ModId;                                             // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ModData;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1815[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory) == 0x000008, "Wrong alignment on ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory");
static_assert(sizeof(ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory) == 0x000028, "Wrong size on ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory, Target) == 0x000000, "Member 'ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory::Target' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory, ModId) == 0x000008, "Member 'ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory::ModId' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory, ModData) == 0x000010, "Member 'ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory::ModData' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory, ReturnValue) == 0x000020, "Member 'ModioSubmissionExtensionLibrary_K2_LoadModFileToMemory::ReturnValue' has a wrong offset!");

// Function ModioEx.ModioSubmissionExtensionLibrary.K2_SubmitNewModFileForModFromMemory
// 0x0070 (0x0070 - 0x0000)
struct ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory final 
{
public:
	class UModioSubsystem*                        Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioModID                            Mod;                                               // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioCreateModFileMemoryParams        Params_0;                                          // 0x0010(0x0060)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory) == 0x000008, "Wrong alignment on ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory");
static_assert(sizeof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory) == 0x000070, "Wrong size on ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory, Target) == 0x000000, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory::Target' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory, Mod) == 0x000008, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory::Mod' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory, Params_0) == 0x000010, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFileForModFromMemory::Params_0' has a wrong offset!");

// Function ModioEx.ModioSubmissionExtensionLibrary.K2_SubmitNewModFromMemoryAsync
// 0x00F0 (0x00F0 - 0x0000)
struct ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync final 
{
public:
	struct FModioModCreationHandle                Handle;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioCreateModParams                  Params_0;                                          // 0x0008(0x00C8)(Parm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 PngData;                                           // 0x00D0(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModID& NewModID)> Callback;                                          // 0x00E0(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync) == 0x000008, "Wrong alignment on ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync");
static_assert(sizeof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync) == 0x0000F0, "Wrong size on ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync, Handle) == 0x000000, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync::Handle' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync, Params_0) == 0x000008, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync::Params_0' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync, PngData) == 0x0000D0, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync::PngData' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync, Callback) == 0x0000E0, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitNewModFromMemoryAsync::Callback' has a wrong offset!");

// Function ModioEx.ModioSubmissionExtensionLibrary.K2_SubmitModChangesFromMemoryAsync
// 0x00F8 (0x00F8 - 0x0000)
struct ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync final 
{
public:
	struct FModioModID                            Mod;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioEditModParams                    Params_0;                                          // 0x0008(0x00D0)(Parm, NativeAccessSpecifierPublic)
	TArray<uint8>                                 PngData;                                           // 0x00D8(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfo& ModInfo)> Callback;                                          // 0x00E8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync) == 0x000008, "Wrong alignment on ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync");
static_assert(sizeof(ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync) == 0x0000F8, "Wrong size on ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync, Mod) == 0x000000, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync::Mod' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync, Params_0) == 0x000008, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync::Params_0' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync, PngData) == 0x0000D8, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync::PngData' has a wrong offset!");
static_assert(offsetof(ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync, Callback) == 0x0000E8, "Member 'ModioSubmissionExtensionLibrary_K2_SubmitModChangesFromMemoryAsync::Callback' has a wrong offset!");

}

