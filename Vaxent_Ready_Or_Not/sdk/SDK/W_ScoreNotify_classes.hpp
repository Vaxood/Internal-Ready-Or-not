#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreNotify

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ScoreNotify.W_ScoreNotify_C
// 0x00C0 (0x0320 - 0x0260)
class UW_ScoreNotify_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_HideScore;                                    // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ShowScore;                                    // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 RedLine_Image;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Score_Text;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Score_Value;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ScoreText;                                         // 0x0290(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         CalculatedScore;                                   // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bGive;                                             // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2DEA[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime;                                       // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreCounterSpeed;                                 // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 FinalString;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bTextAnimationFinished;                            // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEB[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Iterator;                                          // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Chars;                                             // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CurrentDelay;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenLetters;                               // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenWords;                                 // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DEC[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EndString;                                         // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bFadeOut;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DED[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalScore;                                        // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime_Text;                                  // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DEE[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     FMOD_ScoreCounterInstance;                         // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     FMOD_ScoreNotifyInstance;                          // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_ScoreNotify(int32 EntryPoint, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UFMODEvent* Temp_object_Variable, bool Temp_bool_Variable, class UFMODEvent* Temp_object_Variable_1, class UFMODEvent* Temp_object_Variable_2, class UFMODEvent* Temp_object_Variable_3, bool Temp_bool_Variable_1, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable_2, const class FString& Temp_string_Variable_2, const class FString& Temp_string_Variable_3, bool K2Node_Event_IsDesignTime, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, class FText K2Node_CustomEvent_InScoreText, int32 K2Node_CustomEvent_InScore, bool K2Node_CustomEvent_bGive, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_Add_FloatFloat_ReturnValue, bool Temp_bool_IsClosed_Variable, const class FString& K2Node_Select_Default, bool Temp_bool_Variable_3, const class FString& K2Node_Select_Default_1, float CallFunc_Multiply_FloatFloat_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FText CallFunc_Conv_StringToText_ReturnValue_1, bool CallFunc_SimulateAnimatedText_bCompleted, const class FString& CallFunc_SimulateAnimatedText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_2, class UFMODEvent* K2Node_Select_Default_2, class UFMODEvent* K2Node_Select_Default_3, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_1, bool CallFunc_EventInstanceIsValid_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_EventInstanceIsValid_ReturnValue_1, bool CallFunc_EventInstanceIsValid_ReturnValue_2, bool CallFunc_EventInstanceIsValid_ReturnValue_3, bool CallFunc_EventInstanceIsValid_ReturnValue_4, bool CallFunc_EventInstanceIsValid_ReturnValue_5, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_EventInstanceIsValid_ReturnValue_6, bool CallFunc_EventInstanceIsValid_ReturnValue_7);
	void Destruct();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void InitScoreData(class FText InScoreText, int32 InScore, bool Param_bGive);
	void PreConstruct(bool IsDesignTime);
	void PlayRewardAnim();
	void OnInitialized();
	void DestroyWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ScoreNotify_C">();
	}
	static class UW_ScoreNotify_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ScoreNotify_C>();
	}
};
static_assert(alignof(UW_ScoreNotify_C) == 0x000008, "Wrong alignment on UW_ScoreNotify_C");
static_assert(sizeof(UW_ScoreNotify_C) == 0x000320, "Wrong size on UW_ScoreNotify_C");
static_assert(offsetof(UW_ScoreNotify_C, UberGraphFrame) == 0x000260, "Member 'UW_ScoreNotify_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, Anim_HideScore) == 0x000268, "Member 'UW_ScoreNotify_C::Anim_HideScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, Anim_ShowScore) == 0x000270, "Member 'UW_ScoreNotify_C::Anim_ShowScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, RedLine_Image) == 0x000278, "Member 'UW_ScoreNotify_C::RedLine_Image' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, Score_Text) == 0x000280, "Member 'UW_ScoreNotify_C::Score_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, Score_Value) == 0x000288, "Member 'UW_ScoreNotify_C::Score_Value' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, ScoreText) == 0x000290, "Member 'UW_ScoreNotify_C::ScoreText' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, CalculatedScore) == 0x0002A8, "Member 'UW_ScoreNotify_C::CalculatedScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, bGive) == 0x0002AC, "Member 'UW_ScoreNotify_C::bGive' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, ElapsedTime) == 0x0002B0, "Member 'UW_ScoreNotify_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, ScoreCounterSpeed) == 0x0002B4, "Member 'UW_ScoreNotify_C::ScoreCounterSpeed' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, FinalString) == 0x0002B8, "Member 'UW_ScoreNotify_C::FinalString' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, bTextAnimationFinished) == 0x0002C8, "Member 'UW_ScoreNotify_C::bTextAnimationFinished' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, Iterator) == 0x0002CC, "Member 'UW_ScoreNotify_C::Iterator' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, Chars) == 0x0002D0, "Member 'UW_ScoreNotify_C::Chars' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, CurrentDelay) == 0x0002E0, "Member 'UW_ScoreNotify_C::CurrentDelay' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, DelayBetweenLetters) == 0x0002E4, "Member 'UW_ScoreNotify_C::DelayBetweenLetters' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, DelayBetweenWords) == 0x0002E8, "Member 'UW_ScoreNotify_C::DelayBetweenWords' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, EndString) == 0x0002F0, "Member 'UW_ScoreNotify_C::EndString' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, bFadeOut) == 0x000300, "Member 'UW_ScoreNotify_C::bFadeOut' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, TotalScore) == 0x000304, "Member 'UW_ScoreNotify_C::TotalScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, ElapsedTime_Text) == 0x000308, "Member 'UW_ScoreNotify_C::ElapsedTime_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, FMOD_ScoreCounterInstance) == 0x000310, "Member 'UW_ScoreNotify_C::FMOD_ScoreCounterInstance' has a wrong offset!");
static_assert(offsetof(UW_ScoreNotify_C, FMOD_ScoreNotifyInstance) == 0x000318, "Member 'UW_ScoreNotify_C::FMOD_ScoreNotifyInstance' has a wrong offset!");

}

