#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemSelection_Item

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.ExecuteUbergraph_W_ItemSelection_Item
// 0x0170 (0x0170 - 0x0000)
struct W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildPirated_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0088)()
	struct FSlateBrush                            K2Node_CustomEvent_InBrush;                        // 0x00D8(0x0088)(ConstParm)
	bool                                          K2Node_CustomEvent_bIsVisible;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDC[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildPirated_ReturnValue_1;             // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item");
static_assert(sizeof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item) == 0x000170, "Wrong size on W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, EntryPoint) == 0x000000, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, Temp_bool_Variable) == 0x000014, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, Temp_float_Variable) == 0x000028, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, Temp_float_Variable_1) == 0x00002C, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, CallFunc_IsBuildPirated_ReturnValue) == 0x000048, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::CallFunc_IsBuildPirated_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_CustomEvent_InBrush) == 0x0000D8, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_CustomEvent_InBrush' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_CustomEvent_bIsVisible) == 0x000160, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_CustomEvent_bIsVisible' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_Select_Default) == 0x000164, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_CustomEvent_bVisible) == 0x000168, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_CustomEvent_bVisible' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, K2Node_Event_IsDesignTime) == 0x000169, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item, CallFunc_IsBuildPirated_ReturnValue_1) == 0x00016A, "Member 'W_ItemSelection_Item_C_ExecuteUbergraph_W_ItemSelection_Item::CallFunc_IsBuildPirated_ReturnValue_1' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ItemSelection_Item_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemSelection_Item_C_PreConstruct) == 0x000001, "Wrong alignment on W_ItemSelection_Item_C_PreConstruct");
static_assert(sizeof(W_ItemSelection_Item_C_PreConstruct) == 0x000001, "Wrong size on W_ItemSelection_Item_C_PreConstruct");
static_assert(offsetof(W_ItemSelection_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ItemSelection_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.Re-Initialize
// 0x0001 (0x0001 - 0x0000)
struct W_ItemSelection_Item_C_ReMinusInitialize final 
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemSelection_Item_C_ReMinusInitialize) == 0x000001, "Wrong alignment on W_ItemSelection_Item_C_ReMinusInitialize");
static_assert(sizeof(W_ItemSelection_Item_C_ReMinusInitialize) == 0x000001, "Wrong size on W_ItemSelection_Item_C_ReMinusInitialize");
static_assert(offsetof(W_ItemSelection_Item_C_ReMinusInitialize, bVisible) == 0x000000, "Member 'W_ItemSelection_Item_C_ReMinusInitialize::bVisible' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.Initialize
// 0x0090 (0x0090 - 0x0000)
struct W_ItemSelection_Item_C_Initialize final 
{
public:
	struct FSlateBrush                            InBrush;                                           // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bIsVisible;                                        // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ItemSelection_Item_C_Initialize) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_Initialize");
static_assert(sizeof(W_ItemSelection_Item_C_Initialize) == 0x000090, "Wrong size on W_ItemSelection_Item_C_Initialize");
static_assert(offsetof(W_ItemSelection_Item_C_Initialize, InBrush) == 0x000000, "Member 'W_ItemSelection_Item_C_Initialize::InBrush' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_Initialize, bIsVisible) == 0x000088, "Member 'W_ItemSelection_Item_C_Initialize::bIsVisible' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.ChangeIconsIfBuildIsPirated
// 0x0088 (0x0088 - 0x0000)
struct W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated final 
{
public:
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0000(0x0088)()
};
static_assert(alignof(W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated");
static_assert(sizeof(W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated) == 0x000088, "Wrong size on W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated");
static_assert(offsetof(W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated, K2Node_MakeStruct_SlateBrush) == 0x000000, "Member 'W_ItemSelection_Item_C_ChangeIconsIfBuildIsPirated::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.FadeOut
// 0x0010 (0x0010 - 0x0000)
struct W_ItemSelection_Item_C_FadeOut final 
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSelection_Item_C_FadeOut) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_FadeOut");
static_assert(sizeof(W_ItemSelection_Item_C_FadeOut) == 0x000010, "Wrong size on W_ItemSelection_Item_C_FadeOut");
static_assert(offsetof(W_ItemSelection_Item_C_FadeOut, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'W_ItemSelection_Item_C_FadeOut::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_FadeOut, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_ItemSelection_Item_C_FadeOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.Select
// 0x0010 (0x0010 - 0x0000)
struct W_ItemSelection_Item_C_Select final 
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSelection_Item_C_Select) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_Select");
static_assert(sizeof(W_ItemSelection_Item_C_Select) == 0x000010, "Wrong size on W_ItemSelection_Item_C_Select");
static_assert(offsetof(W_ItemSelection_Item_C_Select, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'W_ItemSelection_Item_C_Select::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_Select, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_ItemSelection_Item_C_Select::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.Deselect
// 0x0010 (0x0010 - 0x0000)
struct W_ItemSelection_Item_C_Deselect final 
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDF[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSelection_Item_C_Deselect) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_Deselect");
static_assert(sizeof(W_ItemSelection_Item_C_Deselect) == 0x000010, "Wrong size on W_ItemSelection_Item_C_Deselect");
static_assert(offsetof(W_ItemSelection_Item_C_Deselect, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'W_ItemSelection_Item_C_Deselect::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_Deselect, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'W_ItemSelection_Item_C_Deselect::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_Deselect, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_ItemSelection_Item_C_Deselect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemSelection_Item_C_Deselect, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'W_ItemSelection_Item_C_Deselect::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function W_ItemSelection_Item.W_ItemSelection_Item_C.ConfirmSelection
// 0x0008 (0x0008 - 0x0000)
struct W_ItemSelection_Item_C_ConfirmSelection final 
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemSelection_Item_C_ConfirmSelection) == 0x000008, "Wrong alignment on W_ItemSelection_Item_C_ConfirmSelection");
static_assert(sizeof(W_ItemSelection_Item_C_ConfirmSelection) == 0x000008, "Wrong size on W_ItemSelection_Item_C_ConfirmSelection");
static_assert(offsetof(W_ItemSelection_Item_C_ConfirmSelection, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_ItemSelection_Item_C_ConfirmSelection::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

