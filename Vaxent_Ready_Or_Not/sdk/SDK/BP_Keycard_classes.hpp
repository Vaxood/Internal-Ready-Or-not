#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Keycard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Keycard.BP_Keycard_C
// 0x0018 (0x0238 - 0x0220)
class ABP_Keycard_C final  : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UInteractableComponent*                 PickupInteractable;                                // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   KeycardMesh;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Keycard(int32 EntryPoint, struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEventAtLocation_ReturnValue, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_7, class UInteractableComponent* K2Node_Event_InInteractableComponent_7, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_6, class UInteractableComponent* K2Node_Event_InInteractableComponent_6, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_5, class UInteractableComponent* K2Node_Event_InInteractableComponent_5, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_4, class UInteractableComponent* K2Node_Event_InInteractableComponent_4, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_3, class UInteractableComponent* K2Node_Event_InInteractableComponent_3, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_2, class UInteractableComponent* K2Node_Event_InInteractableComponent_2, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator_1, class UInteractableComponent* K2Node_Event_InInteractableComponent_1, class AReadyOrNotCharacter* K2Node_Event_InteractInstigator, class UInteractableComponent* K2Node_Event_InInteractableComponent, class ABaseItem* CallFunc_GetEquippedItem_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Interact(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void ReceiveBeginPlay();
	void OnFocusLost(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void OnFocusGain(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void MeleeInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void Fire(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void EndInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void EndFire(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);
	void DoubleTapInteract(class AReadyOrNotCharacter* InteractInstigator, class UInteractableComponent* InInteractableComponent);

	class UInteractableComponent* GetInteractableComponent() const;
	float DetermineInteractionDistance() const;
	EInputEvent DetermineInputEvent() const;
	float DetermineCurrentProgress() const;
	class FName DetermineAnimatedIcon() const;
	class FText DetermineActionText() const;
	bool CanInteractThroughHitActors(struct FHitResult& Hit) const;
	bool CanInteract() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Keycard_C">();
	}
	static class ABP_Keycard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Keycard_C>();
	}
};
static_assert(alignof(ABP_Keycard_C) == 0x000008, "Wrong alignment on ABP_Keycard_C");
static_assert(sizeof(ABP_Keycard_C) == 0x000238, "Wrong size on ABP_Keycard_C");
static_assert(offsetof(ABP_Keycard_C, UberGraphFrame) == 0x000220, "Member 'ABP_Keycard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Keycard_C, PickupInteractable) == 0x000228, "Member 'ABP_Keycard_C::PickupInteractable' has a wrong offset!");
static_assert(offsetof(ABP_Keycard_C, KeycardMesh) == 0x000230, "Member 'ABP_Keycard_C::KeycardMesh' has a wrong offset!");

}

