#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldMap_MissionSelect

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.OnSetMissionButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature final 
{
public:
	class UW_WorldMap_MissionSelect_C*            BtnClicked;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature");
static_assert(sizeof(W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature) == 0x000008, "Wrong size on W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature, BtnClicked) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature::BtnClicked' has a wrong offset!");

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.ExecuteUbergraph_W_WorldMap_MissionSelect
// 0x0050 (0x0050 - 0x0000)
struct W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameModeSelectable_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect) == 0x000008, "Wrong alignment on W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect");
static_assert(sizeof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect) == 0x000050, "Wrong size on W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect");
static_assert(offsetof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect, EntryPoint) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect, CallFunc_IsGameModeSelectable_ReturnValue) == 0x00004C, "Member 'W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect::CallFunc_IsGameModeSelectable_ReturnValue' has a wrong offset!");

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_WorldMap_MissionSelect_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMap_MissionSelect_C_Tick) == 0x000004, "Wrong alignment on W_WorldMap_MissionSelect_C_Tick");
static_assert(sizeof(W_WorldMap_MissionSelect_C_Tick) == 0x00003C, "Wrong size on W_WorldMap_MissionSelect_C_Tick");
static_assert(offsetof(W_WorldMap_MissionSelect_C_Tick, MyGeometry) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_Tick, InDeltaTime) == 0x000038, "Member 'W_WorldMap_MissionSelect_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WorldMap_MissionSelect_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WorldMap_MissionSelect_C_PreConstruct) == 0x000001, "Wrong alignment on W_WorldMap_MissionSelect_C_PreConstruct");
static_assert(sizeof(W_WorldMap_MissionSelect_C_PreConstruct) == 0x000001, "Wrong size on W_WorldMap_MissionSelect_C_PreConstruct");
static_assert(offsetof(W_WorldMap_MissionSelect_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.UpdateMissionScore
// 0x0840 (0x0840 - 0x0000)
struct W_WorldMap_MissionSelect_C_UpdateMissionScore final 
{
public:
	class FName                                   SelectionMission;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LastLoadedScoreMission;                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  CallFunc_GetMapDetailsFromName_ReturnValue;        // 0x0028(0x0788)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426D[0x7];                                     // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Map_Find_Value;                           // 0x07B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426E[0x7];                                     // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x07D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBasicLevelStats                       CallFunc_LoadLevelStats_OutStats;                  // 0x07E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426F[0x3];                                     // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue; // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CalculateGradeLetterFromPercentage_ReturnValue; // 0x0800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0810(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0828(0x0018)()
};
static_assert(alignof(W_WorldMap_MissionSelect_C_UpdateMissionScore) == 0x000008, "Wrong alignment on W_WorldMap_MissionSelect_C_UpdateMissionScore");
static_assert(sizeof(W_WorldMap_MissionSelect_C_UpdateMissionScore) == 0x000840, "Wrong size on W_WorldMap_MissionSelect_C_UpdateMissionScore");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, SelectionMission) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::SelectionMission' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, LastLoadedScoreMission) == 0x000008, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::LastLoadedScoreMission' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_GetMapDetailsFromName_ReturnValue) == 0x000028, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_GetMapDetailsFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0007B0, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_Map_Find_Value) == 0x0007B8, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_Map_Find_ReturnValue) == 0x0007C8, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_SelectString_ReturnValue) == 0x0007D0, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_LoadLevelStats_OutStats) == 0x0007E0, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_LoadLevelStats_OutStats' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0007EC, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue) == 0x0007F0, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_CalculateGradeLetterFromPercentage_ReturnValue) == 0x000800, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_CalculateGradeLetterFromPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_Conv_StringToText_ReturnValue) == 0x000810, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_UpdateMissionScore, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000828, "Member 'W_WorldMap_MissionSelect_C_UpdateMissionScore::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.OnShow
// 0x0010 (0x0010 - 0x0000)
struct W_WorldMap_MissionSelect_C_OnShow final 
{
public:
	class FName                                   SelectedMission;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameModeSelectable_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMap_MissionSelect_C_OnShow) == 0x000004, "Wrong alignment on W_WorldMap_MissionSelect_C_OnShow");
static_assert(sizeof(W_WorldMap_MissionSelect_C_OnShow) == 0x000010, "Wrong size on W_WorldMap_MissionSelect_C_OnShow");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnShow, SelectedMission) == 0x000000, "Member 'W_WorldMap_MissionSelect_C_OnShow::SelectedMission' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnShow, Temp_bool_Variable) == 0x000008, "Member 'W_WorldMap_MissionSelect_C_OnShow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnShow, Temp_byte_Variable) == 0x000009, "Member 'W_WorldMap_MissionSelect_C_OnShow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnShow, Temp_byte_Variable_1) == 0x00000A, "Member 'W_WorldMap_MissionSelect_C_OnShow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnShow, CallFunc_IsGameModeSelectable_ReturnValue) == 0x00000B, "Member 'W_WorldMap_MissionSelect_C_OnShow::CallFunc_IsGameModeSelectable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMap_MissionSelect_C_OnShow, K2Node_Select_Default) == 0x00000C, "Member 'W_WorldMap_MissionSelect_C_OnShow::K2Node_Select_Default' has a wrong offset!");

}

