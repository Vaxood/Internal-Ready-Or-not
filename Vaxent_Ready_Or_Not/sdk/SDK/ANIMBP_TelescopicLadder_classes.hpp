#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_TelescopicLadder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_TelescopicLadder.ANIMBP_TelescopicLadder_C
// 0x02C0 (0x0580 - 0x02C0)
class UANIMBP_TelescopicLadder_C final  : public UAnimInstance
{
public:
	uint8                                         Pad_455B[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x02C8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x03B0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0498(0x00A0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0538(0x0030)()
	bool                                          bDeploying;                                        // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455C[0x3];                                     // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RungCount;                                         // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FreezeFrame;                                       // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ANIMBP_TelescopicLadder(int32 EntryPoint, float K2Node_Event_DeltaTimeX, class AActor* CallFunc_GetOwningActor_ReturnValue, class ALadderSnapZone* K2Node_DynamicCast_AsLadder_Snap_Zone, bool K2Node_DynamicCast_bSuccess, class ATelescopicLadder* K2Node_DynamicCast_AsTelescopic_Ladder, bool K2Node_DynamicCast_bSuccess_1);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_TelescopicLadder_C">();
	}
	static class UANIMBP_TelescopicLadder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_TelescopicLadder_C>();
	}
};
static_assert(alignof(UANIMBP_TelescopicLadder_C) == 0x000010, "Wrong alignment on UANIMBP_TelescopicLadder_C");
static_assert(sizeof(UANIMBP_TelescopicLadder_C) == 0x000580, "Wrong size on UANIMBP_TelescopicLadder_C");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, UberGraphFrame) == 0x0002C0, "Member 'UANIMBP_TelescopicLadder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0002C8, "Member 'UANIMBP_TelescopicLadder_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, AnimGraphNode_BlendSpacePlayer) == 0x0003B0, "Member 'UANIMBP_TelescopicLadder_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, AnimGraphNode_BlendListByBool) == 0x000498, "Member 'UANIMBP_TelescopicLadder_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, AnimGraphNode_Root) == 0x000538, "Member 'UANIMBP_TelescopicLadder_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, bDeploying) == 0x000568, "Member 'UANIMBP_TelescopicLadder_C::bDeploying' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, RungCount) == 0x00056C, "Member 'UANIMBP_TelescopicLadder_C::RungCount' has a wrong offset!");
static_assert(offsetof(UANIMBP_TelescopicLadder_C, FreezeFrame) == 0x000570, "Member 'UANIMBP_TelescopicLadder_C::FreezeFrame' has a wrong offset!");

}

