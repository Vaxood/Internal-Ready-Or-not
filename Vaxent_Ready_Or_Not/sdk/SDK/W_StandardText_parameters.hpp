#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_StandardText.W_StandardText_C.ExecuteUbergraph_W_StandardText
// 0x0060 (0x0060 - 0x0000)
struct W_StandardText_C_ExecuteUbergraph_W_StandardText final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4456[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0008(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(W_StandardText_C_ExecuteUbergraph_W_StandardText) == 0x000008, "Wrong alignment on W_StandardText_C_ExecuteUbergraph_W_StandardText");
static_assert(sizeof(W_StandardText_C_ExecuteUbergraph_W_StandardText) == 0x000060, "Wrong size on W_StandardText_C_ExecuteUbergraph_W_StandardText");
static_assert(offsetof(W_StandardText_C_ExecuteUbergraph_W_StandardText, EntryPoint) == 0x000000, "Member 'W_StandardText_C_ExecuteUbergraph_W_StandardText::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_StandardText_C_ExecuteUbergraph_W_StandardText, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_StandardText_C_ExecuteUbergraph_W_StandardText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_StandardText_C_ExecuteUbergraph_W_StandardText, K2Node_MakeStruct_SlateFontInfo) == 0x000008, "Member 'W_StandardText_C_ExecuteUbergraph_W_StandardText::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function W_StandardText.W_StandardText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_StandardText_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardText_C_PreConstruct) == 0x000001, "Wrong alignment on W_StandardText_C_PreConstruct");
static_assert(sizeof(W_StandardText_C_PreConstruct) == 0x000001, "Wrong size on W_StandardText_C_PreConstruct");
static_assert(offsetof(W_StandardText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_StandardText_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

