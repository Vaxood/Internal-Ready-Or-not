#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DebugInfoContainer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.ExecuteUbergraph_W_DebugInfoContainer
// 0x0008 (0x0008 - 0x0000)
struct W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer) == 0x000004, "Wrong alignment on W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer");
static_assert(sizeof(W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer) == 0x000008, "Wrong size on W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer");
static_assert(offsetof(W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer, EntryPoint) == 0x000000, "Member 'W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_DebugInfoContainer_C_ExecuteUbergraph_W_DebugInfoContainer::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_DebugInfoContainer_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DebugInfoContainer_C_PreConstruct) == 0x000001, "Wrong alignment on W_DebugInfoContainer_C_PreConstruct");
static_assert(sizeof(W_DebugInfoContainer_C_PreConstruct) == 0x000001, "Wrong size on W_DebugInfoContainer_C_PreConstruct");
static_assert(offsetof(W_DebugInfoContainer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_DebugInfoContainer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.Get Debug Item (Index)
// 0x0020 (0x0020 - 0x0000)
struct W_DebugInfoContainer_C_Get_Debug_Item__Index_ final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3876[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DebugInfo_C*                         DebugInfoWidget;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3877[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DebugInfo_C*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DebugInfoContainer_C_Get_Debug_Item__Index_) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_Get_Debug_Item__Index_");
static_assert(sizeof(W_DebugInfoContainer_C_Get_Debug_Item__Index_) == 0x000020, "Wrong size on W_DebugInfoContainer_C_Get_Debug_Item__Index_");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Index_, Param_Index) == 0x000000, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Index_::Param_Index' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Index_, DebugInfoWidget) == 0x000008, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Index_::DebugInfoWidget' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Index_, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Index_::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Index_, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Index_::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.Get Debug Item (Name)
// 0x0030 (0x0030 - 0x0000)
struct W_DebugInfoContainer_C_Get_Debug_Item__Name_ final 
{
public:
	class FText                                   Debug_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_DebugInfo_C*                         DebugInfoWidget;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3878[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DebugInfo_C*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DebugInfoContainer_C_Get_Debug_Item__Name_) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_Get_Debug_Item__Name_");
static_assert(sizeof(W_DebugInfoContainer_C_Get_Debug_Item__Name_) == 0x000030, "Wrong size on W_DebugInfoContainer_C_Get_Debug_Item__Name_");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Name_, Debug_Name) == 0x000000, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Name_::Debug_Name' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Name_, DebugInfoWidget) == 0x000018, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Name_::DebugInfoWidget' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Name_, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Name_::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Get_Debug_Item__Name_, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_DebugInfoContainer_C_Get_Debug_Item__Name_::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.GetNumDebugEntries
// 0x0008 (0x0008 - 0x0000)
struct W_DebugInfoContainer_C_GetNumDebugEntries final 
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DebugInfoContainer_C_GetNumDebugEntries) == 0x000004, "Wrong alignment on W_DebugInfoContainer_C_GetNumDebugEntries");
static_assert(sizeof(W_DebugInfoContainer_C_GetNumDebugEntries) == 0x000008, "Wrong size on W_DebugInfoContainer_C_GetNumDebugEntries");
static_assert(offsetof(W_DebugInfoContainer_C_GetNumDebugEntries, Return_Value) == 0x000000, "Member 'W_DebugInfoContainer_C_GetNumDebugEntries::Return_Value' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_GetNumDebugEntries, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_DebugInfoContainer_C_GetNumDebugEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.Refresh
// 0x00E0 (0x00E0 - 0x0000)
struct W_DebugInfoContainer_C_Refresh final 
{
public:
	bool                                          bCanClearSpacing;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3879[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_387A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_387B[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_387C[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_387D[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_387E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_387F[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3880[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_DebugInfo_C*                         CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3881[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3882[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_DebugInfo_C*                         CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3883[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DebugInfoContainer_C_Refresh) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_Refresh");
static_assert(sizeof(W_DebugInfoContainer_C_Refresh) == 0x0000E0, "Wrong size on W_DebugInfoContainer_C_Refresh");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, bCanClearSpacing) == 0x000000, "Member 'W_DebugInfoContainer_C_Refresh::bCanClearSpacing' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_bool_Variable) == 0x000001, "Member 'W_DebugInfoContainer_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Variable) == 0x000004, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_bool_Variable_1) == 0x000008, "Member 'W_DebugInfoContainer_C_Refresh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'W_DebugInfoContainer_C_Refresh::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_byte_Variable) == 0x00002C, "Member 'W_DebugInfoContainer_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000030, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000038, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_byte_Variable_1) == 0x000040, "Member 'W_DebugInfoContainer_C_Refresh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Get_Item) == 0x000044, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_bool_Variable_2) == 0x000058, "Member 'W_DebugInfoContainer_C_Refresh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, K2Node_Select_Default) == 0x00005A, "Member 'W_DebugInfoContainer_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, K2Node_Select_Default_1) == 0x00005C, "Member 'W_DebugInfoContainer_C_Refresh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000060, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_int_Loop_Counter_Variable_2) == 0x000064, "Member 'W_DebugInfoContainer_C_Refresh::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Less_IntInt_ReturnValue_2) == 0x000075, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_float_Variable) == 0x00007C, "Member 'W_DebugInfoContainer_C_Refresh::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, Temp_bool_Variable_3) == 0x000080, "Member 'W_DebugInfoContainer_C_Refresh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_GetOwningPlayer_ReturnValue) == 0x000088, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Create_ReturnValue) == 0x000090, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, K2Node_Select_Default_2) == 0x000098, "Member 'W_DebugInfoContainer_C_Refresh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, K2Node_Select_Default_3) == 0x00009C, "Member 'W_DebugInfoContainer_C_Refresh::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, K2Node_MakeStruct_Margin) == 0x0000A0, "Member 'W_DebugInfoContainer_C_Refresh::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000B8, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_Refresh, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000DC, "Member 'W_DebugInfoContainer_C_Refresh::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.AddDebugItem
// 0x0060 (0x0060 - 0x0000)
struct W_DebugInfoContainer_C_AddDebugItem final 
{
public:
	class FText                                   Label;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Value;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_DebugInfo_C*                         CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DebugInfoContainer_C_AddDebugItem) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_AddDebugItem");
static_assert(sizeof(W_DebugInfoContainer_C_AddDebugItem) == 0x000060, "Wrong size on W_DebugInfoContainer_C_AddDebugItem");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, Label) == 0x000000, "Member 'W_DebugInfoContainer_C_AddDebugItem::Label' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, Value) == 0x000018, "Member 'W_DebugInfoContainer_C_AddDebugItem::Value' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, K2Node_MakeStruct_Margin) == 0x000030, "Member 'W_DebugInfoContainer_C_AddDebugItem::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'W_DebugInfoContainer_C_AddDebugItem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, CallFunc_Create_ReturnValue) == 0x000048, "Member 'W_DebugInfoContainer_C_AddDebugItem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000050, "Member 'W_DebugInfoContainer_C_AddDebugItem::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItem, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'W_DebugInfoContainer_C_AddDebugItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.AddDebugItems
// 0x0078 (0x0078 - 0x0000)
struct W_DebugInfoContainer_C_AddDebugItems final 
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3884[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)(ConstParm)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3885[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3886[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3887[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UW_DebugInfo_C*                         CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DebugInfoContainer_C_AddDebugItems) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_AddDebugItems");
static_assert(sizeof(W_DebugInfoContainer_C_AddDebugItems) == 0x000078, "Wrong size on W_DebugInfoContainer_C_AddDebugItems");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, Num) == 0x000000, "Member 'W_DebugInfoContainer_C_AddDebugItems::Num' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, Temp_int_Variable) == 0x000004, "Member 'W_DebugInfoContainer_C_AddDebugItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, Temp_int_Variable_1) == 0x00000C, "Member 'W_DebugInfoContainer_C_AddDebugItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, Temp_text_Variable) == 0x000018, "Member 'W_DebugInfoContainer_C_AddDebugItems::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, Temp_bool_Variable) == 0x000030, "Member 'W_DebugInfoContainer_C_AddDebugItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, Temp_bool_Variable_1) == 0x000039, "Member 'W_DebugInfoContainer_C_AddDebugItems::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, K2Node_Select_Default) == 0x00003C, "Member 'W_DebugInfoContainer_C_AddDebugItems::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, K2Node_Select_Default_1) == 0x000040, "Member 'W_DebugInfoContainer_C_AddDebugItems::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, K2Node_MakeStruct_Margin) == 0x000050, "Member 'W_DebugInfoContainer_C_AddDebugItems::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_Create_ReturnValue) == 0x000060, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000068, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_AddDebugItems, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'W_DebugInfoContainer_C_AddDebugItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.SetDebugItemValue
// 0x0030 (0x0030 - 0x0000)
struct W_DebugInfoContainer_C_SetDebugItemValue final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3888[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DebugText;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_DebugInfo_C*                         CallFunc_Get_Debug_Item__Index__DebugInfoWidget;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DebugInfoContainer_C_SetDebugItemValue) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_SetDebugItemValue");
static_assert(sizeof(W_DebugInfoContainer_C_SetDebugItemValue) == 0x000030, "Wrong size on W_DebugInfoContainer_C_SetDebugItemValue");
static_assert(offsetof(W_DebugInfoContainer_C_SetDebugItemValue, Param_Index) == 0x000000, "Member 'W_DebugInfoContainer_C_SetDebugItemValue::Param_Index' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_SetDebugItemValue, DebugText) == 0x000008, "Member 'W_DebugInfoContainer_C_SetDebugItemValue::DebugText' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_SetDebugItemValue, CallFunc_Get_Debug_Item__Index__DebugInfoWidget) == 0x000020, "Member 'W_DebugInfoContainer_C_SetDebugItemValue::CallFunc_Get_Debug_Item__Index__DebugInfoWidget' has a wrong offset!");
static_assert(offsetof(W_DebugInfoContainer_C_SetDebugItemValue, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'W_DebugInfoContainer_C_SetDebugItemValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_DebugInfoContainer.W_DebugInfoContainer_C.GetTitle
// 0x0018 (0x0018 - 0x0000)
struct W_DebugInfoContainer_C_GetTitle final 
{
public:
	class FText                                   Return_Value;                                      // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(W_DebugInfoContainer_C_GetTitle) == 0x000008, "Wrong alignment on W_DebugInfoContainer_C_GetTitle");
static_assert(sizeof(W_DebugInfoContainer_C_GetTitle) == 0x000018, "Wrong size on W_DebugInfoContainer_C_GetTitle");
static_assert(offsetof(W_DebugInfoContainer_C_GetTitle, Return_Value) == 0x000000, "Member 'W_DebugInfoContainer_C_GetTitle::Return_Value' has a wrong offset!");

}

