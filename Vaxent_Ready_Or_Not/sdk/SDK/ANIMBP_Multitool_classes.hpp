#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Multitool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Multitool.ANIMBP_Multitool_C
// 0x0340 (0x0600 - 0x02C0)
class UANIMBP_Multitool_C final  : public UAnimInstance
{
public:
	uint8                                         Pad_444E[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x02C8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0378(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x03F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0478(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x04F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0540(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x05C0(0x0030)()
	EMultitoolFunctions                           CurrentToolKit;                                    // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SecondStage;                                       // 0x05F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ANIMBP_Multitool(int32 EntryPoint, class AActor* CallFunc_GetOwningActor_ReturnValue, class AMultitool* K2Node_DynamicCast_AsMultitool, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaTimeX);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Multitool_C">();
	}
	static class UANIMBP_Multitool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Multitool_C>();
	}
};
static_assert(alignof(UANIMBP_Multitool_C) == 0x000010, "Wrong alignment on UANIMBP_Multitool_C");
static_assert(sizeof(UANIMBP_Multitool_C) == 0x000600, "Wrong size on UANIMBP_Multitool_C");
static_assert(offsetof(UANIMBP_Multitool_C, UberGraphFrame) == 0x0002C0, "Member 'UANIMBP_Multitool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_BlendListByEnum) == 0x0002C8, "Member 'UANIMBP_Multitool_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_SequencePlayer_3) == 0x000378, "Member 'UANIMBP_Multitool_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_SequencePlayer_2) == 0x0003F8, "Member 'UANIMBP_Multitool_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_SequencePlayer_1) == 0x000478, "Member 'UANIMBP_Multitool_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_Slot) == 0x0004F8, "Member 'UANIMBP_Multitool_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_SequencePlayer) == 0x000540, "Member 'UANIMBP_Multitool_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, AnimGraphNode_Root) == 0x0005C0, "Member 'UANIMBP_Multitool_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, CurrentToolKit) == 0x0005F0, "Member 'UANIMBP_Multitool_C::CurrentToolKit' has a wrong offset!");
static_assert(offsetof(UANIMBP_Multitool_C, SecondStage) == 0x0005F1, "Member 'UANIMBP_Multitool_C::SecondStage' has a wrong offset!");

}

