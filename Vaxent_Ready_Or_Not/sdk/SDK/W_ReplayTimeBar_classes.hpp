#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReplayTimeBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ReplayTimeBar.W_ReplayTimeBar_C
// 0x0060 (0x02C0 - 0x0260)
class UW_ReplayTimeBar_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                ReplaySlider;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     Target;                                            // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Scrubbing;                                         // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B6[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnScrubbingBegin;                                  // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnScrubbingEnd;                                    // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnChangeCurrentTime;                               // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnScrubbingBegin__DelegateSignature();
	void OnScrubbingEnd__DelegateSignature(float NewCurrentTimeInSeconds);
	void OnChangeCurrentTime__DelegateSignature(float NewCurrentTimeInSeconds);
	void ExecuteUbergraph_W_ReplayTimeBar(int32 EntryPoint, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, float CallFunc_GetValue_ReturnValue, const struct FVector2D& CallFunc_GetWidgetSize_Local_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class UW_ReplayEventMarker_C* CallFunc_Create_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, class AReplayController* K2Node_DynamicCast_AsReplay_Controller, bool K2Node_DynamicCast_bSuccess, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetCurrentReplayTotalTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_2, const struct FMargin& K2Node_MakeStruct_Margin, float K2Node_ComponentBoundEvent_Value, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, class AReplayController* K2Node_DynamicCast_AsReplay_Controller_1, bool K2Node_DynamicCast_bSuccess_1, float CallFunc_GetCurrentReplayCurrentTimeInSeconds_ReturnValue, float K2Node_CustomEvent_BarPercentage, const struct FReplayEvent& K2Node_CustomEvent_ReplayEvent, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, const struct FAnchors& K2Node_MakeStruct_Anchors);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void AddEvent(float BarPercentage, const struct FReplayEvent& ReplayEvent);
	void BndEvt__W_ReplayTimeBar_ReplaySlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void OnInitialized();
	void BndEvt__W_ReplayTimeBar_ReplaySlider_K2Node_ComponentBoundEvent_1_OnMouseCaptureEndEvent__DelegateSignature();
	void BndEvt__W_ReplayTimeBar_ReplaySlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature();
	float Get_ProgressBar__Percent_0(class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReplayController* K2Node_DynamicCast_AsReplay_Controller, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetCurrentReplayCurrentTimeInSeconds_ReturnValue, float CallFunc_GetCurrentReplayTotalTimeInSeconds_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);
	float Get_ReplaySlider_Value(class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReplayController* K2Node_DynamicCast_AsReplay_Controller, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetCurrentReplayCurrentTimeInSeconds_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ReplayTimeBar_C">();
	}
	static class UW_ReplayTimeBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ReplayTimeBar_C>();
	}
};
static_assert(alignof(UW_ReplayTimeBar_C) == 0x000008, "Wrong alignment on UW_ReplayTimeBar_C");
static_assert(sizeof(UW_ReplayTimeBar_C) == 0x0002C0, "Wrong size on UW_ReplayTimeBar_C");
static_assert(offsetof(UW_ReplayTimeBar_C, UberGraphFrame) == 0x000260, "Member 'UW_ReplayTimeBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, CanvasPanel_0) == 0x000268, "Member 'UW_ReplayTimeBar_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, ProgressBar_) == 0x000270, "Member 'UW_ReplayTimeBar_C::ProgressBar_' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, ReplaySlider) == 0x000278, "Member 'UW_ReplayTimeBar_C::ReplaySlider' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, Target) == 0x000280, "Member 'UW_ReplayTimeBar_C::Target' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, Scrubbing) == 0x000288, "Member 'UW_ReplayTimeBar_C::Scrubbing' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, OnScrubbingBegin) == 0x000290, "Member 'UW_ReplayTimeBar_C::OnScrubbingBegin' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, OnScrubbingEnd) == 0x0002A0, "Member 'UW_ReplayTimeBar_C::OnScrubbingEnd' has a wrong offset!");
static_assert(offsetof(UW_ReplayTimeBar_C, OnChangeCurrentTime) == 0x0002B0, "Member 'UW_ReplayTimeBar_C::OnChangeCurrentTime' has a wrong offset!");

}

