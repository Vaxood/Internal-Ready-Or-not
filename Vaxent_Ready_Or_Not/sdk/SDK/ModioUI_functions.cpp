#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUI

#include "Basic.hpp"

#include "ModioUI_classes.hpp"
#include "ModioUI_parameters.hpp"


namespace SDK
{

// Function ModioUI.ModioProceduralBrushParams.GetMaterialInstance
// (Native, Public)
// Parameters:
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UModioProceduralBrushParams::GetMaterialInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioProceduralBrushParams", "GetMaterialInstance");

	Params::ModioProceduralBrushParams_GetMaterialInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDialogController.HandleBackgroundClick
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UModioDialogController::HandleBackgroundClick(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDialogController", "HandleBackgroundClick");

	Params::ModioDialogController_HandleBackgroundClick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDialogController.ShowErrorDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseDialogsOnOK                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDialogController::ShowErrorDialog(const struct FModioErrorCode& Ec, bool bCloseDialogsOnOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDialogController", "ShowErrorDialog");

	Params::ModioDialogController_ShowErrorDialog Parms{};

	Parms.Ec = std::move(Ec);
	Parms.bCloseDialogsOnOK = bCloseDialogsOnOK;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioAuthenticationContextUIDetails.GetProviderInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioUIAuthenticationProviderInfoReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioUIAuthenticationProviderInfo IModioAuthenticationContextUIDetails::GetProviderInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioAuthenticationContextUIDetails", "GetProviderInfo");

	Params::ModioAuthenticationContextUIDetails_GetProviderInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioAuthenticationContextUIDetails.GetTerms
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioTerms                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioTerms IModioAuthenticationContextUIDetails::GetTerms()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioAuthenticationContextUIDetails", "GetTerms");

	Params::ModioAuthenticationContextUIDetails_GetTerms Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioMenuBackgroundProvider.GetBackgroundMaterial
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* IModioMenuBackgroundProvider::GetBackgroundMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenuBackgroundProvider", "GetBackgroundMaterial");

	Params::ModioMenuBackgroundProvider_GetBackgroundMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIAsyncHandlerWidget.LinkAsyncOperationWidget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUIAsyncOperationWidget>Widget                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void IModioUIAsyncHandlerWidget::LinkAsyncOperationWidget(TScriptInterface<class IModioUIAsyncOperationWidget>& Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncHandlerWidget", "LinkAsyncOperationWidget");

	Params::ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUserWidgetBase.FinishLoadExternalData
// (Final, Native, Protected)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUserWidgetBase::FinishLoadExternalData(const struct FModioErrorCode& Ec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserWidgetBase", "FinishLoadExternalData");

	Params::ModioUserWidgetBase_FinishLoadExternalData Parms{};

	Parms.Ec = std::move(Ec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUserWidgetBase.LoadExternalData
// (Final, Native, Public, BlueprintCallable)

void UModioUserWidgetBase::LoadExternalData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserWidgetBase", "LoadExternalData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUserWidgetBase.OnBeginLoadExternalData
// (Event, Public, BlueprintEvent)

void UModioUserWidgetBase::OnBeginLoadExternalData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserWidgetBase", "OnBeginLoadExternalData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModioUI.ModioUserWidgetBase.OnDataSourceUpdated
// (Event, Public, BlueprintEvent)

void UModioUserWidgetBase::OnDataSourceUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserWidgetBase", "OnDataSourceUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModioUI.ModioUserWidgetBase.OnFinishLoadExternalData
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUserWidgetBase::OnFinishLoadExternalData(const struct FModioErrorCode& Ec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserWidgetBase", "OnFinishLoadExternalData");

	Params::ModioUserWidgetBase_OnFinishLoadExternalData Parms{};

	Parms.Ec = std::move(Ec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioUserWidgetBase.SetDataSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          NewDataSource                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUserWidgetBase::SetDataSource(class UObject* NewDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserWidgetBase", "SetDataSource");

	Params::ModioUserWidgetBase_SetDataSource Parms{};

	Parms.NewDataSource = NewDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncOperationWidget.NotifyOperationState
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EModioUIAsyncOperationWidgetState       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIAsyncOperationWidget::NotifyOperationState(EModioUIAsyncOperationWidgetState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncOperationWidget", "NotifyOperationState");

	Params::ModioUIAsyncOperationWidget_NotifyOperationState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncOperationWidget.RequestOperationRetry
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIAsyncOperationWidget::RequestOperationRetry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncOperationWidget", "RequestOperationRetry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncOperationWidget.SetOperationStateDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(EModioUIAsyncOperationWidgetState NewState)>Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IModioUIAsyncOperationWidget::SetOperationStateDelegate(TDelegate<void(EModioUIAsyncOperationWidgetState NewState)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncOperationWidget", "SetOperationStateDelegate");

	Params::ModioUIAsyncOperationWidget_SetOperationStateDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDownloadQueueDrawer.HandleOperationCompleted
// (Final, Native, Protected)

void UModioDownloadQueueDrawer::HandleOperationCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueDrawer", "HandleOperationCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDownloadQueueDrawer.OnLogoutClicked
// (Final, Native, Protected)

void UModioDownloadQueueDrawer::OnLogoutClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueDrawer", "OnLogoutClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDownloadQueueDrawer.OnSubsricptionChanged
// (Final, Native, Protected)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Subscribed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDownloadQueueDrawer::OnSubsricptionChanged(const struct FModioModID& ID, bool Subscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueDrawer", "OnSubsricptionChanged");

	Params::ModioDownloadQueueDrawer_OnSubsricptionChanged Parms{};

	Parms.ID = std::move(ID);
	Parms.Subscribed = Subscribed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncRetryWidget.SetRetryRequestedDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IModioUIAsyncRetryWidget::SetRetryRequestedDelegate(TDelegate<void()>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncRetryWidget", "SetRetryRequestedDelegate");

	Params::ModioUIAsyncRetryWidget_SetRetryRequestedDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioMenuBar.OnBackClicked
// (Native, Protected)

void UModioMenuBar::OnBackClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenuBar", "OnBackClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioMenuBar.OnSearchClicked
// (Native, Protected)

void UModioMenuBar::OnSearchClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenuBar", "OnSearchClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDownloadQueueEntry.OnEntryPressed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UModioDownloadQueueEntry::OnEntryPressed(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueEntry", "OnEntryPressed");

	Params::ModioDownloadQueueEntry_OnEntryPressed Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDownloadQueueEntry.OnUnsubClicked
// (Native, Protected)

void UModioDownloadQueueEntry::OnUnsubClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueEntry", "OnUnsubClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAuthenticationDataProvider.GetAuthenticationParams
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EModioAuthenticationProvider            Provider                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioAuthenticationParams       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioAuthenticationParams IModioUIAuthenticationDataProvider::GetAuthenticationParams(EModioAuthenticationProvider Provider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAuthenticationDataProvider", "GetAuthenticationParams");

	Params::ModioUIAuthenticationDataProvider_GetAuthenticationParams Parms{};

	Parms.Provider = Provider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIAuthenticationDataProvider.GetAuthenticationTypes
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FModioUIAuthenticationProviderInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FModioUIAuthenticationProviderInfo> IModioUIAuthenticationDataProvider::GetAuthenticationTypes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAuthenticationDataProvider", "GetAuthenticationTypes");

	Params::ModioUIAuthenticationDataProvider_GetAuthenticationTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIAuthenticationDataProvider.ShouldOfferEmailAuthentication
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIAuthenticationDataProvider::ShouldOfferEmailAuthentication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAuthenticationDataProvider", "ShouldOfferEmailAuthentication");

	Params::ModioUIAuthenticationDataProvider_ShouldOfferEmailAuthentication Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIBusyStateWidget.DisplayBusyState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIBusyStateWidget::DisplayBusyState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIBusyStateWidget", "DisplayBusyState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIBusyStateWidget.EndBusyState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bErrorOccurred                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIBusyStateWidget::EndBusyState(bool bErrorOccurred)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIBusyStateWidget", "EndBusyState");

	Params::ModioUIBusyStateWidget_EndBusyState Parms{};

	Parms.bErrorOccurred = bErrorOccurred;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDownloadQueueOpProgress.OnUnsubscribeClicked
// (Final, Native, Protected)

void UModioDownloadQueueOpProgress::OnUnsubscribeClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueOpProgress", "OnUnsubscribeClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDownloadQueueOpProgress.OperationCompletedDelegate
// (Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

TDelegate<void()> UModioDownloadQueueOpProgress::OperationCompletedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDownloadQueueOpProgress", "OperationCompletedDelegate");

	Params::ModioDownloadQueueOpProgress_OperationCompletedDelegate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModTileBase.EnableSubscribeButton
// (Final, Native, Protected)

void UModioModTileBase::EnableSubscribeButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTileBase", "EnableSubscribeButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTileBase.HandleModLogoOperationStateChanged
// (Native, Protected)
// Parameters:
// EModioUIAsyncOperationWidgetState       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTileBase::HandleModLogoOperationStateChanged(EModioUIAsyncOperationWidgetState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTileBase", "HandleModLogoOperationStateChanged");

	Params::ModioModTileBase_HandleModLogoOperationStateChanged Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTileBase.NativeSubscribeClicked
// (Final, Native, Public)

void UModioModTileBase::NativeSubscribeClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTileBase", "NativeSubscribeClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTileBase.OnModSubscriptionStatusChanged
// (Native, Public)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Subscribed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTileBase::OnModSubscriptionStatusChanged(const struct FModioModID& ID, bool Subscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTileBase", "OnModSubscriptionStatusChanged");

	Params::ModioModTileBase_OnModSubscriptionStatusChanged Parms{};

	Parms.ID = std::move(ID);
	Parms.Subscribed = Subscribed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTileBase.OnSetExpandedState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExpanded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTileBase::OnSetExpandedState(bool bExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTileBase", "OnSetExpandedState");

	Params::ModioModTileBase_OnSetExpandedState Parms{};

	Parms.bExpanded = bExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioModTileBase.SetExpandedState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bExpanded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTileBase::SetExpandedState(bool bExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTileBase", "SetExpandedState");

	Params::ModioModTileBase_SetExpandedState Parms{};

	Parms.bExpanded = bExpanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.ForceUninstall
// (Final, Native, Protected)

void UModioModCollectionTile::ForceUninstall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "ForceUninstall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.NativeCollectionTileClicked
// (Final, Native, Protected)

void UModioModCollectionTile::NativeCollectionTileClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "NativeCollectionTileClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.NativeMoreOptionsClicked
// (Final, Native, Protected)

void UModioModCollectionTile::NativeMoreOptionsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "NativeMoreOptionsClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.OnRatingSubmissionComplete
// (Final, Native, Protected)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioRating                            Rating                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModCollectionTile::OnRatingSubmissionComplete(const struct FModioErrorCode& Ec, EModioRating Rating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "OnRatingSubmissionComplete");

	Params::ModioModCollectionTile_OnRatingSubmissionComplete Parms{};

	Parms.Ec = std::move(Ec);
	Parms.Rating = Rating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.ShowModDetails
// (Final, Native, Protected)

void UModioModCollectionTile::ShowModDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "ShowModDetails");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.SubmitModReport
// (Final, Native, Protected)

void UModioModCollectionTile::SubmitModReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "SubmitModReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.SubmitNegativeRating
// (Final, Native, Protected)

void UModioModCollectionTile::SubmitNegativeRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "SubmitNegativeRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModCollectionTile.SubmitPositiveRating
// (Final, Native, Protected)

void UModioModCollectionTile::SubmitPositiveRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModCollectionTile", "SubmitPositiveRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIClickableWidget.AddClickHandler
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          UserObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FunctionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIClickableWidget::AddClickHandler(class UObject* UserObject, class FName FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIClickableWidget", "AddClickHandler");

	Params::ModioUIClickableWidget_AddClickHandler Parms{};

	Parms.UserObject = UserObject;
	Parms.FunctionName = FunctionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIClickableWidget.RemoveClickHandler
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          UserObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FunctionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIClickableWidget::RemoveClickHandler(class UObject* UserObject, class FName FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIClickableWidget", "RemoveClickHandler");

	Params::ModioUIClickableWidget_RemoveClickHandler Parms{};

	Parms.UserObject = UserObject;
	Parms.FunctionName = FunctionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIDataSourceWidget.SetDataSource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InDataSource                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDataSourceWidget::SetDataSource(class UObject* InDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDataSourceWidget", "SetDataSource");

	Params::ModioUIDataSourceWidget_SetDataSource Parms{};

	Parms.InDataSource = InDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIDialogButtonWidget.SetDialogController
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UModioDialogController*           Controller                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIDialogButtonWidget::SetDialogController(class UModioDialogController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDialogButtonWidget", "SetDialogController");

	Params::ModioUIDialogButtonWidget_SetDialogController Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIDialogButtonWidget.SetStyle
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioDialogStyle                Style                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIDialogButtonWidget::SetStyle(struct FModioDialogStyle& Style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDialogButtonWidget", "SetStyle");

	Params::ModioUIDialogButtonWidget_SetStyle Parms{};

	Parms.Style = std::move(Style);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIDownloadQueueWidget.DisplayUserInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioOptionalUser               NewUser                                                (Parm, NativeAccessSpecifierPublic)

void IModioUIDownloadQueueWidget::DisplayUserInfo(const struct FModioOptionalUser& NewUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDownloadQueueWidget", "DisplayUserInfo");

	Params::ModioUIDownloadQueueWidget_DisplayUserInfo Parms{};

	Parms.NewUser = std::move(NewUser);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIDownloadQueueWidget.RefreshDownloadQueue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIDownloadQueueWidget::RefreshDownloadQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIDownloadQueueWidget", "RefreshDownloadQueue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIErrorDisplayWidget.DisplayError
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIErrorDisplayWidget::DisplayError(struct FModioErrorCode& Ec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIErrorDisplayWidget", "DisplayError");

	Params::ModioUIErrorDisplayWidget_DisplayError Parms{};

	Parms.Ec = std::move(Ec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIErrorDisplayWidget.SetErrorString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InErrorString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIErrorDisplayWidget::SetErrorString(const class FString& InErrorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIErrorDisplayWidget", "SetErrorString");

	Params::ModioUIErrorDisplayWidget_SetErrorString Parms{};

	Parms.InErrorString = std::move(InErrorString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIErrorDisplayWidget.SetErrorText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InErrorText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIErrorDisplayWidget::SetErrorText(class FText& InErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIErrorDisplayWidget", "SetErrorText");

	Params::ModioUIErrorDisplayWidget_SetErrorText Parms{};

	Parms.InErrorText = InErrorText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIErrorDisplayWidget.IsErrorSet
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUIErrorDisplayWidget::IsErrorSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIErrorDisplayWidget", "IsErrorSet");

	Params::ModioUIErrorDisplayWidget_IsErrorSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIImageDisplay.DisplayImage
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      Image                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIImageDisplay::DisplayImage(struct FSlateBrush& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIImageDisplay", "DisplayImage");

	Params::ModioUIImageDisplay_DisplayImage Parms{};

	Parms.Image = std::move(Image);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIInputDeviceChangedReceiver.OnInputDeviceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EModioUIInputMode                       InputDevice                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIInputDeviceChangedReceiver::OnInputDeviceChanged(EModioUIInputMode InputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIInputDeviceChangedReceiver", "OnInputDeviceChanged");

	Params::ModioUIInputDeviceChangedReceiver_OnInputDeviceChanged Parms{};

	Parms.InputDevice = InputDevice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioUIInputHintDisplayWidget.OnDisplayHintForInput
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FKey                             VirtualKey                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIInputHintDisplayWidget::OnDisplayHintForInput(const struct FKey& VirtualKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIInputHintDisplayWidget", "OnDisplayHintForInput");

	Params::ModioUIInputHintDisplayWidget_OnDisplayHintForInput Parms{};

	Parms.VirtualKey = std::move(VirtualKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioUIInputHintGlyphProvider.GetInputGlyphMaterialForInputType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             VirtualInput                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUIInputMode                       InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* IModioUIInputHintGlyphProvider::GetInputGlyphMaterialForInputType(const struct FKey& VirtualInput, EModioUIInputMode InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIInputHintGlyphProvider", "GetInputGlyphMaterialForInputType");

	Params::ModioUIInputHintGlyphProvider_GetInputGlyphMaterialForInputType Parms{};

	Parms.VirtualInput = std::move(VirtualInput);
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioImage.DisplayImageWithMaterial
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ImageParameterName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioImage::DisplayImageWithMaterial(class UTexture2DDynamic* Texture, class UMaterialInterface* Material, class FName ImageParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImage", "DisplayImageWithMaterial");

	Params::ModioImage_DisplayImageWithMaterial Parms{};

	Parms.Texture = Texture;
	Parms.Material = Material;
	Parms.ImageParameterName = ImageParameterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioImage.ImageLoadHandler
// (Native, Protected)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ImageParameterName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioImage::ImageLoadHandler(class UTexture2DDynamic* Texture, class UMaterialInterface* Material, class FName ImageParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImage", "ImageLoadHandler");

	Params::ModioImage_ImageLoadHandler Parms{};

	Parms.Texture = Texture;
	Parms.Material = Material;
	Parms.ImageParameterName = ImageParameterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioImage.LoadImageFromFileAsync
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FModioImageWrapper               ImageLoader                                            (Parm, NativeAccessSpecifierPublic)

void UModioImage::LoadImageFromFileAsync(const struct FModioImageWrapper& ImageLoader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImage", "LoadImageFromFileAsync");

	Params::ModioImage_LoadImageFromFileAsync Parms{};

	Parms.ImageLoader = std::move(ImageLoader);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioImage.LoadImageFromFileWithMaterialAsync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioImageWrapper               ImageLoader                                            (Parm, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ImageParameterName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioImage::LoadImageFromFileWithMaterialAsync(const struct FModioImageWrapper& ImageLoader, class UMaterialInterface* Material, class FName ImageParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImage", "LoadImageFromFileWithMaterialAsync");

	Params::ModioImage_LoadImageFromFileWithMaterialAsync Parms{};

	Parms.ImageLoader = std::move(ImageLoader);
	Parms.Material = Material;
	Parms.ImageParameterName = ImageParameterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioInputBindingImage.GetInputModeVisibilityDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(EModioUIInputMode InputMode)>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

TDelegate<void(EModioUIInputMode InputMode)> UModioInputBindingImage::GetInputModeVisibilityDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioInputBindingImage", "GetInputModeVisibilityDelegate");

	Params::ModioInputBindingImage_GetInputModeVisibilityDelegate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioInputBindingImage.SetKeyToShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             NewKey                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioInputBindingImage::SetKeyToShow(const struct FKey& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioInputBindingImage", "SetKeyToShow");

	Params::ModioInputBindingImage_SetKeyToShow Parms{};

	Parms.NewKey = std::move(NewKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIModDetailsDisplay.DisplayModDetails
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioModInfoUIDetails>Details                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void IModioUIModDetailsDisplay::DisplayModDetails(TScriptInterface<class IModioModInfoUIDetails>& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModDetailsDisplay", "DisplayModDetails");

	Params::ModioUIModDetailsDisplay_DisplayModDetails Parms{};

	Parms.Details = Details;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIModDetailsDisplay.DisplayModDetailsForID
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModDetailsDisplay::DisplayModDetailsForID(struct FModioModID& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModDetailsDisplay", "DisplayModDetailsForID");

	Params::ModioUIModDetailsDisplay_DisplayModDetailsForID Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIModDetailsDisplay.HandleDisplayModDetails
// (Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IModioModInfoUIDetails>Details                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void IModioUIModDetailsDisplay::HandleDisplayModDetails(TScriptInterface<class IModioModInfoUIDetails>* Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModDetailsDisplay", "HandleDisplayModDetails");

	Params::ModioUIModDetailsDisplay_HandleDisplayModDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Details != nullptr)
		*Details = std::move(Parms.Details);
}


// Function ModioUI.ModioUIModDetailsDisplay.HandleDisplayModDetailsForID
// (Native, Protected, HasOutParams)
// Parameters:
// struct FModioModID                      ModId                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModDetailsDisplay::HandleDisplayModDetailsForID(struct FModioModID& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModDetailsDisplay", "HandleDisplayModDetailsForID");

	Params::ModioUIModDetailsDisplay_HandleDisplayModDetailsForID Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIModDetailsDisplay.RegisterUserWidget
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUIModDetailsDisplay>DisplayWidget                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void IModioUIModDetailsDisplay::RegisterUserWidget(TScriptInterface<class IModioUIModDetailsDisplay>& DisplayWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModDetailsDisplay", "RegisterUserWidget");

	Params::ModioUIModDetailsDisplay_RegisterUserWidget Parms{};

	Parms.DisplayWidget = DisplayWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIPopupMenuContentWidget.SetDesiredSize
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        DesiredSize                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIPopupMenuContentWidget::SetDesiredSize(struct FVector2D& DesiredSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIPopupMenuContentWidget", "SetDesiredSize");

	Params::ModioUIPopupMenuContentWidget_SetDesiredSize Parms{};

	Parms.DesiredSize = std::move(DesiredSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIPopupMenuContentWidget.SetMenuEntries
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioUIMenuCommandList          Entries                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void IModioUIPopupMenuContentWidget::SetMenuEntries(struct FModioUIMenuCommandList& Entries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIPopupMenuContentWidget", "SetMenuEntries");

	Params::ModioUIPopupMenuContentWidget_SetMenuEntries Parms{};

	Parms.Entries = std::move(Entries);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIPopupMenuContentWidget.SetStyle
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioUIStyleRef                 StyleRef                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IModioUIPopupMenuContentWidget::SetStyle(struct FModioUIStyleRef& StyleRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIPopupMenuContentWidget", "SetStyle");

	Params::ModioUIPopupMenuContentWidget_SetStyle Parms{};

	Parms.StyleRef = std::move(StyleRef);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIRefineSearchWidget.GetSearchString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IModioUIRefineSearchWidget::GetSearchString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIRefineSearchWidget", "GetSearchString");

	Params::ModioUIRefineSearchWidget_GetSearchString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIRefineSearchWidget.GetSelectedTagValues
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> IModioUIRefineSearchWidget::GetSelectedTagValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIRefineSearchWidget", "GetSelectedTagValues");

	Params::ModioUIRefineSearchWidget_GetSelectedTagValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIRefineSearchWidget.NotifySettingsChanged
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioFilterParams               SearchSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIRefineSearchWidget::NotifySettingsChanged(struct FModioFilterParams& SearchSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIRefineSearchWidget", "NotifySettingsChanged");

	Params::ModioUIRefineSearchWidget_NotifySettingsChanged Parms{};

	Parms.SearchSettings = std::move(SearchSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIRefineSearchWidget.RefreshTags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIRefineSearchWidget::RefreshTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIRefineSearchWidget", "RefreshTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIStringInputWidget.GatherInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString IModioUIStringInputWidget::GatherInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIStringInputWidget", "GatherInput");

	Params::ModioUIStringInputWidget_GatherInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIStringInputWidget.SetHint
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             HintText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::SetHint(class FText& HintText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIStringInputWidget", "SetHint");

	Params::ModioUIStringInputWidget_SetHint Parms{};

	Parms.HintText = HintText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIStringInputWidget.SetInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Input                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIStringInputWidget::SetInput(const class FString& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIStringInputWidget", "SetInput");

	Params::ModioUIStringInputWidget_SetInput Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateAllLetters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateAllLetters(class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateAllLetters");

	Params::ModioUIInputValidationLibrary_ValidateAllLetters Parms{};

	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateAllNumeric
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateAllNumeric(class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateAllNumeric");

	Params::ModioUIInputValidationLibrary_ValidateAllNumeric Parms{};

	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateAlphanumeric
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateAlphanumeric(class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateAlphanumeric");

	Params::ModioUIInputValidationLibrary_ValidateAlphanumeric Parms{};

	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateEmailAddress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateEmailAddress(class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateEmailAddress");

	Params::ModioUIInputValidationLibrary_ValidateEmailAddress Parms{};

	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateLength
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   DesiredMaximumLength                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredMinimumLength                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateLength(class FText& TextToValidate, int32 DesiredMaximumLength, int32 DesiredMinimumLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateLength");

	Params::ModioUIInputValidationLibrary_ValidateLength Parms{};

	Parms.TextToValidate = TextToValidate;
	Parms.DesiredMaximumLength = DesiredMaximumLength;
	Parms.DesiredMinimumLength = DesiredMinimumLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateNotEmpty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateNotEmpty(class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateNotEmpty");

	Params::ModioUIInputValidationLibrary_ValidateNotEmpty Parms{};

	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateNoWhitespace
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateNoWhitespace(class FText& TextToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateNoWhitespace");

	Params::ModioUIInputValidationLibrary_ValidateNoWhitespace Parms{};

	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIInputValidationLibrary.ValidateUsingRule
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioTextValidationRule         Rule                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             TextToValidate                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ValidationMessageText                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUIInputValidationLibrary::ValidateUsingRule(struct FModioTextValidationRule& Rule, class FText& TextToValidate, class FText* ValidationMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUIInputValidationLibrary", "ValidateUsingRule");

	Params::ModioUIInputValidationLibrary_ValidateUsingRule Parms{};

	Parms.Rule = std::move(Rule);
	Parms.TextToValidate = TextToValidate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValidationMessageText != nullptr)
		*ValidationMessageText = std::move(Parms.ValidationMessageText);

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUITextValidator.GetTextValidationRules
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FModioTextValidationRule> Rules                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IModioUITextValidator::GetTextValidationRules(TArray<struct FModioTextValidationRule>* Rules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUITextValidator", "GetTextValidationRules");

	Params::ModioUITextValidator_GetTextValidationRules Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rules != nullptr)
		*Rules = Parms.Rules;
}


// Function ModioUI.ModioUITextValidator.SetValidationError
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ErrorText                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void IModioUITextValidator::SetValidationError(class FText* ErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUITextValidator", "SetValidationError");

	Params::ModioUITextValidator_SetValidationError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ErrorText != nullptr)
		*ErrorText = std::move(Parms.ErrorText);
}


// Function ModioUI.ModioUITextValidator.ValidateText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InputText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ValidationMessageText                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioUITextValidator::ValidateText(class FText& InputText, class FText* ValidationMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUITextValidator", "ValidateText");

	Params::ModioUITextValidator_ValidateText Parms{};

	Parms.InputText = InputText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ValidationMessageText != nullptr)
		*ValidationMessageText = std::move(Parms.ValidationMessageText);

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUIUserStringListEntry.SetListItemString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIUserStringListEntry::SetListItemString(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIUserStringListEntry", "SetListItemString");

	Params::ModioUIUserStringListEntry_SetListItemString Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioAsyncOpWrapperWidget.SetActualAsyncOperationWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class IModioUIAsyncOperationWidget>Widget                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UModioAsyncOpWrapperWidget::SetActualAsyncOperationWidget(TScriptInterface<class IModioUIAsyncOperationWidget>& Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioAsyncOpWrapperWidget", "SetActualAsyncOperationWidget");

	Params::ModioAsyncOpWrapperWidget_SetActualAsyncOperationWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioAuthenticationMethodSelector.CancelClicked
// (Final, Native, Protected)

void UModioAuthenticationMethodSelector::CancelClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioAuthenticationMethodSelector", "CancelClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioButton.SetButtonStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioUIStyleRef                 ButtonStyleRef                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bApplyStyle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioButton::SetButtonStyle(const struct FModioUIStyleRef& ButtonStyleRef, bool bApplyStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioButton", "SetButtonStyle");

	Params::ModioButton_SetButtonStyle Parms{};

	Parms.ButtonStyleRef = std::move(ButtonStyleRef);
	Parms.bApplyStyle = bApplyStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioButton.SetLabel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewLabel                                               (Parm, NativeAccessSpecifierPublic)

void UModioButton::SetLabel(class FText NewLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioButton", "SetLabel");

	Params::ModioButton_SetLabel Parms{};

	Parms.NewLabel = NewLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRichTextButton.GetInputHintVisibility
// (Final, Native, Protected)
// Parameters:
// EModioUIInputMode                       InputMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UModioRichTextButton::GetInputHintVisibility(EModioUIInputMode InputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRichTextButton", "GetInputHintVisibility");

	Params::ModioRichTextButton_GetInputHintVisibility Parms{};

	Parms.InputMode = InputMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioRichTextButton.GetRichTextStyle
// (Final, Native, Public, Const)
// Parameters:
// const struct FModioRichTextStyle        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FModioRichTextStyle UModioRichTextButton::GetRichTextStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRichTextButton", "GetRichTextStyle");

	Params::ModioRichTextButton_GetRichTextStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioRichTextButton.GetStyleNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioRichTextButton::GetStyleNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRichTextButton", "GetStyleNames");

	Params::ModioRichTextButton_GetStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioCircularProgressBar.GetProgress
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UModioCircularProgressBar::GetProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCircularProgressBar", "GetProgress");

	Params::ModioCircularProgressBar_GetProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioCodeInputWidget.ValidateCodeInputCharacter
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Character                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UModioCodeInputWidget::ValidateCodeInputCharacter(const class FString& Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCodeInputWidget", "ValidateCodeInputCharacter");

	Params::ModioCodeInputWidget_ValidateCodeInputCharacter Parms{};

	Parms.Character = std::move(Character);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioCollectionView.OnFetchUpdatesClicked
// (Final, Native, Protected)

void UModioCollectionView::OnFetchUpdatesClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCollectionView", "OnFetchUpdatesClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioCollectionView.OnModGroupChanged
// (Final, Native, Protected)
// Parameters:
// class FText                             SelectedItem                                           (Parm, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioCollectionView::OnModGroupChanged(class FText SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCollectionView", "OnModGroupChanged");

	Params::ModioCollectionView_OnModGroupChanged Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioCollectionView.SortAToZ
// (Final, Native, Protected)

void UModioCollectionView::SortAToZ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCollectionView", "SortAToZ");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioCollectionView.SortRecentlyUpdatedDelegate
// (Final, Native, Protected)

void UModioCollectionView::SortRecentlyUpdatedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCollectionView", "SortRecentlyUpdatedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioCollectionView.SortSizeOnDisk
// (Final, Native, Protected)

void UModioCollectionView::SortSizeOnDisk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCollectionView", "SortSizeOnDisk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioCollectionView.SortZToA
// (Final, Native, Protected)

void UModioCollectionView::SortZToA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioCollectionView", "SortZToA");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUICommandInfoLibrary.BackCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::BackCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "BackCommand");

	Params::ModioUICommandInfoLibrary_BackCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.CollapseCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::CollapseCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "CollapseCommand");

	Params::ModioUICommandInfoLibrary_CollapseCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.ConfirmCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::ConfirmCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "ConfirmCommand");

	Params::ModioUICommandInfoLibrary_ConfirmCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.DownloadQueueCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::DownloadQueueCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "DownloadQueueCommand");

	Params::ModioUICommandInfoLibrary_DownloadQueueCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.MoreOptionsCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::MoreOptionsCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "MoreOptionsCommand");

	Params::ModioUICommandInfoLibrary_MoreOptionsCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.NextPageCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::NextPageCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "NextPageCommand");

	Params::ModioUICommandInfoLibrary_NextPageCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.PreviousPageCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::PreviousPageCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "PreviousPageCommand");

	Params::ModioUICommandInfoLibrary_PreviousPageCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUICommandInfoLibrary.RefineSearchCommand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuEntry                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioUIMenuEntry UModioUICommandInfoLibrary::RefineSearchCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioUICommandInfoLibrary", "RefineSearchCommand");

	Params::ModioUICommandInfoLibrary_RefineSearchCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDialogBaseInternal.OnNavigateDownFromCodeInputWidget
// (Final, Native, Protected)

void UModioDialogBaseInternal::OnNavigateDownFromCodeInputWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDialogBaseInternal", "OnNavigateDownFromCodeInputWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDialogBaseInternal.OnSubmitKeyPressed
// (Final, Native, Protected)

void UModioDialogBaseInternal::OnSubmitKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDialogBaseInternal", "OnSubmitKeyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDialogBaseInternal.SetDialogFocus
// (Final, Native, Public)

void UModioDialogBaseInternal::SetDialogFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDialogBaseInternal", "SetDialogFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDrawerContentBase.GetContentWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioDrawerContentBase::GetContentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerContentBase", "GetContentWidget");

	Params::ModioDrawerContentBase_GetContentWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDrawerContentBase.GetHeaderWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioDrawerContentBase::GetHeaderWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerContentBase", "GetHeaderWidget");

	Params::ModioDrawerContentBase_GetHeaderWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDrawerContentBase.GetOptionalContentWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioDrawerContentBase::GetOptionalContentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerContentBase", "GetOptionalContentWidget");

	Params::ModioDrawerContentBase_GetOptionalContentWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDrawerController.CollapseAllDrawers
// (Final, Native, Public, BlueprintCallable)

void UModioDrawerController::CollapseAllDrawers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerController", "CollapseAllDrawers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDrawerController.DrawerAnimatedOut
// (Final, Native, Protected)

void UModioDrawerController::DrawerAnimatedOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerController", "DrawerAnimatedOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDrawerController.SetDrawerExpanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpandedState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseOtherDrawers                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioDrawerController::SetDrawerExpanded(int32 SlotIndex, bool bExpandedState, bool bCloseOtherDrawers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerController", "SetDrawerExpanded");

	Params::ModioDrawerController_SetDrawerExpanded Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.bExpandedState = bExpandedState;
	Parms.bCloseOtherDrawers = bCloseOtherDrawers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioDrawerController.ToggleDrawerExpanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloseOtherDrawers                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioDrawerController::ToggleDrawerExpanded(int32 SlotIndex, bool bCloseOtherDrawers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerController", "ToggleDrawerExpanded");

	Params::ModioDrawerController_ToggleDrawerExpanded Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.bCloseOtherDrawers = bCloseOtherDrawers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioDrawerController.IsAnyDrawerExpanded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioDrawerController::IsAnyDrawerExpanded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioDrawerController", "IsAnyDrawerExpanded");

	Params::ModioDrawerController_IsAnyDrawerExpanded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioEditableText.GetStyleNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioEditableText::GetStyleNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEditableText", "GetStyleNames");

	Params::ModioEditableText_GetStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioEditableTextBox.StartInput
// (Final, Native, Public)

void UModioEditableTextBox::StartInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioEditableTextBox", "StartInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioErrorRetryWidget.OnRetryClicked
// (Final, Native, Protected)

void UModioErrorRetryWidget::OnRetryClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioErrorRetryWidget", "OnRetryClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioErrorRetryWidget.SetErrorText
// (Final, Native, Public)
// Parameters:
// class FString                           Error                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioErrorRetryWidget::SetErrorText(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioErrorRetryWidget", "SetErrorText");

	Params::ModioErrorRetryWidget_SetErrorText Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.HandleItemListEntryDetailsClicked
// (Final, Native, Protected)
// Parameters:
// class UModioModInfoUI*                  ModInfo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFeaturedCategory::HandleItemListEntryDetailsClicked(class UModioModInfoUI* ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "HandleItemListEntryDetailsClicked");

	Params::ModioFeaturedCategory_HandleItemListEntryDetailsClicked Parms{};

	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.HandleItemListEntryReportClicked
// (Final, Native, Protected)
// Parameters:
// class UModioModInfoUI*                  ModInfo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFeaturedCategory::HandleItemListEntryReportClicked(class UModioModInfoUI* ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "HandleItemListEntryReportClicked");

	Params::ModioFeaturedCategory_HandleItemListEntryReportClicked Parms{};

	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.HandleItemListEntrySubscribeClicked
// (Final, Native, Protected)
// Parameters:
// class UModioModInfoUI*                  ModInfo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFeaturedCategory::HandleItemListEntrySubscribeClicked(class UModioModInfoUI* ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "HandleItemListEntrySubscribeClicked");

	Params::ModioFeaturedCategory_HandleItemListEntrySubscribeClicked Parms{};

	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.HandleNavLeftClicked
// (Final, Native, Protected)

void UModioFeaturedCategory::HandleNavLeftClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "HandleNavLeftClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.HandleNavRightClicked
// (Final, Native, Protected)

void UModioFeaturedCategory::HandleNavRightClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "HandleNavRightClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.HandleSeeAllClicked
// (Final, Native, Protected)

void UModioFeaturedCategory::HandleSeeAllClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "HandleSeeAllClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction ModioUI.ModioFeaturedCategory.OnCategorySelectionChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UModioFeaturedCategory*           RealCategory                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFeaturedCategory::OnCategorySelectionChanged__DelegateSignature(int32 Param_Index, class UModioFeaturedCategory* RealCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "OnCategorySelectionChanged__DelegateSignature");

	Params::ModioFeaturedCategory_OnCategorySelectionChanged__DelegateSignature Parms{};

	Parms.Param_Index = Param_Index;
	Parms.RealCategory = RealCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioFeaturedCategory.PlayNavLeftHoverAnim
// (Final, Native, Protected)

void UModioFeaturedCategory::PlayNavLeftHoverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "PlayNavLeftHoverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.PlayNavLeftUnhoverAnim
// (Final, Native, Protected)

void UModioFeaturedCategory::PlayNavLeftUnhoverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "PlayNavLeftUnhoverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.PlayNavRightHoverAnim
// (Final, Native, Protected)

void UModioFeaturedCategory::PlayNavRightHoverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "PlayNavRightHoverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.PlayNavRightUnhoverAnim
// (Final, Native, Protected)

void UModioFeaturedCategory::PlayNavRightUnhoverAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "PlayNavRightUnhoverAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.SetSelectionIndexDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UModioFeaturedCategory::SetSelectionIndexDelegate(TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "SetSelectionIndexDelegate");

	Params::ModioFeaturedCategory_SetSelectionIndexDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedCategory.GetItemList
// (Final, Native, Public, Const)
// Parameters:
// const class UModioTileView*             ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UModioTileView* UModioFeaturedCategory::GetItemList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedCategory", "GetItemList");

	Params::ModioFeaturedCategory_GetItemList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioFeaturedMod.NativeMoreOptionsClicked
// (Final, Native, Protected)

void UModioFeaturedMod::NativeMoreOptionsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedMod", "NativeMoreOptionsClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedMod.SubmitModReport
// (Final, Native, Protected)

void UModioFeaturedMod::SubmitModReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedMod", "SubmitModReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedMod.SubmitNegativeRating
// (Final, Native, Protected)

void UModioFeaturedMod::SubmitNegativeRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedMod", "SubmitNegativeRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedMod.SubmitPositiveRating
// (Final, Native, Protected)

void UModioFeaturedMod::SubmitPositiveRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedMod", "SubmitPositiveRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedModCarousel.NavigateToWidget
// (Final, Native, Public)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFeaturedModCarousel::NavigateToWidget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedModCarousel", "NavigateToWidget");

	Params::ModioFeaturedModCarousel_NavigateToWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedView.CategorySelectionChanged
// (Native, Protected)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UModioFeaturedCategory*           RealCategory                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioFeaturedView::CategorySelectionChanged(int32 Param_Index, class UModioFeaturedCategory* RealCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedView", "CategorySelectionChanged");

	Params::ModioFeaturedView_CategorySelectionChanged Parms{};

	Parms.Param_Index = Param_Index;
	Parms.RealCategory = RealCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedView.GetSelectionIndex
// (Final, Native, Protected)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UModioFeaturedView::GetSelectionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedView", "GetSelectionIndex");

	Params::ModioFeaturedView_GetSelectionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioFeaturedView.SetFocusToAdditionalCategory
// (Final, Native, Protected, BlueprintCallable)

void UModioFeaturedView::SetFocusToAdditionalCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedView", "SetFocusToAdditionalCategory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioFeaturedView.SetFocusToPrimaryCategory
// (Final, Native, Protected, BlueprintCallable)

void UModioFeaturedView::SetFocusToPrimaryCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioFeaturedView", "SetFocusToPrimaryCategory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioImageGalleryBase.DisplayGalleryImageAtIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EModioUIDirection                       Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DirectIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioImageGalleryBase::DisplayGalleryImageAtIndex(EModioUIDirection Direction, int32 DirectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGalleryBase", "DisplayGalleryImageAtIndex");

	Params::ModioImageGalleryBase_DisplayGalleryImageAtIndex Parms{};

	Parms.Direction = Direction;
	Parms.DirectIndex = DirectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction ModioUI.ModioImageGalleryBase.OnDisplayImage__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UWidget*                          ImageWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ImageIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioImageGalleryBase::OnDisplayImage__DelegateSignature(class UWidget* ImageWidget, int32 ImageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGalleryBase", "OnDisplayImage__DelegateSignature");

	Params::ModioImageGalleryBase_OnDisplayImage__DelegateSignature Parms{};

	Parms.ImageWidget = ImageWidget;
	Parms.ImageIndex = ImageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioImageGalleryBase.RefreshCurrentImage
// (Final, Native, Public, BlueprintCallable)

void UModioImageGalleryBase::RefreshCurrentImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGalleryBase", "RefreshCurrentImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioImageGalleryBase.ResetGallery
// (Final, Native, Public, BlueprintCallable)

void UModioImageGalleryBase::ResetGallery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioImageGalleryBase", "ResetGallery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioInputMappingGlyphLibrary.GetInputGlyph
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioInputMappingGlyph          MappingGlyph                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// EModioUIInputMode                       InputMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UModioInputMappingGlyphLibrary::GetInputGlyph(struct FModioInputMappingGlyph* MappingGlyph, EModioUIInputMode InputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioInputMappingGlyphLibrary", "GetInputGlyph");

	Params::ModioInputMappingGlyphLibrary_GetInputGlyph Parms{};

	Parms.InputMode = InputMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MappingGlyph != nullptr)
		*MappingGlyph = Parms.MappingGlyph;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioMenu.HandleViewChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   ViewIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioMenu::HandleViewChanged(int32 ViewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenu", "HandleViewChanged");

	Params::ModioMenu_HandleViewChanged Parms{};

	Parms.ViewIndex = ViewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioMenu.OnDrawerAnimatedOut
// (Final, Native, Protected)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioMenu::OnDrawerAnimatedOut(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenu", "OnDrawerAnimatedOut");

	Params::ModioMenu_OnDrawerAnimatedOut Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioMenu.OnSearchSettingsChanged
// (Final, Native, Protected)
// Parameters:
// struct FModioFilterParams               Settings                                               (Parm, NativeAccessSpecifierPublic)

void UModioMenu::OnSearchSettingsChanged(const struct FModioFilterParams& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenu", "OnSearchSettingsChanged");

	Params::ModioMenu_OnSearchSettingsChanged Parms{};

	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioMenu.OnViewChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int64                                   ViewIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioMenu::OnViewChanged(int64 ViewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioMenu", "OnViewChanged");

	Params::ModioMenu_OnViewChanged Parms{};

	Parms.ViewIndex = ViewIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUI.ModioModDetailsImageGallery.ApplyImageToWidget
// (Native, Protected)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ImageIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModDetailsImageGallery::ApplyImageToWidget(class UWidget* Widget, int32 ImageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsImageGallery", "ApplyImageToWidget");

	Params::ModioModDetailsImageGallery_ApplyImageToWidget Parms{};

	Parms.Widget = Widget;
	Parms.ImageIndex = ImageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsImageGallery.GetImageCount
// (Native, Protected)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UModioModDetailsImageGallery::GetImageCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsImageGallery", "GetImageCount");

	Params::ModioModDetailsImageGallery_GetImageCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModDetailsImageGallery.NextImage
// (Native, Protected)

void UModioModDetailsImageGallery::NextImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsImageGallery", "NextImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsImageGallery.OnGalleryImageLoad
// (Final, Native, Protected)
// Parameters:
// class UTexture2DDynamic*                LoadedImage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModDetailsImageGallery::OnGalleryImageLoad(class UTexture2DDynamic* LoadedImage, const struct FModioModID& ModId, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsImageGallery", "OnGalleryImageLoad");

	Params::ModioModDetailsImageGallery_OnGalleryImageLoad Parms{};

	Parms.LoadedImage = LoadedImage;
	Parms.ModId = std::move(ModId);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsImageGallery.PrevImage
// (Native, Protected)

void UModioModDetailsImageGallery::PrevImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsImageGallery", "PrevImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModPropertyInspectorBase.OnUpdatePropertyDisplay
// (Event, Protected, BlueprintEvent)

void UModioModPropertyInspectorBase::OnUpdatePropertyDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModPropertyInspectorBase", "OnUpdatePropertyDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModioUI.ModioModPropertyInspectorBase.UpdatePropertyDisplay
// (Final, Native, Protected, BlueprintCallable)

void UModioModPropertyInspectorBase::UpdatePropertyDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModPropertyInspectorBase", "UpdatePropertyDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsPropertyInspector.GetTextStyle
// (Final, Native, Protected)
// Parameters:
// struct FModioUIStyleRef                 TextStyle                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FModioRichTextStyle        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FModioRichTextStyle UModioModDetailsPropertyInspector::GetTextStyle(const struct FModioUIStyleRef& TextStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsPropertyInspector", "GetTextStyle");

	Params::ModioModDetailsPropertyInspector_GetTextStyle Parms{};

	Parms.TextStyle = std::move(TextStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModDetailsPropertyInspector.GetFillerStyleNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioModDetailsPropertyInspector::GetFillerStyleNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsPropertyInspector", "GetFillerStyleNames");

	Params::ModioModDetailsPropertyInspector_GetFillerStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModDetailsPropertyInspector.GetPropertyNameStyleNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioModDetailsPropertyInspector::GetPropertyNameStyleNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsPropertyInspector", "GetPropertyNameStyleNames");

	Params::ModioModDetailsPropertyInspector_GetPropertyNameStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModDetailsPropertyInspector.GetPropertyValueStyleNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioModDetailsPropertyInspector::GetPropertyValueStyleNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsPropertyInspector", "GetPropertyValueStyleNames");

	Params::ModioModDetailsPropertyInspector_GetPropertyValueStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModDetailsView.EnableSubscribeButton
// (Final, Native, Protected)

void UModioModDetailsView::EnableSubscribeButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "EnableSubscribeButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.NativeSubscribeClicked
// (Final, Native, Protected)

void UModioModDetailsView::NativeSubscribeClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "NativeSubscribeClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.OnDialogClosed
// (Final, Native, Protected)

void UModioModDetailsView::OnDialogClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "OnDialogClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.OnDownloadQueueClosed
// (Final, Native, Protected)

void UModioModDetailsView::OnDownloadQueueClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "OnDownloadQueueClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.OnModSubscriptionStatusChanged
// (Native, Protected)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Subscribed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModDetailsView::OnModSubscriptionStatusChanged(const struct FModioModID& ID, bool Subscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "OnModSubscriptionStatusChanged");

	Params::ModioModDetailsView_OnModSubscriptionStatusChanged Parms{};

	Parms.ID = std::move(ID);
	Parms.Subscribed = Subscribed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.OnRatingSubmissionComplete
// (Final, Native, Protected)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioRating                            SubmittedRating                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModDetailsView::OnRatingSubmissionComplete(const struct FModioErrorCode& Ec, EModioRating SubmittedRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "OnRatingSubmissionComplete");

	Params::ModioModDetailsView_OnRatingSubmissionComplete Parms{};

	Parms.Ec = std::move(Ec);
	Parms.SubmittedRating = SubmittedRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.RateDownClicked
// (Final, Native, Protected)

void UModioModDetailsView::RateDownClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "RateDownClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.RateUpClicked
// (Final, Native, Protected)

void UModioModDetailsView::RateUpClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "RateUpClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.ReportClicked
// (Final, Native, Protected)

void UModioModDetailsView::ReportClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "ReportClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModDetailsView.SetInitialFocus
// (Final, Native, Protected)

void UModioModDetailsView::SetInitialFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModDetailsView", "SetInitialFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTile.NativeMoreOptionsClicked
// (Final, Native, Protected)

void UModioModTile::NativeMoreOptionsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "NativeMoreOptionsClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTile.NativeReportClicked
// (Final, Native, Protected)

void UModioModTile::NativeReportClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "NativeReportClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTile.OnThumbnailMouseDown
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UModioModTile::OnThumbnailMouseDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "OnThumbnailMouseDown");

	Params::ModioModTile_OnThumbnailMouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioModTile.SetSizeOverride
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        NewSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioModTile::SetSizeOverride(const struct FVector2D& NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "SetSizeOverride");

	Params::ModioModTile_SetSizeOverride Parms{};

	Parms.NewSize = std::move(NewSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTile.SubmitModReport
// (Final, Native, Protected)

void UModioModTile::SubmitModReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "SubmitModReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTile.SubmitNegativeRating
// (Final, Native, Protected)

void UModioModTile::SubmitNegativeRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "SubmitNegativeRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioModTile.SubmitPositiveRating
// (Final, Native, Protected)

void UModioModTile::SubmitPositiveRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModTile", "SubmitPositiveRating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioNamedGlyphMaterialParams.GetValidGlyphNames
// (Final, Native, Protected)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioNamedGlyphMaterialParams::GetValidGlyphNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioNamedGlyphMaterialParams", "GetValidGlyphNames");

	Params::ModioNamedGlyphMaterialParams_GetValidGlyphNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioNotificationControllerBase.OnNotificationExpired
// (Native, Protected)
// Parameters:
// class UWidget*                          Notification                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioNotificationControllerBase::OnNotificationExpired(class UWidget* Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioNotificationControllerBase", "OnNotificationExpired");

	Params::ModioNotificationControllerBase_OnNotificationExpired Parms{};

	Parms.Notification = Notification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioNotificationWidgetBase.CreateFromParams
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UWidget>              NotificationClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWidget*                          Param_Outer                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioNotificationWidgetBase::CreateFromParams(TSubclassOf<class UWidget> NotificationClass, struct FModioNotificationParams& Params_0, class UWidget* Param_Outer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationWidgetBase", "CreateFromParams");

	Params::ModioNotificationWidgetBase_CreateFromParams Parms{};

	Parms.NotificationClass = NotificationClass;
	Parms.Params_0 = std::move(Params_0);
	Parms.Param_Outer = Param_Outer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioPopupMenu.GeneratePopupMenuContent
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UModioPopupMenu::GeneratePopupMenuContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPopupMenu", "GeneratePopupMenuContent");

	Params::ModioPopupMenu_GeneratePopupMenuContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioPopupMenu.HandleButtonClicked
// (Native, Protected)

void UModioPopupMenu::HandleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPopupMenu", "HandleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioPopupMenu.SetMenuEntries
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioUIMenuCommandList          Entries                                                (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UModioPopupMenu::SetMenuEntries(const struct FModioUIMenuCommandList& Entries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioPopupMenu", "SetMenuEntries");

	Params::ModioPopupMenu_SetMenuEntries Parms{};

	Parms.Entries = std::move(Entries);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioProgressBar.SetStyleRef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioUIStyleRef                 NewStyle                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UModioProgressBar::SetStyleRef(const struct FModioUIStyleRef& NewStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioProgressBar", "SetStyleRef");

	Params::ModioProgressBar_SetStyleRef Parms{};

	Parms.NewStyle = std::move(NewStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRefineSearchDrawer.ConstructNavigationPath
// (Final, Native, Protected)

void UModioRefineSearchDrawer::ConstructNavigationPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRefineSearchDrawer", "ConstructNavigationPath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRefineSearchDrawer.OnApplyClicked
// (Final, Native, Protected)

void UModioRefineSearchDrawer::OnApplyClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRefineSearchDrawer", "OnApplyClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRefineSearchDrawer.OnCancelClicked
// (Final, Native, Protected)

void UModioRefineSearchDrawer::OnCancelClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRefineSearchDrawer", "OnCancelClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRefineSearchDrawer.OnClearClicked
// (Final, Native, Protected)

void UModioRefineSearchDrawer::OnClearClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRefineSearchDrawer", "OnClearClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRefineSearchDrawer.OnCollapse
// (Final, Native, Protected)

void UModioRefineSearchDrawer::OnCollapse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRefineSearchDrawer", "OnCollapse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioReportButtonGroupWidget.CancelClicked
// (Final, Native, Protected)

void UModioReportButtonGroupWidget::CancelClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioReportButtonGroupWidget", "CancelClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioRichTextBlock.GetStyleNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioRichTextBlock::GetStyleNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioRichTextBlock", "GetStyleNames");

	Params::ModioRichTextBlock_GetStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioSearchResultsView.OnDrawerClosed
// (Final, Native, Protected)

void UModioSearchResultsView::OnDrawerClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "OnDrawerClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.OnRefineSearchButtonClicked
// (Final, Native, Protected)

void UModioSearchResultsView::OnRefineSearchButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "OnRefineSearchButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.OnRetryPressed
// (Final, Native, Protected)

void UModioSearchResultsView::OnRetryPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "OnRetryPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.SortByHighestRated
// (Final, Native, Protected)

void UModioSearchResultsView::SortByHighestRated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "SortByHighestRated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.SortByLastUpdated
// (Final, Native, Protected)

void UModioSearchResultsView::SortByLastUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "SortByLastUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.SortByMostPopular
// (Final, Native, Protected)

void UModioSearchResultsView::SortByMostPopular()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "SortByMostPopular");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.SortByMostSubscribers
// (Final, Native, Protected)

void UModioSearchResultsView::SortByMostSubscribers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "SortByMostSubscribers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.SortByRecentlyAdded
// (Final, Native, Protected)

void UModioSearchResultsView::SortByRecentlyAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "SortByRecentlyAdded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSearchResultsView.SortByTrending
// (Final, Native, Protected)

void UModioSearchResultsView::SortByTrending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSearchResultsView", "SortByTrending");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioSelectableTag.OnCheckboxCheckStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioSelectableTag::OnCheckboxCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioSelectableTag", "OnCheckboxCheckStateChanged");

	Params::ModioSelectableTag_OnCheckboxCheckStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTabBar.OnTabIndexChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   TabIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioTabBar::OnTabIndexChanged(int32 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTabBar", "OnTabIndexChanged");

	Params::ModioTabBar_OnTabIndexChanged Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTabController.GetInputHintVisibility
// (Final, Native, Protected)
// Parameters:
// EModioUIInputMode                       InputMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UModioTabController::GetInputHintVisibility(EModioUIInputMode InputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTabController", "GetInputHintVisibility");

	Params::ModioTabController_GetInputHintVisibility Parms{};

	Parms.InputMode = InputMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioTabController.NextTab
// (Final, Native, Public, BlueprintCallable)

void UModioTabController::NextTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTabController", "NextTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTabController.PrevTab
// (Final, Native, Public, BlueprintCallable)

void UModioTabController::PrevTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTabController", "PrevTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTabController.SetCurrentTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   TabIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioTabController::SetCurrentTab(int64 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTabController", "SetCurrentTab");

	Params::ModioTabController_SetCurrentTab Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTabController.SetTabItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  NewItems                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UModioTabController::SetTabItems(const TArray<class UObject*>& NewItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTabController", "SetTabItems");

	Params::ModioTabController_SetTabItems Parms{};

	Parms.NewItems = std::move(NewItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTagList.SetTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FModioModTag>             NewTags                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UModioTagList::SetTags(const TArray<struct FModioModTag>& NewTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagList", "SetTags");

	Params::ModioTagList_SetTags Parms{};

	Parms.NewTags = std::move(NewTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTagListWidgetBase.ClearSelectedTags
// (Final, Native, Public, BlueprintCallable)

void UModioTagListWidgetBase::ClearSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagListWidgetBase", "ClearSelectedTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTagListWidgetBase.GetSelectedTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UModioTagListWidgetBase::GetSelectedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagListWidgetBase", "GetSelectedTags");

	Params::ModioTagListWidgetBase_GetSelectedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioTagSelectorWidgetBase.OnCategoryCollapseToggled
// (Final, Native, Public)

void UModioTagSelectorWidgetBase::OnCategoryCollapseToggled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagSelectorWidgetBase", "OnCategoryCollapseToggled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTagSelectorWidgetBase.OnCheckboxChecked
// (Final, Native, Protected)
// Parameters:
// class UModioSelectableTag*              SourceTag                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioTagSelectorWidgetBase::OnCheckboxChecked(class UModioSelectableTag* SourceTag, bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagSelectorWidgetBase", "OnCheckboxChecked");

	Params::ModioTagSelectorWidgetBase_OnCheckboxChecked Parms{};

	Parms.SourceTag = SourceTag;
	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTagWidgetBase.GetTagTextStyle
// (Final, Native, Protected)
// Parameters:
// const struct FModioRichTextStyle        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FModioRichTextStyle UModioTagWidgetBase::GetTagTextStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagWidgetBase", "GetTagTextStyle");

	Params::ModioTagWidgetBase_GetTagTextStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioTagWidgetBase.SetTagTextFormat
// (Final, Native, Public)
// Parameters:
// class FText                             NewFormat                                              (Parm, NativeAccessSpecifierPublic)

void UModioTagWidgetBase::SetTagTextFormat(class FText NewFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagWidgetBase", "SetTagTextFormat");

	Params::ModioTagWidgetBase_SetTagTextFormat Parms{};

	Parms.NewFormat = NewFormat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTagWidgetBase.SetTagValue
// (Final, Native, Public)
// Parameters:
// class FString                           Category                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewValue                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioTagWidgetBase::SetTagValue(const class FString& Category, const class FString& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagWidgetBase", "SetTagValue");

	Params::ModioTagWidgetBase_SetTagValue Parms{};

	Parms.Category = std::move(Category);
	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTileView.SetAllowPartialItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowPartialItems                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioTileView::SetAllowPartialItems(bool bAllowPartialItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTileView", "SetAllowPartialItems");

	Params::ModioTileView_SetAllowPartialItems Parms{};

	Parms.bAllowPartialItems = bAllowPartialItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioTileView.SetCenterPanelItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCenterPanelItems                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioTileView::SetCenterPanelItems(bool bCenterPanelItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTileView", "SetCenterPanelItems");

	Params::ModioTileView_SetCenterPanelItems Parms{};

	Parms.bCenterPanelItems = bCenterPanelItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUI4Subsystem.GetAllNamedStyleNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UModioUI4Subsystem::GetAllNamedStyleNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "GetAllNamedStyleNames");

	Params::ModioUI4Subsystem_GetAllNamedStyleNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUI4Subsystem.GetCurrentFocusTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UModioUI4Subsystem::GetCurrentFocusTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "GetCurrentFocusTarget");

	Params::ModioUI4Subsystem_GetCurrentFocusTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUI4Subsystem.GetDefaultStyleSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UModioUIStyleSet*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioUIStyleSet* UModioUI4Subsystem::GetDefaultStyleSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "GetDefaultStyleSet");

	Params::ModioUI4Subsystem_GetDefaultStyleSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUI4Subsystem.GetInputGlyphMaterialForInputType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             VirtualInput                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioUIInputMode                       InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UModioUI4Subsystem::GetInputGlyphMaterialForInputType(const struct FKey& VirtualInput, EModioUIInputMode InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "GetInputGlyphMaterialForInputType");

	Params::ModioUI4Subsystem_GetInputGlyphMaterialForInputType Parms{};

	Parms.VirtualInput = std::move(VirtualInput);
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUI4Subsystem.GetLocalizedTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InTag                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUI4Subsystem::GetLocalizedTag(const class FString& InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "GetLocalizedTag");

	Params::ModioUI4Subsystem_GetLocalizedTag Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUI.ModioUI4Subsystem.HandleInputModeChanged
// (Final, Native, Public)
// Parameters:
// EModioUIInputMode                       NewDevice                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUI4Subsystem::HandleInputModeChanged(EModioUIInputMode NewDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "HandleInputModeChanged");

	Params::ModioUI4Subsystem_HandleInputModeChanged Parms{};

	Parms.NewDevice = NewDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUI4Subsystem.SetCurrentFocusTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          CurrentTarget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUI4Subsystem::SetCurrentFocusTarget(class UWidget* CurrentTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUI4Subsystem", "SetCurrentFocusTarget");

	Params::ModioUI4Subsystem_SetCurrentFocusTarget Parms{};

	Parms.CurrentTarget = CurrentTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncLoader.NativeHandleAsyncOperationStateChange
// (Native, Protected)
// Parameters:
// EModioUIAsyncOperationWidgetState       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIAsyncLoader::NativeHandleAsyncOperationStateChange(EModioUIAsyncOperationWidgetState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncLoader", "NativeHandleAsyncOperationStateChange");

	Params::ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncLoader.OnRetryRequested
// (Final, Native, Protected)

void UModioUIAsyncLoader::OnRetryRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncLoader", "OnRetryRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUIAsyncLoadingOverlay.Close
// (Final, Native, Protected)

void UModioUIAsyncLoadingOverlay::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncLoadingOverlay", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioUserProfileButton.OnButtonClicked
// (Native, Protected)

void UModioUserProfileButton::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUserProfileButton", "OnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioWidgetCarousel.ScrollLeft
// (Final, Native, Public, BlueprintCallable)

void UModioWidgetCarousel::ScrollLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioWidgetCarousel", "ScrollLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioWidgetCarousel.ScrollRight
// (Final, Native, Public, BlueprintCallable)

void UModioWidgetCarousel::ScrollRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioWidgetCarousel", "ScrollRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioWidgetCarousel.SetFocusToCurrentElement
// (Final, Native, Public, BlueprintCallable)

void UModioWidgetCarousel::SetFocusToCurrentElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioWidgetCarousel", "SetFocusToCurrentElement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUI.ModioWidgetCarousel.SetItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Items                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UModioWidgetCarousel::SetItems(const TArray<class UObject*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioWidgetCarousel", "SetItems");

	Params::ModioWidgetCarousel_SetItems Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

