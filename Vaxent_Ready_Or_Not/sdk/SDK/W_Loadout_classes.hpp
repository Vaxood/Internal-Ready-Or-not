#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout.W_Loadout_C
// 0x0568 (0x0E98 - 0x0930)
class UW_Loadout_C final  : public UPreMissionPlanning
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0930(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimExtendListSlide;                               // 0x0938(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_SubMenu_C*                           BackButtonPanel;                                   // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_SidebarBack;                                   // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Main;                                  // 0x0950(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       Header;                                            // 0x0958(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_FadeFillLeft;                                  // 0x0960(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_FadeLeft;                                      // 0x0968(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_MimizeArrow_l;                                 // 0x0970(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            InfoPanelAnchor;                                   // 0x0978(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootCanvas;                                        // 0x0980(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        SidebarButton;                                     // 0x0988(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           UI_Canvas;                                         // 0x0990(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_ItemList_Vertical_C*         VerticalItemList;                                  // 0x0998(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HotkeyBar_C*                         W_HotkeyBar;                                       // 0x09A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_InformationTable_C*          W_Loadout_InformationTable_C_1;                    // 0x09A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_ItemList_C*                  W_Loadout_ItemList_C_2;                            // 0x09B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_Overview_C*                  W_Loadout_Overview;                                // 0x09B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_UnitSelect_C*                W_LoadoutCharacterSelect;                          // 0x09C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PanMap;                                            // 0x09C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             UpdateMapMaterial;                                 // 0x09D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AReadyOrNotPlayerController*            PlayerController;                                  // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   Character;                                         // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryComponent*                    InventoryComp;                                     // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       CurrentActiveSlot;                                 // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPreMissionPlanning*                    PreMissionPlanning;                                // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UW_LoadoutSlot_Attachment_C*            CurrentActiveAttachmentSlot;                       // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_InformationTable_C*          InfoPanel;                                         // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       HoveredSlot;                                       // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InfoPanelRefreshCanceled;                          // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OverviewSlotDoubleClickDelay;                      // 0x0A29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPrimary;                                          // 0x0A2A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RemotePlayer;                                      // 0x0A2B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          QuartermasterOpen;                                 // 0x0A2C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F80[0x3];                                     // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InfoPanelHideDelay;                                // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoubleClickDelay;                                  // 0x0A34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UnhoverTimer;                                      // 0x0A38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EEquippingSwat, struct FSavedLoadout>    LastSavedLoadout_0;                                // 0x0A40(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         OverviewRevealOffset;                              // 0x0A90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         QuartermasterRevealOffset;                         // 0x0A94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class FName>              CategoryCameraTags;                                // 0x0A98(0x0050)(Edit, BlueprintVisible)
	TMap<EItemCategory, class FString>            CategoryPoses;                                     // 0x0AE8(0x0050)(Edit, BlueprintVisible)
	class AReadyOrNotPlayerState*                 EquippingPlayerState_0;                            // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentCameraTag;                                  // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrentPreviewAnimation;                           // 0x0B48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           RedrawWeaponTimer;                                 // 0x0B58(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 PrimaryHolserAnim;                                 // 0x0B60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PrimaryDrawAnim;                                   // 0x0B70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SidearmHolserAnim;                                 // 0x0B80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SidearmDrawAnim;                                   // 0x0B90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   DefaultCameraTag;                                  // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemType                                     EquippingItemType;                                 // 0x0BA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartInQuartermaster;                              // 0x0BA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInGame;                                           // 0x0BAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReady;                                            // 0x0BAB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F81[0x4];                                     // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        Overview_Widgets;                                  // 0x0BB0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FString, struct FWeaponPreset>     CurrentWeaponPresets;                              // 0x0BC0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 CurrentlySelectedPreset;                           // 0x0C10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         RevealDelay;                                       // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F82[0x4];                                     // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnQuartermasterListHidden;                         // 0x0C28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bQuarterMasterListHidden;                          // 0x0C38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F83[0x7];                                     // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_StandardModal_C*                     PresetModal;                                       // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PresetOverwriteIndex;                              // 0x0C48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F84[0x4];                                     // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 WorkbenchCameraTarget;                             // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultWorkbenchCameraRotation;                    // 0x0C58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F85[0x4];                                     // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           WorkbenchCamera;                                   // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentWorkbenchCameraRotation;                    // 0x0C70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CurrentWorkbenchCameraTransitionTime;              // 0x0C7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WorkbenchCameraLookSpeed;                          // 0x0C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWorkbenchCameraRotating;                          // 0x0C84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F86[0x3];                                     // 0x0C85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TargetWorkbenchCameraRotation;                     // 0x0C88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         WorkbenchCameraTransitionAlpha;                    // 0x0C94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorkbenchCameraRotation;                           // 0x0C98(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseTableOverview;                                 // 0x0CA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3F87[0x3];                                     // 0x0CA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LobbyLoadout_C*                     OverviewTable;                                     // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            CurrentItems;                                      // 0x0CB0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SelectingMunitions;                                // 0x0D00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F88[0x7];                                     // 0x0D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class ABaseItem>>          ListExclusionItems;                                // 0x0D08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SelectingDeployables;                              // 0x0D18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F89[0x3];                                     // 0x0D19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExcludedAmmoType;                                  // 0x0D1C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmorEditorOpen;                                   // 0x0D24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F8A[0x3];                                     // 0x0D25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPrimaryAmmoEquipped;                             // 0x0D28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSidearmAmmoEquipped;                             // 0x0D38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGrenadesEquipped;                                // 0x0D48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTacticalEquipped;                                // 0x0D58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPrimaryAmmoCountSaved;                           // 0x0D68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSidearmAmmoCountSaved;                           // 0x0D78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGrenadeCountSaved;                               // 0x0D88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTacticalCountSaved;                              // 0x0D98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPrimaryWeaponEquipped;                           // 0x0DA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSidearmWeaponEquipped;                           // 0x0DB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnArmorEquipped;                                   // 0x0DC8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnArmorCoverageSaved;                              // 0x0DD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SelectingArmourMaterial;                           // 0x0DE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F8B[0x7];                                     // 0x0DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnArmorMaterialEquipped;                           // 0x0DF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAmmoOptionSelected;                              // 0x0E00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ChangingPlayer;                                    // 0x0E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F8C[0x7];                                     // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             WeaponEquippedSound;                               // 0x0E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             ArmorEquippedSound;                                // 0x0E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             ArmorMaterialEquippedSound;                        // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             AmmoEquippedSound;                                 // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             AttachmentEquippedSound;                           // 0x0E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             AttachmentRemovedSound;                            // 0x0E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             CleanWeaponSound;                                  // 0x0E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             QuartermasterOpenSound;                            // 0x0E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             DeployableEquippedSound;                           // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             WeaponHolsteredSound;                              // 0x0E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             WeaponDrawSound;                                   // 0x0E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HolsterTimeRemaining;                              // 0x0E70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSelectAttachment;                              // 0x0E74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWeaponAttachmentType                         AutoSelectAttachmentSlot;                          // 0x0E75(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VerticalListOpen;                                  // 0x0E76(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ListVisible;                                       // 0x0E77(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   CurrentLoadoutPreset;                              // 0x0E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyingPreset;                                    // 0x0E80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UsingPreset;                                       // 0x0E81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PresetDirty;                                       // 0x0E82(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F8D[0x1];                                     // 0x0E83(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PresetCharacterLimit;                              // 0x0E84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       ActiveQuartermasterSlot;                           // 0x0E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       CurrentHoveredSlot;                                // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PanMap__DelegateSignature(bool Pressed, const struct FVector2D& CursorPos);
	void UpdateMapMaterial__DelegateSignature(class UTexture2D* LayoutTexture);
	void OnQuartermasterListHidden__DelegateSignature();
	void OnPrimaryAmmoEquipped__DelegateSignature();
	void OnSidearmAmmoEquipped__DelegateSignature();
	void OnGrenadesEquipped__DelegateSignature();
	void OnTacticalEquipped__DelegateSignature();
	void OnPrimaryAmmoCountSaved__DelegateSignature();
	void OnSidearmAmmoCountSaved__DelegateSignature();
	void OnGrenadeCountSaved__DelegateSignature();
	void OnTacticalCountSaved__DelegateSignature();
	void OnPrimaryWeaponEquipped__DelegateSignature();
	void OnSidearmWeaponEquipped__DelegateSignature();
	void OnArmorEquipped__DelegateSignature();
	void OnArmorCoverageSaved__DelegateSignature();
	void OnArmorMaterialEquipped__DelegateSignature();
	void OnAmmoOptionSelected__DelegateSignature(class FName AmmoType, class UClass* Weapon);
	void ExecuteUbergraph_W_Loadout(int32 EntryPoint, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class ACharacter* CallFunc_GetPlayerCharacter_ReturnValue, class AReadyOrNotCharacter* K2Node_DynamicCast_AsReady_or_Not_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class UStandardModal* K2Node_CustomEvent_CallingModal, EWeaponAttachmentType K2Node_ComponentBoundEvent_Slot_1, class UClass* K2Node_ComponentBoundEvent_AttachmentData_2, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, class UW_LoadoutSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot, bool K2Node_ComponentBoundEvent_IsPrimary, class UW_LoadoutSlot_C* K2Node_ComponentBoundEvent_NewLoadoutSlot, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets, int32 CallFunc_Array_Length_ReturnValue, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, int32 Temp_int_Array_Index_Variable, class UUserWidget* CallFunc_Array_Get_Item, TScriptInterface<class ILoadoutUI_C> K2Node_DynamicCast_AsLoadout_UI, bool K2Node_DynamicCast_bSuccess_1, class FName K2Node_CustomEvent_Tag, const class FString& K2Node_CustomEvent_Animation, float K2Node_CustomEvent_BlendTime, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class FName K2Node_ComponentBoundEvent_AmmoType_1, class UClass* K2Node_ComponentBoundEvent_Weapon_1, class UArmourMaterial* K2Node_ComponentBoundEvent_ArmourMaterial_1, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool K2Node_Event_IsDesignTime, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_4, class UW_LoadoutSlot_Attachment_C* K2Node_CustomEvent_TriggeringSlot_3, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_2, const class FString& K2Node_ComponentBoundEvent_HotkeyID, bool CallFunc_EqualEqual_StrStr_ReturnValue, class UClass* K2Node_CustomEvent_ItemData, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_1, class UW_LoadoutSlot_Attachment_C* K2Node_CustomEvent_TriggeringAttachment_1, bool CallFunc_IsNullAttachment_IsNull, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UW_LoadoutSlot_Attachment_C* K2Node_CustomEvent_TriggeringAttachment, bool CallFunc_IsNullAttachment_IsNull_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Not_PreBool_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, EWeaponAttachmentType K2Node_ComponentBoundEvent_Slot, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets_1, int32 CallFunc_Array_Length_ReturnValue_1, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, bool CallFunc_IsValid_ReturnValue_3, class FName K2Node_Event_PageName, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_Loadout_C* K2Node_Event_LoadoutWidget, class FName K2Node_Event_OptionNameID, int32 Temp_int_Array_Index_Variable_1, class UClass* K2Node_ComponentBoundEvent_ItemToModify, class UUserWidget* CallFunc_Array_Get_Item_1, TScriptInterface<class ILoadoutUI_C> K2Node_DynamicCast_AsLoadout_UI_1, bool K2Node_DynamicCast_bSuccess_2, class UClass* K2Node_ComponentBoundEvent_ItemData_3, class UClass* K2Node_ComponentBoundEvent_AttachingWeapon_1, class UClass* K2Node_ComponentBoundEvent_AttachmentData_1, class UClass* K2Node_ComponentBoundEvent_ItemData_2, class UClass* K2Node_ComponentBoundEvent_AttachingWeapon, class UClass* K2Node_ComponentBoundEvent_AttachmentData, class UClass* K2Node_ComponentBoundEvent_ItemData_1, class FName K2Node_ComponentBoundEvent_AmmoType, class UClass* K2Node_ComponentBoundEvent_Weapon, class UArmourMaterial* K2Node_ComponentBoundEvent_ArmourMaterial, class UW_Button_C* K2Node_ComponentBoundEvent_Button, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_NotEqual_NameName_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsValid_ReturnValue_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, const struct FST_EquippingUnit& K2Node_ComponentBoundEvent_EquippingUnitInfo, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, class UClass* K2Node_ComponentBoundEvent_ItemData, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue_1);
	void BndEvt__W_Loadout_W_Loadout_ItemList_C_2_K2Node_ComponentBoundEvent_0_OnLoadoutItemClicked__DelegateSignature(class UClass* ItemData);
	void BndEvt__W_Loadout_VerticalItemList_K2Node_ComponentBoundEvent_17_HandleBackPress__DelegateSignature();
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_8_HandleBackPress__DelegateSignature();
	void BndEvt__W_Loadout_W_LoadoutCharacterSelect_K2Node_ComponentBoundEvent_1_OnEquippingUnitSelected__DelegateSignature(const struct FST_EquippingUnit& EquippingUnitInfo);
	void DoItemUnhover();
	void BndEvt__W_Loadout_btn_SidebarBack_K2Node_ComponentBoundEvent_14_Clicked__DelegateSignature(class UW_Button_C* Button);
	void OnLoadoutPresetsLoaded();
	void BndEvt__W_Loadout_W_Loadout_ItemList_Vertical_C_5_K2Node_ComponentBoundEvent_26_OnArmourMaterialClicked__DelegateSignature(class UArmourMaterial* ArmourMaterial);
	void BndEvt__W_Loadout_W_Loadout_ItemList_Vertical_C_5_K2Node_ComponentBoundEvent_24_OnAmmoItemClicked__DelegateSignature(class FName AmmoType, class UClass* Weapon);
	void BndEvt__W_Loadout_W_Loadout_ItemList_Vertical_C_5_K2Node_ComponentBoundEvent_19_OnLoadoutItemDoubleClicked__DelegateSignature(class UClass* ItemData);
	void BndEvt__W_Loadout_W_Loadout_ItemList_Vertical_C_5_K2Node_ComponentBoundEvent_16_OnAttachmentItemClicked__DelegateSignature(class UClass* AttachingWeapon, class UClass* AttachmentData);
	void BndEvt__W_Loadout_W_Loadout_ItemList_Vertical_C_5_K2Node_ComponentBoundEvent_12_OnLoadoutItemClicked__DelegateSignature(class UClass* ItemData);
	void BndEvt__W_Loadout_W_Loadout_ItemList_C_2_K2Node_ComponentBoundEvent_2_OnAttachmentItemClicked__DelegateSignature(class UClass* AttachingWeapon, class UClass* AttachmentData);
	void BndEvt__W_Loadout_W_Loadout_ItemList_C_2_K2Node_ComponentBoundEvent_3_OnLoadoutItemDoubleClicked__DelegateSignature(class UClass* ItemData);
	void BndEvt__W_Loadout_W_Loadout_InformationTable_C_1_K2Node_ComponentBoundEvent_4_OnModifyWeaponButtonClicked__DelegateSignature(class UClass* ItemToModify);
	void CloseQuartermaster();
	void HeaderSubpageNavigation(class FName OptionNameID);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateActiveLoadout(const struct FSavedLoadout& Param_ActiveLoadout);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void OnLoadoutLoaded();
	void BndEvt__W_Loadout_W_Loadout_InformationTable_C_1_K2Node_ComponentBoundEvent_7_OnInfoPanelRemoveAttachmentClicked__DelegateSignature(EWeaponAttachmentType Param_Slot);
	void AttachmentUnhovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void DoAttachmentUnhover();
	void ItemUnhovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void AttachmentHovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void ItemHovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void SelectListItem(class UClass* ItemData);
	void OnLoadoutSaved();
	void BndEvt__W_Loadout_W_HotkeyBar_K2Node_ComponentBoundEvent_6_OnHotkeyClicked__DelegateSignature(const class FString& HotkeyID);
	void RefreshItemList();
	void QuartermasterWeaponClicked(class UW_LoadoutSlot_C* TriggeringSlot);
	void AttachmentSlotClicked(class UW_LoadoutSlot_Attachment_C* TriggeringSlot);
	void OverviewItemClicked(class UW_LoadoutSlot_C* TriggeringSlot);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_15_OnCleanWeaponClicked__DelegateSignature();
	void BndEvt__W_Loadout_W_Loadout_ItemList_C_2_K2Node_ComponentBoundEvent_13_OnArmourMaterialClicked__DelegateSignature(class UArmourMaterial* ArmourMaterial);
	void BndEvt__W_Loadout_W_Loadout_ItemList_C_2_K2Node_ComponentBoundEvent_9_OnAmmoItemClicked__DelegateSignature(class FName AmmoType, class UClass* Weapon);
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_10_OnArmorEditorClosed__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void CloseArmorQuartermaster();
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_5_OnArmorEditorOpen__DelegateSignature();
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_23_OnQuartermasterOpened__DelegateSignature();
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_22_OnQuartermasterClosed__DelegateSignature();
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_20_OnQuartermasterWeaponSwapped__DelegateSignature(bool IsPrimary, class UW_LoadoutSlot_C* NewLoadoutSlot);
	void BndEvt__W_Loadout_W_Loadout_Overview_K2Node_ComponentBoundEvent_18_OnOverviewItemDoubleClicked__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void BndEvt__W_Loadout_W_Loadout_InformationTable_C_1_K2Node_ComponentBoundEvent_11_OnInfoPanelAttachmentClicked__DelegateSignature(EWeaponAttachmentType Param_Slot, class UClass* AttachmentData);
	void OnInitialized();
	void RedrawWeapon();
	void Construct();
	void CancelSavePreset(class UStandardModal* CallingModal);
	void OnSwatCharacterChanged();
	void SetPreMissionCamera(class FName Tag, const class FString& Animation, float BlendTime);
	void OnDragDetected(const struct FGeometry& MyGeometry, struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void ShowToolTip(const struct FLevelDataLookupTable& MissionDetails, bool CallFunc_TextIsEmpty_ReturnValue);
	void InitializeOverview(float Param_RevealDelay, class UW_LoadoutSlot_C* CurrentInitSlot, class UClass* CurrentInitItem);
	void ShowItemInfoPanel(class UW_LoadoutSlot_C* LoadoutSlot);
	void HideItemInfoPanel(TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput, bool CallFunc_IsValid_ReturnValue);
	void OpenWeaponQuartermaster(class UClass* ItemToModify, float Param_RevealDelay, class UClass* AttachingItem);
	void SetupBindings(TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_4, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> K2Node_CreateDelegate_OutputDelegate_5, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_6, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> K2Node_CreateDelegate_OutputDelegate_7, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_8, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment)> K2Node_CreateDelegate_OutputDelegate_9);
	void SetActiveLoadout(const class FString& LoadoutName, class AReadyOrNotPlayerState* RoNPlayerState, EEquippingSwat EquippingUnit);
	void EquipItem(class UClass* ItemData, const TArray<EItemCategory>& ItemCategories, EItemClass EquippingItemClass, class UClass* EquippingItem);
	void PrimaryChanged();
	void SidearmChanged(TArray<class FName>& K2Node_MakeArray_Array);
	void EquipArmor(class UClass* ItemData, class UClass* K2Node_ClassDynamicCast_AsSWATArmour, bool K2Node_ClassDynamicCast_bSuccess, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void EquipHeadwear(class UClass* ItemData, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void EquipLongTactical(class UClass* ItemData, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void EquipGrenades(TArray<class UClass*>& ItemData, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void EquipTactical(TArray<class UClass*>& ItemData, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void InitializeItemSelectionPanel(class UW_LoadoutSlot_C* TriggeringSlot);
	void InitializeItemSelectionRemote(class UW_LoadoutSlot_C* TriggeringSlot, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void InitializeAttachmentSelectionPanel(class UW_LoadoutSlot_Attachment_C* TriggeringSlot, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void EquipAttachment(class UClass* AttachingWeapon, class UClass* AttachmentData, class UClass* Attachment, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, TArray<EWeaponAttachmentType>& Temp_byte_Variable, EWeaponAttachmentType CallFunc_Array_Get_Item, EWeaponAttachmentType CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_1, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_2, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FKey& CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue);
	void GoBack(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FKey& CallFunc_PointerEvent_GetEffectingButton_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void DeselectLoadoutSlot();
	void EquipPrimaryAttachments(EWeaponAttachmentType AttachmentType, class UClass* AttachmentData, class UClass* AttachingWeapon, class UClass* Attachment, bool K2Node_SwitchEnum_CmpSuccess);
	void EquipSidearmAttachments(EWeaponAttachmentType AttachmentType, class UClass* AttachmentData, class UClass* AttachingWeapon, class UClass* Attachment, bool K2Node_SwitchEnum_CmpSuccess);
	void SetPreMissionCameraBySlot(EItemCategory LoadoutSlot, float BlendTime, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void UpdatePreview(EItemCategory Selection, bool K2Node_SwitchEnum_CmpSuccess);
	void UpdateAllPreviewWeaponAttachments(bool IsWorkbench, TSubclassOf<class ABaseItem>& Weapon, bool IsSidearm, const TArray<class UClass*>& Attachments, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, int32 Temp_int_Variable, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UPreMissionPlanning* CallFunc_GetPremissionPlanning_ReturnValue, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData, bool CallFunc_EqualEqual_ClassClass_ReturnValue, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData_1, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, const struct FSavedWeaponAttachmentData& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, struct FSavedWeaponAttachmentData& K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, struct FSavedWeaponAttachmentData& K2Node_Select_Default_1, struct FSavedWeaponAttachmentData& K2Node_Select_Default_2, class UClass* K2Node_Select_Default_3);
	void InitializeWeaponAttachmentMap(const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData_1);
	void HolsterPreviewCharacterWeapon(bool* IsHolstering, class UPreMissionPlanning* CallFunc_GetPremissionPlanning_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, class AReadyOrNotCharacter* CallFunc_GetDefaultPreviewCharacter_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, const class FString& CallFunc_GetLastTableMontagePlayed_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_IsTableMontagePlayingWithTimeRemaining_TimeRemaining, bool CallFunc_IsTableMontagePlayingWithTimeRemaining_ReturnValue, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue_1);
	void SaveActiveLoadoutOld();
	void HideHUD(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UW_HumanCharacter_HUD_V2_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, int32 CallFunc_Array_Length_ReturnValue, class UW_HumanCharacter_HUD_V2_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void ShowHUD(TArray<class UW_HumanCharacter_HUD_V2_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UW_HumanCharacter_HUD_V2_C* CallFunc_Array_Get_Item);
	void UpdateHUDStates(class APawn* CallFunc_GetOwningPlayerPawn_ReturnValue, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AReadyOrNotPlayerState* K2Node_DynamicCast_AsReady_or_Not_Player_State, bool K2Node_DynamicCast_bSuccess_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void CloseLoadout(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue);
	void CleanCurrentWeapon();
	void SaveWeaponPreset(class UW_StandardModal_C* TriggeringModal, class FText TextEntry, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_Conv_NameToText_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, int32 Temp_int_Array_Index_Variable, class FText CallFunc_Format_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData, const struct FSavedWeaponAttachmentData& K2Node_MakeStruct_SavedWeaponAttachmentData_1, const struct FWeaponPreset& K2Node_MakeStruct_WeaponPreset, const struct FWeaponPreset& K2Node_MakeStruct_WeaponPreset_1, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue_1, const struct FWeaponPreset& K2Node_Select_Default, TArray<class FString>& CallFunc_Map_Keys_Keys, const class FString& CallFunc_Array_Get_Item, const struct FWeaponPreset& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue);
	void LookAtAttachmentSlot(EWeaponAttachmentType AttachmentSlot, class FName Temp_name_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class FName Temp_name_Variable_1, EWeaponAttachmentType Temp_byte_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ABaseItem* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class ABaseWeapon* K2Node_DynamicCast_AsBase_Weapon, bool K2Node_DynamicCast_bSuccess, class FName K2Node_Select_Default, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue, bool CallFunc_DoesSocketExist_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool CallFunc_Not_PreBool_ReturnValue, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FRotator& CallFunc_SelectRotator_ReturnValue, const struct FRotator& CallFunc_SelectRotator_ReturnValue_1);
	void SetupWorkbenchCamera(const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, TArray<class ACameraActor*>& CallFunc_GetAllActorsOfClassWithTag_OutActors, class ACameraActor* CallFunc_Array_Get_Item);
	void UpdateWorkbenchCameraRotation(float DeltaTime, bool CallFunc_EqualEqual_RotatorRotator_ReturnValue, const struct FRotator& CallFunc_RInterpTo_ReturnValue, bool CallFunc_K2_SetActorRotation_ReturnValue);
	void DeselectAttachmentSlot(bool CallFunc_IsValid_ReturnValue);
	void UpdateCurrentItem(EItemCategory ItemCategory, class UClass* ItemClass, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets, class UUserWidget* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class ILoadoutUI_C> K2Node_DynamicCast_AsLoadout_UI, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue);
	void SavePrimaryAmmoSlotCount(int32 Primary_Ammo_Slots_Count);
	void SaveSidearmAmmoSlotCount(int32 Secondary_Ammo_Slots_Count);
	void SaveGrenadeSlotCount(int32 Grenade_Slots_Count);
	void SaveTacticalSlotcount(int32 Tactical_Slots_Count);
	void OpenArmorQuartermaster(class UClass* ItemToModify, float Param_RevealDelay, class UClass* AttachingItem, const class FString& CallFunc_GetClassDisplayName_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void EquipPrimaryAmmo(TArray<class FName>& PrimaryAmmo, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void EquipSidearmAmmo(TArray<class FName>& SidearmAmmo, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void SaveArmorCoverage(EArmourCoverage ArmorCoverage, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void EquipArmourMaterial(class UArmourMaterial* ArmourMaterial, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue);
	void HideItemList(bool NewLocalVar_0, bool Temp_bool_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText K2Node_Select_Default, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue);
	void RefreshItemInfoPanel(class UW_LoadoutSlot_C* LoadoutSlot);
	void RefreshAttachmentInfoPanel(class UW_LoadoutSlot_Attachment_C* AttachmentSlot);
	void IsNullAttachment(class UClass* Attachment, bool* IsNull, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_3, bool CallFunc_EqualEqual_ClassClass_ReturnValue_4, bool CallFunc_EqualEqual_ClassClass_ReturnValue_5, bool CallFunc_EqualEqual_ClassClass_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_5);
	void SaveLoadoutPreset(class UW_StandardModal_C* TriggeringModal, class FText TextEntry, const struct FSavedLoadout& CurrentLoadout, class FName PresetName, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Len_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, bool CallFunc_NotEqual_NameName_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, bool CallFunc_NotEqual_NameName_ReturnValue_1, class FText CallFunc_Conv_NameToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, const struct FLoadoutPreset& K2Node_MakeStruct_LoadoutPreset, class FText CallFunc_Format_ReturnValue_2, const struct FLoadoutPreset& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void OpenAmmoList(bool VerticalList, class FName Param_ExcludedAmmoType, class UClass* Weapon);
	void Open_Armour_Material_List(bool VerticalList, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);
	void OpenDeployableList(bool VerticalList, EItemCategory LoadoutSlot, TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses, TArray<class UClass*>& ExcludedItems, class FText CallFunc_GetLoadoutCategoryText_Category_Text, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);
	void OpenItemList(bool VerticalList, EItemCategory LoadoutSlot, TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses, class FText CallFunc_GetLoadoutCategoryText_Category_Text, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);
	void OpenAttachmentList(bool VerticalList, class UClass* ItemData, EWeaponAttachmentType AttachmentType, class FText CallFunc_GetAttachmentSlotText_SlotText, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);
	void ApplyLoadoutPreset(const struct FLoadoutPreset& LoadoutPreset, bool CallFunc_NotEqual_NameName_ReturnValue);
	void Open_Loadout_Preset_Modal(const class FString& CurrentPreset, bool Delete, class FText Temp_text_Variable, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_Conv_StringToText_ReturnValue_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_Format_ReturnValue, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, const struct FAnchors& K2Node_MakeStruct_Anchors, bool Temp_bool_Variable_2, class FText Temp_text_Variable_3, class UW_StandardModal_C* CallFunc_Create_ReturnValue, TDelegate<void(class UStandardModal* CallingModal)> K2Node_CreateDelegate_OutputDelegate, class FText Temp_text_Variable_4, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> K2Node_Select_Default, class FText K2Node_Select_Default_1, bool CallFunc_Not_PreBool_ReturnValue, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, struct FVector2D& Temp_struct_Variable, const struct FLoadoutPreset& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class FText K2Node_Select_Default_2);
	void DeleteLoadoutPreset(class UW_StandardModal_C* TriggeringModal, class FText TextEntry, const struct FSavedLoadout& CurrentLoadout, class FName PresetName, bool Overwriting, bool ConfirmOverwrite, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue_1, bool CallFunc_Map_Remove_ReturnValue);
	void CheckPreset(bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void LoadDefaultLoadout(class UWorld* CallFunc_GetWorldBP_ReturnValue, const struct FLoadoutPreset& K2Node_MakeStruct_LoadoutPreset, class UItemData* CallFunc_GetItemData_ReturnValue);
	void SetPresetModified(bool Param_PresetDirty);
	void ClearPreset();
	bool BP_OnHandleBackAction();
	void SetActiveQuartermasterSlot(bool CallFunc_IsValid_ReturnValue);
	void InitializeQuartermaster();
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_C">();
	}
	static class UW_Loadout_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_C>();
	}
};
static_assert(alignof(UW_Loadout_C) == 0x000008, "Wrong alignment on UW_Loadout_C");
static_assert(sizeof(UW_Loadout_C) == 0x000E98, "Wrong size on UW_Loadout_C");
static_assert(offsetof(UW_Loadout_C, UberGraphFrame) == 0x000930, "Member 'UW_Loadout_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, AnimExtendListSlide) == 0x000938, "Member 'UW_Loadout_C::AnimExtendListSlide' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, BackButtonPanel) == 0x000940, "Member 'UW_Loadout_C::BackButtonPanel' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, btn_SidebarBack) == 0x000948, "Member 'UW_Loadout_C::btn_SidebarBack' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CanvasPanel_Main) == 0x000950, "Member 'UW_Loadout_C::CanvasPanel_Main' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, Header) == 0x000958, "Member 'UW_Loadout_C::Header' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, Img_FadeFillLeft) == 0x000960, "Member 'UW_Loadout_C::Img_FadeFillLeft' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, Img_FadeLeft) == 0x000968, "Member 'UW_Loadout_C::Img_FadeLeft' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, Img_MimizeArrow_l) == 0x000970, "Member 'UW_Loadout_C::Img_MimizeArrow_l' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, InfoPanelAnchor) == 0x000978, "Member 'UW_Loadout_C::InfoPanelAnchor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, RootCanvas) == 0x000980, "Member 'UW_Loadout_C::RootCanvas' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, SidebarButton) == 0x000988, "Member 'UW_Loadout_C::SidebarButton' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, UI_Canvas) == 0x000990, "Member 'UW_Loadout_C::UI_Canvas' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, VerticalItemList) == 0x000998, "Member 'UW_Loadout_C::VerticalItemList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, W_HotkeyBar) == 0x0009A0, "Member 'UW_Loadout_C::W_HotkeyBar' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, W_Loadout_InformationTable_C_1) == 0x0009A8, "Member 'UW_Loadout_C::W_Loadout_InformationTable_C_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, W_Loadout_ItemList_C_2) == 0x0009B0, "Member 'UW_Loadout_C::W_Loadout_ItemList_C_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, W_Loadout_Overview) == 0x0009B8, "Member 'UW_Loadout_C::W_Loadout_Overview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, W_LoadoutCharacterSelect) == 0x0009C0, "Member 'UW_Loadout_C::W_LoadoutCharacterSelect' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PanMap) == 0x0009C8, "Member 'UW_Loadout_C::PanMap' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, UpdateMapMaterial) == 0x0009D8, "Member 'UW_Loadout_C::UpdateMapMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PlayerController) == 0x0009E8, "Member 'UW_Loadout_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, Character) == 0x0009F0, "Member 'UW_Loadout_C::Character' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, InventoryComp) == 0x0009F8, "Member 'UW_Loadout_C::InventoryComp' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentActiveSlot) == 0x000A00, "Member 'UW_Loadout_C::CurrentActiveSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PreMissionPlanning) == 0x000A08, "Member 'UW_Loadout_C::PreMissionPlanning' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentActiveAttachmentSlot) == 0x000A10, "Member 'UW_Loadout_C::CurrentActiveAttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, InfoPanel) == 0x000A18, "Member 'UW_Loadout_C::InfoPanel' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, HoveredSlot) == 0x000A20, "Member 'UW_Loadout_C::HoveredSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, InfoPanelRefreshCanceled) == 0x000A28, "Member 'UW_Loadout_C::InfoPanelRefreshCanceled' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OverviewSlotDoubleClickDelay) == 0x000A29, "Member 'UW_Loadout_C::OverviewSlotDoubleClickDelay' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, bPrimary) == 0x000A2A, "Member 'UW_Loadout_C::bPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, RemotePlayer) == 0x000A2B, "Member 'UW_Loadout_C::RemotePlayer' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, QuartermasterOpen) == 0x000A2C, "Member 'UW_Loadout_C::QuartermasterOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, InfoPanelHideDelay) == 0x000A30, "Member 'UW_Loadout_C::InfoPanelHideDelay' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, DoubleClickDelay) == 0x000A34, "Member 'UW_Loadout_C::DoubleClickDelay' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, UnhoverTimer) == 0x000A38, "Member 'UW_Loadout_C::UnhoverTimer' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, LastSavedLoadout_0) == 0x000A40, "Member 'UW_Loadout_C::LastSavedLoadout_0' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OverviewRevealOffset) == 0x000A90, "Member 'UW_Loadout_C::OverviewRevealOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, QuartermasterRevealOffset) == 0x000A94, "Member 'UW_Loadout_C::QuartermasterRevealOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CategoryCameraTags) == 0x000A98, "Member 'UW_Loadout_C::CategoryCameraTags' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CategoryPoses) == 0x000AE8, "Member 'UW_Loadout_C::CategoryPoses' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, EquippingPlayerState_0) == 0x000B38, "Member 'UW_Loadout_C::EquippingPlayerState_0' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentCameraTag) == 0x000B40, "Member 'UW_Loadout_C::CurrentCameraTag' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentPreviewAnimation) == 0x000B48, "Member 'UW_Loadout_C::CurrentPreviewAnimation' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, RedrawWeaponTimer) == 0x000B58, "Member 'UW_Loadout_C::RedrawWeaponTimer' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PrimaryHolserAnim) == 0x000B60, "Member 'UW_Loadout_C::PrimaryHolserAnim' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PrimaryDrawAnim) == 0x000B70, "Member 'UW_Loadout_C::PrimaryDrawAnim' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, SidearmHolserAnim) == 0x000B80, "Member 'UW_Loadout_C::SidearmHolserAnim' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, SidearmDrawAnim) == 0x000B90, "Member 'UW_Loadout_C::SidearmDrawAnim' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, DefaultCameraTag) == 0x000BA0, "Member 'UW_Loadout_C::DefaultCameraTag' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, EquippingItemType) == 0x000BA8, "Member 'UW_Loadout_C::EquippingItemType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, StartInQuartermaster) == 0x000BA9, "Member 'UW_Loadout_C::StartInQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, bInGame) == 0x000BAA, "Member 'UW_Loadout_C::bInGame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, bReady) == 0x000BAB, "Member 'UW_Loadout_C::bReady' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, Overview_Widgets) == 0x000BB0, "Member 'UW_Loadout_C::Overview_Widgets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentWeaponPresets) == 0x000BC0, "Member 'UW_Loadout_C::CurrentWeaponPresets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentlySelectedPreset) == 0x000C10, "Member 'UW_Loadout_C::CurrentlySelectedPreset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, RevealDelay) == 0x000C20, "Member 'UW_Loadout_C::RevealDelay' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnQuartermasterListHidden) == 0x000C28, "Member 'UW_Loadout_C::OnQuartermasterListHidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, bQuarterMasterListHidden) == 0x000C38, "Member 'UW_Loadout_C::bQuarterMasterListHidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PresetModal) == 0x000C40, "Member 'UW_Loadout_C::PresetModal' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PresetOverwriteIndex) == 0x000C48, "Member 'UW_Loadout_C::PresetOverwriteIndex' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WorkbenchCameraTarget) == 0x000C50, "Member 'UW_Loadout_C::WorkbenchCameraTarget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, DefaultWorkbenchCameraRotation) == 0x000C58, "Member 'UW_Loadout_C::DefaultWorkbenchCameraRotation' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WorkbenchCamera) == 0x000C68, "Member 'UW_Loadout_C::WorkbenchCamera' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentWorkbenchCameraRotation) == 0x000C70, "Member 'UW_Loadout_C::CurrentWorkbenchCameraRotation' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentWorkbenchCameraTransitionTime) == 0x000C7C, "Member 'UW_Loadout_C::CurrentWorkbenchCameraTransitionTime' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WorkbenchCameraLookSpeed) == 0x000C80, "Member 'UW_Loadout_C::WorkbenchCameraLookSpeed' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, bWorkbenchCameraRotating) == 0x000C84, "Member 'UW_Loadout_C::bWorkbenchCameraRotating' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, TargetWorkbenchCameraRotation) == 0x000C88, "Member 'UW_Loadout_C::TargetWorkbenchCameraRotation' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WorkbenchCameraTransitionAlpha) == 0x000C94, "Member 'UW_Loadout_C::WorkbenchCameraTransitionAlpha' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WorkbenchCameraRotation) == 0x000C98, "Member 'UW_Loadout_C::WorkbenchCameraRotation' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, bUseTableOverview) == 0x000CA4, "Member 'UW_Loadout_C::bUseTableOverview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OverviewTable) == 0x000CA8, "Member 'UW_Loadout_C::OverviewTable' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentItems) == 0x000CB0, "Member 'UW_Loadout_C::CurrentItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, SelectingMunitions) == 0x000D00, "Member 'UW_Loadout_C::SelectingMunitions' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ListExclusionItems) == 0x000D08, "Member 'UW_Loadout_C::ListExclusionItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, SelectingDeployables) == 0x000D18, "Member 'UW_Loadout_C::SelectingDeployables' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ExcludedAmmoType) == 0x000D1C, "Member 'UW_Loadout_C::ExcludedAmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ArmorEditorOpen) == 0x000D24, "Member 'UW_Loadout_C::ArmorEditorOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnPrimaryAmmoEquipped) == 0x000D28, "Member 'UW_Loadout_C::OnPrimaryAmmoEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnSidearmAmmoEquipped) == 0x000D38, "Member 'UW_Loadout_C::OnSidearmAmmoEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnGrenadesEquipped) == 0x000D48, "Member 'UW_Loadout_C::OnGrenadesEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnTacticalEquipped) == 0x000D58, "Member 'UW_Loadout_C::OnTacticalEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnPrimaryAmmoCountSaved) == 0x000D68, "Member 'UW_Loadout_C::OnPrimaryAmmoCountSaved' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnSidearmAmmoCountSaved) == 0x000D78, "Member 'UW_Loadout_C::OnSidearmAmmoCountSaved' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnGrenadeCountSaved) == 0x000D88, "Member 'UW_Loadout_C::OnGrenadeCountSaved' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnTacticalCountSaved) == 0x000D98, "Member 'UW_Loadout_C::OnTacticalCountSaved' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnPrimaryWeaponEquipped) == 0x000DA8, "Member 'UW_Loadout_C::OnPrimaryWeaponEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnSidearmWeaponEquipped) == 0x000DB8, "Member 'UW_Loadout_C::OnSidearmWeaponEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnArmorEquipped) == 0x000DC8, "Member 'UW_Loadout_C::OnArmorEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnArmorCoverageSaved) == 0x000DD8, "Member 'UW_Loadout_C::OnArmorCoverageSaved' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, SelectingArmourMaterial) == 0x000DE8, "Member 'UW_Loadout_C::SelectingArmourMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnArmorMaterialEquipped) == 0x000DF0, "Member 'UW_Loadout_C::OnArmorMaterialEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, OnAmmoOptionSelected) == 0x000E00, "Member 'UW_Loadout_C::OnAmmoOptionSelected' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ChangingPlayer) == 0x000E10, "Member 'UW_Loadout_C::ChangingPlayer' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WeaponEquippedSound) == 0x000E18, "Member 'UW_Loadout_C::WeaponEquippedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ArmorEquippedSound) == 0x000E20, "Member 'UW_Loadout_C::ArmorEquippedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ArmorMaterialEquippedSound) == 0x000E28, "Member 'UW_Loadout_C::ArmorMaterialEquippedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, AmmoEquippedSound) == 0x000E30, "Member 'UW_Loadout_C::AmmoEquippedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, AttachmentEquippedSound) == 0x000E38, "Member 'UW_Loadout_C::AttachmentEquippedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, AttachmentRemovedSound) == 0x000E40, "Member 'UW_Loadout_C::AttachmentRemovedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CleanWeaponSound) == 0x000E48, "Member 'UW_Loadout_C::CleanWeaponSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, QuartermasterOpenSound) == 0x000E50, "Member 'UW_Loadout_C::QuartermasterOpenSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, DeployableEquippedSound) == 0x000E58, "Member 'UW_Loadout_C::DeployableEquippedSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WeaponHolsteredSound) == 0x000E60, "Member 'UW_Loadout_C::WeaponHolsteredSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, WeaponDrawSound) == 0x000E68, "Member 'UW_Loadout_C::WeaponDrawSound' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, HolsterTimeRemaining) == 0x000E70, "Member 'UW_Loadout_C::HolsterTimeRemaining' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, AutoSelectAttachment) == 0x000E74, "Member 'UW_Loadout_C::AutoSelectAttachment' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, AutoSelectAttachmentSlot) == 0x000E75, "Member 'UW_Loadout_C::AutoSelectAttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, VerticalListOpen) == 0x000E76, "Member 'UW_Loadout_C::VerticalListOpen' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ListVisible) == 0x000E77, "Member 'UW_Loadout_C::ListVisible' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentLoadoutPreset) == 0x000E78, "Member 'UW_Loadout_C::CurrentLoadoutPreset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ApplyingPreset) == 0x000E80, "Member 'UW_Loadout_C::ApplyingPreset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, UsingPreset) == 0x000E81, "Member 'UW_Loadout_C::UsingPreset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PresetDirty) == 0x000E82, "Member 'UW_Loadout_C::PresetDirty' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, PresetCharacterLimit) == 0x000E84, "Member 'UW_Loadout_C::PresetCharacterLimit' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, ActiveQuartermasterSlot) == 0x000E88, "Member 'UW_Loadout_C::ActiveQuartermasterSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_C, CurrentHoveredSlot) == 0x000E90, "Member 'UW_Loadout_C::CurrentHoveredSlot' has a wrong offset!");

}

