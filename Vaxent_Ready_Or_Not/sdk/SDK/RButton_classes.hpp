#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RButton.RButton_C
// 0x00B0 (0x0310 - 0x0260)
class URButton_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn;                                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_0;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_68;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x0288(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FLinearColor                           SelectedColor;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ButtonImage;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonAlpha;                                       // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextHoveredColor;                                  // 0x02CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           TextUnhoveredColor;                                // 0x02DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ETextJustify                                  TextJustification;                                 // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EStretch                                      TextScale;                                         // 0x02ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EStretchDirection                             TextStretchDirection;                              // 0x02EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4094[0x1];                                     // 0x02EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HoveredText;                                       // 0x02F0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          InvertHoverColors;                                 // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_RButton(int32 EntryPoint, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, bool CallFunc_TextIsEmpty_ReturnValue);
	void OnUnhovered();
	void OnHovered();
	void BndEvt__Btn_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void BndEvt__Btn_K2Node_ComponentBoundEvent_23_OnButtonHoverEvent__DelegateSignature();
	void SetSelectedColor();
	void SetDefaultColor();
	void ShouldInvertHoverColors_(bool Invert_, bool CallFunc_IsHovered_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RButton_C">();
	}
	static class URButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URButton_C>();
	}
};
static_assert(alignof(URButton_C) == 0x000008, "Wrong alignment on URButton_C");
static_assert(sizeof(URButton_C) == 0x000310, "Wrong size on URButton_C");
static_assert(offsetof(URButton_C, UberGraphFrame) == 0x000260, "Member 'URButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URButton_C, Border_0) == 0x000268, "Member 'URButton_C::Border_0' has a wrong offset!");
static_assert(offsetof(URButton_C, Btn) == 0x000270, "Member 'URButton_C::Btn' has a wrong offset!");
static_assert(offsetof(URButton_C, ScaleBox_0) == 0x000278, "Member 'URButton_C::ScaleBox_0' has a wrong offset!");
static_assert(offsetof(URButton_C, TextBlock_68) == 0x000280, "Member 'URButton_C::TextBlock_68' has a wrong offset!");
static_assert(offsetof(URButton_C, ButtonText) == 0x000288, "Member 'URButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(URButton_C, SelectedColor) == 0x0002A0, "Member 'URButton_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(URButton_C, DefaultColor) == 0x0002B0, "Member 'URButton_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(URButton_C, ButtonImage) == 0x0002C0, "Member 'URButton_C::ButtonImage' has a wrong offset!");
static_assert(offsetof(URButton_C, ButtonAlpha) == 0x0002C8, "Member 'URButton_C::ButtonAlpha' has a wrong offset!");
static_assert(offsetof(URButton_C, TextHoveredColor) == 0x0002CC, "Member 'URButton_C::TextHoveredColor' has a wrong offset!");
static_assert(offsetof(URButton_C, TextUnhoveredColor) == 0x0002DC, "Member 'URButton_C::TextUnhoveredColor' has a wrong offset!");
static_assert(offsetof(URButton_C, TextJustification) == 0x0002EC, "Member 'URButton_C::TextJustification' has a wrong offset!");
static_assert(offsetof(URButton_C, TextScale) == 0x0002ED, "Member 'URButton_C::TextScale' has a wrong offset!");
static_assert(offsetof(URButton_C, TextStretchDirection) == 0x0002EE, "Member 'URButton_C::TextStretchDirection' has a wrong offset!");
static_assert(offsetof(URButton_C, HoveredText) == 0x0002F0, "Member 'URButton_C::HoveredText' has a wrong offset!");
static_assert(offsetof(URButton_C, InvertHoverColors) == 0x000308, "Member 'URButton_C::InvertHoverColors' has a wrong offset!");

}

