#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MagicLeapARPinInfoActor

#include "Basic.hpp"

#include "MagicLeapARPinInfoActor_classes.hpp"
#include "MagicLeapARPinInfoActor_parameters.hpp"


namespace SDK
{

// Function MagicLeapARPinInfoActor.MagicLeapARPinInfoActor_C.ExecuteUbergraph_MagicLeapARPinInfoActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerCameraManager*             CallFunc_GetPlayerCameraManager_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetCameraLocation_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CallFunc_K2_GetComponentRotation_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_K2_GetComponentLocation_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CallFunc_FindLookAtRotation_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_GetARPinPositionAndOrientation_Position       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CallFunc_GetARPinPositionAndOrientation_Orientation    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetARPinPositionAndOrientation_PinFoundInEnvironment(ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GetARPinPositionAndOrientation_ReturnValue    (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult (IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FHitResult                       CallFunc_K2_SetWorldLocation_SweepHitResult            (IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   K2Node_Event_DeltaSeconds                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CallFunc_RInterpTo_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_ARPinIdToString_ReturnValue                   (ZeroConstructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Roll                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Pitch                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_BreakRotator_Yaw                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()
// struct FRotator                         CallFunc_MakeRotator_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       CallFunc_K2_SetWorldRotation_SweepHitResult            (IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FMagicLeapARPinState             CallFunc_GetARPinState_State                           (NoDestructor)
// EMagicLeapPassableWorldError            CallFunc_GetARPinState_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetEnumeratorUserFriendlyName_ReturnValue     (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_FloatToText_ReturnValue                  ()
// class FText                             CallFunc_Conv_StringToText_ReturnValue_1               ()
// class FText                             CallFunc_Conv_FloatToText_ReturnValue_1                ()
// class FText                             CallFunc_Conv_FloatToText_ReturnValue_2                ()

void AMagicLeapARPinInfoActor_C::ExecuteUbergraph_MagicLeapARPinInfoActor(int32 EntryPoint, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FVector& CallFunc_GetARPinPositionAndOrientation_Position, const struct FRotator& CallFunc_GetARPinPositionAndOrientation_Orientation, bool CallFunc_GetARPinPositionAndOrientation_PinFoundInEnvironment, bool CallFunc_GetARPinPositionAndOrientation_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, float K2Node_Event_DeltaSeconds, const struct FRotator& CallFunc_RInterpTo_ReturnValue, const class FString& CallFunc_ARPinIdToString_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldRotation_SweepHitResult, const struct FMagicLeapARPinState& CallFunc_GetARPinState_State, EMagicLeapPassableWorldError CallFunc_GetARPinState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FText CallFunc_Conv_FloatToText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, class FText CallFunc_Conv_FloatToText_ReturnValue_1, class FText CallFunc_Conv_FloatToText_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapARPinInfoActor_C", "ExecuteUbergraph_MagicLeapARPinInfoActor");

	Params::MagicLeapARPinInfoActor_C_ExecuteUbergraph_MagicLeapARPinInfoActor Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_GetPlayerCameraManager_ReturnValue = CallFunc_GetPlayerCameraManager_ReturnValue;
	Parms.CallFunc_GetCameraLocation_ReturnValue = std::move(CallFunc_GetCameraLocation_ReturnValue);
	Parms.CallFunc_K2_GetComponentRotation_ReturnValue = std::move(CallFunc_K2_GetComponentRotation_ReturnValue);
	Parms.CallFunc_K2_GetComponentLocation_ReturnValue = std::move(CallFunc_K2_GetComponentLocation_ReturnValue);
	Parms.CallFunc_FindLookAtRotation_ReturnValue = std::move(CallFunc_FindLookAtRotation_ReturnValue);
	Parms.CallFunc_GetARPinPositionAndOrientation_Position = std::move(CallFunc_GetARPinPositionAndOrientation_Position);
	Parms.CallFunc_GetARPinPositionAndOrientation_Orientation = std::move(CallFunc_GetARPinPositionAndOrientation_Orientation);
	Parms.CallFunc_GetARPinPositionAndOrientation_PinFoundInEnvironment = CallFunc_GetARPinPositionAndOrientation_PinFoundInEnvironment;
	Parms.CallFunc_GetARPinPositionAndOrientation_ReturnValue = CallFunc_GetARPinPositionAndOrientation_ReturnValue;
	Parms.CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult = std::move(CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult);
	Parms.CallFunc_K2_SetWorldLocation_SweepHitResult = std::move(CallFunc_K2_SetWorldLocation_SweepHitResult);
	Parms.K2Node_Event_DeltaSeconds = K2Node_Event_DeltaSeconds;
	Parms.CallFunc_RInterpTo_ReturnValue = std::move(CallFunc_RInterpTo_ReturnValue);
	Parms.CallFunc_ARPinIdToString_ReturnValue = std::move(CallFunc_ARPinIdToString_ReturnValue);
	Parms.CallFunc_BreakRotator_Roll = CallFunc_BreakRotator_Roll;
	Parms.CallFunc_BreakRotator_Pitch = CallFunc_BreakRotator_Pitch;
	Parms.CallFunc_BreakRotator_Yaw = CallFunc_BreakRotator_Yaw;
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;
	Parms.CallFunc_MakeRotator_ReturnValue = std::move(CallFunc_MakeRotator_ReturnValue);
	Parms.CallFunc_K2_SetWorldRotation_SweepHitResult = std::move(CallFunc_K2_SetWorldRotation_SweepHitResult);
	Parms.CallFunc_GetARPinState_State = std::move(CallFunc_GetARPinState_State);
	Parms.CallFunc_GetARPinState_ReturnValue = CallFunc_GetARPinState_ReturnValue;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_GetEnumeratorUserFriendlyName_ReturnValue = std::move(CallFunc_GetEnumeratorUserFriendlyName_ReturnValue);
	Parms.CallFunc_Conv_FloatToText_ReturnValue = CallFunc_Conv_FloatToText_ReturnValue;
	Parms.CallFunc_Conv_StringToText_ReturnValue_1 = CallFunc_Conv_StringToText_ReturnValue_1;
	Parms.CallFunc_Conv_FloatToText_ReturnValue_1 = CallFunc_Conv_FloatToText_ReturnValue_1;
	Parms.CallFunc_Conv_FloatToText_ReturnValue_2 = CallFunc_Conv_FloatToText_ReturnValue_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MagicLeapARPinInfoActor.MagicLeapARPinInfoActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMagicLeapARPinInfoActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapARPinInfoActor_C", "ReceiveTick");

	Params::MagicLeapARPinInfoActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MagicLeapARPinInfoActor.MagicLeapARPinInfoActor_C.OnUpdateARPinState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMagicLeapARPinInfoActor_C::OnUpdateARPinState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapARPinInfoActor_C", "OnUpdateARPinState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MagicLeapARPinInfoActor.MagicLeapARPinInfoActor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         CallFunc_CreateDynamicMaterialInstance_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         CallFunc_CreateDynamicMaterialInstance_ReturnValue_1   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         CallFunc_CreateDynamicMaterialInstance_ReturnValue_2   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMagicLeapARPinInfoActor_C::UserConstructionScript(class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapARPinInfoActor_C", "UserConstructionScript");

	Params::MagicLeapARPinInfoActor_C_UserConstructionScript Parms{};

	Parms.CallFunc_CreateDynamicMaterialInstance_ReturnValue = CallFunc_CreateDynamicMaterialInstance_ReturnValue;
	Parms.CallFunc_CreateDynamicMaterialInstance_ReturnValue_1 = CallFunc_CreateDynamicMaterialInstance_ReturnValue_1;
	Parms.CallFunc_CreateDynamicMaterialInstance_ReturnValue_2 = CallFunc_CreateDynamicMaterialInstance_ReturnValue_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MagicLeapARPinInfoActor.MagicLeapARPinInfoActor_C.UpdatePinState
// (Public, BlueprintCallable, BlueprintEvent)

void AMagicLeapARPinInfoActor_C::UpdatePinState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MagicLeapARPinInfoActor_C", "UpdatePinState");

	UObject::ProcessEvent(Func, nullptr);
}

}

