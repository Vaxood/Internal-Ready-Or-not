#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreboardFill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ScoreboardFill.W_ScoreboardFill_C
// 0x01C0 (0x0420 - 0x0260)
class UW_ScoreboardFill_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Arrests;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             BlueTeam;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             BlueTeamCoop;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BlueTeamScore;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Damage;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Deaths;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             FreeplayMode;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HoldVIPTimeRemaining;                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_1;                                   // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Incapacitations;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Kills;                                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LeaderCoop;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ModeSwitcher;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_W_ScoreboardFill_C;                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Ping;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             RedTeam;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             RedTeamCoop;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RedTeamScore;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReinforcementTimeRemaining;                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_65;                                       // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_71;                                       // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Score;                                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreboardHeader;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Status;                                            // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Timelimit;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimesArrested;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         TableHeaderFont;                                   // 0x0338(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateFontInfo                         ColumnHeaderFont;                                  // 0x0390(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bFreeForAll;                                       // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3004[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         FFAPlayerStates;                                   // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          HideHealthStatus;                                  // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          ShowScoreboardHeader;                              // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bHideReadyCheckbox;                                // 0x0402(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          ShowReinforcementsTimer;                           // 0x0403(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          ShowTimelimitTimer;                                // 0x0404(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          ShowHoldVIPTimer;                                  // 0x0405(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3005[0x2];                                     // 0x0406(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NextUpdateTime;                                    // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberArrestedTeammatesRed;                        // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberArrestedTeammatesBlue;                       // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberTeammatesTotalRed;                           // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberTeammatesTotalBlue;                          // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_ScoreboardFill(int32 EntryPoint, TArray<class APlayerCharacter*>& CallFunc_GetAllActorsOfClass_OutActors, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_4, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 Temp_int_Array_Index_Variable_3, class UW_Scoreboard_Line_C* CallFunc_Create_ReturnValue, int32 Temp_int_Variable, class UW_Scoreboard_Line_C* CallFunc_Create_ReturnValue_1, int32 Temp_int_Array_Index_Variable_4, class UW_Scoreboard_Line_C* CallFunc_Create_ReturnValue_2, int32 Temp_int_Array_Index_Variable_5, int32 Temp_int_Loop_Counter_Variable_5, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_5, int32 Temp_int_Array_Index_Variable_6, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, int32 Temp_int_Loop_Counter_Variable_6, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 Temp_int_Array_Index_Variable_7, class APlayerCharacter* CallFunc_Array_Get_Item, ETeamType CallFunc_GetTeam_ReturnValue, EPlayerHealthStatus CallFunc_GetHealthStatus_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2, class AGameStateBase* CallFunc_GetGameState_ReturnValue, int32 Temp_int_Loop_Counter_Variable_7, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, class ACoopGS* K2Node_DynamicCast_AsCoop_GS, bool K2Node_DynamicCast_bSuccess_1, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayerStatesOfTeam_ReturnValue, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayerStatesOfTeam_ReturnValue_1, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayerStatesOfTeam_ReturnValue_2, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_2, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_3, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_4, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_4, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayerStatesOfTeam_ReturnValue_3, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_5, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_6, int32 CallFunc_Array_Length_ReturnValue_5, bool CallFunc_Less_IntInt_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue_6, bool CallFunc_Less_IntInt_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_7, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue_1, class UW_Scoreboard_Line_C* CallFunc_Create_ReturnValue_3, int32 Temp_int_Variable_2, int32 CallFunc_Array_Add_ReturnValue, class UW_Scoreboard_Line_C* CallFunc_Create_ReturnValue_4, int32 CallFunc_Array_Add_ReturnValue_1, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_7, class UPanelSlot* CallFunc_AddChild_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_7, bool CallFunc_Less_IntInt_ReturnValue_7, bool K2Node_Event_IsDesignTime, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, class ACoopGS* K2Node_DynamicCast_AsCoop_GS_1, bool K2Node_DynamicCast_bSuccess_2, class UW_Scoreboard_Line_C* CallFunc_Create_ReturnValue_5, class UPanelSlot* CallFunc_AddChild_ReturnValue_3, class UPanelSlot* CallFunc_AddChild_ReturnValue_4, class UOverlaySlot* CallFunc_AddChildToOverlay_ReturnValue, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue_2, class AArrestAndRescueGS* K2Node_DynamicCast_AsArrest_and_Rescue_GS, bool K2Node_DynamicCast_bSuccess_3, int32 CallFunc_Add_IntInt_ReturnValue_8, int32 CallFunc_Add_IntInt_ReturnValue_9, int32 Temp_int_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_10, int32 CallFunc_Add_IntInt_ReturnValue_11);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void RefreshScoreboard();
	void Construct();
	class FText Get_HoldVIPTimeRemaining_Text_0(const struct FSlateColor& K2Node_MakeStruct_SlateColor, class APlayerController* CallFunc_GetPlayerController_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, class AReadyOrNotPlayerState* K2Node_DynamicCast_AsReady_or_Not_Player_State, bool K2Node_DynamicCast_bSuccess, ETeamType CallFunc_GetTeam_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AVIPEscortGS* K2Node_DynamicCast_AsVIPEscort_GS, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue, const class FString& CallFunc_ConvertFloatToStringMinutes_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);
	class FText Get_ReinforcementTimeRemaining_Text_0(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_ConvertFloatToStringMinutes_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);
	class FText GetRedTeamScoreText(const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class FText CallFunc_Format_ReturnValue, class AArrestAndRescueGS* K2Node_DynamicCast_AsArrest_and_Rescue_GS, bool K2Node_DynamicCast_bSuccess, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_1, float CallFunc_GetTeamScore_ReturnValue, bool CallFunc_GetWinningScore_bUsesScoring, float CallFunc_GetWinningScore_ReturnValue, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_FFloor_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FText CallFunc_Conv_StringToText_ReturnValue);
	class FText GetBlueTeamScoreText(const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class FText CallFunc_Format_ReturnValue, class AArrestAndRescueGS* K2Node_DynamicCast_AsArrest_and_Rescue_GS, bool K2Node_DynamicCast_bSuccess, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess_1, float CallFunc_GetTeamScore_ReturnValue, bool CallFunc_GetWinningScore_bUsesScoring, float CallFunc_GetWinningScore_ReturnValue, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_FFloor_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FText CallFunc_Conv_StringToText_ReturnValue);
	ESlateVisibility GetVisibility_0(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	ESlateVisibility IsVIP(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AVIPEscortGS* K2Node_DynamicCast_AsVIPEscort_GS, bool K2Node_DynamicCast_bSuccess);
	ESlateVisibility HasReinforcements(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess);
	ESlateVisibility UsesScoring(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetWinningScore_bUsesScoring, float CallFunc_GetWinningScore_ReturnValue);
	ESlateVisibility Get_Status_Visibility_0();
	class FText Get_Timelimit_Text_0(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_ConvertFloatToStringMinutes_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	ESlateVisibility Get_Timelimit_Visibility_0(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess);
	ESlateVisibility GetTeamScoresVisibility(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ScoreboardFill_C">();
	}
	static class UW_ScoreboardFill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ScoreboardFill_C>();
	}
};
static_assert(alignof(UW_ScoreboardFill_C) == 0x000008, "Wrong alignment on UW_ScoreboardFill_C");
static_assert(sizeof(UW_ScoreboardFill_C) == 0x000420, "Wrong size on UW_ScoreboardFill_C");
static_assert(offsetof(UW_ScoreboardFill_C, UberGraphFrame) == 0x000260, "Member 'UW_ScoreboardFill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Arrests) == 0x000268, "Member 'UW_ScoreboardFill_C::Arrests' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, BlueTeam) == 0x000270, "Member 'UW_ScoreboardFill_C::BlueTeam' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, BlueTeamCoop) == 0x000278, "Member 'UW_ScoreboardFill_C::BlueTeamCoop' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, BlueTeamScore) == 0x000280, "Member 'UW_ScoreboardFill_C::BlueTeamScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Damage) == 0x000288, "Member 'UW_ScoreboardFill_C::Damage' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Deaths) == 0x000290, "Member 'UW_ScoreboardFill_C::Deaths' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, FreeplayMode) == 0x000298, "Member 'UW_ScoreboardFill_C::FreeplayMode' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, HoldVIPTimeRemaining) == 0x0002A0, "Member 'UW_ScoreboardFill_C::HoldVIPTimeRemaining' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, HorizontalBox_1) == 0x0002A8, "Member 'UW_ScoreboardFill_C::HorizontalBox_1' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Incapacitations) == 0x0002B0, "Member 'UW_ScoreboardFill_C::Incapacitations' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Kills) == 0x0002B8, "Member 'UW_ScoreboardFill_C::Kills' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, LeaderCoop) == 0x0002C0, "Member 'UW_ScoreboardFill_C::LeaderCoop' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ModeSwitcher) == 0x0002C8, "Member 'UW_ScoreboardFill_C::ModeSwitcher' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Name_W_ScoreboardFill_C) == 0x0002D0, "Member 'UW_ScoreboardFill_C::Name_W_ScoreboardFill_C' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Ping) == 0x0002D8, "Member 'UW_ScoreboardFill_C::Ping' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, RedTeam) == 0x0002E0, "Member 'UW_ScoreboardFill_C::RedTeam' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, RedTeamCoop) == 0x0002E8, "Member 'UW_ScoreboardFill_C::RedTeamCoop' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, RedTeamScore) == 0x0002F0, "Member 'UW_ScoreboardFill_C::RedTeamScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ReinforcementTimeRemaining) == 0x0002F8, "Member 'UW_ScoreboardFill_C::ReinforcementTimeRemaining' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ScaleBox_65) == 0x000300, "Member 'UW_ScoreboardFill_C::ScaleBox_65' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ScaleBox_71) == 0x000308, "Member 'UW_ScoreboardFill_C::ScaleBox_71' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Score) == 0x000310, "Member 'UW_ScoreboardFill_C::Score' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ScoreboardHeader) == 0x000318, "Member 'UW_ScoreboardFill_C::ScoreboardHeader' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Status) == 0x000320, "Member 'UW_ScoreboardFill_C::Status' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Timelimit) == 0x000328, "Member 'UW_ScoreboardFill_C::Timelimit' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, TimesArrested) == 0x000330, "Member 'UW_ScoreboardFill_C::TimesArrested' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, TableHeaderFont) == 0x000338, "Member 'UW_ScoreboardFill_C::TableHeaderFont' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ColumnHeaderFont) == 0x000390, "Member 'UW_ScoreboardFill_C::ColumnHeaderFont' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, bFreeForAll) == 0x0003E8, "Member 'UW_ScoreboardFill_C::bFreeForAll' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, FFAPlayerStates) == 0x0003F0, "Member 'UW_ScoreboardFill_C::FFAPlayerStates' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, HideHealthStatus) == 0x000400, "Member 'UW_ScoreboardFill_C::HideHealthStatus' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowScoreboardHeader) == 0x000401, "Member 'UW_ScoreboardFill_C::ShowScoreboardHeader' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, bHideReadyCheckbox) == 0x000402, "Member 'UW_ScoreboardFill_C::bHideReadyCheckbox' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowReinforcementsTimer) == 0x000403, "Member 'UW_ScoreboardFill_C::ShowReinforcementsTimer' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowTimelimitTimer) == 0x000404, "Member 'UW_ScoreboardFill_C::ShowTimelimitTimer' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowHoldVIPTimer) == 0x000405, "Member 'UW_ScoreboardFill_C::ShowHoldVIPTimer' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NextUpdateTime) == 0x000408, "Member 'UW_ScoreboardFill_C::NextUpdateTime' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberArrestedTeammatesRed) == 0x00040C, "Member 'UW_ScoreboardFill_C::NumberArrestedTeammatesRed' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberArrestedTeammatesBlue) == 0x000410, "Member 'UW_ScoreboardFill_C::NumberArrestedTeammatesBlue' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberTeammatesTotalRed) == 0x000414, "Member 'UW_ScoreboardFill_C::NumberTeammatesTotalRed' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberTeammatesTotalBlue) == 0x000418, "Member 'UW_ScoreboardFill_C::NumberTeammatesTotalBlue' has a wrong offset!");

}

