#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_StandardText.W_StandardText_C
// 0x0070 (0x02D0 - 0x0260)
class UW_StandardText_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             TheText;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0270(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         FontSize;                                          // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4455[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFont*                                  Font;                                              // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0298(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FName                                   Typeface;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ETextJustify                                  Justification;                                     // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_StandardText(int32 EntryPoint, bool K2Node_Event_IsDesignTime, const struct FSlateFontInfo& K2Node_MakeStruct_SlateFontInfo);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_StandardText_C">();
	}
	static class UW_StandardText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_StandardText_C>();
	}
};
static_assert(alignof(UW_StandardText_C) == 0x000008, "Wrong alignment on UW_StandardText_C");
static_assert(sizeof(UW_StandardText_C) == 0x0002D0, "Wrong size on UW_StandardText_C");
static_assert(offsetof(UW_StandardText_C, UberGraphFrame) == 0x000260, "Member 'UW_StandardText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, TheText) == 0x000268, "Member 'UW_StandardText_C::TheText' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, Text) == 0x000270, "Member 'UW_StandardText_C::Text' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, FontSize) == 0x000288, "Member 'UW_StandardText_C::FontSize' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, Font) == 0x000290, "Member 'UW_StandardText_C::Font' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, Color) == 0x000298, "Member 'UW_StandardText_C::Color' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, Typeface) == 0x0002C0, "Member 'UW_StandardText_C::Typeface' has a wrong offset!");
static_assert(offsetof(UW_StandardText_C, Justification) == 0x0002C8, "Member 'UW_StandardText_C::Justification' has a wrong offset!");

}

