#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Dropdown

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ST_DropdownOptions_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function w_Dropdown.w_Dropdown_C.OnOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OnOptionSelected__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_OnOptionSelected__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_OnOptionSelected__DelegateSignature) == 0x000010, "Wrong size on W_Dropdown_C_OnOptionSelected__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_OnOptionSelected__DelegateSignature, OptionID) == 0x000000, "Member 'W_Dropdown_C_OnOptionSelected__DelegateSignature::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OnFooterOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OnFooterOptionSelected__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnFooterOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_OnFooterOptionSelected__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_OnFooterOptionSelected__DelegateSignature) == 0x000010, "Wrong size on W_Dropdown_C_OnFooterOptionSelected__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_OnFooterOptionSelected__DelegateSignature, OptionID) == 0x000000, "Member 'W_Dropdown_C_OnFooterOptionSelected__DelegateSignature::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OnOptionHovered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OnOptionHovered__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnOptionHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_OnOptionHovered__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_OnOptionHovered__DelegateSignature) == 0x000010, "Wrong size on W_Dropdown_C_OnOptionHovered__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_OnOptionHovered__DelegateSignature, OptionID) == 0x000000, "Member 'W_Dropdown_C_OnOptionHovered__DelegateSignature::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_OnMenuClosed__DelegateSignature final 
{
public:
	class UW_Dropdown_C*                          TriggeringDropdown;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_OnMenuClosed__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on W_Dropdown_C_OnMenuClosed__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_OnMenuClosed__DelegateSignature, TriggeringDropdown) == 0x000000, "Member 'W_Dropdown_C_OnMenuClosed__DelegateSignature::TriggeringDropdown' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OnFooterOptionHovered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OnFooterOptionHovered__DelegateSignature final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnFooterOptionHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_OnFooterOptionHovered__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_OnFooterOptionHovered__DelegateSignature) == 0x000010, "Wrong size on W_Dropdown_C_OnFooterOptionHovered__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_OnFooterOptionHovered__DelegateSignature, OptionID) == 0x000000, "Member 'W_Dropdown_C_OnFooterOptionHovered__DelegateSignature::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_OnHovered__DelegateSignature final 
{
public:
	class UW_Dropdown_C*                          Dropdown;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_OnHovered__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on W_Dropdown_C_OnHovered__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_OnHovered__DelegateSignature, Dropdown) == 0x000000, "Member 'W_Dropdown_C_OnHovered__DelegateSignature::Dropdown' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.ExecuteUbergraph_w_Dropdown
// 0x00A0 (0x00A0 - 0x0000)
struct W_Dropdown_C_ExecuteUbergraph_w_Dropdown final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A87[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_OptionID_3;                     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A88[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_OptionID_2;                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay_1;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A89[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_OptionID_1;                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8A[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_OptionID;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown) == 0x000008, "Wrong alignment on W_Dropdown_C_ExecuteUbergraph_w_Dropdown");
static_assert(sizeof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown) == 0x0000A0, "Wrong size on W_Dropdown_C_ExecuteUbergraph_w_Dropdown");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, EntryPoint) == 0x000000, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_CustomEvent_OptionID_3) == 0x000010, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_CustomEvent_OptionID_3' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, CallFunc_IsEmpty_ReturnValue) == 0x000020, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_Event_IsDesignTime) == 0x000021, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_CustomEvent_OptionID_2) == 0x000028, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_CustomEvent_OptionID_2' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_Event_Delay_1) == 0x000038, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_Event_Delay) == 0x00003C, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_Event_Collapse) == 0x000040, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000050, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_Event_PageName) == 0x000058, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_CustomEvent_OptionID_1) == 0x000070, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_CustomEvent_OptionID_1' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_Event_IsGamepad) == 0x000080, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_CustomEvent_OptionID) == 0x000088, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_CustomEvent_OptionID' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_ExecuteUbergraph_w_Dropdown, K2Node_ComponentBoundEvent_Button) == 0x000098, "Member 'W_Dropdown_C_ExecuteUbergraph_w_Dropdown::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.FooterOptionHovered
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_FooterOptionHovered final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_FooterOptionHovered) == 0x000008, "Wrong alignment on W_Dropdown_C_FooterOptionHovered");
static_assert(sizeof(W_Dropdown_C_FooterOptionHovered) == 0x000010, "Wrong size on W_Dropdown_C_FooterOptionHovered");
static_assert(offsetof(W_Dropdown_C_FooterOptionHovered, OptionID) == 0x000000, "Member 'W_Dropdown_C_FooterOptionHovered::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Dropdown_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_SetInputMode) == 0x000001, "Wrong alignment on W_Dropdown_C_SetInputMode");
static_assert(sizeof(W_Dropdown_C_SetInputMode) == 0x000001, "Wrong size on W_Dropdown_C_SetInputMode");
static_assert(offsetof(W_Dropdown_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Dropdown_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OptionHovered
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OptionHovered final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OptionHovered) == 0x000008, "Wrong alignment on W_Dropdown_C_OptionHovered");
static_assert(sizeof(W_Dropdown_C_OptionHovered) == 0x000010, "Wrong size on W_Dropdown_C_OptionHovered");
static_assert(offsetof(W_Dropdown_C_OptionHovered, OptionID) == 0x000000, "Member 'W_Dropdown_C_OptionHovered::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_Hide) == 0x000004, "Wrong alignment on W_Dropdown_C_Hide");
static_assert(sizeof(W_Dropdown_C_Hide) == 0x000008, "Wrong size on W_Dropdown_C_Hide");
static_assert(offsetof(W_Dropdown_C_Hide, Delay) == 0x000000, "Member 'W_Dropdown_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_Hide, Collapse) == 0x000004, "Member 'W_Dropdown_C_Hide::Collapse' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Dropdown_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_Reveal) == 0x000004, "Wrong alignment on W_Dropdown_C_Reveal");
static_assert(sizeof(W_Dropdown_C_Reveal) == 0x000004, "Wrong size on W_Dropdown_C_Reveal");
static_assert(offsetof(W_Dropdown_C_Reveal, Delay) == 0x000000, "Member 'W_Dropdown_C_Reveal::Delay' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.FooterOptionSelected
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_FooterOptionSelected final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_FooterOptionSelected) == 0x000008, "Wrong alignment on W_Dropdown_C_FooterOptionSelected");
static_assert(sizeof(W_Dropdown_C_FooterOptionSelected) == 0x000010, "Wrong size on W_Dropdown_C_FooterOptionSelected");
static_assert(offsetof(W_Dropdown_C_FooterOptionSelected, OptionID) == 0x000000, "Member 'W_Dropdown_C_FooterOptionSelected::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OptionSelected
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OptionSelected final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OptionSelected) == 0x000008, "Wrong alignment on W_Dropdown_C_OptionSelected");
static_assert(sizeof(W_Dropdown_C_OptionSelected) == 0x000010, "Wrong size on W_Dropdown_C_OptionSelected");
static_assert(offsetof(W_Dropdown_C_OptionSelected, OptionID) == 0x000000, "Member 'W_Dropdown_C_OptionSelected::OptionID' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Dropdown_C_BndEvt__w_Dropdown_btn_Dropdown_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Dropdown_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_PreConstruct) == 0x000001, "Wrong alignment on W_Dropdown_C_PreConstruct");
static_assert(sizeof(W_Dropdown_C_PreConstruct) == 0x000001, "Wrong size on W_Dropdown_C_PreConstruct");
static_assert(offsetof(W_Dropdown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Dropdown_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_ChangePage) == 0x000004, "Wrong alignment on W_Dropdown_C_ChangePage");
static_assert(sizeof(W_Dropdown_C_ChangePage) == 0x000008, "Wrong size on W_Dropdown_C_ChangePage");
static_assert(offsetof(W_Dropdown_C_ChangePage, PageName) == 0x000000, "Member 'W_Dropdown_C_ChangePage::PageName' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.On_DropdownMenuAnchor_GetUserMenuContent_0
// 0x0090 (0x0090 - 0x0000)
struct W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0 final 
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& OptionID)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UW_DropdownMenu_C*                      CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_Button_C* DesiredFocus)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& OptionID)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& OptionID)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& OptionID)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0) == 0x000008, "Wrong alignment on W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0");
static_assert(sizeof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0) == 0x000090, "Wrong size on W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, ReturnValue) == 0x000000, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, CallFunc_Create_ReturnValue) == 0x000018, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_4) == 0x000050, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_5) == 0x000060, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_6) == 0x000070, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0, K2Node_CreateDelegate_OutputDelegate_7) == 0x000080, "Member 'W_Dropdown_C_On_DropdownMenuAnchor_GetUserMenuContent_0::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.AddOption
// 0x0028 (0x0028 - 0x0000)
struct W_Dropdown_C_AddOption final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   OptionText;                                        // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Dropdown_C_AddOption) == 0x000008, "Wrong alignment on W_Dropdown_C_AddOption");
static_assert(sizeof(W_Dropdown_C_AddOption) == 0x000028, "Wrong size on W_Dropdown_C_AddOption");
static_assert(offsetof(W_Dropdown_C_AddOption, OptionID) == 0x000000, "Member 'W_Dropdown_C_AddOption::OptionID' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_AddOption, OptionText) == 0x000010, "Member 'W_Dropdown_C_AddOption::OptionText' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.SetOptions
// 0x0050 (0x0050 - 0x0000)
struct W_Dropdown_C_SetOptions final 
{
public:
	TMap<class FString, class FText>              Param_Options;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Dropdown_C_SetOptions) == 0x000008, "Wrong alignment on W_Dropdown_C_SetOptions");
static_assert(sizeof(W_Dropdown_C_SetOptions) == 0x000050, "Wrong size on W_Dropdown_C_SetOptions");
static_assert(offsetof(W_Dropdown_C_SetOptions, Param_Options) == 0x000000, "Member 'W_Dropdown_C_SetOptions::Param_Options' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.SetSelection
// 0x0030 (0x0030 - 0x0000)
struct W_Dropdown_C_SetSelection final 
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0010(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_SetSelection) == 0x000008, "Wrong alignment on W_Dropdown_C_SetSelection");
static_assert(sizeof(W_Dropdown_C_SetSelection) == 0x000030, "Wrong size on W_Dropdown_C_SetSelection");
static_assert(offsetof(W_Dropdown_C_SetSelection, OptionID) == 0x000000, "Member 'W_Dropdown_C_SetSelection::OptionID' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_SetSelection, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_Dropdown_C_SetSelection::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_SetSelection, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_Dropdown_C_SetSelection::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.UpdateLabelText
// 0x0038 (0x0038 - 0x0000)
struct W_Dropdown_C_UpdateLabelText final 
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0010(0x0010)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_UpdateLabelText) == 0x000008, "Wrong alignment on W_Dropdown_C_UpdateLabelText");
static_assert(sizeof(W_Dropdown_C_UpdateLabelText) == 0x000038, "Wrong size on W_Dropdown_C_UpdateLabelText");
static_assert(offsetof(W_Dropdown_C_UpdateLabelText, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'W_Dropdown_C_UpdateLabelText::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_UpdateLabelText, K2Node_MakeStruct_Anchors_1) == 0x000010, "Member 'W_Dropdown_C_UpdateLabelText::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_UpdateLabelText, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'W_Dropdown_C_UpdateLabelText::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_UpdateLabelText, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000028, "Member 'W_Dropdown_C_UpdateLabelText::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_UpdateLabelText, CallFunc_TextIsEmpty_ReturnValue) == 0x000030, "Member 'W_Dropdown_C_UpdateLabelText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.SetLabelText
// 0x0018 (0x0018 - 0x0000)
struct W_Dropdown_C_SetLabelText final 
{
public:
	class FText                                   Param_LabelText;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Dropdown_C_SetLabelText) == 0x000008, "Wrong alignment on W_Dropdown_C_SetLabelText");
static_assert(sizeof(W_Dropdown_C_SetLabelText) == 0x000018, "Wrong size on W_Dropdown_C_SetLabelText");
static_assert(offsetof(W_Dropdown_C_SetLabelText, Param_LabelText) == 0x000000, "Member 'W_Dropdown_C_SetLabelText::Param_LabelText' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.CloseMenu
// 0x000C (0x000C - 0x0000)
struct W_Dropdown_C_CloseMenu final 
{
public:
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_CloseMenu) == 0x000004, "Wrong alignment on W_Dropdown_C_CloseMenu");
static_assert(sizeof(W_Dropdown_C_CloseMenu) == 0x00000C, "Wrong size on W_Dropdown_C_CloseMenu");
static_assert(offsetof(W_Dropdown_C_CloseMenu, CallFunc_MakeVector2D_ReturnValue) == 0x000000, "Member 'W_Dropdown_C_CloseMenu::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_CloseMenu, CallFunc_IsOpen_ReturnValue) == 0x000008, "Member 'W_Dropdown_C_CloseMenu::CallFunc_IsOpen_ReturnValue' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.DisableInteraction
// 0x0001 (0x0001 - 0x0000)
struct W_Dropdown_C_DisableInteraction final 
{
public:
	bool                                          Disable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_DisableInteraction) == 0x000001, "Wrong alignment on W_Dropdown_C_DisableInteraction");
static_assert(sizeof(W_Dropdown_C_DisableInteraction) == 0x000001, "Wrong size on W_Dropdown_C_DisableInteraction");
static_assert(offsetof(W_Dropdown_C_DisableInteraction, Disable) == 0x000000, "Member 'W_Dropdown_C_DisableInteraction::Disable' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.SetSelectionByIndex
// 0x0028 (0x0028 - 0x0000)
struct W_Dropdown_C_SetSelectionByIndex final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_SetSelectionByIndex) == 0x000008, "Wrong alignment on W_Dropdown_C_SetSelectionByIndex");
static_assert(sizeof(W_Dropdown_C_SetSelectionByIndex) == 0x000028, "Wrong size on W_Dropdown_C_SetSelectionByIndex");
static_assert(offsetof(W_Dropdown_C_SetSelectionByIndex, Param_Index) == 0x000000, "Member 'W_Dropdown_C_SetSelectionByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_SetSelectionByIndex, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'W_Dropdown_C_SetSelectionByIndex::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_SetSelectionByIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_Dropdown_C_SetSelectionByIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OnDropdown Menu Desired Focus Set
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set final 
{
public:
	class UW_Button_C*                            DesiredFocus;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set) == 0x000008, "Wrong alignment on W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set");
static_assert(sizeof(W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set) == 0x000008, "Wrong size on W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set");
static_assert(offsetof(W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set, DesiredFocus) == 0x000000, "Member 'W_Dropdown_C_OnDropdown_Menu_Desired_Focus_Set::DesiredFocus' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.SetFooterOptions
// 0x0050 (0x0050 - 0x0000)
struct W_Dropdown_C_SetFooterOptions final 
{
public:
	TMap<class FString, struct FST_DropdownOptions> Param_FooterOptions;                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Dropdown_C_SetFooterOptions) == 0x000008, "Wrong alignment on W_Dropdown_C_SetFooterOptions");
static_assert(sizeof(W_Dropdown_C_SetFooterOptions) == 0x000050, "Wrong size on W_Dropdown_C_SetFooterOptions");
static_assert(offsetof(W_Dropdown_C_SetFooterOptions, Param_FooterOptions) == 0x000000, "Member 'W_Dropdown_C_SetFooterOptions::Param_FooterOptions' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.AddFooterOption
// 0x0030 (0x0030 - 0x0000)
struct W_Dropdown_C_AddFooterOption final 
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FST_DropdownOptions                    OptionData;                                        // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_AddFooterOption) == 0x000008, "Wrong alignment on W_Dropdown_C_AddFooterOption");
static_assert(sizeof(W_Dropdown_C_AddFooterOption) == 0x000030, "Wrong size on W_Dropdown_C_AddFooterOption");
static_assert(offsetof(W_Dropdown_C_AddFooterOption, ID) == 0x000000, "Member 'W_Dropdown_C_AddFooterOption::ID' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_AddFooterOption, OptionData) == 0x000010, "Member 'W_Dropdown_C_AddFooterOption::OptionData' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.RemoveFooterOption
// 0x0018 (0x0018 - 0x0000)
struct W_Dropdown_C_RemoveFooterOption final 
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_RemoveFooterOption) == 0x000008, "Wrong alignment on W_Dropdown_C_RemoveFooterOption");
static_assert(sizeof(W_Dropdown_C_RemoveFooterOption) == 0x000018, "Wrong size on W_Dropdown_C_RemoveFooterOption");
static_assert(offsetof(W_Dropdown_C_RemoveFooterOption, ID) == 0x000000, "Member 'W_Dropdown_C_RemoveFooterOption::ID' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_RemoveFooterOption, CallFunc_Map_Remove_ReturnValue) == 0x000010, "Member 'W_Dropdown_C_RemoveFooterOption::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.OpenMenu
// 0x0010 (0x0010 - 0x0000)
struct W_Dropdown_C_OpenMenu final 
{
public:
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_OpenMenu) == 0x000004, "Wrong alignment on W_Dropdown_C_OpenMenu");
static_assert(sizeof(W_Dropdown_C_OpenMenu) == 0x000010, "Wrong size on W_Dropdown_C_OpenMenu");
static_assert(offsetof(W_Dropdown_C_OpenMenu, CallFunc_IsOpen_ReturnValue) == 0x000000, "Member 'W_Dropdown_C_OpenMenu::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_OpenMenu, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'W_Dropdown_C_OpenMenu::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Dropdown_C_OpenMenu, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'W_Dropdown_C_OpenMenu::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Dropdown_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Dropdown_C_BackPage) == 0x000001, "Wrong alignment on W_Dropdown_C_BackPage");
static_assert(sizeof(W_Dropdown_C_BackPage) == 0x000001, "Wrong size on W_Dropdown_C_BackPage");
static_assert(offsetof(W_Dropdown_C_BackPage, Handled) == 0x000000, "Member 'W_Dropdown_C_BackPage::Handled' has a wrong offset!");

// Function w_Dropdown.w_Dropdown_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Dropdown_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Dropdown_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Dropdown_C_GetFocusTarget");
static_assert(sizeof(W_Dropdown_C_GetFocusTarget) == 0x000008, "Wrong size on W_Dropdown_C_GetFocusTarget");
static_assert(offsetof(W_Dropdown_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Dropdown_C_GetFocusTarget::Focus' has a wrong offset!");

}

