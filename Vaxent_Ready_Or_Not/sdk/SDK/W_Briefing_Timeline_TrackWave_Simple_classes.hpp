#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Timeline_TrackWave_Simple

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing_Timeline_TrackWave_Simple.W_Briefing_Timeline_TrackWave_Simple_C
// 0x0110 (0x0370 - 0x0260)
class UW_Briefing_Timeline_TrackWave_Simple_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB_Waveform;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsDesignTime;                                     // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPlaying;                                        // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsEvent;                                          // 0x0272(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEventInProgress;                                  // 0x0273(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsFinished;                                       // 0x0274(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3510[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentPlayTime;                                   // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundWave*                             SoundWaveAsset;                                    // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressMade;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmpUpdateFrequency;                                // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<float, struct FTimelineEvent>            EventEntries;                                      // 0x0290(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             TimelineEventFired;                                // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             TimelineEventEnded;                                // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         CurrentEventID;                                    // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3511[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<float, class UW_Briefing_Timeline_TrackWaveElement_C*> EventWaveSegments;                                 // 0x0308(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         TickInterval;                                      // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WaveSegments;                                      // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_Briefing_Timeline_TrackWaveElement_vert_C*> Segments;                                          // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void TimelineEventFired__DelegateSignature(float EventId);
	void TimelineEventEnded__DelegateSignature(float EventId);
	void ExecuteUbergraph_W_Briefing_Timeline_TrackWave_Simple(int32 EntryPoint, class UW_Briefing_Timeline_TrackWaveElement_vert_C* CallFunc_Create_ReturnValue, bool K2Node_Event_IsDesignTime, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class USoundWave* K2Node_CustomEvent_SoundWave, const TMap<float, struct FTimelineEvent>& K2Node_CustomEvent_EventEntries, int32 Temp_int_Array_Index_Variable, float CallFunc_Add_FloatFloat_ReturnValue, class USoundWave* CallFunc_GetTimelineEventTestData_Audio_Asset, TArray<struct FTimelineEvent>& CallFunc_GetTimelineEventTestData_Events, const TMap<float, struct FTimelineEvent>& CallFunc_GetTimelineEventTestData_EventEntries, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<float>& CallFunc_CalculateFrequencySpectrum_OutSpectrum, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Array_Get_Item, float CallFunc_Abs_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, float CallFunc_NormalizeToRange_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, class UWidget* CallFunc_GetChildAt_ReturnValue, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, class UW_Briefing_Timeline_TrackWaveElement_vert_C* K2Node_DynamicCast_AsW_Briefing_Timeline_Track_Wave_Element_Vert, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue);
	void DemoMode();
	void Initialize(class USoundWave* SoundWave, const TMap<float, struct FTimelineEvent>& Param_EventEntries);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void Restart();
	void Clear();
	void Paused(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UW_Briefing_Timeline_TrackWaveElement_vert_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Scrubbed();
	void EventListener(int32 Temp_int_Array_Index_Variable, bool CallFunc_Map_Remove_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FTimelineEvent& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, TArray<float>& CallFunc_Map_Keys_Keys, bool CallFunc_LessEqual_FloatFloat_ReturnValue, float CallFunc_Array_Get_Item, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Playing(float Param_CurrentPlayTime, int32 Param_Index, int32 CallFunc_Multiply_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, TArray<float>& CallFunc_CalculateFrequencySpectrum_OutSpectrum, int32 Temp_int_Loop_Counter_Variable, float CallFunc_Array_Get_Item, float CallFunc_Abs_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_NormalizeToRange_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UW_Briefing_Timeline_TrackWaveElement_vert_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_Timeline_TrackWave_Simple_C">();
	}
	static class UW_Briefing_Timeline_TrackWave_Simple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_Timeline_TrackWave_Simple_C>();
	}
};
static_assert(alignof(UW_Briefing_Timeline_TrackWave_Simple_C) == 0x000008, "Wrong alignment on UW_Briefing_Timeline_TrackWave_Simple_C");
static_assert(sizeof(UW_Briefing_Timeline_TrackWave_Simple_C) == 0x000370, "Wrong size on UW_Briefing_Timeline_TrackWave_Simple_C");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, UberGraphFrame) == 0x000260, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, HB_Waveform) == 0x000268, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::HB_Waveform' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, bIsDesignTime) == 0x000270, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::bIsDesignTime' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, bIsPlaying) == 0x000271, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::bIsPlaying' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, bIsEvent) == 0x000272, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::bIsEvent' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, bEventInProgress) == 0x000273, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::bEventInProgress' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, bIsFinished) == 0x000274, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::bIsFinished' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, CurrentPlayTime) == 0x000278, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::CurrentPlayTime' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, Duration) == 0x00027C, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::Duration' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, SoundWaveAsset) == 0x000280, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::SoundWaveAsset' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, ProgressMade) == 0x000288, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::ProgressMade' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, AmpUpdateFrequency) == 0x00028C, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::AmpUpdateFrequency' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, EventEntries) == 0x000290, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::EventEntries' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, TimelineEventFired) == 0x0002E0, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::TimelineEventFired' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, TimelineEventEnded) == 0x0002F0, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::TimelineEventEnded' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, CurrentEventID) == 0x000300, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::CurrentEventID' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, EventWaveSegments) == 0x000308, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::EventWaveSegments' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, TickInterval) == 0x000358, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::TickInterval' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, WaveSegments) == 0x00035C, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::WaveSegments' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWave_Simple_C, Segments) == 0x000360, "Member 'UW_Briefing_Timeline_TrackWave_Simple_C::Segments' has a wrong offset!");

}

