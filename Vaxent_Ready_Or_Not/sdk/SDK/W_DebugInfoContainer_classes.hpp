#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DebugInfoContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_DebugInfoContainer.W_DebugInfoContainer_C
// 0x01A0 (0x0400 - 0x0260)
class UW_DebugInfoContainer_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BG_Blur;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Image;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           DebugInfo_Container;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title_Text;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         TitleFont;                                         // 0x0288(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                TitlePadding;                                      // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EHorizontalAlignment                          TitleHorizontalAlignment;                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EVerticalAlignment                            TitleVerticalAlignment;                            // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3873[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         DebugNameFont;                                     // 0x02F8(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateFontInfo                         DebugValueFont;                                    // 0x0350(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bEnableBackgroundEffects;                          // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3874[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x03B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class FText>                           DebugItems;                                        // 0x03C8(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<float>                                 Spacing;                                           // 0x03D8(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          bUseUniformSpacing;                                // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3875[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultSpacing;                                    // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UW_DebugInfo_C*>                 DebugInfoWidgets;                                  // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_W_DebugInfoContainer(int32 EntryPoint, bool K2Node_Event_IsDesignTime);
	void PreConstruct(bool IsDesignTime);
	void Get_Debug_Item__Index_(int32 Param_Index, class UW_DebugInfo_C** DebugInfoWidget, bool CallFunc_Array_IsValidIndex_ReturnValue, class UW_DebugInfo_C* CallFunc_Array_Get_Item);
	void Get_Debug_Item__Name_(class FText Debug_Name, class UW_DebugInfo_C** DebugInfoWidget, int32 CallFunc_Array_Find_ReturnValue, class UW_DebugInfo_C* CallFunc_Array_Get_Item);
	void GetNumDebugEntries(int32* Return_Value, int32 CallFunc_Array_Length_ReturnValue);
	void Refresh(bool bCanClearSpacing, bool Temp_bool_Variable, int32 Temp_int_Variable, bool Temp_bool_Variable_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_2, ESlateVisibility Temp_byte_Variable, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, class UVerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1, ESlateVisibility Temp_byte_Variable_1, float CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool Temp_bool_Variable_2, bool CallFunc_Less_IntInt_ReturnValue, ESlateVisibility K2Node_Select_Default, int32 K2Node_Select_Default_1, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, class UW_DebugInfo_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, float Temp_float_Variable, bool Temp_bool_Variable_3, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UW_DebugInfo_C* CallFunc_Create_ReturnValue, float K2Node_Select_Default_2, float K2Node_Select_Default_3, const struct FMargin& K2Node_MakeStruct_Margin, int32 CallFunc_Array_Add_ReturnValue_1, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, class FText CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_3);
	void Clear();
	void AddDebugItem(class FText Label, class FText Value, const struct FMargin& K2Node_MakeStruct_Margin, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UW_DebugInfo_C* CallFunc_Create_ReturnValue, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void AddDebugItems(int32 Num, int32 Temp_int_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class FText Temp_text_Variable, bool Temp_bool_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Variable_1, int32 K2Node_Select_Default, float K2Node_Select_Default_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, class UW_DebugInfo_C* CallFunc_Create_ReturnValue, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void SetDebugItemValue(int32 Param_Index, class FText DebugText, class UW_DebugInfo_C* CallFunc_Get_Debug_Item__Index__DebugInfoWidget, bool CallFunc_IsValid_ReturnValue);

	void GetTitle(class FText* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_DebugInfoContainer_C">();
	}
	static class UW_DebugInfoContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_DebugInfoContainer_C>();
	}
};
static_assert(alignof(UW_DebugInfoContainer_C) == 0x000008, "Wrong alignment on UW_DebugInfoContainer_C");
static_assert(sizeof(UW_DebugInfoContainer_C) == 0x000400, "Wrong size on UW_DebugInfoContainer_C");
static_assert(offsetof(UW_DebugInfoContainer_C, UberGraphFrame) == 0x000260, "Member 'UW_DebugInfoContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, BG_Blur) == 0x000268, "Member 'UW_DebugInfoContainer_C::BG_Blur' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, BG_Image) == 0x000270, "Member 'UW_DebugInfoContainer_C::BG_Image' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugInfo_Container) == 0x000278, "Member 'UW_DebugInfoContainer_C::DebugInfo_Container' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, Title_Text) == 0x000280, "Member 'UW_DebugInfoContainer_C::Title_Text' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitleFont) == 0x000288, "Member 'UW_DebugInfoContainer_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitlePadding) == 0x0002E0, "Member 'UW_DebugInfoContainer_C::TitlePadding' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitleHorizontalAlignment) == 0x0002F0, "Member 'UW_DebugInfoContainer_C::TitleHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitleVerticalAlignment) == 0x0002F1, "Member 'UW_DebugInfoContainer_C::TitleVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugNameFont) == 0x0002F8, "Member 'UW_DebugInfoContainer_C::DebugNameFont' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugValueFont) == 0x000350, "Member 'UW_DebugInfoContainer_C::DebugValueFont' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, bEnableBackgroundEffects) == 0x0003A8, "Member 'UW_DebugInfoContainer_C::bEnableBackgroundEffects' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, Title) == 0x0003B0, "Member 'UW_DebugInfoContainer_C::Title' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugItems) == 0x0003C8, "Member 'UW_DebugInfoContainer_C::DebugItems' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, Spacing) == 0x0003D8, "Member 'UW_DebugInfoContainer_C::Spacing' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, bUseUniformSpacing) == 0x0003E8, "Member 'UW_DebugInfoContainer_C::bUseUniformSpacing' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DefaultSpacing) == 0x0003EC, "Member 'UW_DebugInfoContainer_C::DefaultSpacing' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugInfoWidgets) == 0x0003F0, "Member 'UW_DebugInfoContainer_C::DebugInfoWidgets' has a wrong offset!");

}

