#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_InformationTable

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ST_ItemEffects_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.OnModifyWeaponButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature final 
{
public:
	class UClass*                                 ItemToModify;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature, ItemToModify) == 0x000000, "Member 'W_Loadout_InformationTable_C_OnModifyWeaponButtonClicked__DelegateSignature::ItemToModify' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.OnInfoPanelAttachmentClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature final 
{
public:
	EWeaponAttachmentType                         Param_Slot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AttachmentData;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature) == 0x000010, "Wrong size on W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature, AttachmentData) == 0x000008, "Member 'W_Loadout_InformationTable_C_OnInfoPanelAttachmentClicked__DelegateSignature::AttachmentData' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.OnInfoPanelRemoveAttachmentClicked__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature final 
{
public:
	EWeaponAttachmentType                         Param_Slot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature) == 0x000001, "Wrong alignment on W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature) == 0x000001, "Wrong size on W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_Loadout_InformationTable_C_OnInfoPanelRemoveAttachmentClicked__DelegateSignature::Param_Slot' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.ExecuteUbergraph_W_Loadout_InformationTable
// 0x0750 (0x0750 - 0x0000)
struct W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          K2Node_CustomEvent_ActiveLoadout_1;                // 0x0008(0x0188)()
	class UClass*                                 K2Node_CustomEvent_ItemClass;                      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 K2Node_CustomEvent_LoadoutSlot;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Restricted;                     // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBB[0x2];                                     // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBC[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemToModify;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_CustomEvent_ActiveLoadout;                  // 0x01B0(0x0188)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0338(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBD[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_OptionNameID;                         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_C*                           K2Node_Event_LoadoutWidget;                        // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0388(0x0188)()
	float                                         K2Node_Event_Delay_1;                              // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBE[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutInfo_AttachmentListEntry_C*   K2Node_CustomEvent_AttachmentListItem_1;           // 0x0528(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AmmoType;                       // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_WeaponData;                     // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x0548(0x0050)()
	class UArmourMaterial*                        K2Node_CustomEvent_ArmourMaterial;                 // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Attachment;                     // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_AttachingWeapon;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       K2Node_Event_CurrentSlot;                          // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutInfo_AttachmentListEntry_C*   K2Node_CustomEvent_AttachmentListItem;             // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLoadoutPreset                         K2Node_CustomEvent_LoadoutPreset;                  // 0x05C0(0x0190)()
};
static_assert(alignof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable");
static_assert(sizeof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable) == 0x000750, "Wrong size on W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, EntryPoint) == 0x000000, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_ActiveLoadout_1) == 0x000008, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_ActiveLoadout_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_ItemClass) == 0x000190, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_ItemClass' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_LoadoutSlot) == 0x000198, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_LoadoutSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_Restricted) == 0x000199, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_Restricted' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_PageName) == 0x00019C, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_IsGamepad) == 0x0001A4, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_ItemToModify) == 0x0001A8, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_ItemToModify' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_ActiveLoadout) == 0x0001B0, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_MyGeometry) == 0x000338, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_InDeltaTime) == 0x000370, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_IsDesignTime) == 0x000374, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_OptionNameID) == 0x000378, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_LoadoutWidget) == 0x000380, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_LoadoutWidget' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_ActiveLoadout) == 0x000388, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_Delay_1) == 0x000510, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_Delay) == 0x000514, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_Collapse) == 0x000518, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, CallFunc_PlayAnimation_ReturnValue) == 0x000520, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_AttachmentListItem_1) == 0x000528, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_AttachmentListItem_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, CallFunc_PlayAnimation_ReturnValue_1) == 0x000530, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_AmmoType) == 0x000538, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_AmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_WeaponData) == 0x000540, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_WeaponData' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_ItemCategory) == 0x000548, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_ArmourMaterial) == 0x000598, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_ArmourMaterial' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_Attachment) == 0x0005A0, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_Attachment' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_AttachingWeapon) == 0x0005A8, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_AttachingWeapon' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_Event_CurrentSlot) == 0x0005B0, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_Event_CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_AttachmentListItem) == 0x0005B8, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_AttachmentListItem' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable, K2Node_CustomEvent_LoadoutPreset) == 0x0005C0, "Member 'W_Loadout_InformationTable_C_ExecuteUbergraph_W_Loadout_InformationTable::K2Node_CustomEvent_LoadoutPreset' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.RefreshPanelLoadoutPreset
// 0x0190 (0x0190 - 0x0000)
struct W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset final 
{
public:
	struct FLoadoutPreset                         LoadoutPreset;                                     // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset");
static_assert(sizeof(W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset) == 0x000190, "Wrong size on W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset, LoadoutPreset) == 0x000000, "Member 'W_Loadout_InformationTable_C_RefreshPanelLoadoutPreset::LoadoutPreset' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.RemoveAttachmentItemClicked
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_RemoveAttachmentItemClicked final 
{
public:
	class UW_LoadoutInfo_AttachmentListEntry_C*   AttachmentListItem;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_RemoveAttachmentItemClicked) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_RemoveAttachmentItemClicked");
static_assert(sizeof(W_Loadout_InformationTable_C_RemoveAttachmentItemClicked) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_RemoveAttachmentItemClicked");
static_assert(offsetof(W_Loadout_InformationTable_C_RemoveAttachmentItemClicked, AttachmentListItem) == 0x000000, "Member 'W_Loadout_InformationTable_C_RemoveAttachmentItemClicked::AttachmentListItem' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.RefreshPanelAttachment
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_InformationTable_C_RefreshPanelAttachment final 
{
public:
	class UClass*                                 Param_Attachment;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AttachingWeapon;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_RefreshPanelAttachment) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_RefreshPanelAttachment");
static_assert(sizeof(W_Loadout_InformationTable_C_RefreshPanelAttachment) == 0x000010, "Wrong size on W_Loadout_InformationTable_C_RefreshPanelAttachment");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelAttachment, Param_Attachment) == 0x000000, "Member 'W_Loadout_InformationTable_C_RefreshPanelAttachment::Param_Attachment' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelAttachment, AttachingWeapon) == 0x000008, "Member 'W_Loadout_InformationTable_C_RefreshPanelAttachment::AttachingWeapon' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.RefreshPanelArmourMaterial
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_RefreshPanelArmourMaterial final 
{
public:
	class UArmourMaterial*                        Param_ArmourMaterial;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_RefreshPanelArmourMaterial) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_RefreshPanelArmourMaterial");
static_assert(sizeof(W_Loadout_InformationTable_C_RefreshPanelArmourMaterial) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_RefreshPanelArmourMaterial");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelArmourMaterial, Param_ArmourMaterial) == 0x000000, "Member 'W_Loadout_InformationTable_C_RefreshPanelArmourMaterial::Param_ArmourMaterial' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.RefreshPanelAmmoInfo
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_InformationTable_C_RefreshPanelAmmoInfo final 
{
public:
	class FName                                   Param_AmmoType;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_RefreshPanelAmmoInfo) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_RefreshPanelAmmoInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_RefreshPanelAmmoInfo) == 0x000010, "Wrong size on W_Loadout_InformationTable_C_RefreshPanelAmmoInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelAmmoInfo, Param_AmmoType) == 0x000000, "Member 'W_Loadout_InformationTable_C_RefreshPanelAmmoInfo::Param_AmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelAmmoInfo, WeaponData) == 0x000008, "Member 'W_Loadout_InformationTable_C_RefreshPanelAmmoInfo::WeaponData' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.AttachmentItemClicked
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_AttachmentItemClicked final 
{
public:
	class UW_LoadoutInfo_AttachmentListEntry_C*   AttachmentListItem;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_AttachmentItemClicked) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_AttachmentItemClicked");
static_assert(sizeof(W_Loadout_InformationTable_C_AttachmentItemClicked) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_AttachmentItemClicked");
static_assert(offsetof(W_Loadout_InformationTable_C_AttachmentItemClicked, AttachmentListItem) == 0x000000, "Member 'W_Loadout_InformationTable_C_AttachmentItemClicked::AttachmentListItem' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_InformationTable_C_Hide) == 0x000004, "Wrong alignment on W_Loadout_InformationTable_C_Hide");
static_assert(sizeof(W_Loadout_InformationTable_C_Hide) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_Hide");
static_assert(offsetof(W_Loadout_InformationTable_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_InformationTable_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_Hide, Collapse) == 0x000004, "Member 'W_Loadout_InformationTable_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Loadout_InformationTable_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_Reveal) == 0x000004, "Wrong alignment on W_Loadout_InformationTable_C_Reveal");
static_assert(sizeof(W_Loadout_InformationTable_C_Reveal) == 0x000004, "Wrong size on W_Loadout_InformationTable_C_Reveal");
static_assert(offsetof(W_Loadout_InformationTable_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_InformationTable_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateActiveLoadout
// 0x0188 (0x0188 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateActiveLoadout final 
{
public:
	struct FSavedLoadout                          Param_ActiveLoadout;                               // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateActiveLoadout) == 0x000188, "Wrong size on W_Loadout_InformationTable_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateActiveLoadout, Param_ActiveLoadout) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateActiveLoadout::Param_ActiveLoadout' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.InitializePanel
// 0x0188 (0x0188 - 0x0000)
struct W_Loadout_InformationTable_C_InitializePanel final 
{
public:
	struct FSavedLoadout                          Param_ActiveLoadout;                               // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_InformationTable_C_InitializePanel) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_InitializePanel");
static_assert(sizeof(W_Loadout_InformationTable_C_InitializePanel) == 0x000188, "Wrong size on W_Loadout_InformationTable_C_InitializePanel");
static_assert(offsetof(W_Loadout_InformationTable_C_InitializePanel, Param_ActiveLoadout) == 0x000000, "Member 'W_Loadout_InformationTable_C_InitializePanel::Param_ActiveLoadout' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.ModifyWeaponClicked
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_ModifyWeaponClicked final 
{
public:
	class UClass*                                 ItemToModify;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_ModifyWeaponClicked) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_ModifyWeaponClicked");
static_assert(sizeof(W_Loadout_InformationTable_C_ModifyWeaponClicked) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_ModifyWeaponClicked");
static_assert(offsetof(W_Loadout_InformationTable_C_ModifyWeaponClicked, ItemToModify) == 0x000000, "Member 'W_Loadout_InformationTable_C_ModifyWeaponClicked::ItemToModify' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.RefreshPanelItemInfo
// 0x0198 (0x0198 - 0x0000)
struct W_Loadout_InformationTable_C_RefreshPanelItemInfo final 
{
public:
	struct FSavedLoadout                          Param_ActiveLoadout;                               // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UClass*                                 Param_ItemClass;                                   // 0x0188(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 Param_LoadoutSlot;                                 // 0x0190(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Restricted;                                  // 0x0191(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_InformationTable_C_RefreshPanelItemInfo) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_RefreshPanelItemInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_RefreshPanelItemInfo) == 0x000198, "Wrong size on W_Loadout_InformationTable_C_RefreshPanelItemInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelItemInfo, Param_ActiveLoadout) == 0x000000, "Member 'W_Loadout_InformationTable_C_RefreshPanelItemInfo::Param_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelItemInfo, Param_ItemClass) == 0x000188, "Member 'W_Loadout_InformationTable_C_RefreshPanelItemInfo::Param_ItemClass' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelItemInfo, Param_LoadoutSlot) == 0x000190, "Member 'W_Loadout_InformationTable_C_RefreshPanelItemInfo::Param_LoadoutSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_RefreshPanelItemInfo, Param_Restricted) == 0x000191, "Member 'W_Loadout_InformationTable_C_RefreshPanelItemInfo::Param_Restricted' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_InformationTable_C_ChangePage");
static_assert(sizeof(W_Loadout_InformationTable_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_ChangePage");
static_assert(offsetof(W_Loadout_InformationTable_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_InformationTable_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_InformationTable_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_InformationTable_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_InformationTable_C_SetInputMode");
static_assert(sizeof(W_Loadout_InformationTable_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_InformationTable_C_SetInputMode");
static_assert(offsetof(W_Loadout_InformationTable_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_InformationTable_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Loadout_InformationTable_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_Tick) == 0x000004, "Wrong alignment on W_Loadout_InformationTable_C_Tick");
static_assert(sizeof(W_Loadout_InformationTable_C_Tick) == 0x00003C, "Wrong size on W_Loadout_InformationTable_C_Tick");
static_assert(offsetof(W_Loadout_InformationTable_C_Tick, MyGeometry) == 0x000000, "Member 'W_Loadout_InformationTable_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Loadout_InformationTable_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_InformationTable_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_InformationTable_C_PreConstruct) == 0x000001, "Wrong alignment on W_Loadout_InformationTable_C_PreConstruct");
static_assert(sizeof(W_Loadout_InformationTable_C_PreConstruct) == 0x000001, "Wrong size on W_Loadout_InformationTable_C_PreConstruct");
static_assert(offsetof(W_Loadout_InformationTable_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Loadout_InformationTable_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_HeaderSubpageNavigation final 
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_InformationTable_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_InformationTable_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_InformationTable_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_InformationTable_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.SetLoadoutWidget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_SetLoadoutWidget final 
{
public:
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_SetLoadoutWidget) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_SetLoadoutWidget");
static_assert(sizeof(W_Loadout_InformationTable_C_SetLoadoutWidget) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_SetLoadoutWidget");
static_assert(offsetof(W_Loadout_InformationTable_C_SetLoadoutWidget, LoadoutWidget) == 0x000000, "Member 'W_Loadout_InformationTable_C_SetLoadoutWidget::LoadoutWidget' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateCurrentItemMap final 
{
public:
	TMap<EItemCategory, class UClass*>            Param_ItemCategory;                                // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_InformationTable_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateCurrentItemMap, Param_ItemCategory) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateCurrentItemMap::Param_ItemCategory' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateCurrentSlot
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateCurrentSlot final 
{
public:
	class UW_LoadoutSlot_C*                       CurrentSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateCurrentSlot) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_UpdateCurrentSlot");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateCurrentSlot) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_UpdateCurrentSlot");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateCurrentSlot, CurrentSlot) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateCurrentSlot::CurrentSlot' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateItemInfo
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateItemInfo final 
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateItemInfo) == 0x000001, "Wrong alignment on W_Loadout_InformationTable_C_UpdateItemInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateItemInfo) == 0x000001, "Wrong size on W_Loadout_InformationTable_C_UpdateItemInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateItemInfo, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateItemInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.GetWeaponClassText
// 0x0218 (0x0218 - 0x0000)
struct W_Loadout_InformationTable_C_GetWeaponClassText final 
{
public:
	class FText                                   Param_WeaponClass;                                 // 0x0000(0x0018)(Parm, OutParm)
	EItemClass                                    Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x01E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0200(0x0018)()
};
static_assert(alignof(W_Loadout_InformationTable_C_GetWeaponClassText) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_GetWeaponClassText");
static_assert(sizeof(W_Loadout_InformationTable_C_GetWeaponClassText) == 0x000218, "Wrong size on W_Loadout_InformationTable_C_GetWeaponClassText");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Param_WeaponClass) == 0x000000, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Param_WeaponClass' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_byte_Variable) == 0x000018, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable) == 0x000020, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_1) == 0x000038, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_2) == 0x000050, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_3) == 0x000068, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_4) == 0x000080, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_5) == 0x000098, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_6) == 0x0000B0, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_7) == 0x0000C8, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_8) == 0x0000E0, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_9) == 0x0000F8, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_10) == 0x000110, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_11) == 0x000128, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_12) == 0x000140, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_13) == 0x000158, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_14) == 0x000170, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_15) == 0x000188, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_16) == 0x0001A0, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_17) == 0x0001B8, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_18) == 0x0001D0, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, Temp_text_Variable_19) == 0x0001E8, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_GetWeaponClassText, K2Node_Select_Default) == 0x000200, "Member 'W_Loadout_InformationTable_C_GetWeaponClassText::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateAmmoInfo
// 0x0240 (0x0240 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateAmmoInfo final 
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC0[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAmmoCategoryText_Text;                 // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC1[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetAmmoLookupDataTable_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0160)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC2[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0228(0x0018)()
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateAmmoInfo) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_UpdateAmmoInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateAmmoInfo) == 0x000240, "Wrong size on W_Loadout_InformationTable_C_UpdateAmmoInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, Temp_byte_Variable) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, Temp_byte_Variable_1) == 0x000001, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, CallFunc_GetAmmoCategoryText_Text) == 0x000008, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::CallFunc_GetAmmoCategoryText_Text' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, Temp_bool_Variable) == 0x000020, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000021, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, K2Node_Select_Default) == 0x000022, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, CallFunc_GetAmmoLookupDataTable_ReturnValue) == 0x000028, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::CallFunc_GetAmmoLookupDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001D8, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, K2Node_MakeArray_Array) == 0x000218, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAmmoInfo, CallFunc_Format_ReturnValue) == 0x000228, "Member 'W_Loadout_InformationTable_C_UpdateAmmoInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateArmourMaterialInfo
// 0x0005 (0x0005 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateArmourMaterialInfo final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo) == 0x000001, "Wrong alignment on W_Loadout_InformationTable_C_UpdateArmourMaterialInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo) == 0x000005, "Wrong size on W_Loadout_InformationTable_C_UpdateArmourMaterialInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateArmourMaterialInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo, Temp_byte_Variable) == 0x000001, "Member 'W_Loadout_InformationTable_C_UpdateArmourMaterialInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo, Temp_byte_Variable_1) == 0x000002, "Member 'W_Loadout_InformationTable_C_UpdateArmourMaterialInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000003, "Member 'W_Loadout_InformationTable_C_UpdateArmourMaterialInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateArmourMaterialInfo, K2Node_Select_Default) == 0x000004, "Member 'W_Loadout_InformationTable_C_UpdateArmourMaterialInfo::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateAttachmentInfo
// 0x0068 (0x0068 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateAttachmentInfo final 
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC3[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAttachmentSlotText_SlotText;           // 0x0008(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC4[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutInfo_EffectsList_C*           CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_ItemEffects>                CallFunc_SetAttachmentEffects_Effects;             // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC5[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_ItemEffects>                CallFunc_SetAttachmentEffects_Effects_1;           // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC6[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateAttachmentInfo) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_UpdateAttachmentInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateAttachmentInfo) == 0x000068, "Wrong size on W_Loadout_InformationTable_C_UpdateAttachmentInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, Temp_byte_Variable) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, Temp_byte_Variable_1) == 0x000001, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_GetAttachmentSlotText_SlotText) == 0x000008, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_GetAttachmentSlotText_SlotText' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, Temp_bool_Variable) == 0x000021, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_Create_ReturnValue) == 0x000028, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_SetAttachmentEffects_Effects) == 0x000030, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_SetAttachmentEffects_Effects' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_SetAttachmentEffects_Effects_1) == 0x000048, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_SetAttachmentEffects_Effects_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000058, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000059, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, K2Node_Select_Default) == 0x00005A, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateAttachmentInfo, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'W_Loadout_InformationTable_C_UpdateAttachmentInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.Play Refresh Anim
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_Play_Refresh_Anim final 
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_Play_Refresh_Anim) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_Play_Refresh_Anim");
static_assert(sizeof(W_Loadout_InformationTable_C_Play_Refresh_Anim) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_Play_Refresh_Anim");
static_assert(offsetof(W_Loadout_InformationTable_C_Play_Refresh_Anim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_Loadout_InformationTable_C_Play_Refresh_Anim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.SetAttachmentEffects
// 0x0318 (0x0318 - 0x0000)
struct W_Loadout_InformationTable_C_SetAttachmentEffects final 
{
public:
	TArray<struct FST_ItemEffects>                Effects;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FST_ItemEffects>                AttachmentEffects;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScrollDirection                              Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollDirection                              Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC8[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScrollDirection                              Temp_byte_Variable_2;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollDirection                              Temp_byte_Variable_3;                              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC9[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00B0(0x0018)()
	bool                                          Temp_bool_Variable_5;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScrollDirection                              Temp_byte_Variable_4;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollDirection                              Temp_byte_Variable_5;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCA[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00E8(0x0018)()
	bool                                          Temp_bool_Variable_7;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScrollDirection                              Temp_byte_Variable_6;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollDirection                              Temp_byte_Variable_7;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCB[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0120(0x0018)()
	bool                                          Temp_bool_Variable_9;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScrollDirection                              Temp_byte_Variable_8;                              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollDirection                              Temp_byte_Variable_9;                              // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCC[0x5];                                     // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects;                  // 0x0140(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCD[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0168(0x0018)()
	EScrollDirection                              K2Node_Select_Default_1;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCE[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_1;                // 0x0188(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCF[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x01B0(0x0018)()
	EScrollDirection                              K2Node_Select_Default_3;                           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD0[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_2;                // 0x01D0(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD1[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_3;                // 0x01F8(0x0020)(HasGetValueTypeHash)
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_4;                // 0x0218(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD2[0x2];                                     // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x0248(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x0260(0x0018)()
	EScrollDirection                              K2Node_Select_Default_6;                           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD3[0x6];                                     // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_5;                // 0x0280(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScrollDirection                              K2Node_Select_Default_7;                           // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD4[0x2];                                     // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_6;                // 0x02A8(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD5[0x2];                                     // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_8;                           // 0x02D0(0x0018)()
	EScrollDirection                              K2Node_Select_Default_9;                           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD6[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_ItemEffects                        K2Node_MakeStruct_ST_ItemEffects_7;                // 0x02F0(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_SetAttachmentEffects) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_SetAttachmentEffects");
static_assert(sizeof(W_Loadout_InformationTable_C_SetAttachmentEffects) == 0x000318, "Wrong size on W_Loadout_InformationTable_C_SetAttachmentEffects");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Effects) == 0x000000, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Effects' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, AttachmentEffects) == 0x000010, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::AttachmentEffects' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable) == 0x000020, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable) == 0x000028, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_1) == 0x000040, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_1) == 0x000058, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable) == 0x000059, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_1) == 0x00005A, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_2) == 0x00005B, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_2) == 0x000060, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_3) == 0x000078, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_3) == 0x000090, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_2) == 0x000091, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_3) == 0x000092, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_4) == 0x000093, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_4) == 0x000098, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_5) == 0x0000B0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_5) == 0x0000C8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_4) == 0x0000C9, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_5) == 0x0000CA, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_6) == 0x0000CB, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_6) == 0x0000D0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_7) == 0x0000E8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_7) == 0x000100, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_6) == 0x000101, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_7) == 0x000102, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_8) == 0x000103, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_8) == 0x000108, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_text_Variable_9) == 0x000120, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_bool_Variable_9) == 0x000138, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_8) == 0x000139, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, Temp_byte_Variable_9) == 0x00013A, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects) == 0x000140, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Less_FloatFloat_ReturnValue) == 0x000160, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000161, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default) == 0x000168, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_1) == 0x000180, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_1) == 0x000188, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue) == 0x0001AC, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_2) == 0x0001B0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_3) == 0x0001C8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0001C9, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_2) == 0x0001D0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_1) == 0x0001F0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_3) == 0x0001F8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_4) == 0x000218, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_2) == 0x000238, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_3) == 0x00023C, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_4) == 0x000240, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000244, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000245, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_4) == 0x000248, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_5) == 0x000260, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_6) == 0x000278, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000279, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_5) == 0x000280, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_5) == 0x0002A0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x0002A4, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_7) == 0x0002A5, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_6) == 0x0002A8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_6) == 0x0002C8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x0002CC, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x0002CD, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_8) == 0x0002D0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_Select_Default_9) == 0x0002E8, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, K2Node_MakeStruct_ST_ItemEffects_7) == 0x0002F0, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::K2Node_MakeStruct_ST_ItemEffects_7' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_SetAttachmentEffects, CallFunc_Array_Add_ReturnValue_7) == 0x000310, "Member 'W_Loadout_InformationTable_C_SetAttachmentEffects::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.UpdateLoadoutPresetInfo
// 0x0030 (0x0030 - 0x0000)
struct W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo final 
{
public:
	class UW_Loadout_Overview_C*                  CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0018)()
};
static_assert(alignof(W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo");
static_assert(sizeof(W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo) == 0x000030, "Wrong size on W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo, CallFunc_Create_ReturnValue) == 0x000000, "Member 'W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'W_Loadout_InformationTable_C_UpdateLoadoutPresetInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_InformationTable_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_InformationTable_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_InformationTable_C_BackPage");
static_assert(sizeof(W_Loadout_InformationTable_C_BackPage) == 0x000001, "Wrong size on W_Loadout_InformationTable_C_BackPage");
static_assert(offsetof(W_Loadout_InformationTable_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_InformationTable_C_BackPage::Handled' has a wrong offset!");

// Function W_Loadout_InformationTable.W_Loadout_InformationTable_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_InformationTable_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_InformationTable_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_InformationTable_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_InformationTable_C_GetFocusTarget) == 0x000008, "Wrong size on W_Loadout_InformationTable_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_InformationTable_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_InformationTable_C_GetFocusTarget::Focus' has a wrong offset!");

}

