#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LensFlare_FlareGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LensFlare_FlareGun.BP_LensFlare_FlareGun_C.ExecuteUbergraph_BP_LensFlare_FlareGun
// 0x01A0 (0x01A0 - 0x0000)
struct BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4171[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4172[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4173[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_2;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_2;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4174[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4175[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseItem*>                      CallFunc_GetInventoryItems_ReturnValue;            // 0x0178(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4176[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4177[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun) == 0x000008, "Wrong alignment on BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun");
static_assert(sizeof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun) == 0x0001A0, "Wrong size on BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, EntryPoint) == 0x000000, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000020, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000028, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_LineTraceSingle_OutHit) == 0x000034, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_LineTraceSingle_ReturnValue) == 0x0000BC, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_FInterpTo_ReturnValue) == 0x0000C0, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_FInterpTo_ReturnValue_1) == 0x0000C4, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000C8, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetViewportSize_ReturnValue) == 0x0000E0, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0000E8, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0000F0, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetViewportSize_ReturnValue_1) == 0x0000F4, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000FC, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x000104, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x00010C, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_BreakVector2D_X) == 0x000118, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_BreakVector2D_Y) == 0x00011C, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetViewportSize_ReturnValue_2) == 0x000120, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetViewportSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Divide_Vector2DVector2D_ReturnValue_2) == 0x000128, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Divide_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x000130, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_FindLookAtRotation_ReturnValue) == 0x000140, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_BreakRotator_Roll) == 0x00014C, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_BreakRotator_Pitch) == 0x000150, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_BreakRotator_Yaw) == 0x000154, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Add_IntInt_ReturnValue) == 0x000158, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000160, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, K2Node_DynamicCast_AsPlayer_Character) == 0x000168, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Array_AddUnique_ReturnValue) == 0x000174, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_GetInventoryItems_ReturnValue) == 0x000178, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_GetInventoryItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00019C, "Member 'BP_LensFlare_FlareGun_C_ExecuteUbergraph_BP_LensFlare_FlareGun::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_LensFlare_FlareGun.BP_LensFlare_FlareGun_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LensFlare_FlareGun_C_ReceiveTick final 
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LensFlare_FlareGun_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LensFlare_FlareGun_C_ReceiveTick");
static_assert(sizeof(BP_LensFlare_FlareGun_C_ReceiveTick) == 0x000004, "Wrong size on BP_LensFlare_FlareGun_C_ReceiveTick");
static_assert(offsetof(BP_LensFlare_FlareGun_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LensFlare_FlareGun_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LensFlare_FlareGun.BP_LensFlare_FlareGun_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct BP_LensFlare_FlareGun_C_UserConstructionScript final 
{
public:
	struct FMaterialSpriteElement                 K2Node_MakeStruct_MaterialSpriteElement;           // 0x0000(0x0028)(NoDestructor)
	TArray<struct FMaterialSpriteElement>         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_LensFlare_FlareGun_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_LensFlare_FlareGun_C_UserConstructionScript");
static_assert(sizeof(BP_LensFlare_FlareGun_C_UserConstructionScript) == 0x000038, "Wrong size on BP_LensFlare_FlareGun_C_UserConstructionScript");
static_assert(offsetof(BP_LensFlare_FlareGun_C_UserConstructionScript, K2Node_MakeStruct_MaterialSpriteElement) == 0x000000, "Member 'BP_LensFlare_FlareGun_C_UserConstructionScript::K2Node_MakeStruct_MaterialSpriteElement' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_LensFlare_FlareGun_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_LensFlare_FlareGun.BP_LensFlare_FlareGun_C.InitFlare
// 0x0020 (0x0020 - 0x0000)
struct BP_LensFlare_FlareGun_C_InitFlare final 
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LensFlare_FlareGun_C_InitFlare) == 0x000008, "Wrong alignment on BP_LensFlare_FlareGun_C_InitFlare");
static_assert(sizeof(BP_LensFlare_FlareGun_C_InitFlare) == 0x000020, "Wrong size on BP_LensFlare_FlareGun_C_InitFlare");
static_assert(offsetof(BP_LensFlare_FlareGun_C_InitFlare, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'BP_LensFlare_FlareGun_C_InitFlare::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_InitFlare, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000004, "Member 'BP_LensFlare_FlareGun_C_InitFlare::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_InitFlare, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'BP_LensFlare_FlareGun_C_InitFlare::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_InitFlare, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_LensFlare_FlareGun_C_InitFlare::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LensFlare_FlareGun_C_InitFlare, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'BP_LensFlare_FlareGun_C_InitFlare::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

}

