#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BpPlanningMenuLibrary

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetSpawnForEntryNum
// 0x0830 (0x0830 - 0x0000)
struct BpPlanningMenuLibrary_C_GetSpawnForEntryNum final 
{
public:
	uint8                                         Spawn_Num;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSpawnPoints                           Out_Spawn;                                         // 0x0010(0x0090)(Parm, OutParm)
	struct FLevelDataLookupTable                  CallFunc_GetLevelData_ReturnValue;                 // 0x00A0(0x0788)()
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetSpawnForEntryNum");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum) == 0x000830, "Wrong size on BpPlanningMenuLibrary_C_GetSpawnForEntryNum");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum, Spawn_Num) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetSpawnForEntryNum::Spawn_Num' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetSpawnForEntryNum::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum, Out_Spawn) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetSpawnForEntryNum::Out_Spawn' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum, CallFunc_GetLevelData_ReturnValue) == 0x0000A0, "Member 'BpPlanningMenuLibrary_C_GetSpawnForEntryNum::CallFunc_GetLevelData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum, CallFunc_GetValidValue_ReturnValue) == 0x000828, "Member 'BpPlanningMenuLibrary_C_GetSpawnForEntryNum::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetSpawnForEntryNum, K2Node_SwitchEnum_CmpSuccess) == 0x000829, "Member 'BpPlanningMenuLibrary_C_GetSpawnForEntryNum::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.CreateOverviewPersonnelListText
// 0x0A80 (0x0A80 - 0x0000)
struct BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText final 
{
public:
	TArray<int32>                                 PersonnelList;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   PersonnelItemFormat;                               // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_Negotiator;                          // 0x0048(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_PowerCrew;                           // 0x0060(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_Floodlight;                          // 0x0078(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_Sniper;                              // 0x0090(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_Marksman;                            // 0x00A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_Spotter;                             // 0x00C0(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_VentilationExpert;                   // 0x00D8(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_Noisemaker;                          // 0x00F0(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_TruckDriver;                         // 0x0108(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelType_None;                                // 0x0120(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelTypeText;                                 // 0x0138(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonnelText;                                     // 0x0150(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362E[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362F[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0188(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3630[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0210(0x0040)(HasGetValueTypeHash)
	struct FLevelDataLookupTable                  CallFunc_GetLevelData_ReturnValue;                 // 0x0250(0x0788)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x09D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x09E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x09F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0A10(0x0040)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3631[0x7];                                     // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0A58(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0A68(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText");
static_assert(sizeof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText) == 0x000A80, "Wrong size on BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelList) == 0x000000, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelList' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, Text) == 0x000018, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelItemFormat) == 0x000030, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelItemFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_Negotiator) == 0x000048, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_Negotiator' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_PowerCrew) == 0x000060, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_PowerCrew' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_Floodlight) == 0x000078, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_Floodlight' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_Sniper) == 0x000090, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_Sniper' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_Marksman) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_Marksman' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_Spotter) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_Spotter' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_VentilationExpert) == 0x0000D8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_VentilationExpert' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_Noisemaker) == 0x0000F0, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_Noisemaker' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_TruckDriver) == 0x000108, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_TruckDriver' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelType_None) == 0x000120, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelType_None' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelTypeText) == 0x000138, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelTypeText' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, PersonnelText) == 0x000150, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::PersonnelText' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Greater_IntInt_ReturnValue) == 0x000170, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, Temp_int_Array_Index_Variable) == 0x000174, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, Temp_int_Loop_Counter_Variable) == 0x000178, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Array_Get_Item) == 0x00017C, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, K2Node_MakeStruct_FormatArgumentData) == 0x000188, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001CC, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001D0, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000210, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_GetLevelData_ReturnValue) == 0x000250, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_GetLevelData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Conv_TextToString_ReturnValue) == 0x0009D8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Concat_StrStr_ReturnValue) == 0x0009E8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Conv_StringToText_ReturnValue) == 0x0009F8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000A10, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, K2Node_SwitchEnum_CmpSuccess) == 0x000A50, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, K2Node_MakeArray_Array) == 0x000A58, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText, CallFunc_Format_ReturnValue) == 0x000A68, "Member 'BpPlanningMenuLibrary_C_CreateOverviewPersonnelListText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetActivePersonnelText
// 0x0060 (0x0060 - 0x0000)
struct BpPlanningMenuLibrary_C_GetActivePersonnelText final 
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACoopGS*                                K2Node_DynamicCast_AsCoop_GS;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3632[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetEnabledPersonnel_ReturnValue;          // 0x0038(0x0010)(ReferenceParm)
	class FText                                   CallFunc_CreateOverviewPersonnelListText_Text;     // 0x0048(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetActivePersonnelText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetActivePersonnelText");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetActivePersonnelText) == 0x000060, "Wrong size on BpPlanningMenuLibrary_C_GetActivePersonnelText");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, __WorldContext) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, Text) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, K2Node_DynamicCast_AsCoop_GS) == 0x000028, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::K2Node_DynamicCast_AsCoop_GS' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, CallFunc_GetEnabledPersonnel_ReturnValue) == 0x000038, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::CallFunc_GetEnabledPersonnel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActivePersonnelText, CallFunc_CreateOverviewPersonnelListText_Text) == 0x000048, "Member 'BpPlanningMenuLibrary_C_GetActivePersonnelText::CallFunc_CreateOverviewPersonnelListText_Text' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.CreateOverviewDeployableListText
// 0x0938 (0x0938 - 0x0000)
struct BpPlanningMenuLibrary_C_CreateOverviewDeployableListText final 
{
public:
	TArray<int32>                                 Deployables;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   DeployableItemFormat;                              // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   ReturnText;                                        // 0x0048(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3633[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3634[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3635[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3636[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  CallFunc_GetLevelData_ReturnValue;                 // 0x00A8(0x0788)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0830(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0870(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x08B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x08C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x08D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x08E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x08F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0908(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0920(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_CreateOverviewDeployableListText");
static_assert(sizeof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText) == 0x000938, "Wrong size on BpPlanningMenuLibrary_C_CreateOverviewDeployableListText");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, Deployables) == 0x000000, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::Deployables' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, Text) == 0x000018, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, DeployableItemFormat) == 0x000030, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::DeployableItemFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, ReturnText) == 0x000048, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::ReturnText' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Array_Get_Item) == 0x000070, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000074, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_GetLevelData_ReturnValue) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_GetLevelData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, K2Node_MakeStruct_FormatArgumentData) == 0x000830, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000870, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, K2Node_MakeArray_Array) == 0x0008B0, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Format_ReturnValue) == 0x0008C0, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0008D8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0008E8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0008F8, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Conv_StringToText_ReturnValue) == 0x000908, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CreateOverviewDeployableListText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000920, "Member 'BpPlanningMenuLibrary_C_CreateOverviewDeployableListText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetActiveDeployablesText
// 0x0060 (0x0060 - 0x0000)
struct BpPlanningMenuLibrary_C_GetActiveDeployablesText final 
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACoopGS*                                K2Node_DynamicCast_AsCoop_GS;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3637[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetEnabledDeployables_ReturnValue;        // 0x0038(0x0010)(ReferenceParm)
	class FText                                   CallFunc_CreateOverviewDeployableListText_Text;    // 0x0048(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetActiveDeployablesText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetActiveDeployablesText");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetActiveDeployablesText) == 0x000060, "Wrong size on BpPlanningMenuLibrary_C_GetActiveDeployablesText");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, __WorldContext) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, Text) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, K2Node_DynamicCast_AsCoop_GS) == 0x000028, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::K2Node_DynamicCast_AsCoop_GS' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, CallFunc_GetEnabledDeployables_ReturnValue) == 0x000038, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::CallFunc_GetEnabledDeployables_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetActiveDeployablesText, CallFunc_CreateOverviewDeployableListText_Text) == 0x000048, "Member 'BpPlanningMenuLibrary_C_GetActiveDeployablesText::CallFunc_CreateOverviewDeployableListText_Text' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.FormatSpawnPoint
// 0x0220 (0x0220 - 0x0000)
struct BpPlanningMenuLibrary_C_FormatSpawnPoint final 
{
public:
	class FText                                   SpawnPointFormat;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSpawnPoints                           Spawn;                                             // 0x0018(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          DoubleCost;                                        // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3638[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x00B8(0x0018)(Parm, OutParm)
	int32                                         EffectivePointsCost;                               // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3639[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PointPlural;                                       // 0x00D8(0x0018)(Edit, BlueprintVisible)
	class FText                                   PointSingular;                                     // 0x00F0(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363A[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0040)(HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363B[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363C[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_FormatSpawnPoint) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_FormatSpawnPoint");
static_assert(sizeof(BpPlanningMenuLibrary_C_FormatSpawnPoint) == 0x000220, "Wrong size on BpPlanningMenuLibrary_C_FormatSpawnPoint");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, SpawnPointFormat) == 0x000000, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::SpawnPointFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, Spawn) == 0x000018, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::Spawn' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, DoubleCost) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::DoubleCost' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, __WorldContext) == 0x0000B0, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, Text) == 0x0000B8, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, EffectivePointsCost) == 0x0000D0, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::EffectivePointsCost' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, PointPlural) == 0x0000D8, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::PointPlural' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, PointSingular) == 0x0000F0, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::PointSingular' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, Temp_bool_Variable) == 0x000108, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, CallFunc_Multiply_IntInt_ReturnValue) == 0x00010C, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, K2Node_Select_Default) == 0x000150, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000198, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, Temp_bool_Variable_1) == 0x000199, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, K2Node_Select_Default_1) == 0x0001A0, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B8, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, K2Node_MakeArray_Array) == 0x0001F8, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FormatSpawnPoint, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BpPlanningMenuLibrary_C_FormatSpawnPoint::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetFirstWeaponType
// 0x0028 (0x0028 - 0x0000)
struct BpPlanningMenuLibrary_C_GetFirstWeaponType final 
{
public:
	TArray<EWeaponType>                           WeaponTypes;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponType                                   WeaponType;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponType                                   CallFunc_Array_Get_Item;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetFirstWeaponType) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetFirstWeaponType");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetFirstWeaponType) == 0x000028, "Wrong size on BpPlanningMenuLibrary_C_GetFirstWeaponType");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetFirstWeaponType, WeaponTypes) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetFirstWeaponType::WeaponTypes' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetFirstWeaponType, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetFirstWeaponType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetFirstWeaponType, WeaponType) == 0x000018, "Member 'BpPlanningMenuLibrary_C_GetFirstWeaponType::WeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetFirstWeaponType, CallFunc_Array_Get_Item) == 0x000019, "Member 'BpPlanningMenuLibrary_C_GetFirstWeaponType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetFirstWeaponType, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BpPlanningMenuLibrary_C_GetFirstWeaponType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetFirstWeaponType, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BpPlanningMenuLibrary_C_GetFirstWeaponType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetWeaponTypeLocalizedName
// 0x0210 (0x0210 - 0x0000)
struct BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName final 
{
public:
	EWeaponType                                   WeaponType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LocalizedName;                                     // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   UnarmedWeaponType;                                 // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   SpecialWeaponType;                                 // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   LessLethalPrimaryWeaponType;                       // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   LessLethalPistolWeaponType;                        // 0x0070(0x0018)(Edit, BlueprintVisible)
	class FText                                   LethalPistolWeaponType;                            // 0x0088(0x0018)(Edit, BlueprintVisible)
	class FText                                   ShotgunWeaponType;                                 // 0x00A0(0x0018)(Edit, BlueprintVisible)
	class FText                                   SubmachineWeaponType;                              // 0x00B8(0x0018)(Edit, BlueprintVisible)
	class FText                                   RifleWeaponType;                                   // 0x00D0(0x0018)(Edit, BlueprintVisible)
	class FText                                   NoWeaponType;                                      // 0x00E8(0x0018)(Edit, BlueprintVisible)
	EWeaponType                                   Temp_byte_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363F[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x01E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01F8(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName) == 0x000210, "Wrong size on BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, WeaponType) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::WeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, LocalizedName) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::LocalizedName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, UnarmedWeaponType) == 0x000028, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::UnarmedWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, SpecialWeaponType) == 0x000040, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::SpecialWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, LessLethalPrimaryWeaponType) == 0x000058, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::LessLethalPrimaryWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, LessLethalPistolWeaponType) == 0x000070, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::LessLethalPistolWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, LethalPistolWeaponType) == 0x000088, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::LethalPistolWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, ShotgunWeaponType) == 0x0000A0, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::ShotgunWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, SubmachineWeaponType) == 0x0000B8, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::SubmachineWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, RifleWeaponType) == 0x0000D0, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::RifleWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, NoWeaponType) == 0x0000E8, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::NoWeaponType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_byte_Variable) == 0x000100, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable) == 0x000108, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_1) == 0x000120, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_2) == 0x000138, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_3) == 0x000150, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_4) == 0x000168, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_5) == 0x000180, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_6) == 0x000198, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_7) == 0x0001B0, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_8) == 0x0001C8, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, Temp_text_Variable_9) == 0x0001E0, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName, K2Node_Select_Default) == 0x0001F8, "Member 'BpPlanningMenuLibrary_C_GetWeaponTypeLocalizedName::K2Node_Select_Default' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetCaliberFromBlueprint
// 0x0088 (0x0088 - 0x0000)
struct BpPlanningMenuLibrary_C_GetCaliberFromBlueprint final 
{
public:
	TSoftClassPtr<class UClass>                   WeaponBlueprint;                                   // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CaliberText;                                       // 0x0030(0x0018)(Parm, OutParm)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBase_Item;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3640[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBase_Magazine_Weapon;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3641[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetCaliberFromBlueprint");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint) == 0x000088, "Wrong size on BpPlanningMenuLibrary_C_GetCaliberFromBlueprint");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, WeaponBlueprint) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::WeaponBlueprint' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, __WorldContext) == 0x000028, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, CaliberText) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::CaliberText' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000048, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, K2Node_ClassDynamicCast_AsBase_Item) == 0x000050, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::K2Node_ClassDynamicCast_AsBase_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, K2Node_ClassDynamicCast_bSuccess) == 0x000058, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, K2Node_ClassDynamicCast_AsBase_Magazine_Weapon) == 0x000060, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::K2Node_ClassDynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, K2Node_ClassDynamicCast_bSuccess_1) == 0x000068, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCaliberFromBlueprint, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BpPlanningMenuLibrary_C_GetCaliberFromBlueprint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.MuzzleVelocityToText
// 0x00C0 (0x00C0 - 0x0000)
struct BpPlanningMenuLibrary_C_MuzzleVelocityToText final 
{
public:
	float                                         MuzzleVelocity;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3642[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   MuzzleVelocityFormat;                              // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_MuzzleVelocityToText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_MuzzleVelocityToText");
static_assert(sizeof(BpPlanningMenuLibrary_C_MuzzleVelocityToText) == 0x0000C0, "Wrong size on BpPlanningMenuLibrary_C_MuzzleVelocityToText");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, MuzzleVelocity) == 0x000000, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::MuzzleVelocity' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, Text) == 0x000010, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, MuzzleVelocityFormat) == 0x000028, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::MuzzleVelocityFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000040, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, K2Node_MakeArray_Array) == 0x000098, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_MuzzleVelocityToText, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_MuzzleVelocityToText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.ItemWeightToText
// 0x0198 (0x0198 - 0x0000)
struct BpPlanningMenuLibrary_C_ItemWeightToText final 
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fractional;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3643[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   GramsTextFormat;                                   // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   TextFormat;                                        // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0058(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3644[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x00D0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3645[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0118(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0130(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_ItemWeightToText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_ItemWeightToText");
static_assert(sizeof(BpPlanningMenuLibrary_C_ItemWeightToText) == 0x000198, "Wrong size on BpPlanningMenuLibrary_C_ItemWeightToText");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, Weight) == 0x000000, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::Weight' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, Fractional) == 0x000004, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::Fractional' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, Text) == 0x000010, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, GramsTextFormat) == 0x000028, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::GramsTextFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, TextFormat) == 0x000040, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::TextFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000058, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Less_FloatFloat_ReturnValue) == 0x000074, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000078, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x0000D0, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, Temp_bool_Variable) == 0x0000F8, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, K2Node_Select_Default) == 0x000118, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000130, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, K2Node_MakeArray_Array_1) == 0x000170, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ItemWeightToText, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'BpPlanningMenuLibrary_C_ItemWeightToText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.ConstructEquipmentOverviewAmmoString
// 0x01B8 (0x01B8 - 0x0000)
struct BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString final 
{
public:
	uint8                                         AmmoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3646[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MagazineCount;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   NoneFormat;                                        // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   SlugFormat;                                        // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   BuckshotFormat;                                    // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   HPFormat;                                          // 0x0070(0x0018)(Edit, BlueprintVisible)
	class FText                                   FMJFormat;                                         // 0x0088(0x0018)(Edit, BlueprintVisible)
	uint8                                         Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3647[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0170(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0188(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString");
static_assert(sizeof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString) == 0x0001B8, "Wrong size on BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, AmmoType) == 0x000000, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::AmmoType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, MagazineCount) == 0x000004, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::MagazineCount' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Text) == 0x000010, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, NoneFormat) == 0x000028, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::NoneFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, SlugFormat) == 0x000040, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::SlugFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, BuckshotFormat) == 0x000058, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::BuckshotFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, HPFormat) == 0x000070, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::HPFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, FMJFormat) == 0x000088, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::FMJFormat' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_byte_Variable) == 0x0000A0, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_text_Variable) == 0x0000F8, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_text_Variable_1) == 0x000110, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_text_Variable_2) == 0x000128, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_text_Variable_3) == 0x000140, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_text_Variable_4) == 0x000158, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, Temp_text_Variable_5) == 0x000170, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, K2Node_Select_Default) == 0x000188, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'BpPlanningMenuLibrary_C_ConstructEquipmentOverviewAmmoString::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetAttachmentTextData
// 0x0038 (0x0038 - 0x0000)
struct BpPlanningMenuLibrary_C_GetAttachmentTextData final 
{
public:
	class UClass*                                 Attachment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Visibility;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3648[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetAttachmentTextData) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetAttachmentTextData");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetAttachmentTextData) == 0x000038, "Wrong size on BpPlanningMenuLibrary_C_GetAttachmentTextData");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAttachmentTextData, Attachment) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetAttachmentTextData::Attachment' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAttachmentTextData, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetAttachmentTextData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAttachmentTextData, Visibility) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetAttachmentTextData::Visibility' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAttachmentTextData, Text) == 0x000018, "Member 'BpPlanningMenuLibrary_C_GetAttachmentTextData::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAttachmentTextData, CallFunc_IsValidClass_ReturnValue) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetAttachmentTextData::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetArmorCoverageText
// 0x0230 (0x0230 - 0x0000)
struct BpPlanningMenuLibrary_C_GetArmorCoverageText final 
{
public:
	EArmourCoverage                               Coverage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Level;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3649[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   Text_Format;                                       // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_Level3;                                       // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_Level2;                                       // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_Level1;                                       // 0x0070(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_FrontBackSides;                               // 0x0088(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_Back;                                         // 0x00A0(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_Front;                                        // 0x00B8(0x0018)(Edit, BlueprintVisible)
	EArmourCoverage                               Temp_byte_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364A[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00D8(0x0018)()
	uint8                                         Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364B[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0140(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0170(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x01B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0018)()
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetArmorCoverageText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetArmorCoverageText");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetArmorCoverageText) == 0x000230, "Wrong size on BpPlanningMenuLibrary_C_GetArmorCoverageText");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Coverage) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Coverage' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Level) == 0x000001, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Level' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_Format) == 0x000028, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_Format' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_Level3) == 0x000040, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_Level3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_Level2) == 0x000058, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_Level2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_Level1) == 0x000070, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_Level1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_FrontBackSides) == 0x000088, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_FrontBackSides' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_Back) == 0x0000A0, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_Back' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Text_Front) == 0x0000B8, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Text_Front' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_byte_Variable) == 0x0000D0, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_text_Variable) == 0x0000D8, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_byte_Variable_1) == 0x0000F0, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_text_Variable_1) == 0x0000F8, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_text_Variable_2) == 0x000110, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_text_Variable_3) == 0x000128, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, Temp_text_Variable_4) == 0x000140, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, K2Node_Select_Default) == 0x000158, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, K2Node_MakeStruct_FormatArgumentData) == 0x000170, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, K2Node_Select_Default_1) == 0x0001B0, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001C8, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, K2Node_MakeArray_Array) == 0x000208, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetArmorCoverageText, CallFunc_Format_ReturnValue) == 0x000218, "Member 'BpPlanningMenuLibrary_C_GetArmorCoverageText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.CanCustomizeWeaponClass
// 0x0028 (0x0028 - 0x0000)
struct BpPlanningMenuLibrary_C_CanCustomizeWeaponClass final 
{
public:
	class UClass*                                 WeaponClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCustomize;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_CanCustomizeWeaponClass");
static_assert(sizeof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass) == 0x000028, "Wrong size on BpPlanningMenuLibrary_C_CanCustomizeWeaponClass");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, WeaponClass) == 0x000000, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::WeaponClass' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, CanCustomize) == 0x000010, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::CanCustomize' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000018, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, CallFunc_BooleanOR_ReturnValue_1) == 0x000021, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponClass, CallFunc_BooleanOR_ReturnValue_2) == 0x000022, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponClass::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.CanCustomizeWeaponData
// 0x00C8 (0x00C8 - 0x0000)
struct BpPlanningMenuLibrary_C_CanCustomizeWeaponData final 
{
public:
	struct FWeaponData                            WeaponClass;                                       // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCustomize;                                      // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_CanCustomizeWeaponData) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_CanCustomizeWeaponData");
static_assert(sizeof(BpPlanningMenuLibrary_C_CanCustomizeWeaponData) == 0x0000C8, "Wrong size on BpPlanningMenuLibrary_C_CanCustomizeWeaponData");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponData, WeaponClass) == 0x000000, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponData::WeaponClass' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponData, __WorldContext) == 0x0000B8, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_CanCustomizeWeaponData, CanCustomize) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_CanCustomizeWeaponData::CanCustomize' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetNonDefaultLoadouts
// 0x0078 (0x0078 - 0x0000)
struct BpPlanningMenuLibrary_C_GetNonDefaultLoadouts final 
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Loadouts;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         LoadoutNames;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetLoadoutNames_LoadoutNames;             // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetLoadoutNames_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue_1;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue_2;          // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue_3;          // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue_4;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetNonDefaultLoadouts");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts) == 0x000078, "Wrong size on BpPlanningMenuLibrary_C_GetNonDefaultLoadouts");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, __WorldContext) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, Loadouts) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::Loadouts' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, LoadoutNames) == 0x000018, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::LoadoutNames' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_GetLoadoutNames_LoadoutNames) == 0x000038, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_GetLoadoutNames_LoadoutNames' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_GetLoadoutNames_ReturnValue) == 0x000048, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_GetLoadoutNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_Array_Get_Item) == 0x000058, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_NotEqual_StriStri_ReturnValue) == 0x00006C, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_NotEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_NotEqual_StriStri_ReturnValue_1) == 0x00006D, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_NotEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_NotEqual_StriStri_ReturnValue_2) == 0x00006E, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_NotEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_NotEqual_StriStri_ReturnValue_3) == 0x00006F, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_NotEqual_StriStri_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_NotEqual_StriStri_ReturnValue_4) == 0x000070, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_NotEqual_StriStri_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_BooleanAND_ReturnValue_1) == 0x000072, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_BooleanAND_ReturnValue_2) == 0x000073, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetNonDefaultLoadouts, CallFunc_BooleanAND_ReturnValue_3) == 0x000074, "Member 'BpPlanningMenuLibrary_C_GetNonDefaultLoadouts::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetAmmoTypeNameForWeaponAndAmmo
// 0x00E0 (0x00E0 - 0x0000)
struct BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo final 
{
public:
	class UClass*                                 WeaponClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         AmmoType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3650[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   TaserName;                                         // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   BeanbagName;                                       // 0x0048(0x0018)(Edit, BlueprintVisible)
	class FText                                   PepperballName;                                    // 0x0060(0x0018)(Edit, BlueprintVisible)
	class FText                                   SlugName;                                          // 0x0078(0x0018)(Edit, BlueprintVisible)
	class FText                                   BuckshotName;                                      // 0x0090(0x0018)(Edit, BlueprintVisible)
	class FText                                   FMJName;                                           // 0x00A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   JHPName;                                           // 0x00C0(0x0018)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo) == 0x0000E0, "Wrong size on BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, WeaponClass) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::WeaponClass' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, AmmoType) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::AmmoType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, Text) == 0x000018, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, TaserName) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::TaserName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, BeanbagName) == 0x000048, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::BeanbagName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, PepperballName) == 0x000060, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::PepperballName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, SlugName) == 0x000078, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::SlugName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, BuckshotName) == 0x000090, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::BuckshotName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, FMJName) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::FMJName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, JHPName) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::JHPName' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000D9, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0000DA, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x0000DB, "Member 'BpPlanningMenuLibrary_C_GetAmmoTypeNameForWeaponAndAmmo::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetAmmoDescriptionForWeaponAndAmmo
// 0x00E0 (0x00E0 - 0x0000)
struct BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo final 
{
public:
	class UClass*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         AmmoType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3651[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   TaserDescription;                                  // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   BeanbagDescription;                                // 0x0048(0x0018)(Edit, BlueprintVisible)
	class FText                                   PepperballDescription;                             // 0x0060(0x0018)(Edit, BlueprintVisible)
	class FText                                   SlugDescription;                                   // 0x0078(0x0018)(Edit, BlueprintVisible)
	class FText                                   BuckshotDescription;                               // 0x0090(0x0018)(Edit, BlueprintVisible)
	class FText                                   FMJDescription;                                    // 0x00A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   JHPDescription;                                    // 0x00C0(0x0018)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo) == 0x0000E0, "Wrong size on BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, Weapon) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::Weapon' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, AmmoType) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::AmmoType' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, Text) == 0x000018, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::Text' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, TaserDescription) == 0x000030, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::TaserDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, BeanbagDescription) == 0x000048, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::BeanbagDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, PepperballDescription) == 0x000060, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::PepperballDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, SlugDescription) == 0x000078, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::SlugDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, BuckshotDescription) == 0x000090, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::BuckshotDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, FMJDescription) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::FMJDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, JHPDescription) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::JHPDescription' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000D9, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0000DA, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x0000DB, "Member 'BpPlanningMenuLibrary_C_GetAmmoDescriptionForWeaponAndAmmo::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.PlayerStatusToText
// 0x00E0 (0x00E0 - 0x0000)
struct BpPlanningMenuLibrary_C_PlayerStatusToText final 
{
public:
	EPlayerStatus                                 Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3652[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatusText;                                        // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   Status_NotAvailable;                               // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   Status_Dead;                                       // 0x0048(0x0018)(Edit, BlueprintVisible)
	class FText                                   Status_Injured;                                    // 0x0060(0x0018)(Edit, BlueprintVisible)
	class FText                                   Status_Healthy;                                    // 0x0078(0x0018)(Edit, BlueprintVisible)
	class FText                                   Status_Ready;                                      // 0x0090(0x0018)(Edit, BlueprintVisible)
	class FText                                   Status_NotReady;                                   // 0x00A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   Status_None;                                       // 0x00C0(0x0018)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHealthStatus                           CallFunc_GetHealthStatus_ReturnValue;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_PlayerStatusToText) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_PlayerStatusToText");
static_assert(sizeof(BpPlanningMenuLibrary_C_PlayerStatusToText) == 0x0000E0, "Wrong size on BpPlanningMenuLibrary_C_PlayerStatusToText");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status) == 0x000000, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, PlayerState) == 0x000008, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::PlayerState' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, StatusText) == 0x000018, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::StatusText' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_NotAvailable) == 0x000030, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_NotAvailable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_Dead) == 0x000048, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_Dead' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_Injured) == 0x000060, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_Injured' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_Healthy) == 0x000078, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_Healthy' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_Ready) == 0x000090, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_Ready' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_NotReady) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_NotReady' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, Status_None) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::Status_None' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, CallFunc_GetHealthStatus_ReturnValue) == 0x0000D9, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::CallFunc_GetHealthStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_PlayerStatusToText, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000DA, "Member 'BpPlanningMenuLibrary_C_PlayerStatusToText::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.GetCharacterDataFromHandle
// 0x0158 (0x0158 - 0x0000)
struct BpPlanningMenuLibrary_C_GetCharacterDataFromHandle final 
{
public:
	class FName                                   Handle;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterData                         Data;                                              // 0x0010(0x0090)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3653[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              CallFunc_GetItemData_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3654[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterData                         CallFunc_Array_Get_Item;                           // 0x00C0(0x0090)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_GetCharacterDataFromHandle");
static_assert(sizeof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle) == 0x000158, "Wrong size on BpPlanningMenuLibrary_C_GetCharacterDataFromHandle");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, Handle) == 0x000000, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::Handle' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, Data) == 0x000010, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::Data' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, CallFunc_GetItemData_ReturnValue) == 0x0000B0, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_GetCharacterDataFromHandle, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000151, "Member 'BpPlanningMenuLibrary_C_GetCharacterDataFromHandle::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.IsFactorySkin
// 0x0020 (0x0020 - 0x0000)
struct BpPlanningMenuLibrary_C_IsFactorySkin final 
{
public:
	class UClass*                                 SkinClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_3;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_4;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_5;      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BpPlanningMenuLibrary_C_IsFactorySkin) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_IsFactorySkin");
static_assert(sizeof(BpPlanningMenuLibrary_C_IsFactorySkin) == 0x000020, "Wrong size on BpPlanningMenuLibrary_C_IsFactorySkin");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, SkinClass) == 0x000000, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::SkinClass' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, __WorldContext) == 0x000008, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, Return_Value) == 0x000010, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::Return_Value' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000011, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000012, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x000013, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_EqualEqual_ClassClass_ReturnValue_3) == 0x000014, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_EqualEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_EqualEqual_ClassClass_ReturnValue_4) == 0x000015, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_EqualEqual_ClassClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_EqualEqual_ClassClass_ReturnValue_5) == 0x000016, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_EqualEqual_ClassClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_BooleanOR_ReturnValue_1) == 0x000018, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_BooleanOR_ReturnValue_2) == 0x000019, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_BooleanOR_ReturnValue_3) == 0x00001A, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_IsFactorySkin, CallFunc_BooleanOR_ReturnValue_4) == 0x00001B, "Member 'BpPlanningMenuLibrary_C_IsFactorySkin::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function BpPlanningMenuLibrary.BpPlanningMenuLibrary_C.FindIconFromItemClass
// 0x0598 (0x0598 - 0x0000)
struct BpPlanningMenuLibrary_C_FindIconFromItemClass final 
{
public:
	class APlayerController*                      Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ItemClass;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Return_Value;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3655[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_3;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_4;      // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_5;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3656[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 CallFunc_GetWorldBP_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              CallFunc_GetItemData_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3657[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArmourData                            CallFunc_Array_Get_Item;                           // 0x0068(0x0058)()
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3658[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeviceData                            CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0140)()
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue_1;         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3659[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365A[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeviceData                            CallFunc_Array_Get_Item_2;                         // 0x0230(0x0140)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365B[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue_2;         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365C[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365D[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365E[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponData                            CallFunc_Array_Get_Item_3;                         // 0x03B0(0x00B8)()
	struct FArmourData                            CallFunc_Array_Get_Item_4;                         // 0x0468(0x0058)()
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue_3;         // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue_4;         // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365F[0x4];                                     // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponData                            CallFunc_Array_Get_Item_5;                         // 0x04D8(0x00B8)()
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue_5;         // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BpPlanningMenuLibrary_C_FindIconFromItemClass) == 0x000008, "Wrong alignment on BpPlanningMenuLibrary_C_FindIconFromItemClass");
static_assert(sizeof(BpPlanningMenuLibrary_C_FindIconFromItemClass) == 0x000598, "Wrong size on BpPlanningMenuLibrary_C_FindIconFromItemClass");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Player_Controller) == 0x000000, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Player_Controller' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, ItemClass) == 0x000008, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::ItemClass' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, __WorldContext) == 0x000010, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Return_Value) == 0x000018, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Return_Value' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000024, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x00002C, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x00002D, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_EqualEqual_ClassClass_ReturnValue_3) == 0x00002E, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_EqualEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_EqualEqual_ClassClass_ReturnValue_4) == 0x00002F, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_EqualEqual_ClassClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_EqualEqual_ClassClass_ReturnValue_5) == 0x000030, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_EqualEqual_ClassClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetWorldBP_ReturnValue) == 0x000038, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetWorldBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetItemData_ReturnValue) == 0x000040, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Length_ReturnValue_3) == 0x000054, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Length_ReturnValue_4) == 0x00005C, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Length_ReturnValue_5) == 0x000064, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Get_Item) == 0x000068, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetLazyLoadedImage_ReturnValue) == 0x0000C0, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetLazyLoadedImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Array_Index_Variable_1) == 0x0000C8, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetLazyLoadedImage_ReturnValue_1) == 0x000210, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetLazyLoadedImage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Loop_Counter_Variable_1) == 0x000218, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Less_IntInt_ReturnValue_1) == 0x00021C, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Add_IntInt_ReturnValue_1) == 0x000220, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Array_Index_Variable_2) == 0x000224, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Loop_Counter_Variable_2) == 0x000228, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Get_Item_2) == 0x000230, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Less_IntInt_ReturnValue_2) == 0x000370, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetLazyLoadedImage_ReturnValue_2) == 0x000378, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetLazyLoadedImage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Add_IntInt_ReturnValue_2) == 0x000380, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Loop_Counter_Variable_3) == 0x000384, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Loop_Counter_Variable_4) == 0x000388, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Less_IntInt_ReturnValue_3) == 0x00038C, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Add_IntInt_ReturnValue_3) == 0x000390, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Less_IntInt_ReturnValue_4) == 0x000394, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Add_IntInt_ReturnValue_4) == 0x000398, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Loop_Counter_Variable_5) == 0x00039C, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Less_IntInt_ReturnValue_5) == 0x0003A0, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Add_IntInt_ReturnValue_5) == 0x0003A4, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Array_Index_Variable_3) == 0x0003A8, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Array_Index_Variable_4) == 0x0003AC, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Get_Item_3) == 0x0003B0, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Get_Item_4) == 0x000468, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetLazyLoadedImage_ReturnValue_3) == 0x0004C0, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetLazyLoadedImage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetLazyLoadedImage_ReturnValue_4) == 0x0004C8, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetLazyLoadedImage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, Temp_int_Array_Index_Variable_5) == 0x0004D0, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_Array_Get_Item_5) == 0x0004D8, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BpPlanningMenuLibrary_C_FindIconFromItemClass, CallFunc_GetLazyLoadedImage_ReturnValue_5) == 0x000590, "Member 'BpPlanningMenuLibrary_C_FindIconFromItemClass::CallFunc_GetLazyLoadedImage_ReturnValue_5' has a wrong offset!");

}

