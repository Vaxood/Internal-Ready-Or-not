#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BasePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BasePlayer.BasePlayer_C
// 0x00B0 (0x25D0 - 0x2520)
class ABasePlayer_C final  : public APlayerCharacter
{
public:
	uint8                                         Pad_3C48[0x8];                                     // 0x2518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2520(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      ClothCollider;                                     // 0x2528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Muscle_Strength;                           // 0x2530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Muscle_Strength;                                   // 0x2534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Muscle_Strength_DEAD;                              // 0x2538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Air_Muscle_Strength_Switch;                     // 0x253C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          In_Air_Switch_Delay;                               // 0x253D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSuppressionDebug;                                 // 0x253E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C49[0x1];                                     // 0x253F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           VaultStepAnim;                                     // 0x2540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           VaultUpAnim;                                       // 0x2548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           VaultOverAnim;                                     // 0x2550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CurrentVaultMontage;                               // 0x2558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSuppressionShakeAmount;                     // 0x2560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuppressionShakeDecreaseRate;                      // 0x2564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmBreakShakeAmount;                               // 0x2568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuppressionShakeScale;                             // 0x256C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultIdleShake;                                  // 0x2570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintShakeAmount;                                 // 0x2574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintShakeDecreaseRate;                           // 0x2578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSprintShakeAmount;                          // 0x257C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletCursor;                                      // 0x2580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4A[0x3];                                     // 0x2581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentFoV;                                        // 0x2584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletFocusTimer;                                  // 0x2588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TabletOpen;                                        // 0x2589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4B[0x2];                                     // 0x258A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TabletFocusDelay;                                  // 0x258C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTabletFocusDelay;                           // 0x2590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TabletFocused;                                     // 0x2594(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4C[0x3];                                     // 0x2595(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TabletLerp;                                        // 0x2598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Minhfov;                                           // 0x259C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tgtvfov;                                           // 0x25A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4D[0x4];                                     // 0x25A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCrouchStarted;                                   // 0x25A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCrouchEnded;                                     // 0x25B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnCrouchStarted__DelegateSignature();
	void OnCrouchEnded__DelegateSignature();
	void ExecuteUbergraph_BasePlayer(int32 EntryPoint, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsLocalPlayer_ReturnValue, const struct FTransform& CallFunc_Conv_VectorToTransform_ReturnValue, bool CallFunc_IsLocalPlayer_ReturnValue_1, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue_1, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue_2, bool CallFunc_IsLocalPlayer_ReturnValue_2, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue_3, bool CallFunc_IsLocalPlayer_ReturnValue_3, class UFMODAudioComponent* CallFunc_PlayEventAttached_ReturnValue_4, bool CallFunc_IsLocalPlayer_ReturnValue_4, bool CallFunc_IsValid_ReturnValue, float K2Node_Event_DeltaSeconds, const struct FFMODEventInstance& CallFunc_PlayEventAtLocation_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FKey& K2Node_InputKeyEvent_Key, float CallFunc_GetPlayLength_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& K2Node_Event_ledge, const struct FVector& K2Node_Event_ledgeWallNormal, const struct FVector& K2Node_Event_ledgeTraceDown, float K2Node_Event_ledgeZ, ELedgeWidth K2Node_Event_ledgeWidth, ELedgeHeight K2Node_Event_ledgeHeight, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_1, const struct FTransform& CallFunc_Conv_VectorToTransform_ReturnValue_1, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_2, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_3, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_4, const struct FFMODEventInstance& CallFunc_PlayEventAtLocation_ReturnValue_1, float K2Node_Event_Strength, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_5, float K2Node_Event_HalfHeightAdjust_1, float K2Node_Event_ScaledHalfHeightAdjust_1, float K2Node_Event_HalfHeightAdjust, float K2Node_Event_ScaledHalfHeightAdjust, const struct FKey& K2Node_InputKeyEvent_Key_1, const struct FKey& K2Node_InputKeyEvent_Key_2, bool K2Node_CustomEvent_Active, float K2Node_Event_DirectionForward, float K2Node_Event_DirectionRight);
	void OnBulletImpact(float DirectionForward, float DirectionRight);
	void ToggleTabletCursor(bool Active);
	void OnLeanEnd();
	void OnLeanStart();
	void OnTurn();
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void OnSupression(float Strength);
	void OnKilledOrGoneUnconciousBP();
	void PlayVaultAnimation(const struct FVector& Ledge, const struct FVector& LedgeWallNormal, const struct FVector& LedgeTraceDown, float LedgeZ, ELedgeWidth LedgeWidth, ELedgeHeight LedgeHeight);
	void FocusTablet();
	void ReceiveTick(float DeltaSeconds);
	void OnJumpLand();
	void OnJumpStart();
	void InpActEvt_F1_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_F2_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_F3_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void UpdateFirstPersonShake(float DeltaSeconds, float CallFunc_FMax_ReturnValue, float CallFunc_FMax_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue_2, float CallFunc_FClamp_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue_1, bool CallFunc_IsSprinting_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_FClamp_ReturnValue_2);
	void AddFirstPersonShakeFromSuppression(float Strength, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FMin_ReturnValue);
	void GetTabletZoomFOV(float* FOV, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue_1, const struct FVector2D& CallFunc_GetViewportSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_DegTan_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_DegAtan_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_FMax_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BasePlayer_C">();
	}
	static class ABasePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABasePlayer_C>();
	}
};
static_assert(alignof(ABasePlayer_C) == 0x000010, "Wrong alignment on ABasePlayer_C");
static_assert(sizeof(ABasePlayer_C) == 0x0025D0, "Wrong size on ABasePlayer_C");
static_assert(offsetof(ABasePlayer_C, UberGraphFrame) == 0x002520, "Member 'ABasePlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, ClothCollider) == 0x002528, "Member 'ABasePlayer_C::ClothCollider' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Current_Muscle_Strength) == 0x002530, "Member 'ABasePlayer_C::Current_Muscle_Strength' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Muscle_Strength) == 0x002534, "Member 'ABasePlayer_C::Muscle_Strength' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Muscle_Strength_DEAD) == 0x002538, "Member 'ABasePlayer_C::Muscle_Strength_DEAD' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, In_Air_Muscle_Strength_Switch) == 0x00253C, "Member 'ABasePlayer_C::In_Air_Muscle_Strength_Switch' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, In_Air_Switch_Delay) == 0x00253D, "Member 'ABasePlayer_C::In_Air_Switch_Delay' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, bSuppressionDebug) == 0x00253E, "Member 'ABasePlayer_C::bSuppressionDebug' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, VaultStepAnim) == 0x002540, "Member 'ABasePlayer_C::VaultStepAnim' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, VaultUpAnim) == 0x002548, "Member 'ABasePlayer_C::VaultUpAnim' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, VaultOverAnim) == 0x002550, "Member 'ABasePlayer_C::VaultOverAnim' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentVaultMontage) == 0x002558, "Member 'ABasePlayer_C::CurrentVaultMontage' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentSuppressionShakeAmount) == 0x002560, "Member 'ABasePlayer_C::CurrentSuppressionShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SuppressionShakeDecreaseRate) == 0x002564, "Member 'ABasePlayer_C::SuppressionShakeDecreaseRate' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, ArmBreakShakeAmount) == 0x002568, "Member 'ABasePlayer_C::ArmBreakShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SuppressionShakeScale) == 0x00256C, "Member 'ABasePlayer_C::SuppressionShakeScale' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, DefaultIdleShake) == 0x002570, "Member 'ABasePlayer_C::DefaultIdleShake' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SprintShakeAmount) == 0x002574, "Member 'ABasePlayer_C::SprintShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, SprintShakeDecreaseRate) == 0x002578, "Member 'ABasePlayer_C::SprintShakeDecreaseRate' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentSprintShakeAmount) == 0x00257C, "Member 'ABasePlayer_C::CurrentSprintShakeAmount' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletCursor) == 0x002580, "Member 'ABasePlayer_C::TabletCursor' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentFoV) == 0x002584, "Member 'ABasePlayer_C::CurrentFoV' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletFocusTimer) == 0x002588, "Member 'ABasePlayer_C::TabletFocusTimer' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletOpen) == 0x002589, "Member 'ABasePlayer_C::TabletOpen' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletFocusDelay) == 0x00258C, "Member 'ABasePlayer_C::TabletFocusDelay' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, CurrentTabletFocusDelay) == 0x002590, "Member 'ABasePlayer_C::CurrentTabletFocusDelay' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletFocused) == 0x002594, "Member 'ABasePlayer_C::TabletFocused' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, TabletLerp) == 0x002598, "Member 'ABasePlayer_C::TabletLerp' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Minhfov) == 0x00259C, "Member 'ABasePlayer_C::Minhfov' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, Tgtvfov) == 0x0025A0, "Member 'ABasePlayer_C::Tgtvfov' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, OnCrouchStarted) == 0x0025A8, "Member 'ABasePlayer_C::OnCrouchStarted' has a wrong offset!");
static_assert(offsetof(ABasePlayer_C, OnCrouchEnded) == 0x0025B8, "Member 'ABasePlayer_C::OnCrouchEnded' has a wrong offset!");

}

