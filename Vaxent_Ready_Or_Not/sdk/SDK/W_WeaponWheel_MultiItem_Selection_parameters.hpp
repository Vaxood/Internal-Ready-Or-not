#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_MultiItem_Selection

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.CreateIndex
// 0x00E8 (0x00E8 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_CreateIndex final 
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0028(0x0088)()
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x00B0(0x0008)(NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA8[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_CreateIndex");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex) == 0x0000E8, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_CreateIndex");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, K2Node_MakeStruct_SlateBrush) == 0x000028, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, K2Node_MakeStruct_SlateChildSize) == 0x0000B0, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, K2Node_MakeStruct_Margin) == 0x0000B8, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, CallFunc_SpawnObject_ReturnValue) == 0x0000C8, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, CallFunc_AddChild_ReturnValue) == 0x0000D0, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_CreateIndex, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x0000E0, "Member 'W_WeaponWheel_MultiItem_Selection_C_CreateIndex::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.NextItem
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_NextItem final 
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSucceeded;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA9[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_NextItem) == 0x000004, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_NextItem");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_NextItem) == 0x000018, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_NextItem");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, bSuccess) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, bSucceeded) == 0x000001, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::bSucceeded' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_NextItem, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_MultiItem_Selection_C_NextItem::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.PreviousItem
// 0x0018 (0x0018 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_PreviousItem final 
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSucceeded;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAB[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem) == 0x000004, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_PreviousItem");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem) == 0x000018, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_PreviousItem");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, bSuccess) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::bSuccess' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, bSucceeded) == 0x000001, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::bSucceeded' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00000C, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_PreviousItem, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_MultiItem_Selection_C_PreviousItem::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.Refresh
// 0x0040 (0x0040 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_Refresh final 
{
public:
	int32                                         NewAmount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingItemIndex;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAD[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAE[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_Refresh) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_Refresh");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_Refresh) == 0x000040, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_Refresh");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, NewAmount) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::NewAmount' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, StartingItemIndex) == 0x000004, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::StartingItemIndex' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, Temp_int_Variable) == 0x000010, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, K2Node_MakeStruct_Margin) == 0x000020, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Refresh, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000038, "Member 'W_WeaponWheel_MultiItem_Selection_C_Refresh::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.Select
// 0x0048 (0x0048 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_Select final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BAF[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_Select) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_Select");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_Select) == 0x000048, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_Select");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, Param_Index) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::Param_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Select, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_WeaponWheel_MultiItem_Selection_C_Select::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.Deselect
// 0x0050 (0x0050 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_Deselect final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB1[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_Deselect) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_Deselect");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_Deselect) == 0x000050, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_Deselect");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, Param_Index) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::Param_Index' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, CallFunc_Clamp_ReturnValue) == 0x000040, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_Deselect, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_WeaponWheel_MultiItem_Selection_C_Deselect::CallFunc_Array_Get_Item' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.HighlightIcon
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_HighlightIcon final 
{
public:
	class UImage*                                 Arrow;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_HighlightIcon) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_HighlightIcon");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_HighlightIcon) == 0x000030, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_HighlightIcon");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_HighlightIcon, Arrow) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_HighlightIcon::Arrow' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_HighlightIcon, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_HighlightIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.UnhighlightIcon
// 0x0030 (0x0030 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon final 
{
public:
	class UImage*                                 Arrow;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon) == 0x000030, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon, Arrow) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon::Arrow' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_UnhighlightIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C.DetermineIconColor
// 0x0048 (0x0048 - 0x0000)
struct W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor final 
{
public:
	class UImage*                                 Next_Icon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexToCheck;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB3[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
};
static_assert(alignof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor) == 0x000008, "Wrong alignment on W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor");
static_assert(sizeof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor) == 0x000048, "Wrong size on W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor, Next_Icon) == 0x000000, "Member 'W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor::Next_Icon' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor, IndexToCheck) == 0x000008, "Member 'W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor::IndexToCheck' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor, Temp_bool_Variable) == 0x00000C, "Member 'W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor, K2Node_Select_Default) == 0x000010, "Member 'W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'W_WeaponWheel_MultiItem_Selection_C_DetermineIconColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

