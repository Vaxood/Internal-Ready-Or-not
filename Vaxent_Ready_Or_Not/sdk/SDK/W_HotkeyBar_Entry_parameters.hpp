#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HotkeyBar_Entry

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "St_HotkeySettings_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.OnHotkeyButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature final 
{
public:
	class UW_HotkeyBar_Entry_C*                   TriggeringHotkeyEntry;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature");
static_assert(sizeof(W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature) == 0x000008, "Wrong size on W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature, TriggeringHotkeyEntry) == 0x000000, "Member 'W_HotkeyBar_Entry_C_OnHotkeyButtonClicked__DelegateSignature::TriggeringHotkeyEntry' has a wrong offset!");

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.ExecuteUbergraph_W_HotkeyBar_Entry
// 0x01D8 (0x01D8 - 0x0000)
struct W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B78[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B79[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSt_HotkeySettings                     K2Node_CustomEvent_Hotkey;                         // 0x0038(0x0058)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7A[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertUnrealKeyNameToRonKeyName_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7B[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default_1;                           // 0x0100(0x0088)(ConstParm)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7C[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x01A8(0x0018)()
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue_1; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry) == 0x000008, "Wrong alignment on W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry");
static_assert(sizeof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry) == 0x0001D8, "Wrong size on W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, EntryPoint) == 0x000000, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, Temp_bool_Variable) == 0x000014, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, Temp_text_Variable) == 0x000018, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, Temp_bool_Variable_1) == 0x000030, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_Event_IsDesignTime) == 0x000031, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_CustomEvent_Hotkey) == 0x000038, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_CustomEvent_Hotkey' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, Temp_text_Variable_1) == 0x000090, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_ComponentBoundEvent_Button_1) == 0x0000A8, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0000B0, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0000B1, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_ConvertUnrealKeyNameToRonKeyName_ReturnValue) == 0x0000B8, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_ConvertUnrealKeyNameToRonKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_Select_Default) == 0x0000E0, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_Select_Default_1) == 0x000100, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_ComponentBoundEvent_Button) == 0x000188, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, Temp_bool_Variable_2) == 0x000190, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000198, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x0001A0, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, K2Node_Select_Default_2) == 0x0001A8, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_GetReadyOrNotPlayerController_ReturnValue_1) == 0x0001C0, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_GetReadyOrNotPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1) == 0x0001C8, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry, CallFunc_GetCurrentInputType_ReturnValue) == 0x0001D0, "Member 'W_HotkeyBar_Entry_C_ExecuteUbergraph_W_HotkeyBar_Entry::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature");
static_assert(sizeof(W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature");
static_assert(offsetof(W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_HotkeyBar_Entry_C_BndEvt__W_HotkeyBar_Entry_W_Button_K2Node_ComponentBoundEvent_0_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.SetBinding
// 0x0058 (0x0058 - 0x0000)
struct W_HotkeyBar_Entry_C_SetBinding final 
{
public:
	struct FSt_HotkeySettings                     Param_Hotkey;                                      // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_Entry_C_SetBinding) == 0x000008, "Wrong alignment on W_HotkeyBar_Entry_C_SetBinding");
static_assert(sizeof(W_HotkeyBar_Entry_C_SetBinding) == 0x000058, "Wrong size on W_HotkeyBar_Entry_C_SetBinding");
static_assert(offsetof(W_HotkeyBar_Entry_C_SetBinding, Param_Hotkey) == 0x000000, "Member 'W_HotkeyBar_Entry_C_SetBinding::Param_Hotkey' has a wrong offset!");

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_HotkeyBar_Entry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HotkeyBar_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on W_HotkeyBar_Entry_C_PreConstruct");
static_assert(sizeof(W_HotkeyBar_Entry_C_PreConstruct) == 0x000001, "Wrong size on W_HotkeyBar_Entry_C_PreConstruct");
static_assert(offsetof(W_HotkeyBar_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_HotkeyBar_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_HotkeyBar_Entry.W_HotkeyBar_Entry_C.OnInputMethodChanged
// 0x0018 (0x0018 - 0x0000)
struct W_HotkeyBar_Entry_C_OnInputMethodChanged final 
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B7D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_Entry_C_OnInputMethodChanged) == 0x000004, "Wrong alignment on W_HotkeyBar_Entry_C_OnInputMethodChanged");
static_assert(sizeof(W_HotkeyBar_Entry_C_OnInputMethodChanged) == 0x000018, "Wrong size on W_HotkeyBar_Entry_C_OnInputMethodChanged");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, bNewInputType) == 0x000000, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::bNewInputType' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, Temp_byte_Variable) == 0x000001, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, Temp_int_Variable) == 0x000004, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, Temp_int_Variable_1) == 0x000008, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, Temp_int_Variable_2) == 0x00000C, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, Temp_int_Variable_3) == 0x000010, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_Entry_C_OnInputMethodChanged, K2Node_Select_Default) == 0x000014, "Member 'W_HotkeyBar_Entry_C_OnInputMethodChanged::K2Node_Select_Default' has a wrong offset!");

}

