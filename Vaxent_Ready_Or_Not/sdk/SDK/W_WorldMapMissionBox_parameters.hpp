#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldMapMissionBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_Clicked__DelegateSignature final 
{
public:
	class FName                                   Param_MissionName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_Clicked__DelegateSignature) == 0x000004, "Wrong alignment on W_WorldMapMissionBox_C_Clicked__DelegateSignature");
static_assert(sizeof(W_WorldMapMissionBox_C_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_Clicked__DelegateSignature");
static_assert(offsetof(W_WorldMapMissionBox_C_Clicked__DelegateSignature, Param_MissionName) == 0x000000, "Member 'W_WorldMapMissionBox_C_Clicked__DelegateSignature::Param_MissionName' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_Hovered__DelegateSignature final 
{
public:
	class FName                                   Param_MissionName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_Hovered__DelegateSignature) == 0x000004, "Wrong alignment on W_WorldMapMissionBox_C_Hovered__DelegateSignature");
static_assert(sizeof(W_WorldMapMissionBox_C_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_Hovered__DelegateSignature");
static_assert(offsetof(W_WorldMapMissionBox_C_Hovered__DelegateSignature, Param_MissionName) == 0x000000, "Member 'W_WorldMapMissionBox_C_Hovered__DelegateSignature::Param_MissionName' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.Unhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_Unhovered__DelegateSignature final 
{
public:
	class FName                                   Param_MissionName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_Unhovered__DelegateSignature) == 0x000004, "Wrong alignment on W_WorldMapMissionBox_C_Unhovered__DelegateSignature");
static_assert(sizeof(W_WorldMapMissionBox_C_Unhovered__DelegateSignature) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_Unhovered__DelegateSignature");
static_assert(offsetof(W_WorldMapMissionBox_C_Unhovered__DelegateSignature, Param_MissionName) == 0x000000, "Member 'W_WorldMapMissionBox_C_Unhovered__DelegateSignature::Param_MissionName' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.ExecuteUbergraph_W_WorldMapMissionBox
// 0x0878 (0x0878 - 0x0000)
struct W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5F[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesLevelExistInBuild_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C60[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelDataLookupTable                  CallFunc_GetMapDetailsFromName_ReturnValue;        // 0x0090(0x0788)()
	class UTexture2D*                             CallFunc_GetLazyLoadedImage_ReturnValue;           // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0820(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelUnlocked_OutIsUnlocked;            // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C61[0x3];                                     // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsLevelUnlocked_OutScoreRequired;         // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_IsLevelUnlocked_OutLockedUrl;             // 0x0838(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelUnlocked_ReturnValue;              // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C62[0x2];                                     // 0x084A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x084C(0x0008)(NoDestructor)
	uint8                                         Pad_1C63[0x4];                                     // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C64[0x3];                                     // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0864(0x0008)(NoDestructor)
	uint8                                         Pad_1C65[0x4];                                     // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0870(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox) == 0x000008, "Wrong alignment on W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox");
static_assert(sizeof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox) == 0x000878, "Wrong size on W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, EntryPoint) == 0x000000, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_Event_IsDesignTime) == 0x000040, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000048, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_RandomFloatInRange_ReturnValue) == 0x000058, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_ComponentBoundEvent_Button_1) == 0x000060, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000078, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_DoesLevelExistInBuild_ReturnValue) == 0x000088, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_DoesLevelExistInBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_GetMapDetailsFromName_ReturnValue) == 0x000090, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_GetMapDetailsFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_GetLazyLoadedImage_ReturnValue) == 0x000818, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_GetLazyLoadedImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000820, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_IsLevelUnlocked_OutIsUnlocked) == 0x000830, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_IsLevelUnlocked_OutIsUnlocked' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_IsLevelUnlocked_OutScoreRequired) == 0x000834, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_IsLevelUnlocked_OutScoreRequired' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_IsLevelUnlocked_OutLockedUrl) == 0x000838, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_IsLevelUnlocked_OutLockedUrl' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_IsLevelUnlocked_ReturnValue) == 0x000848, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_IsLevelUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_Not_PreBool_ReturnValue) == 0x000849, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_Event_InFocusEvent_1) == 0x00084C, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_GetOwningPlayer_ReturnValue) == 0x000858, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, CallFunc_HasUserFocus_ReturnValue) == 0x000860, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_Event_InFocusEvent) == 0x000864, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox, K2Node_ComponentBoundEvent_Button) == 0x000870, "Member 'W_WorldMapMissionBox_C_ExecuteUbergraph_W_WorldMapMissionBox::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(sizeof(W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(offsetof(W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_OnRemovedFromFocusPath final 
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_WorldMapMissionBox_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on W_WorldMapMissionBox_C_OnRemovedFromFocusPath");
static_assert(sizeof(W_WorldMapMissionBox_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_OnRemovedFromFocusPath");
static_assert(offsetof(W_WorldMapMissionBox_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'W_WorldMapMissionBox_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_OnAddedToFocusPath final 
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_WorldMapMissionBox_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_WorldMapMissionBox_C_OnAddedToFocusPath");
static_assert(sizeof(W_WorldMapMissionBox_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_OnAddedToFocusPath");
static_assert(offsetof(W_WorldMapMissionBox_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_WorldMapMissionBox_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_WorldMapMissionBox_C_BndEvt__W_WorldMapMissionBox_W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_WorldMapMissionBox_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorldMapMissionBox_C_Tick) == 0x000004, "Wrong alignment on W_WorldMapMissionBox_C_Tick");
static_assert(sizeof(W_WorldMapMissionBox_C_Tick) == 0x00003C, "Wrong size on W_WorldMapMissionBox_C_Tick");
static_assert(offsetof(W_WorldMapMissionBox_C_Tick, MyGeometry) == 0x000000, "Member 'W_WorldMapMissionBox_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_WorldMapMissionBox_C_Tick, InDeltaTime) == 0x000038, "Member 'W_WorldMapMissionBox_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_WorldMapMissionBox.W_WorldMapMissionBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WorldMapMissionBox_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_WorldMapMissionBox_C_PreConstruct) == 0x000001, "Wrong alignment on W_WorldMapMissionBox_C_PreConstruct");
static_assert(sizeof(W_WorldMapMissionBox_C_PreConstruct) == 0x000001, "Wrong size on W_WorldMapMissionBox_C_PreConstruct");
static_assert(offsetof(W_WorldMapMissionBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WorldMapMissionBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

