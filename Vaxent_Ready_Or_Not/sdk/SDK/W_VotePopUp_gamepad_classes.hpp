#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VotePopUp_gamepad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_VotePopUp_gamepad.W_VotePopUp_gamepad_C
// 0x00A8 (0x0308 - 0x0260)
class UW_VotePopUp_gamepad_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonActionWidget*                    CommonActionWidget;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_46;                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_185;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         NoVote_Box;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               NoVoteDivider_Box;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RootBox;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteNoCount;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteQuestionText;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteResonText;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteYesCount;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         VoteState_0;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4077[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Current_Vote_Reason_0;                             // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          VoteEnabled_0;                                     // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4078[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Yes_Votes_0;                                       // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         No_Votes_0;                                        // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vote_No_Enabled_0;                                 // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WidgetActive_0;                                    // 0x02ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4079[0x2];                                     // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentVoteQuestion_0;                             // 0x02F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_W_VotePopUp_gamepad(int32 EntryPoint, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class FText K2Node_CustomEvent_VoteReason, class FText K2Node_CustomEvent_VoteQuestion, bool K2Node_CustomEvent_bCanVoteNo, class ABP_BaseController_C* K2Node_DynamicCast_AsBP_Base_Controller, bool K2Node_DynamicCast_bSuccess);
	void VoteEnd();
	void StartVote(class FText Param_VoteReason, class FText VoteQuestion, bool bCanVoteNo);
	void Construct();
	class FText VoteReason();
	ESlateVisibility VoteNo_Visibility_1();
	ESlateVisibility VoteNo_Visibility_2();
	class FText GetText_1(class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class ABP_BaseController_C* K2Node_DynamicCast_AsBP_Base_Controller, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Conv_ByteToInt_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess);
	bool GetbIsEnabled_0();
	class FText GetText_4(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ACoopGS* K2Node_DynamicCast_AsCoop_GS, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue);
	class FText GetVoteYesKeyBinding(class FName CallFunc_MakeLiteralName_ReturnValue, const struct FKey& CallFunc_GetKeyFromInputActionName_ReturnValue, const class FString& CallFunc_ConvertUnrealKeyNameToRonKeyName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);
	class FText GetVoteNoKeyBinding(class FName CallFunc_MakeLiteralName_ReturnValue, const struct FKey& CallFunc_GetKeyFromInputActionName_ReturnValue, const class FString& CallFunc_ConvertUnrealKeyNameToRonKeyName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue);
	ESlateVisibility GetVoteNo_Visibility(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool CallFunc_CanVoteNo_Return_Value, ESlateVisibility K2Node_Select_Default);
	void UpdateVote(class FText CallFunc_GetNoVotes_ReturnValue, class FText CallFunc_GetYesVotes_ReturnValue, ESlateVisibility CallFunc_GetVoteNo_Visibility_ReturnValue, class FText CallFunc_GetVoteQuestion_ReturnValue, class FText CallFunc_VoteReason_ReturnValue);

	ESlateVisibility GetVoteVisibility() const;
	class FText GetYesVotes(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ACoopGS* K2Node_DynamicCast_AsCoop_GS, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_Conv_IntToText_ReturnValue) const;
	class FText GetNoVotes(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ACoopGS* K2Node_DynamicCast_AsCoop_GS, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_Conv_IntToText_ReturnValue) const;
	class FText GetVoteQuestion() const;
	void CanVoteNo(bool* Return_Value, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayersAvailableForVote_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_VotePopUp_gamepad_C">();
	}
	static class UW_VotePopUp_gamepad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_VotePopUp_gamepad_C>();
	}
};
static_assert(alignof(UW_VotePopUp_gamepad_C) == 0x000008, "Wrong alignment on UW_VotePopUp_gamepad_C");
static_assert(sizeof(UW_VotePopUp_gamepad_C) == 0x000308, "Wrong size on UW_VotePopUp_gamepad_C");
static_assert(offsetof(UW_VotePopUp_gamepad_C, UberGraphFrame) == 0x000260, "Member 'UW_VotePopUp_gamepad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, CommonActionWidget) == 0x000268, "Member 'UW_VotePopUp_gamepad_C::CommonActionWidget' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, CommonActionWidget_46) == 0x000270, "Member 'UW_VotePopUp_gamepad_C::CommonActionWidget_46' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Image) == 0x000278, "Member 'UW_VotePopUp_gamepad_C::Image' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Image_185) == 0x000280, "Member 'UW_VotePopUp_gamepad_C::Image_185' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, NoVote_Box) == 0x000288, "Member 'UW_VotePopUp_gamepad_C::NoVote_Box' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, NoVoteDivider_Box) == 0x000290, "Member 'UW_VotePopUp_gamepad_C::NoVoteDivider_Box' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, RootBox) == 0x000298, "Member 'UW_VotePopUp_gamepad_C::RootBox' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteNoCount) == 0x0002A0, "Member 'UW_VotePopUp_gamepad_C::VoteNoCount' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteQuestionText) == 0x0002A8, "Member 'UW_VotePopUp_gamepad_C::VoteQuestionText' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteResonText) == 0x0002B0, "Member 'UW_VotePopUp_gamepad_C::VoteResonText' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteYesCount) == 0x0002B8, "Member 'UW_VotePopUp_gamepad_C::VoteYesCount' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteState_0) == 0x0002C0, "Member 'UW_VotePopUp_gamepad_C::VoteState_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Current_Vote_Reason_0) == 0x0002C8, "Member 'UW_VotePopUp_gamepad_C::Current_Vote_Reason_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteEnabled_0) == 0x0002E0, "Member 'UW_VotePopUp_gamepad_C::VoteEnabled_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Yes_Votes_0) == 0x0002E4, "Member 'UW_VotePopUp_gamepad_C::Yes_Votes_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, No_Votes_0) == 0x0002E8, "Member 'UW_VotePopUp_gamepad_C::No_Votes_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Vote_No_Enabled_0) == 0x0002EC, "Member 'UW_VotePopUp_gamepad_C::Vote_No_Enabled_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, WidgetActive_0) == 0x0002ED, "Member 'UW_VotePopUp_gamepad_C::WidgetActive_0' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, CurrentVoteQuestion_0) == 0x0002F0, "Member 'UW_VotePopUp_gamepad_C::CurrentVoteQuestion_0' has a wrong offset!");

}

