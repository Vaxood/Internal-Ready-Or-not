#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Roster_PlayerStatus_Card

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature final 
{
public:
	class UW_Roster_PlayerStatus_Card_C*          Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature, Card) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_OnClicked__DelegateSignature::Card' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.ExecuteUbergraph_W_Roster_PlayerStatus_Card
// 0x0128 (0x0128 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4A[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4B[0x3];                                      // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4C[0x3];                                      // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4D[0x4];                                      // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Delay;                                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4E[0x3];                                      // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_PlayerState;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4F[0x3];                                      // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FSavedLoadout& NewLoadout)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C50[0x4];                                      // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State_1;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x3];                                      // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterProxy*                        K2Node_CustomEvent_CharacterProxy;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetName_ReturnValue;                      // 0x00F0(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card) == 0x000128, "Wrong size on W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, EntryPoint) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, Temp_bool_Variable) == 0x000004, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, Temp_byte_Variable) == 0x000005, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, Temp_byte_Variable_1) == 0x000006, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_bIsExpanded) == 0x000008, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_bIsSelected) == 0x000009, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_ListItemObject) == 0x000010, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_IsGamepad) == 0x000018, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_PageName) == 0x00001C, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_IsDesignTime) == 0x000024, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_Delay_1) == 0x000028, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_Delay) == 0x000048, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Event_Collapse) == 0x00004C, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000050, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CustomEvent_PlayerState) == 0x000058, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_DynamicCast_AsReady_or_Not_Player_State) == 0x000060, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_DynamicCast_AsReady_or_Not_Player_State' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A8, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_DynamicCast_AsReady_or_Not_Player_State_1) == 0x0000B0, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_DynamicCast_AsReady_or_Not_Player_State_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B9, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_BooleanAND_ReturnValue) == 0x0000BB, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_Select_Default) == 0x0000BC, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C0, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_ComponentBoundEvent_Button_2) == 0x0000D0, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_ComponentBoundEvent_Button_1) == 0x0000D8, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_ComponentBoundEvent_Button) == 0x0000E0, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CustomEvent_CharacterProxy) == 0x0000E8, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CustomEvent_CharacterProxy' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, CallFunc_GetName_ReturnValue) == 0x0000F0, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CreateDelegate_OutputDelegate_3) == 0x000108, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card, K2Node_CreateDelegate_OutputDelegate_4) == 0x000118, "Member 'W_Roster_PlayerStatus_Card_C_ExecuteUbergraph_W_Roster_PlayerStatus_Card::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.SetByProxy
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_SetByProxy final 
{
public:
	class UCharacterProxy*                        Param_CharacterProxy;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_SetByProxy) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_SetByProxy");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_SetByProxy) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_SetByProxy");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetByProxy, Param_CharacterProxy) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_SetByProxy::Param_CharacterProxy' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final 
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final 
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final 
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_BndEvt__W_RosterPlayer_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.SetByPlayerState
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_SetByPlayerState final 
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_SetByPlayerState) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_SetByPlayerState");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_SetByPlayerState) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_SetByPlayerState");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetByPlayerState, PlayerState) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_SetByPlayerState::PlayerState' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_Hide) == 0x000004, "Wrong alignment on W_Roster_PlayerStatus_Card_C_Hide");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_Hide) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_Hide");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_Hide, Delay) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_Hide, Collapse) == 0x000004, "Member 'W_Roster_PlayerStatus_Card_C_Hide::Collapse' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_Reveal) == 0x000004, "Wrong alignment on W_Roster_PlayerStatus_Card_C_Reveal");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_Reveal) == 0x000004, "Wrong size on W_Roster_PlayerStatus_Card_C_Reveal");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_Reveal, Delay) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_Reveal::Delay' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_PreConstruct) == 0x000001, "Wrong alignment on W_Roster_PlayerStatus_Card_C_PreConstruct");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_PreConstruct) == 0x000001, "Wrong size on W_Roster_PlayerStatus_Card_C_PreConstruct");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_ChangePage) == 0x000004, "Wrong alignment on W_Roster_PlayerStatus_Card_C_ChangePage");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_ChangePage) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_ChangePage");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_ChangePage, PageName) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_ChangePage::PageName' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_SetInputMode) == 0x000001, "Wrong alignment on W_Roster_PlayerStatus_Card_C_SetInputMode");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_SetInputMode) == 0x000001, "Wrong size on W_Roster_PlayerStatus_Card_C_SetInputMode");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_OnListItemObjectSet final 
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_OnListItemObjectSet");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_OnListItemObjectSet) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_OnListItemObjectSet");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged final 
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged final 
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.SetupAptitude
// 0x0038 (0x0038 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_SetupAptitude final 
{
public:
	class UProgressBar*                           ProgressBar;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C52[0x4];                                      // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_SetupAptitude) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_SetupAptitude");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_SetupAptitude) == 0x000038, "Wrong size on W_Roster_PlayerStatus_Card_C_SetupAptitude");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetupAptitude, ProgressBar) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_SetupAptitude::ProgressBar' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetupAptitude, TextBlock) == 0x000008, "Member 'W_Roster_PlayerStatus_Card_C_SetupAptitude::TextBlock' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetupAptitude, Percent) == 0x000010, "Member 'W_Roster_PlayerStatus_Card_C_SetupAptitude::Percent' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetupAptitude, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'W_Roster_PlayerStatus_Card_C_SetupAptitude::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetupAptitude, CallFunc_Round_ReturnValue) == 0x000018, "Member 'W_Roster_PlayerStatus_Card_C_SetupAptitude::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_SetupAptitude, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'W_Roster_PlayerStatus_Card_C_SetupAptitude::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.UpdateLoadoutPS
// 0x01E8 (0x01E8 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS final 
{
public:
	struct FSavedLoadout                          NewLoadout;                                        // 0x0000(0x0188)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UClass*, int32>                    DeployablesSorted;                                 // 0x0188(0x0050)(Edit, BlueprintVisible)
	TArray<TSubclassOf<class ABaseItem>>          Deployables;                                       // 0x01D8(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS) == 0x0001E8, "Wrong size on W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS, NewLoadout) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS::NewLoadout' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS, DeployablesSorted) == 0x000188, "Member 'W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS::DeployablesSorted' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS, Deployables) == 0x0001D8, "Member 'W_Roster_PlayerStatus_Card_C_UpdateLoadoutPS::Deployables' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.UpdateReadyStatus
// 0x0128 (0x0128 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_UpdateReadyStatus final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C53[0x6];                                      // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	struct FLinearColor                           CallFunc_GetLinearColorScheme_White;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorScheme_Dark;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorScheme_Red;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorScheme_Yellow;              // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorScheme_Blue;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorScheme_Green;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00C0(0x0028)()
	class FText                                   K2Node_Select_Default;                             // 0x00E8(0x0018)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0100(0x0028)()
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_UpdateReadyStatus");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus) == 0x000128, "Wrong size on W_Roster_PlayerStatus_Card_C_UpdateReadyStatus");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, Temp_bool_Variable) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, Temp_bool_Variable_1) == 0x000001, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, Temp_text_Variable) == 0x000008, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, Temp_text_Variable_1) == 0x000020, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, CallFunc_GetLinearColorScheme_White) == 0x000038, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::CallFunc_GetLinearColorScheme_White' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, CallFunc_GetLinearColorScheme_Dark) == 0x000048, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::CallFunc_GetLinearColorScheme_Dark' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, CallFunc_GetLinearColorScheme_Red) == 0x000058, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::CallFunc_GetLinearColorScheme_Red' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, CallFunc_GetLinearColorScheme_Yellow) == 0x000068, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::CallFunc_GetLinearColorScheme_Yellow' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, CallFunc_GetLinearColorScheme_Blue) == 0x000078, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::CallFunc_GetLinearColorScheme_Blue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, CallFunc_GetLinearColorScheme_Green) == 0x000088, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::CallFunc_GetLinearColorScheme_Green' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, K2Node_MakeStruct_SlateColor_1) == 0x0000C0, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, K2Node_Select_Default) == 0x0000E8, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateReadyStatus, K2Node_Select_Default_1) == 0x000100, "Member 'W_Roster_PlayerStatus_Card_C_UpdateReadyStatus::K2Node_Select_Default_1' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.UpdateLoadout
// 0x0040 (0x0040 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_UpdateLoadout final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C54[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRosterLoadout                         CallFunc_GetLoadout_ReturnValue;                   // 0x0008(0x0038)()
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_UpdateLoadout) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_UpdateLoadout");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_UpdateLoadout) == 0x000040, "Wrong size on W_Roster_PlayerStatus_Card_C_UpdateLoadout");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateLoadout, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_UpdateLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateLoadout, CallFunc_GetLoadout_ReturnValue) == 0x000008, "Member 'W_Roster_PlayerStatus_Card_C_UpdateLoadout::CallFunc_GetLoadout_ReturnValue' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.UpdateStatus
// 0x0020 (0x0020 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_UpdateStatus final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C55[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetStatus_ReturnValue;                    // 0x0008(0x0018)()
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_UpdateStatus) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_UpdateStatus");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_UpdateStatus) == 0x000020, "Wrong size on W_Roster_PlayerStatus_Card_C_UpdateStatus");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateStatus, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_UpdateStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_UpdateStatus, CallFunc_GetStatus_ReturnValue) == 0x000008, "Member 'W_Roster_PlayerStatus_Card_C_UpdateStatus::CallFunc_GetStatus_ReturnValue' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_BackPage) == 0x000001, "Wrong alignment on W_Roster_PlayerStatus_Card_C_BackPage");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_BackPage) == 0x000001, "Wrong size on W_Roster_PlayerStatus_Card_C_BackPage");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_BackPage, Handled) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_BackPage::Handled' has a wrong offset!");

// Function W_Roster_PlayerStatus_Card.W_Roster_PlayerStatus_Card_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_PlayerStatus_Card_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_PlayerStatus_Card_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Roster_PlayerStatus_Card_C_GetFocusTarget");
static_assert(sizeof(W_Roster_PlayerStatus_Card_C_GetFocusTarget) == 0x000008, "Wrong size on W_Roster_PlayerStatus_Card_C_GetFocusTarget");
static_assert(offsetof(W_Roster_PlayerStatus_Card_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Roster_PlayerStatus_Card_C_GetFocusTarget::Focus' has a wrong offset!");

}

