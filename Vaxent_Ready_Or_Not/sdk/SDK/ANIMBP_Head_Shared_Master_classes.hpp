#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Head_Shared_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Head_Shared_Master.ANIMBP_Head_Shared_Master_C
// 0x0EB0 (0x11A0 - 0x02F0)
class UANIMBP_Head_Shared_Master_C final  : public UReadyOrNotFaceAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x02F8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x03C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0440(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x04C0(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x05C8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x05E8(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0608(0x00A0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x06A8(0x0058)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0700(0x00B0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x07B0(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0870(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x08B8(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0978(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0AD0(0x0028)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x0AF8(0x00A0)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x0B98(0x0078)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0C10(0x0018)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0C28(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0E00(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0E80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0EC8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0F48(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0FC8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0FF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1078(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x10F8(0x0080)()
	bool                                          IsPlayerDead;                                      // 0x1178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3F[0x3];                                     // 0x1179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EmotionWeight;                                     // 0x117C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtAlpha;                                       // 0x1180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x1184(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMeshRef;                                       // 0x1190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterEmotion                             Emotion;                                           // 0x1198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_Head_Shared_Master(int32 EntryPoint, class UPoseAsset* CallFunc_GetFaceROM_ReturnValue, class APawn* CallFunc_TryGetPawnOwner_ReturnValue, class AReadyOrNotCharacter* K2Node_DynamicCast_AsReady_or_Not_Character, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaTimeX, bool CallFunc_IsDeadOrUnconscious_ReturnValue);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Head_Shared_Master_AnimGraphNode_PoseBlendNode_A99257564D737339170EBB90FDD72DEC();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Head_Shared_Master_C">();
	}
	static class UANIMBP_Head_Shared_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Head_Shared_Master_C>();
	}
};
static_assert(alignof(UANIMBP_Head_Shared_Master_C) == 0x000010, "Wrong alignment on UANIMBP_Head_Shared_Master_C");
static_assert(sizeof(UANIMBP_Head_Shared_Master_C) == 0x0011A0, "Wrong size on UANIMBP_Head_Shared_Master_C");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, UberGraphFrame) == 0x0002F0, "Member 'UANIMBP_Head_Shared_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_TwoWayBlend) == 0x0002F8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_7) == 0x0003C0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_6) == 0x000440, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyBone) == 0x0004C0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LocalToComponentSpace) == 0x0005C8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ComponentToLocalSpace) == 0x0005E8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByBool) == 0x000608, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve) == 0x0006A8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByEnum) == 0x000700, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0007B0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Slot_1) == 0x000870, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LayeredBoneBlend) == 0x0008B8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SaveCachedPose) == 0x000978, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_UseCachedPose) == 0x000AD0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_PoseBlendNode) == 0x000AF8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_RandomPlayer) == 0x000B98, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LocalRefPose) == 0x000C10, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_CopyPoseFromMesh) == 0x000C28, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_5) == 0x000E00, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Slot) == 0x000E80, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_4) == 0x000EC8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_3) == 0x000F48, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Root) == 0x000FC8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_2) == 0x000FF8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_1) == 0x001078, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer) == 0x0010F8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, IsPlayerDead) == 0x001178, "Member 'UANIMBP_Head_Shared_Master_C::IsPlayerDead' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, EmotionWeight) == 0x00117C, "Member 'UANIMBP_Head_Shared_Master_C::EmotionWeight' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LookAtAlpha) == 0x001180, "Member 'UANIMBP_Head_Shared_Master_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LookAtLocation) == 0x001184, "Member 'UANIMBP_Head_Shared_Master_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, BodyMeshRef) == 0x001190, "Member 'UANIMBP_Head_Shared_Master_C::BodyMeshRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, Emotion) == 0x001198, "Member 'UANIMBP_Head_Shared_Master_C::Emotion' has a wrong offset!");

}

