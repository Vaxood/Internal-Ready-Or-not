#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadBPHelper

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function GamepadBPHelper.GamepadBPHelper_C.RestoreFocus
// 0x0028 (0x0028 - 0x0000)
struct GamepadBPHelper_C_RestoreFocus final 
{
public:
	class UWidget*                                Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                DesiredFocusTarget;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WidgetOrChildHasFocus_HasFocus;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadBPHelper_C_RestoreFocus) == 0x000008, "Wrong alignment on GamepadBPHelper_C_RestoreFocus");
static_assert(sizeof(GamepadBPHelper_C_RestoreFocus) == 0x000028, "Wrong size on GamepadBPHelper_C_RestoreFocus");
static_assert(offsetof(GamepadBPHelper_C_RestoreFocus, Parent) == 0x000000, "Member 'GamepadBPHelper_C_RestoreFocus::Parent' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_RestoreFocus, DesiredFocusTarget) == 0x000008, "Member 'GamepadBPHelper_C_RestoreFocus::DesiredFocusTarget' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_RestoreFocus, PlayerController) == 0x000010, "Member 'GamepadBPHelper_C_RestoreFocus::PlayerController' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_RestoreFocus, __WorldContext) == 0x000018, "Member 'GamepadBPHelper_C_RestoreFocus::__WorldContext' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_RestoreFocus, CallFunc_WidgetOrChildHasFocus_HasFocus) == 0x000020, "Member 'GamepadBPHelper_C_RestoreFocus::CallFunc_WidgetOrChildHasFocus_HasFocus' has a wrong offset!");

// Function GamepadBPHelper.GamepadBPHelper_C.ShowIfGamepad
// 0x0018 (0x0018 - 0x0000)
struct GamepadBPHelper_C_ShowIfGamepad final 
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              LastInputType;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasUsingGamepad;                                   // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUsingGamepad;                                    // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadBPHelper_C_ShowIfGamepad) == 0x000008, "Wrong alignment on GamepadBPHelper_C_ShowIfGamepad");
static_assert(sizeof(GamepadBPHelper_C_ShowIfGamepad) == 0x000018, "Wrong size on GamepadBPHelper_C_ShowIfGamepad");
static_assert(offsetof(GamepadBPHelper_C_ShowIfGamepad, Widget) == 0x000000, "Member 'GamepadBPHelper_C_ShowIfGamepad::Widget' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfGamepad, __WorldContext) == 0x000008, "Member 'GamepadBPHelper_C_ShowIfGamepad::__WorldContext' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfGamepad, LastInputType) == 0x000010, "Member 'GamepadBPHelper_C_ShowIfGamepad::LastInputType' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfGamepad, WasUsingGamepad) == 0x000011, "Member 'GamepadBPHelper_C_ShowIfGamepad::WasUsingGamepad' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfGamepad, IsUsingGamepad) == 0x000012, "Member 'GamepadBPHelper_C_ShowIfGamepad::IsUsingGamepad' has a wrong offset!");

// Function GamepadBPHelper.GamepadBPHelper_C.ShowBasedOnGamepad
// 0x0028 (0x0028 - 0x0000)
struct GamepadBPHelper_C_ShowBasedOnGamepad final 
{
public:
	bool                                          ShowIfGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadBPHelper_C_ShowBasedOnGamepad) == 0x000008, "Wrong alignment on GamepadBPHelper_C_ShowBasedOnGamepad");
static_assert(sizeof(GamepadBPHelper_C_ShowBasedOnGamepad) == 0x000028, "Wrong size on GamepadBPHelper_C_ShowBasedOnGamepad");
static_assert(offsetof(GamepadBPHelper_C_ShowBasedOnGamepad, ShowIfGamepad) == 0x000000, "Member 'GamepadBPHelper_C_ShowBasedOnGamepad::ShowIfGamepad' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowBasedOnGamepad, Widget) == 0x000008, "Member 'GamepadBPHelper_C_ShowBasedOnGamepad::Widget' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowBasedOnGamepad, __WorldContext) == 0x000010, "Member 'GamepadBPHelper_C_ShowBasedOnGamepad::__WorldContext' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowBasedOnGamepad, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'GamepadBPHelper_C_ShowBasedOnGamepad::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowBasedOnGamepad, CallFunc_GetCurrentInputType_ReturnValue) == 0x000020, "Member 'GamepadBPHelper_C_ShowBasedOnGamepad::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowBasedOnGamepad, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'GamepadBPHelper_C_ShowBasedOnGamepad::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GamepadBPHelper.GamepadBPHelper_C.ShowIfNotGamepad
// 0x0018 (0x0018 - 0x0000)
struct GamepadBPHelper_C_ShowIfNotGamepad final 
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasUsingGamepad;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUsingGamepad;                                    // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadBPHelper_C_ShowIfNotGamepad) == 0x000008, "Wrong alignment on GamepadBPHelper_C_ShowIfNotGamepad");
static_assert(sizeof(GamepadBPHelper_C_ShowIfNotGamepad) == 0x000018, "Wrong size on GamepadBPHelper_C_ShowIfNotGamepad");
static_assert(offsetof(GamepadBPHelper_C_ShowIfNotGamepad, Widget) == 0x000000, "Member 'GamepadBPHelper_C_ShowIfNotGamepad::Widget' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfNotGamepad, __WorldContext) == 0x000008, "Member 'GamepadBPHelper_C_ShowIfNotGamepad::__WorldContext' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfNotGamepad, WasUsingGamepad) == 0x000010, "Member 'GamepadBPHelper_C_ShowIfNotGamepad::WasUsingGamepad' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_ShowIfNotGamepad, IsUsingGamepad) == 0x000011, "Member 'GamepadBPHelper_C_ShowIfNotGamepad::IsUsingGamepad' has a wrong offset!");

// Function GamepadBPHelper.GamepadBPHelper_C.UpdateGamepadButtonNavigation
// 0x00D8 (0x00D8 - 0x0000)
struct GamepadBPHelper_C_UpdateGamepadButtonNavigation final 
{
public:
	class UWidget*                                ParentWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   NextKeyBinding;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FKey                                   PrevKeyBinding;                                    // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UUserWidget*                            CurrentSelectedButton;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            SelectedButton;                                    // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewButton;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FoundNewButton;                                    // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345C[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewActiveButton;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentButtonIndex;                                // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345D[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  buttonAvailability;                                // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         ButtonListNavigationDirection;                     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345E[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345F[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3460[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3461[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveButton_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_1;     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadBPHelper_C_UpdateGamepadButtonNavigation) == 0x000008, "Wrong alignment on GamepadBPHelper_C_UpdateGamepadButtonNavigation");
static_assert(sizeof(GamepadBPHelper_C_UpdateGamepadButtonNavigation) == 0x0000D8, "Wrong size on GamepadBPHelper_C_UpdateGamepadButtonNavigation");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, ParentWidget) == 0x000000, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::ParentWidget' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, NextKeyBinding) == 0x000008, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::NextKeyBinding' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, PrevKeyBinding) == 0x000020, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::PrevKeyBinding' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CurrentSelectedButton) == 0x000038, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CurrentSelectedButton' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, __WorldContext) == 0x000040, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::__WorldContext' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, SelectedButton) == 0x000048, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::SelectedButton' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, IsNewButton) == 0x000050, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::IsNewButton' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, FoundNewButton) == 0x000051, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::FoundNewButton' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, NewActiveButton) == 0x000054, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::NewActiveButton' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CurrentButtonIndex) == 0x000058, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CurrentButtonIndex' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, buttonAvailability) == 0x000060, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::buttonAvailability' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, ButtonListNavigationDirection) == 0x000070, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::ButtonListNavigationDirection' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_GetObjectClass_ReturnValue) == 0x000078, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, Temp_int_Array_Index_Variable) == 0x000080, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000088, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_Array_Get_Item) == 0x000098, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_GetIsEnabled_ReturnValue) == 0x0000A4, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A5, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_GetVisibility_ReturnValue) == 0x0000A6, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A7, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_GetActiveButton_ReturnValue) == 0x0000BC, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_GetActiveButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x0000C0, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x0000D0, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_WasInputKeyJustPressed_ReturnValue_1) == 0x0000D1, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_WasInputKeyJustPressed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_UpdateGamepadButtonNavigation, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D2, "Member 'GamepadBPHelper_C_UpdateGamepadButtonNavigation::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function GamepadBPHelper.GamepadBPHelper_C.WidgetOrChildHasFocus
// 0x0020 (0x0020 - 0x0000)
struct GamepadBPHelper_C_WidgetOrChildHasFocus final 
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFocus;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUserFocusedDescendants_ReturnValue;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadBPHelper_C_WidgetOrChildHasFocus) == 0x000008, "Wrong alignment on GamepadBPHelper_C_WidgetOrChildHasFocus");
static_assert(sizeof(GamepadBPHelper_C_WidgetOrChildHasFocus) == 0x000020, "Wrong size on GamepadBPHelper_C_WidgetOrChildHasFocus");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, Widget) == 0x000000, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::Widget' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, PlayerController) == 0x000008, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::PlayerController' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, __WorldContext) == 0x000010, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::__WorldContext' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, HasFocus) == 0x000018, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::HasFocus' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, CallFunc_HasUserFocus_ReturnValue) == 0x000019, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, CallFunc_HasUserFocusedDescendants_ReturnValue) == 0x00001A, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::CallFunc_HasUserFocusedDescendants_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadBPHelper_C_WidgetOrChildHasFocus, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'GamepadBPHelper_C_WidgetOrChildHasFocus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

