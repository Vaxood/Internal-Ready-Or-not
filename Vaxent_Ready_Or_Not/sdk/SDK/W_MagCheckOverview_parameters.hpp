#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MagCheckOverview

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_MagCheckOverview.W_MagCheckOverview_C.ExecuteUbergraph_W_MagCheckOverview
// 0x0040 (0x0040 - 0x0000)
struct W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    K2Node_CustomEvent_MagazineWeapon;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetEquippedItem_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview) == 0x000008, "Wrong alignment on W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview");
static_assert(sizeof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview) == 0x000040, "Wrong size on W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, EntryPoint) == 0x000000, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, K2Node_CustomEvent_MagazineWeapon) == 0x000010, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::K2Node_CustomEvent_MagazineWeapon' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, K2Node_DynamicCast_AsPlayer_Character) == 0x000018, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, CallFunc_GetEquippedItem_ReturnValue) == 0x000028, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000030, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_MagCheckOverview_C_ExecuteUbergraph_W_MagCheckOverview::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function W_MagCheckOverview.W_MagCheckOverview_C.OnWeaponMagCheck_Event_0
// 0x0008 (0x0008 - 0x0000)
struct W_MagCheckOverview_C_OnWeaponMagCheck_Event_0 final 
{
public:
	class ABaseMagazineWeapon*                    MagazineWeapon;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MagCheckOverview_C_OnWeaponMagCheck_Event_0) == 0x000008, "Wrong alignment on W_MagCheckOverview_C_OnWeaponMagCheck_Event_0");
static_assert(sizeof(W_MagCheckOverview_C_OnWeaponMagCheck_Event_0) == 0x000008, "Wrong size on W_MagCheckOverview_C_OnWeaponMagCheck_Event_0");
static_assert(offsetof(W_MagCheckOverview_C_OnWeaponMagCheck_Event_0, MagazineWeapon) == 0x000000, "Member 'W_MagCheckOverview_C_OnWeaponMagCheck_Event_0::MagazineWeapon' has a wrong offset!");

// Function W_MagCheckOverview.W_MagCheckOverview_C.RefreshMags
// 0x0088 (0x0088 - 0x0000)
struct W_MagCheckOverview_C_RefreshMags final 
{
public:
	class ABaseMagazineWeapon*                    MagazineWeapon;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBC[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBD[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMagazine                              CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(NoDestructor)
	uint8                                         Pad_3CBE[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MagCheck_MagStatus_C*                CallFunc_IndexToMagStatusWidget_Return_Value;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMagazineScreenName_ReturnValue;        // 0x0050(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBF[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
};
static_assert(alignof(W_MagCheckOverview_C_RefreshMags) == 0x000008, "Wrong alignment on W_MagCheckOverview_C_RefreshMags");
static_assert(sizeof(W_MagCheckOverview_C_RefreshMags) == 0x000088, "Wrong size on W_MagCheckOverview_C_RefreshMags");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, MagazineWeapon) == 0x000000, "Member 'W_MagCheckOverview_C_RefreshMags::MagazineWeapon' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, Temp_text_Variable) == 0x000008, "Member 'W_MagCheckOverview_C_RefreshMags::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_MagCheckOverview_C_RefreshMags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, Temp_int_Array_Index_Variable) == 0x000034, "Member 'W_MagCheckOverview_C_RefreshMags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_IndexToMagStatusWidget_Return_Value) == 0x000048, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_IndexToMagStatusWidget_Return_Value' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_GetMagazineScreenName_ReturnValue) == 0x000050, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_GetMagazineScreenName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'W_MagCheckOverview_C_RefreshMags::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, Temp_bool_Variable) == 0x00006C, "Member 'W_MagCheckOverview_C_RefreshMags::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_RefreshMags, K2Node_Select_Default) == 0x000070, "Member 'W_MagCheckOverview_C_RefreshMags::K2Node_Select_Default' has a wrong offset!");

// Function W_MagCheckOverview.W_MagCheckOverview_C.HighlightCurrentMag
// 0x0020 (0x0020 - 0x0000)
struct W_MagCheckOverview_C_HighlightCurrentMag final 
{
public:
	class ABaseMagazineWeapon*                    MagazineWeapon;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MagCheck_MagStatus_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MagCheckOverview_C_HighlightCurrentMag) == 0x000008, "Wrong alignment on W_MagCheckOverview_C_HighlightCurrentMag");
static_assert(sizeof(W_MagCheckOverview_C_HighlightCurrentMag) == 0x000020, "Wrong size on W_MagCheckOverview_C_HighlightCurrentMag");
static_assert(offsetof(W_MagCheckOverview_C_HighlightCurrentMag, MagazineWeapon) == 0x000000, "Member 'W_MagCheckOverview_C_HighlightCurrentMag::MagazineWeapon' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_HighlightCurrentMag, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_MagCheckOverview_C_HighlightCurrentMag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_HighlightCurrentMag, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_MagCheckOverview_C_HighlightCurrentMag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_HighlightCurrentMag, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'W_MagCheckOverview_C_HighlightCurrentMag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_MagCheckOverview.W_MagCheckOverview_C.UnhighlightAllMags
// 0x0020 (0x0020 - 0x0000)
struct W_MagCheckOverview_C_UnhighlightAllMags final 
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MagCheck_MagStatus_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MagCheckOverview_C_UnhighlightAllMags) == 0x000008, "Wrong alignment on W_MagCheckOverview_C_UnhighlightAllMags");
static_assert(sizeof(W_MagCheckOverview_C_UnhighlightAllMags) == 0x000020, "Wrong size on W_MagCheckOverview_C_UnhighlightAllMags");
static_assert(offsetof(W_MagCheckOverview_C_UnhighlightAllMags, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_MagCheckOverview_C_UnhighlightAllMags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_UnhighlightAllMags, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_MagCheckOverview_C_UnhighlightAllMags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_UnhighlightAllMags, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_MagCheckOverview_C_UnhighlightAllMags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_UnhighlightAllMags, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'W_MagCheckOverview_C_UnhighlightAllMags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_UnhighlightAllMags, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_MagCheckOverview_C_UnhighlightAllMags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_UnhighlightAllMags, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_MagCheckOverview_C_UnhighlightAllMags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_MagCheckOverview.W_MagCheckOverview_C.IndexToMagStatusWidget
// 0x0018 (0x0018 - 0x0000)
struct W_MagCheckOverview_C_IndexToMagStatusWidget final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MagCheck_MagStatus_C*                Return_Value;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MagCheckOverview_C_IndexToMagStatusWidget) == 0x000008, "Wrong alignment on W_MagCheckOverview_C_IndexToMagStatusWidget");
static_assert(sizeof(W_MagCheckOverview_C_IndexToMagStatusWidget) == 0x000018, "Wrong size on W_MagCheckOverview_C_IndexToMagStatusWidget");
static_assert(offsetof(W_MagCheckOverview_C_IndexToMagStatusWidget, Param_Index) == 0x000000, "Member 'W_MagCheckOverview_C_IndexToMagStatusWidget::Param_Index' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_IndexToMagStatusWidget, Return_Value) == 0x000008, "Member 'W_MagCheckOverview_C_IndexToMagStatusWidget::Return_Value' has a wrong offset!");
static_assert(offsetof(W_MagCheckOverview_C_IndexToMagStatusWidget, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'W_MagCheckOverview_C_IndexToMagStatusWidget::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

