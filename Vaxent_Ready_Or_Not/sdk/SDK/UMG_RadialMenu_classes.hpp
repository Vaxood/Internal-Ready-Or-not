#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_RadialMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EJoystickTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_RadialMenu.UMG_RadialMenu_C
// 0x0160 (0x03C0 - 0x0260)
class UUMG_RadialMenu_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 RadialBackground;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RadiusDebug;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RootOverlay;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Segments;                                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3C63[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialBase;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IndexRaw;                                          // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_UMG_RadialMenu_C;                            // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynaMat;                                           // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    Children;                                          // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          AllowResizing;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C64[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ItemOffsetRadius;                                  // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SelectionChanged;                                  // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class APlayerController*                      InputController;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJoystickTypes                                JoystickToUse;                                     // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C65[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MouseDeadzone;                                     // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInDeadzone;                                       // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C66[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             EnteredDeadzone;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ExitedDeadzone;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              CurrentInput;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JoystickDeadzone;                                  // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DefaultToMouseIfNoJoystick;                        // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C67[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultPlayerIndex;                                // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          UseDeadzoneEvents;                                 // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C68[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SelectionChangedSound;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoCenterMouse;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoRotateForUp;                                   // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseCustomInput;                                   // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C69[0x1];                                     // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CustomInput;                                       // 0x0324(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCustomTexture;                                  // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6A[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               RadialTexture;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCustomColors;                                   // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6B[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InnterRingColor;                                   // 0x033C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OuterRingColor;                                    // 0x034C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RingMainColor;                                     // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnhighlightColor;                                  // 0x036C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseSelectionInWidget;                             // 0x037C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3C6C[0x3];                                     // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CursorAngle;                                       // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6D[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               RadialMaterial;                                    // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RadialSize;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SelectionSubmitted;                                // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bUseClickSubmit;                                   // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6E[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CenterCoordinates;                                 // 0x03AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseCenterScreen;                                  // 0x03B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6F[0x3];                                     // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OuterRadius;                                       // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SelectionChanged__DelegateSignature(int32 NewSelection, int32 OldSelection);
	void EnteredDeadzone__DelegateSignature();
	void ExitedDeadzone__DelegateSignature();
	void SelectionSubmitted__DelegateSignature(int32 SelectionIndex);
	void ExecuteUbergraph_UMG_RadialMenu(int32 EntryPoint, int32 K2Node_CustomEvent_Segments, float CallFunc_GetSectionDegreeSize_ReturnValue, bool K2Node_CustomEvent_InDeadzone, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FVector2D& K2Node_CustomEvent_Direction, bool CallFunc_NotEqual_BoolBool_ReturnValue, const struct FVector2D& CallFunc_FixInputRotation_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, const struct FVector2D& CallFunc_Normal2D_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_DegAtan2_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue, bool K2Node_Event_IsDesignTime, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_Vector2DVector2D_ReturnValue);
	void ClearSelection();
	void PreConstruct(bool IsDesignTime);
	void UpdateMaterials();
	void InDeadZone(bool Param_InDeadZone);
	void UpdateSegments(int32 Param_Segments);
	void Construct();
	void SetInputDirection(const struct FVector2D& Direction);
	float GetSectionDegreeSize(float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);
	void UpdateDirectionWithMouseCursor(bool Temp_bool_Variable, const struct FVector2D& Temp_struct_Variable, const struct FVector2D& CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue, const struct FVector2D& CallFunc_GetViewportSize_ReturnValue_1, float CallFunc_Viewport__GetMousePosition_PosX, float CallFunc_Viewport__GetMousePosition_PosY, bool CallFunc_Viewport__GetMousePosition_ReturnValue, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, const struct FVector2D& K2Node_Select_Default, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue_1, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const struct FVector2D& CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_BreakVector2D_X_1, float CallFunc_BreakVector2D_Y_1, const struct FVector2D& CallFunc_Normal2D_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, float CallFunc_VSize2D_ReturnValue, const struct FVector2D& CallFunc_GetMousePositionOnViewport_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);
	void AddChildToRadialMenu(class UUserWidget* Content, bool* Success, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UOverlaySlot* CallFunc_AddChildToOverlay_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void GetSelectedWidget(class UUserWidget** Output, class UUserWidget* CallFunc_Array_Get_Item);
	void ClearChildren(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UUserWidget* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void UpdateChildPosition(int32 Param_Index, const struct FVector& Out_dir, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_GetSectionDegreeSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue, float CallFunc_GetSectionDegreeSize_ReturnValue_1, const struct FVector& CallFunc_Conv_Vector2DToVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue_1, class UUserWidget* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);
	void UpdateAllChildrenPositions(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void SetIndex(int32 Param_Index, bool Force, int32 NewIndex, int32 Temp_int_Array_Index_Variable, int32 CallFunc_GetCurrentIndex_Index, bool CallFunc_GetCurrentIndex_Valid, int32 Temp_int_Loop_Counter_Variable, class UUserWidget* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class IIRadialSlot_C> K2Node_DynamicCast_AsIRadial_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class UUserWidget* CallFunc_GetSelectedWidget_Output, TScriptInterface<class IIRadialSlot_C> K2Node_DynamicCast_AsIRadial_Slot_1, bool K2Node_DynamicCast_bSuccess_1, class UUserWidget* CallFunc_GetSelectedWidget_Output_1, TScriptInterface<class IIRadialSlot_C> K2Node_DynamicCast_AsIRadial_Slot_2, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	void GetRadialMaterial(class UMaterialInstanceDynamic** Param_RadialMaterial, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue);
	void GetChild(int32 Param_Index, class UUserWidget** Output, bool* Success, bool CallFunc_Array_IsValidIndex_ReturnValue, class UUserWidget* CallFunc_Array_Get_Item);
	void GetCurrentIndex(int32* Param_Index, bool* Valid, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void UpdateDirectionWithJoystick(TScriptInterface<class IIRadialInput_C> K2Node_DynamicCast_AsIRadial_Input, bool K2Node_DynamicCast_bSuccess, const struct FVector2D& CallFunc_GetJoystickDirection_StickInput, float CallFunc_VSize2D_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);
	void RegisterPlayerInput(class APlayerController* Controller, bool* Success, TScriptInterface<class IIRadialInput_C> K2Node_DynamicCast_AsIRadial_Input, bool K2Node_DynamicCast_bSuccess);
	void UpdateInput(float CallFunc_VSize2D_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, float CallFunc_VSize2D_ReturnValue_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1);
	void AutoRegisterToInput(bool Temp_bool_Variable, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, class APlayerController* K2Node_Select_Default, bool CallFunc_RegisterPlayerInput_Success);
	void FixMainRotation(float CallFunc_GetSectionDegreeSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);
	struct FVector2D FixInputRotation(const struct FVector2D& Input, const struct FVector& CallFunc_Conv_Vector2DToVector_ReturnValue, float CallFunc_GetSectionDegreeSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue);
	class FText DebugIndex(const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void RemoveChildWidgetFromRadialMenu(class UUserWidget*& ItemToFind, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void RemoveChildIndexFromRadialMenu(int32 IndexToRemove, bool CallFunc_Array_IsValidIndex_ReturnValue, class UUserWidget* CallFunc_Array_Get_Item);
	void UpdateDirectionWithCustomInput();
	void SetCustomInput(const struct FVector2D& Param_CustomInput);
	void GetCustomInput(struct FVector2D* Input, bool* Valid, float CallFunc_VSize2D_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void UpdateMaterialVisuals();
	void UpdateMaterialColors(const struct FLinearColor& CursorColor, const struct FLinearColor& HighlightColor, const struct FLinearColor& TintColor);
	void SetCenterCoordinates(const struct FVector2D& Param_CenterCoordinates);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_RadialMenu_C">();
	}
	static class UUMG_RadialMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_RadialMenu_C>();
	}
};
static_assert(alignof(UUMG_RadialMenu_C) == 0x000008, "Wrong alignment on UUMG_RadialMenu_C");
static_assert(sizeof(UUMG_RadialMenu_C) == 0x0003C0, "Wrong size on UUMG_RadialMenu_C");
static_assert(offsetof(UUMG_RadialMenu_C, UberGraphFrame) == 0x000260, "Member 'UUMG_RadialMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RadialBackground) == 0x000268, "Member 'UUMG_RadialMenu_C::RadialBackground' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RadiusDebug) == 0x000270, "Member 'UUMG_RadialMenu_C::RadiusDebug' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RootOverlay) == 0x000278, "Member 'UUMG_RadialMenu_C::RootOverlay' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, Segments) == 0x000280, "Member 'UUMG_RadialMenu_C::Segments' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, MaterialBase) == 0x000288, "Member 'UUMG_RadialMenu_C::MaterialBase' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, IndexRaw) == 0x000290, "Member 'UUMG_RadialMenu_C::IndexRaw' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, Index_UMG_RadialMenu_C) == 0x000294, "Member 'UUMG_RadialMenu_C::Index_UMG_RadialMenu_C' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, DynaMat) == 0x000298, "Member 'UUMG_RadialMenu_C::DynaMat' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, Children) == 0x0002A0, "Member 'UUMG_RadialMenu_C::Children' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, AllowResizing) == 0x0002B0, "Member 'UUMG_RadialMenu_C::AllowResizing' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, ItemOffsetRadius) == 0x0002B4, "Member 'UUMG_RadialMenu_C::ItemOffsetRadius' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, SelectionChanged) == 0x0002B8, "Member 'UUMG_RadialMenu_C::SelectionChanged' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, InputController) == 0x0002C8, "Member 'UUMG_RadialMenu_C::InputController' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, JoystickToUse) == 0x0002D0, "Member 'UUMG_RadialMenu_C::JoystickToUse' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, MouseDeadzone) == 0x0002D4, "Member 'UUMG_RadialMenu_C::MouseDeadzone' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, bInDeadzone) == 0x0002D8, "Member 'UUMG_RadialMenu_C::bInDeadzone' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, EnteredDeadzone) == 0x0002E0, "Member 'UUMG_RadialMenu_C::EnteredDeadzone' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, ExitedDeadzone) == 0x0002F0, "Member 'UUMG_RadialMenu_C::ExitedDeadzone' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, CurrentInput) == 0x000300, "Member 'UUMG_RadialMenu_C::CurrentInput' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, JoystickDeadzone) == 0x000308, "Member 'UUMG_RadialMenu_C::JoystickDeadzone' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, DefaultToMouseIfNoJoystick) == 0x00030C, "Member 'UUMG_RadialMenu_C::DefaultToMouseIfNoJoystick' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, DefaultPlayerIndex) == 0x000310, "Member 'UUMG_RadialMenu_C::DefaultPlayerIndex' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, UseDeadzoneEvents) == 0x000314, "Member 'UUMG_RadialMenu_C::UseDeadzoneEvents' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, SelectionChangedSound) == 0x000318, "Member 'UUMG_RadialMenu_C::SelectionChangedSound' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, AutoCenterMouse) == 0x000320, "Member 'UUMG_RadialMenu_C::AutoCenterMouse' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, AutoRotateForUp) == 0x000321, "Member 'UUMG_RadialMenu_C::AutoRotateForUp' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, bUseCustomInput) == 0x000322, "Member 'UUMG_RadialMenu_C::bUseCustomInput' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, CustomInput) == 0x000324, "Member 'UUMG_RadialMenu_C::CustomInput' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, UseCustomTexture) == 0x00032C, "Member 'UUMG_RadialMenu_C::UseCustomTexture' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RadialTexture) == 0x000330, "Member 'UUMG_RadialMenu_C::RadialTexture' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, UseCustomColors) == 0x000338, "Member 'UUMG_RadialMenu_C::UseCustomColors' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, InnterRingColor) == 0x00033C, "Member 'UUMG_RadialMenu_C::InnterRingColor' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, OuterRingColor) == 0x00034C, "Member 'UUMG_RadialMenu_C::OuterRingColor' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RingMainColor) == 0x00035C, "Member 'UUMG_RadialMenu_C::RingMainColor' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, UnhighlightColor) == 0x00036C, "Member 'UUMG_RadialMenu_C::UnhighlightColor' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, bUseSelectionInWidget) == 0x00037C, "Member 'UUMG_RadialMenu_C::bUseSelectionInWidget' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, CursorAngle) == 0x000380, "Member 'UUMG_RadialMenu_C::CursorAngle' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RadialMaterial) == 0x000388, "Member 'UUMG_RadialMenu_C::RadialMaterial' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, RadialSize) == 0x000390, "Member 'UUMG_RadialMenu_C::RadialSize' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, SelectionSubmitted) == 0x000398, "Member 'UUMG_RadialMenu_C::SelectionSubmitted' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, bUseClickSubmit) == 0x0003A8, "Member 'UUMG_RadialMenu_C::bUseClickSubmit' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, CenterCoordinates) == 0x0003AC, "Member 'UUMG_RadialMenu_C::CenterCoordinates' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, bUseCenterScreen) == 0x0003B4, "Member 'UUMG_RadialMenu_C::bUseCenterScreen' has a wrong offset!");
static_assert(offsetof(UUMG_RadialMenu_C, OuterRadius) == 0x0003B8, "Member 'UUMG_RadialMenu_C::OuterRadius' has a wrong offset!");

}

