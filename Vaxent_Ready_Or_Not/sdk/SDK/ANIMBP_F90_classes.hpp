#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_F90

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_F90.ANIMBP_F90_C
// 0x0940 (0x0C10 - 0x02D0)
class UANIMBP_F90_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0308(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0350(0x0158)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x04A8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0548(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x05C8(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0648(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0668(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0728(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0770(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0798(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x07C0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x08C8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x09D0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0AD8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0AF8(0x0108)()
	bool                                          bIsSemi;                                           // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5C[0x3];                                     // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Mag01Alpha;                                        // 0x0C04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScopeAdjustAlpha;                                  // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_F90(int32 EntryPoint, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, int32 CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_Event_DeltaTimeX, class AActor* CallFunc_GetOwningActor_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess, class USkeletalMeshComponent* CallFunc_GetItemMesh_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_F90_AnimGraphNode_BlendListByBool_267A8C534759FA1DA570D4929678F74A();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_F90_AnimGraphNode_ModifyBone_DEFE07A94D3718D90D14DC9F90563349();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_F90_C">();
	}
	static class UANIMBP_F90_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_F90_C>();
	}
};
static_assert(alignof(UANIMBP_F90_C) == 0x000010, "Wrong alignment on UANIMBP_F90_C");
static_assert(sizeof(UANIMBP_F90_C) == 0x000C10, "Wrong size on UANIMBP_F90_C");
static_assert(offsetof(UANIMBP_F90_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_F90_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_F90_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_Slot_1) == 0x000308, "Member 'UANIMBP_F90_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_SaveCachedPose) == 0x000350, "Member 'UANIMBP_F90_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_BlendListByBool) == 0x0004A8, "Member 'UANIMBP_F90_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_SequencePlayer_1) == 0x000548, "Member 'UANIMBP_F90_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_SequencePlayer) == 0x0005C8, "Member 'UANIMBP_F90_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_LocalToComponentSpace) == 0x000648, "Member 'UANIMBP_F90_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_LayeredBoneBlend) == 0x000668, "Member 'UANIMBP_F90_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_Slot) == 0x000728, "Member 'UANIMBP_F90_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_UseCachedPose_1) == 0x000770, "Member 'UANIMBP_F90_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_UseCachedPose) == 0x000798, "Member 'UANIMBP_F90_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_ModifyBone_3) == 0x0007C0, "Member 'UANIMBP_F90_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_ModifyBone_2) == 0x0008C8, "Member 'UANIMBP_F90_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_ModifyBone_1) == 0x0009D0, "Member 'UANIMBP_F90_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_ComponentToLocalSpace) == 0x000AD8, "Member 'UANIMBP_F90_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, AnimGraphNode_ModifyBone) == 0x000AF8, "Member 'UANIMBP_F90_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, bIsSemi) == 0x000C00, "Member 'UANIMBP_F90_C::bIsSemi' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, Mag01Alpha) == 0x000C04, "Member 'UANIMBP_F90_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_F90_C, ScopeAdjustAlpha) == 0x000C08, "Member 'UANIMBP_F90_C::ScopeAdjustAlpha' has a wrong offset!");

}

