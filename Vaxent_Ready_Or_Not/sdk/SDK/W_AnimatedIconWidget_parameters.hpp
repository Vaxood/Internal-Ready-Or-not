#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AnimatedIconWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_AnimatedIconWidget.W_AnimatedIconWidget_C.ExecuteUbergraph_W_AnimatedIconWidget
// 0x0068 (0x0068 - 0x0000)
struct W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3992[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3993[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bValid;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3994[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3995[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
};
static_assert(alignof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget) == 0x000008, "Wrong alignment on W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget");
static_assert(sizeof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget) == 0x000068, "Wrong size on W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, EntryPoint) == 0x000000, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, Temp_bool_Variable) == 0x000004, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, Temp_struct_Variable) == 0x000008, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, Temp_bool_Variable_1) == 0x000018, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, Temp_float_Variable) == 0x00001C, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, Temp_float_Variable_1) == 0x000020, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, K2Node_Event_bValid) == 0x000024, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::K2Node_Event_bValid' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, K2Node_Select_Default) == 0x000028, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, K2Node_Select_Default_1) == 0x00002C, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'W_AnimatedIconWidget_C_ExecuteUbergraph_W_AnimatedIconWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_AnimatedIconWidget.W_AnimatedIconWidget_C.SetInteractState
// 0x0001 (0x0001 - 0x0000)
struct W_AnimatedIconWidget_C_SetInteractState final 
{
public:
	bool                                          bValid;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_AnimatedIconWidget_C_SetInteractState) == 0x000001, "Wrong alignment on W_AnimatedIconWidget_C_SetInteractState");
static_assert(sizeof(W_AnimatedIconWidget_C_SetInteractState) == 0x000001, "Wrong size on W_AnimatedIconWidget_C_SetInteractState");
static_assert(offsetof(W_AnimatedIconWidget_C_SetInteractState, bValid) == 0x000000, "Member 'W_AnimatedIconWidget_C_SetInteractState::bValid' has a wrong offset!");

}

