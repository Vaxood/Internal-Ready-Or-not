#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MunitionsOverviewSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C
// 0x0140 (0x0440 - 0x0300)
class UW_MunitionsOverviewSlot_C final  : public UMunitionsSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundGradient;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLine;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            MunitionsButton;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Separator;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sidebar;                                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Txt_SlotCount;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_GamepadDeco;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MunitionsOverviewSlot_Element_C*     W_MunitionsSlotElement;                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            NormalGrey;                                        // 0x0350(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            HoveredWhite;                                      // 0x0378(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            SelectedRed;                                       // 0x03A0(0x0028)(Edit, BlueprintVisible)
	bool                                          bHovered;                                          // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPressed;                                          // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DB[0x6];                                     // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         ButtonStyle;                                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonButtonStyle>         GamepadButtonStyle;                                // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bUseGamepad;                                       // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DC[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            Parent_Button;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnClicked__DelegateSignature();
	void OnHovered__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void OnPressed__DelegateSignature();
	void OnReleased__DelegateSignature();
	void ExecuteUbergraph_W_MunitionsOverviewSlot(int32 EntryPoint, const struct FSlateColor& K2Node_MakeStruct_SlateColor, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UW_MunitionsOverviewSlot_Element_C* CallFunc_Create_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue_1, int32 Temp_int_Variable, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, int32 CallFunc_Add_IntInt_ReturnValue, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, bool K2Node_Event_bShouldCreateSeparator, const struct FMargin& K2Node_MakeStruct_Margin, class UTexture2D* K2Node_Event_Icon, int32 K2Node_Event_Amount, bool K2Node_Event_bIsAmmoElement, class FText K2Node_Event_AmmoType, class UImage* CallFunc_SpawnObject_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue_2, class UHorizontalBoxSlot* K2Node_DynamicCast_AsHorizontal_Box_Slot, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FAmmoTypeData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, int32 K2Node_Event_CurrentSlots, int32 K2Node_Event_MaxSlots, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class UW_Button_C* K2Node_ComponentBoundEvent_Button, class FText CallFunc_Format_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, ECommonInputType K2Node_CustomEvent_bNewInputType, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_4_Released__DelegateSignature();
	void BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature();
	void BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_2_Unhovered__DelegateSignature();
	void BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void UpdateSlotText(int32 CurrentSlots, int32 MaxSlots);
	void CreateElement(class UTexture2D* Icon, int32 Amount, bool bIsAmmoElement, class FText& AmmoType);
	void CreateSeparator(bool bShouldCreateSeparator);
	void Construct();
	struct FSlateColor GetNormalColorByState(bool Temp_bool_Variable, bool Temp_bool_Variable_1, const struct FSlateColor& K2Node_Select_Default, const struct FSlateColor& K2Node_Select_Default_1);
	void SetVisualState(bool Hovered, bool Pressed, bool Temp_bool_Variable, const struct FVector2D& Temp_struct_Variable, const struct FVector2D& Temp_struct_Variable_1, const struct FSlateColor& CallFunc_GetNormalColorByState_ReturnValue, const struct FVector2D& K2Node_Select_Default);
	void UpdateStyle(bool Param_bUseGamepad, bool Temp_bool_Variable, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default, TSubclassOf<class UCommonButtonStyle> K2Node_Select_Default_1);
	void BindToButton(class UW_Button_C* ParentButton, bool BindClicks, TDelegate<void(class UW_Button_C* Button)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_Button_C* Button)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_Button_C* Button)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_5, TDelegate<void(class UW_Button_C* Button)> K2Node_CreateDelegate_OutputDelegate_6);
	void BindSelectedState(class UW_Button_C* ParentButton, bool CallFunc_GetSelected_ReturnValue);
	void BindHovered(class UW_Button_C* ParentButton);
	void BindPressedState(bool CallFunc_IsPressed_ReturnValue);
	void BindUnhovered();
	void BindClick(class UW_Button_C* ParentButton);
	void BindDoubleClick(class UW_Button_C* ParentButton);
	void UnbindFromButton(bool CallFunc_IsValid_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MunitionsOverviewSlot_C">();
	}
	static class UW_MunitionsOverviewSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MunitionsOverviewSlot_C>();
	}
};
static_assert(alignof(UW_MunitionsOverviewSlot_C) == 0x000008, "Wrong alignment on UW_MunitionsOverviewSlot_C");
static_assert(sizeof(UW_MunitionsOverviewSlot_C) == 0x000440, "Wrong size on UW_MunitionsOverviewSlot_C");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, UberGraphFrame) == 0x000300, "Member 'UW_MunitionsOverviewSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, BackgroundGradient) == 0x000308, "Member 'UW_MunitionsOverviewSlot_C::BackgroundGradient' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, BottomLine) == 0x000310, "Member 'UW_MunitionsOverviewSlot_C::BottomLine' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, MunitionsButton) == 0x000318, "Member 'UW_MunitionsOverviewSlot_C::MunitionsButton' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, Separator) == 0x000320, "Member 'UW_MunitionsOverviewSlot_C::Separator' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, Sidebar) == 0x000328, "Member 'UW_MunitionsOverviewSlot_C::Sidebar' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, TopLine) == 0x000330, "Member 'UW_MunitionsOverviewSlot_C::TopLine' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, Txt_SlotCount) == 0x000338, "Member 'UW_MunitionsOverviewSlot_C::Txt_SlotCount' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, VB_GamepadDeco) == 0x000340, "Member 'UW_MunitionsOverviewSlot_C::VB_GamepadDeco' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, W_MunitionsSlotElement) == 0x000348, "Member 'UW_MunitionsOverviewSlot_C::W_MunitionsSlotElement' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, NormalGrey) == 0x000350, "Member 'UW_MunitionsOverviewSlot_C::NormalGrey' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, HoveredWhite) == 0x000378, "Member 'UW_MunitionsOverviewSlot_C::HoveredWhite' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, SelectedRed) == 0x0003A0, "Member 'UW_MunitionsOverviewSlot_C::SelectedRed' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, bHovered) == 0x0003C8, "Member 'UW_MunitionsOverviewSlot_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, bPressed) == 0x0003C9, "Member 'UW_MunitionsOverviewSlot_C::bPressed' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, ButtonStyle) == 0x0003D0, "Member 'UW_MunitionsOverviewSlot_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, GamepadButtonStyle) == 0x0003D8, "Member 'UW_MunitionsOverviewSlot_C::GamepadButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, bUseGamepad) == 0x0003E0, "Member 'UW_MunitionsOverviewSlot_C::bUseGamepad' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, Parent_Button) == 0x0003E8, "Member 'UW_MunitionsOverviewSlot_C::Parent_Button' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, OnClicked) == 0x0003F0, "Member 'UW_MunitionsOverviewSlot_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, OnHovered) == 0x000400, "Member 'UW_MunitionsOverviewSlot_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, OnUnhovered) == 0x000410, "Member 'UW_MunitionsOverviewSlot_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, OnPressed) == 0x000420, "Member 'UW_MunitionsOverviewSlot_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UW_MunitionsOverviewSlot_C, OnReleased) == 0x000430, "Member 'UW_MunitionsOverviewSlot_C::OnReleased' has a wrong offset!");

}

