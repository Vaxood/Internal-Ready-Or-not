#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_VKS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_VKS.ANIMBP_VKS_C
// 0x0760 (0x0A30 - 0x02D0)
class UANIMBP_VKS_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0308(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0328(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x03E8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0430(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0458(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0480(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0588(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x05A8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x05F0(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0690(0x0158)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x07E8(0x0018)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0800(0x0018)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0818(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0920(0x0108)()
	float                                         Mag01Alpha;                                        // 0x0A28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScopeAdjustAlpha;                                  // 0x0A2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_VKS(int32 EntryPoint, class AActor* CallFunc_GetOwningActor_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_Event_DeltaTimeX);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_VKS_AnimGraphNode_BlendListByBool_28F8CEA94DB40D8573439F813FDB66AE();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_VKS_C">();
	}
	static class UANIMBP_VKS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_VKS_C>();
	}
};
static_assert(alignof(UANIMBP_VKS_C) == 0x000010, "Wrong alignment on UANIMBP_VKS_C");
static_assert(sizeof(UANIMBP_VKS_C) == 0x000A30, "Wrong size on UANIMBP_VKS_C");
static_assert(offsetof(UANIMBP_VKS_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_VKS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_VKS_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LocalToComponentSpace) == 0x000308, "Member 'UANIMBP_VKS_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LayeredBoneBlend) == 0x000328, "Member 'UANIMBP_VKS_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_Slot_1) == 0x0003E8, "Member 'UANIMBP_VKS_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_UseCachedPose_1) == 0x000430, "Member 'UANIMBP_VKS_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_UseCachedPose) == 0x000458, "Member 'UANIMBP_VKS_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ModifyBone_2) == 0x000480, "Member 'UANIMBP_VKS_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ComponentToLocalSpace) == 0x000588, "Member 'UANIMBP_VKS_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_Slot) == 0x0005A8, "Member 'UANIMBP_VKS_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_BlendListByBool) == 0x0005F0, "Member 'UANIMBP_VKS_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_SaveCachedPose) == 0x000690, "Member 'UANIMBP_VKS_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LocalRefPose_1) == 0x0007E8, "Member 'UANIMBP_VKS_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LocalRefPose) == 0x000800, "Member 'UANIMBP_VKS_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ModifyBone_1) == 0x000818, "Member 'UANIMBP_VKS_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ModifyBone) == 0x000920, "Member 'UANIMBP_VKS_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, Mag01Alpha) == 0x000A28, "Member 'UANIMBP_VKS_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, ScopeAdjustAlpha) == 0x000A2C, "Member 'UANIMBP_VKS_C::ScopeAdjustAlpha' has a wrong offset!");

}

