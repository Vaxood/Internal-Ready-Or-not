#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ObjectPooler

#include "Basic.hpp"

#include "ObjectPooler_structs.hpp"


namespace SDK::Params
{

// Function ObjectPooler.AsyncRetrieveActorFromPool.AsyncRetrieveActorFromPool
// 0x0018 (0x0018 - 0x0000)
struct AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool final 
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObjectPoolBase*                        InObjectPool;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAsyncRetrieveActorFromPool*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool) == 0x000008, "Wrong alignment on AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool");
static_assert(sizeof(AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool) == 0x000018, "Wrong size on AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool");
static_assert(offsetof(AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool, WorldContextObject) == 0x000000, "Member 'AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool, InObjectPool) == 0x000008, "Member 'AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool::InObjectPool' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool, ReturnValue) == 0x000010, "Member 'AsyncRetrieveActorFromPool_AsyncRetrieveActorFromPool::ReturnValue' has a wrong offset!");

// DelegateFunction ObjectPooler.AsyncRetrieveActorFromPool.OnAsyncHandleRetrieveActor__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature final 
{
public:
	class UObjectPoolBase*                        Param_ObjectPool;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APooledActor*                           Param_RetrievedActor;                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B1[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature) == 0x000008, "Wrong alignment on AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature");
static_assert(sizeof(AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature) == 0x000018, "Wrong size on AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature");
static_assert(offsetof(AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature, Param_ObjectPool) == 0x000000, "Member 'AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature::Param_ObjectPool' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature, Param_RetrievedActor) == 0x000008, "Member 'AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature::Param_RetrievedActor' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature, bSuccess) == 0x000010, "Member 'AsyncRetrieveActorFromPool_OnAsyncHandleRetrieveActor__DelegateSignature::bSuccess' has a wrong offset!");

// Function ObjectPooler.AsyncRetrieveActorFromPool_Comp.AsyncRetrieveActorFromPool_Component
// 0x0018 (0x0018 - 0x0000)
struct AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component final 
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObjectPoolComponent*                   InObjectPoolComponent;                             // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAsyncRetrieveActorFromPool_Comp*       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component) == 0x000008, "Wrong alignment on AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component");
static_assert(sizeof(AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component) == 0x000018, "Wrong size on AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component");
static_assert(offsetof(AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component, WorldContextObject) == 0x000000, "Member 'AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component, InObjectPoolComponent) == 0x000008, "Member 'AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component::InObjectPoolComponent' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component, ReturnValue) == 0x000010, "Member 'AsyncRetrieveActorFromPool_Comp_AsyncRetrieveActorFromPool_Component::ReturnValue' has a wrong offset!");

// DelegateFunction ObjectPooler.AsyncRetrieveActorFromPool_Comp.OnAsyncHandleRetrieveActor__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature final 
{
public:
	class UObjectPoolComponent*                   ObjectPool;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APooledActor*                           Param_RetrievedActor;                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B2[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature) == 0x000008, "Wrong alignment on AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature");
static_assert(sizeof(AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature) == 0x000018, "Wrong size on AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature");
static_assert(offsetof(AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature, ObjectPool) == 0x000000, "Member 'AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature::ObjectPool' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature, Param_RetrievedActor) == 0x000008, "Member 'AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature::Param_RetrievedActor' has a wrong offset!");
static_assert(offsetof(AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature, bSuccess) == 0x000010, "Member 'AsyncRetrieveActorFromPool_Comp_OnAsyncHandleRetrieveActor__DelegateSignature::bSuccess' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.AddActorToPool
// 0x0008 (0x0008 - 0x0000)
struct ObjectPoolBase_AddActorToPool final 
{
public:
	class APooledActor*                           NewPooledActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_AddActorToPool) == 0x000008, "Wrong alignment on ObjectPoolBase_AddActorToPool");
static_assert(sizeof(ObjectPoolBase_AddActorToPool) == 0x000008, "Wrong size on ObjectPoolBase_AddActorToPool");
static_assert(offsetof(ObjectPoolBase_AddActorToPool, NewPooledActor) == 0x000000, "Member 'ObjectPoolBase_AddActorToPool::NewPooledActor' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.GetActorFromPool
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolBase_GetActorFromPool final 
{
public:
	EObjectPoolRetrieveActorResult                Results;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APooledActor*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_GetActorFromPool) == 0x000008, "Wrong alignment on ObjectPoolBase_GetActorFromPool");
static_assert(sizeof(ObjectPoolBase_GetActorFromPool) == 0x000010, "Wrong size on ObjectPoolBase_GetActorFromPool");
static_assert(offsetof(ObjectPoolBase_GetActorFromPool, Results) == 0x000000, "Member 'ObjectPoolBase_GetActorFromPool::Results' has a wrong offset!");
static_assert(offsetof(ObjectPoolBase_GetActorFromPool, ReturnValue) == 0x000008, "Member 'ObjectPoolBase_GetActorFromPool::ReturnValue' has a wrong offset!");

// DelegateFunction ObjectPooler.ObjectPoolBase.OnActorRetrievedFromPool__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature final 
{
public:
	class UObjectPoolBase*                        PoolOwner;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APooledActor*                           Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature) == 0x000008, "Wrong alignment on ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature");
static_assert(sizeof(ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature) == 0x000010, "Wrong size on ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature");
static_assert(offsetof(ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature, PoolOwner) == 0x000000, "Member 'ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature::PoolOwner' has a wrong offset!");
static_assert(offsetof(ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature, Actor) == 0x000008, "Member 'ObjectPoolBase_OnActorRetrievedFromPool__DelegateSignature::Actor' has a wrong offset!");

// DelegateFunction ObjectPooler.ObjectPoolBase.OnActorReturnedFromPool__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature final 
{
public:
	class UObjectPoolBase*                        PoolOwner;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APooledActor*                           Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature) == 0x000008, "Wrong alignment on ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature");
static_assert(sizeof(ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature) == 0x000010, "Wrong size on ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature");
static_assert(offsetof(ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature, PoolOwner) == 0x000000, "Member 'ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature::PoolOwner' has a wrong offset!");
static_assert(offsetof(ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature, Actor) == 0x000008, "Member 'ObjectPoolBase_OnActorReturnedFromPool__DelegateSignature::Actor' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.AreAllActorsInUse
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolBase_AreAllActorsInUse final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_AreAllActorsInUse) == 0x000001, "Wrong alignment on ObjectPoolBase_AreAllActorsInUse");
static_assert(sizeof(ObjectPoolBase_AreAllActorsInUse) == 0x000001, "Wrong size on ObjectPoolBase_AreAllActorsInUse");
static_assert(offsetof(ObjectPoolBase_AreAllActorsInUse, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_AreAllActorsInUse::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.GetPooledActors
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolBase_GetPooledActors final 
{
public:
	TArray<class APooledActor*>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_GetPooledActors) == 0x000008, "Wrong alignment on ObjectPoolBase_GetPooledActors");
static_assert(sizeof(ObjectPoolBase_GetPooledActors) == 0x000010, "Wrong size on ObjectPoolBase_GetPooledActors");
static_assert(offsetof(ObjectPoolBase_GetPooledActors, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_GetPooledActors::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.GetPoolName
// 0x0008 (0x0008 - 0x0000)
struct ObjectPoolBase_GetPoolName final 
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_GetPoolName) == 0x000004, "Wrong alignment on ObjectPoolBase_GetPoolName");
static_assert(sizeof(ObjectPoolBase_GetPoolName) == 0x000008, "Wrong size on ObjectPoolBase_GetPoolName");
static_assert(offsetof(ObjectPoolBase_GetPoolName, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_GetPoolName::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.GetPoolSize
// 0x0004 (0x0004 - 0x0000)
struct ObjectPoolBase_GetPoolSize final 
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_GetPoolSize) == 0x000004, "Wrong alignment on ObjectPoolBase_GetPoolSize");
static_assert(sizeof(ObjectPoolBase_GetPoolSize) == 0x000004, "Wrong size on ObjectPoolBase_GetPoolSize");
static_assert(offsetof(ObjectPoolBase_GetPoolSize, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_GetPoolSize::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.GetReuseSetting
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolBase_GetReuseSetting final 
{
public:
	EObjectPoolReuseSetting                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_GetReuseSetting) == 0x000001, "Wrong alignment on ObjectPoolBase_GetReuseSetting");
static_assert(sizeof(ObjectPoolBase_GetReuseSetting) == 0x000001, "Wrong size on ObjectPoolBase_GetReuseSetting");
static_assert(offsetof(ObjectPoolBase_GetReuseSetting, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_GetReuseSetting::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.IsPoolEmpty
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolBase_IsPoolEmpty final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_IsPoolEmpty) == 0x000001, "Wrong alignment on ObjectPoolBase_IsPoolEmpty");
static_assert(sizeof(ObjectPoolBase_IsPoolEmpty) == 0x000001, "Wrong size on ObjectPoolBase_IsPoolEmpty");
static_assert(offsetof(ObjectPoolBase_IsPoolEmpty, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_IsPoolEmpty::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolBase.IsWarmUpComplete
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolBase_IsWarmUpComplete final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolBase_IsWarmUpComplete) == 0x000001, "Wrong alignment on ObjectPoolBase_IsWarmUpComplete");
static_assert(sizeof(ObjectPoolBase_IsWarmUpComplete) == 0x000001, "Wrong size on ObjectPoolBase_IsWarmUpComplete");
static_assert(offsetof(ObjectPoolBase_IsWarmUpComplete, ReturnValue) == 0x000000, "Member 'ObjectPoolBase_IsWarmUpComplete::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.AddActorToPool
// 0x0008 (0x0008 - 0x0000)
struct ObjectPoolComponent_AddActorToPool final 
{
public:
	class APooledActor*                           NewPooledActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_AddActorToPool) == 0x000008, "Wrong alignment on ObjectPoolComponent_AddActorToPool");
static_assert(sizeof(ObjectPoolComponent_AddActorToPool) == 0x000008, "Wrong size on ObjectPoolComponent_AddActorToPool");
static_assert(offsetof(ObjectPoolComponent_AddActorToPool, NewPooledActor) == 0x000000, "Member 'ObjectPoolComponent_AddActorToPool::NewPooledActor' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.GetActorFromPool
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolComponent_GetActorFromPool final 
{
public:
	EObjectPoolRetrieveActorResult                Results;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APooledActor*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_GetActorFromPool) == 0x000008, "Wrong alignment on ObjectPoolComponent_GetActorFromPool");
static_assert(sizeof(ObjectPoolComponent_GetActorFromPool) == 0x000010, "Wrong size on ObjectPoolComponent_GetActorFromPool");
static_assert(offsetof(ObjectPoolComponent_GetActorFromPool, Results) == 0x000000, "Member 'ObjectPoolComponent_GetActorFromPool::Results' has a wrong offset!");
static_assert(offsetof(ObjectPoolComponent_GetActorFromPool, ReturnValue) == 0x000008, "Member 'ObjectPoolComponent_GetActorFromPool::ReturnValue' has a wrong offset!");

// DelegateFunction ObjectPooler.ObjectPoolComponent.OnActorRetrievedFromPool__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature final 
{
public:
	class UObjectPoolComponent*                   PoolOwner;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APooledActor*                           Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature) == 0x000008, "Wrong alignment on ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature");
static_assert(sizeof(ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature) == 0x000010, "Wrong size on ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature");
static_assert(offsetof(ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature, PoolOwner) == 0x000000, "Member 'ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature::PoolOwner' has a wrong offset!");
static_assert(offsetof(ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature, Actor) == 0x000008, "Member 'ObjectPoolComponent_OnActorRetrievedFromPool__DelegateSignature::Actor' has a wrong offset!");

// DelegateFunction ObjectPooler.ObjectPoolComponent.OnActorReturnedFromPool__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature final 
{
public:
	class UObjectPoolComponent*                   PoolOwner;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APooledActor*                           Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature) == 0x000008, "Wrong alignment on ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature");
static_assert(sizeof(ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature) == 0x000010, "Wrong size on ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature");
static_assert(offsetof(ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature, PoolOwner) == 0x000000, "Member 'ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature::PoolOwner' has a wrong offset!");
static_assert(offsetof(ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature, Actor) == 0x000008, "Member 'ObjectPoolComponent_OnActorReturnedFromPool__DelegateSignature::Actor' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.AreAllActorsInUse
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolComponent_AreAllActorsInUse final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_AreAllActorsInUse) == 0x000001, "Wrong alignment on ObjectPoolComponent_AreAllActorsInUse");
static_assert(sizeof(ObjectPoolComponent_AreAllActorsInUse) == 0x000001, "Wrong size on ObjectPoolComponent_AreAllActorsInUse");
static_assert(offsetof(ObjectPoolComponent_AreAllActorsInUse, ReturnValue) == 0x000000, "Member 'ObjectPoolComponent_AreAllActorsInUse::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.GetPoolName
// 0x0008 (0x0008 - 0x0000)
struct ObjectPoolComponent_GetPoolName final 
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_GetPoolName) == 0x000004, "Wrong alignment on ObjectPoolComponent_GetPoolName");
static_assert(sizeof(ObjectPoolComponent_GetPoolName) == 0x000008, "Wrong size on ObjectPoolComponent_GetPoolName");
static_assert(offsetof(ObjectPoolComponent_GetPoolName, ReturnValue) == 0x000000, "Member 'ObjectPoolComponent_GetPoolName::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.GetPoolSize
// 0x0004 (0x0004 - 0x0000)
struct ObjectPoolComponent_GetPoolSize final 
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_GetPoolSize) == 0x000004, "Wrong alignment on ObjectPoolComponent_GetPoolSize");
static_assert(sizeof(ObjectPoolComponent_GetPoolSize) == 0x000004, "Wrong size on ObjectPoolComponent_GetPoolSize");
static_assert(offsetof(ObjectPoolComponent_GetPoolSize, ReturnValue) == 0x000000, "Member 'ObjectPoolComponent_GetPoolSize::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.IsPoolEmpty
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolComponent_IsPoolEmpty final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_IsPoolEmpty) == 0x000001, "Wrong alignment on ObjectPoolComponent_IsPoolEmpty");
static_assert(sizeof(ObjectPoolComponent_IsPoolEmpty) == 0x000001, "Wrong size on ObjectPoolComponent_IsPoolEmpty");
static_assert(offsetof(ObjectPoolComponent_IsPoolEmpty, ReturnValue) == 0x000000, "Member 'ObjectPoolComponent_IsPoolEmpty::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolComponent.IsWarmUpComplete
// 0x0001 (0x0001 - 0x0000)
struct ObjectPoolComponent_IsWarmUpComplete final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolComponent_IsWarmUpComplete) == 0x000001, "Wrong alignment on ObjectPoolComponent_IsWarmUpComplete");
static_assert(sizeof(ObjectPoolComponent_IsWarmUpComplete) == 0x000001, "Wrong size on ObjectPoolComponent_IsWarmUpComplete");
static_assert(offsetof(ObjectPoolComponent_IsWarmUpComplete, ReturnValue) == 0x000000, "Member 'ObjectPoolComponent_IsWarmUpComplete::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.DoesObjectPoolExist
// 0x000C (0x000C - 0x0000)
struct ObjectPoolFunctionLibrary_DoesObjectPoolExist final 
{
public:
	class FName                                   PoolName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BF[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ObjectPoolFunctionLibrary_DoesObjectPoolExist) == 0x000004, "Wrong alignment on ObjectPoolFunctionLibrary_DoesObjectPoolExist");
static_assert(sizeof(ObjectPoolFunctionLibrary_DoesObjectPoolExist) == 0x00000C, "Wrong size on ObjectPoolFunctionLibrary_DoesObjectPoolExist");
static_assert(offsetof(ObjectPoolFunctionLibrary_DoesObjectPoolExist, PoolName) == 0x000000, "Member 'ObjectPoolFunctionLibrary_DoesObjectPoolExist::PoolName' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_DoesObjectPoolExist, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_DoesObjectPoolExist::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetActivePooledActorCount
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolFunctionLibrary_GetActivePooledActorCount final 
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C0[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetActivePooledActorCount) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetActivePooledActorCount");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetActivePooledActorCount) == 0x000010, "Wrong size on ObjectPoolFunctionLibrary_GetActivePooledActorCount");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetActivePooledActorCount, WorldContext) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetActivePooledActorCount::WorldContext' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetActivePooledActorCount, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetActivePooledActorCount::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetAllObjectPoolClassesFromManager
// 0x0018 (0x0018 - 0x0000)
struct ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager final 
{
public:
	class FName                                   ManagerName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UObjectPoolBase>>    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager) == 0x000018, "Wrong size on ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager, ManagerName) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager::ManagerName' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetAllObjectPoolClassesFromManager::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetAllObjectPools
// 0x0018 (0x0018 - 0x0000)
struct ObjectPoolFunctionLibrary_GetAllObjectPools final 
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObjectPoolBase*>                ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetAllObjectPools) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetAllObjectPools");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetAllObjectPools) == 0x000018, "Wrong size on ObjectPoolFunctionLibrary_GetAllObjectPools");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetAllObjectPools, WorldContext) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetAllObjectPools::WorldContext' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetAllObjectPools, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetAllObjectPools::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetNumOfObjectPoolsInWorld
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld final 
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C1[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld) == 0x000010, "Wrong size on ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld, WorldContext) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld::WorldContext' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetNumOfObjectPoolsInWorld::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetObjectPool
// 0x0018 (0x0018 - 0x0000)
struct ObjectPoolFunctionLibrary_GetObjectPool final 
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PoolName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObjectPoolBase*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetObjectPool) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetObjectPool");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetObjectPool) == 0x000018, "Wrong size on ObjectPoolFunctionLibrary_GetObjectPool");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetObjectPool, WorldContext) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetObjectPool::WorldContext' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetObjectPool, PoolName) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetObjectPool::PoolName' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetObjectPool, ReturnValue) == 0x000010, "Member 'ObjectPoolFunctionLibrary_GetObjectPool::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetPooledActorCount
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolFunctionLibrary_GetPooledActorCount final 
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C2[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetPooledActorCount) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetPooledActorCount");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetPooledActorCount) == 0x000010, "Wrong size on ObjectPoolFunctionLibrary_GetPooledActorCount");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetPooledActorCount, WorldContext) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetPooledActorCount::WorldContext' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetPooledActorCount, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetPooledActorCount::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.GetUnactivePooledActorCount
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolFunctionLibrary_GetUnactivePooledActorCount final 
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C3[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ObjectPoolFunctionLibrary_GetUnactivePooledActorCount) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_GetUnactivePooledActorCount");
static_assert(sizeof(ObjectPoolFunctionLibrary_GetUnactivePooledActorCount) == 0x000010, "Wrong size on ObjectPoolFunctionLibrary_GetUnactivePooledActorCount");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetUnactivePooledActorCount, WorldContext) == 0x000000, "Member 'ObjectPoolFunctionLibrary_GetUnactivePooledActorCount::WorldContext' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_GetUnactivePooledActorCount, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_GetUnactivePooledActorCount::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.IsActorInUse
// 0x0010 (0x0010 - 0x0000)
struct ObjectPoolFunctionLibrary_IsActorInUse final 
{
public:
	class APooledActor*                           InPooledActor;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C4[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ObjectPoolFunctionLibrary_IsActorInUse) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_IsActorInUse");
static_assert(sizeof(ObjectPoolFunctionLibrary_IsActorInUse) == 0x000010, "Wrong size on ObjectPoolFunctionLibrary_IsActorInUse");
static_assert(offsetof(ObjectPoolFunctionLibrary_IsActorInUse, InPooledActor) == 0x000000, "Member 'ObjectPoolFunctionLibrary_IsActorInUse::InPooledActor' has a wrong offset!");
static_assert(offsetof(ObjectPoolFunctionLibrary_IsActorInUse, ReturnValue) == 0x000008, "Member 'ObjectPoolFunctionLibrary_IsActorInUse::ReturnValue' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.MarkActorInUse
// 0x0008 (0x0008 - 0x0000)
struct ObjectPoolFunctionLibrary_MarkActorInUse final 
{
public:
	class APooledActor*                           InPooledActor;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolFunctionLibrary_MarkActorInUse) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_MarkActorInUse");
static_assert(sizeof(ObjectPoolFunctionLibrary_MarkActorInUse) == 0x000008, "Wrong size on ObjectPoolFunctionLibrary_MarkActorInUse");
static_assert(offsetof(ObjectPoolFunctionLibrary_MarkActorInUse, InPooledActor) == 0x000000, "Member 'ObjectPoolFunctionLibrary_MarkActorInUse::InPooledActor' has a wrong offset!");

// Function ObjectPooler.ObjectPoolFunctionLibrary.MarkActorNotInUse
// 0x0008 (0x0008 - 0x0000)
struct ObjectPoolFunctionLibrary_MarkActorNotInUse final 
{
public:
	class APooledActor*                           InPooledActor;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ObjectPoolFunctionLibrary_MarkActorNotInUse) == 0x000008, "Wrong alignment on ObjectPoolFunctionLibrary_MarkActorNotInUse");
static_assert(sizeof(ObjectPoolFunctionLibrary_MarkActorNotInUse) == 0x000008, "Wrong size on ObjectPoolFunctionLibrary_MarkActorNotInUse");
static_assert(offsetof(ObjectPoolFunctionLibrary_MarkActorNotInUse, InPooledActor) == 0x000000, "Member 'ObjectPoolFunctionLibrary_MarkActorNotInUse::InPooledActor' has a wrong offset!");

// DelegateFunction ObjectPooler.PooledActor.InUseSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PooledActor_InUseSignature__DelegateSignature final 
{
public:
	class APooledActor*                           PooledActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_InUseSignature__DelegateSignature) == 0x000008, "Wrong alignment on PooledActor_InUseSignature__DelegateSignature");
static_assert(sizeof(PooledActor_InUseSignature__DelegateSignature) == 0x000008, "Wrong size on PooledActor_InUseSignature__DelegateSignature");
static_assert(offsetof(PooledActor_InUseSignature__DelegateSignature, PooledActor) == 0x000000, "Member 'PooledActor_InUseSignature__DelegateSignature::PooledActor' has a wrong offset!");

// Function ObjectPooler.PooledActor.MarkInUse
// 0x0001 (0x0001 - 0x0000)
struct PooledActor_MarkInUse final 
{
public:
	bool                                          bBroadcast;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_MarkInUse) == 0x000001, "Wrong alignment on PooledActor_MarkInUse");
static_assert(sizeof(PooledActor_MarkInUse) == 0x000001, "Wrong size on PooledActor_MarkInUse");
static_assert(offsetof(PooledActor_MarkInUse, bBroadcast) == 0x000000, "Member 'PooledActor_MarkInUse::bBroadcast' has a wrong offset!");

// Function ObjectPooler.PooledActor.MarkNotInUse
// 0x0001 (0x0001 - 0x0000)
struct PooledActor_MarkNotInUse final 
{
public:
	bool                                          bBroadcast;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_MarkNotInUse) == 0x000001, "Wrong alignment on PooledActor_MarkNotInUse");
static_assert(sizeof(PooledActor_MarkNotInUse) == 0x000001, "Wrong size on PooledActor_MarkNotInUse");
static_assert(offsetof(PooledActor_MarkNotInUse, bBroadcast) == 0x000000, "Member 'PooledActor_MarkNotInUse::bBroadcast' has a wrong offset!");

// DelegateFunction ObjectPooler.PooledActor.NotInUseSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PooledActor_NotInUseSignature__DelegateSignature final 
{
public:
	class APooledActor*                           PooledActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_NotInUseSignature__DelegateSignature) == 0x000008, "Wrong alignment on PooledActor_NotInUseSignature__DelegateSignature");
static_assert(sizeof(PooledActor_NotInUseSignature__DelegateSignature) == 0x000008, "Wrong size on PooledActor_NotInUseSignature__DelegateSignature");
static_assert(offsetof(PooledActor_NotInUseSignature__DelegateSignature, PooledActor) == 0x000000, "Member 'PooledActor_NotInUseSignature__DelegateSignature::PooledActor' has a wrong offset!");

// Function ObjectPooler.PooledActor.SetActive
// 0x0001 (0x0001 - 0x0000)
struct PooledActor_SetActive final 
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_SetActive) == 0x000001, "Wrong alignment on PooledActor_SetActive");
static_assert(sizeof(PooledActor_SetActive) == 0x000001, "Wrong size on PooledActor_SetActive");
static_assert(offsetof(PooledActor_SetActive, bActive) == 0x000000, "Member 'PooledActor_SetActive::bActive' has a wrong offset!");

// Function ObjectPooler.PooledActor.IsInUse
// 0x0001 (0x0001 - 0x0000)
struct PooledActor_IsInUse final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_IsInUse) == 0x000001, "Wrong alignment on PooledActor_IsInUse");
static_assert(sizeof(PooledActor_IsInUse) == 0x000001, "Wrong size on PooledActor_IsInUse");
static_assert(offsetof(PooledActor_IsInUse, ReturnValue) == 0x000000, "Member 'PooledActor_IsInUse::ReturnValue' has a wrong offset!");

// Function ObjectPooler.PooledActor.IsNotInUse
// 0x0001 (0x0001 - 0x0000)
struct PooledActor_IsNotInUse final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PooledActor_IsNotInUse) == 0x000001, "Wrong alignment on PooledActor_IsNotInUse");
static_assert(sizeof(PooledActor_IsNotInUse) == 0x000001, "Wrong size on PooledActor_IsNotInUse");
static_assert(offsetof(PooledActor_IsNotInUse, ReturnValue) == 0x000000, "Member 'PooledActor_IsNotInUse::ReturnValue' has a wrong offset!");

}

