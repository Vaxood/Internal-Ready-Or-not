#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_M16A4

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ANIMBP_M16A4.ANIMBP_M16A4_C.ExecuteUbergraph_ANIMBP_M16A4
// 0x0048 (0x0048 - 0x0000)
struct ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4 final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D45[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D46[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D47[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetItemMesh_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D48[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4) == 0x000008, "Wrong alignment on ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4");
static_assert(sizeof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4) == 0x000048, "Wrong size on ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, EntryPoint) == 0x000000, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::EntryPoint' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_Round_ReturnValue) == 0x000004, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00000C, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_GetOwningActor_ReturnValue) == 0x000018, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000020, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_GetItemMesh_ReturnValue) == 0x000030, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_GetItemMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, CallFunc_FTrunc_ReturnValue) == 0x00003C, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4, K2Node_SwitchInteger_CmpSuccess) == 0x000040, "Member 'ANIMBP_M16A4_C_ExecuteUbergraph_ANIMBP_M16A4::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ANIMBP_M16A4.ANIMBP_M16A4_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ANIMBP_M16A4_C_BlueprintUpdateAnimation final 
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_M16A4_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ANIMBP_M16A4_C_BlueprintUpdateAnimation");
static_assert(sizeof(ANIMBP_M16A4_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ANIMBP_M16A4_C_BlueprintUpdateAnimation");
static_assert(offsetof(ANIMBP_M16A4_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ANIMBP_M16A4_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ANIMBP_M16A4.ANIMBP_M16A4_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ANIMBP_M16A4_C_AnimGraph final 
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ANIMBP_M16A4_C_AnimGraph) == 0x000008, "Wrong alignment on ANIMBP_M16A4_C_AnimGraph");
static_assert(sizeof(ANIMBP_M16A4_C_AnimGraph) == 0x000010, "Wrong size on ANIMBP_M16A4_C_AnimGraph");
static_assert(offsetof(ANIMBP_M16A4_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ANIMBP_M16A4_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

