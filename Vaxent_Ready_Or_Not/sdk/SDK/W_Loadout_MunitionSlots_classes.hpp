#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_MunitionSlots

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_MunitionSlots.W_Loadout_MunitionSlots_C
// 0x08C8 (0x0B28 - 0x0260)
class UW_Loadout_MunitionSlots_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimReveal;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimRevealMunitions;                               // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimFadeSummary;                                   // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         ArmorSlotGrenadeCount;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         ArmorSlotPrimaryAmmoCount;                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            ArmorSlotsHeader;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         ArmorSlotSidearmAmmoCount;                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_MunitionCountSlot_C*         ArmorSlotTacticalCount;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Add_PrimaryAmmo1;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Add_PrimaryAmmo2;                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Add_SidearmAmmo1;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Add_SidearmAmmo2;                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Minimize;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_NewGrenadeType;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_NewPrimaryAmmoType;                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_NewSidearmAmmoType;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_NewTacticalType;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_SlotEdit;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Summary;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            GrenadeHeader;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  GrenadeSlotMain;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_GrenadeSummary;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Munitions;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_MunitionSummary;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_PrimaryAmmo2;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_PrimarySummary;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_SidearmAmmo2;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_SidearmSummary;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_TacticalSummary;                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_div_summary_1;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_div_summary_2;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_div_summary_3;                                 // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_MimizeArrow_l;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_MunitionSlots;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_MunitionSlots_total;                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           MinimizePanel;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Munitions;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overview;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       PrimaryAmmo1;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       PrimaryAmmo2;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            PrimaryAmmoHeader;                                 // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       SidearmAmmo1;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       SidearmAmmo2;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            SidearmAmmoHeader;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            TacticalHeader;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  TacticalSlotMain;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_TotalArmorSlots;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_TotalGrenadeSlots;                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_TotalPrimaryAmmoSlots;                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_TotalSidearmAmmoSlots;                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_TotalTacticalSlots;                            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_EditorSlotEntries;                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_GrenadeSlots;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_MunitionSlotEditor;                             // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_MunitionSlots;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_PrimaryAmmoSlots;                               // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_SidearmAmmoSlots;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_TacticalSlots;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Expanded;                                          // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8D[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0440(0x0188)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EItemCategory, class UClass*>            CurrentItems;                                      // 0x05C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnMunitionSlotClicked;                             // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMunitionSlotHovered;                             // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMunitionSlotUnhovered;                           // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_Loadout_C*                           LoadoutWidget;                                     // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrimaryCount_1;                                    // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PrimaryAmmoType_1;                                 // 0x0654(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrimaryCount_2;                                    // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PrimaryAmmoType_2;                                 // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SidearmCount_1;                                    // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SidearmAmmoType_1;                                 // 0x066C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SidearmCount_2;                                    // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SidearmAmmoType_2;                                 // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPrimarySlots;                                 // 0x0680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSidearmSlots;                                 // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           PrimaryAmmo;                                       // 0x0688(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           SidearmAmmo;                                       // 0x0698(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TotalGrenadeSlots;                                 // 0x06A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableGrenadeSlots;                             // 0x06AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalTacticalSlots;                                // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableTacticalSlots;                            // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EArmourCoverage                               ArmourCoverage;                                    // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8E[0x7];                                     // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        ArmourMaterial;                                    // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class ASWATArmour>                Armor;                                             // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSubclassOf<class ABaseItem>>          EquippedGrenades;                                  // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSubclassOf<class ABaseItem>>          EquippedTacticals;                                 // 0x06E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, int32>                    GrenadeCounts;                                     // 0x06F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*> GrenadeSlots;                                      // 0x0740(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, int32>                    TacticalCounts;                                    // 0x0790(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*> TacticalSlots;                                     // 0x07E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_Loadout_MunitionSlots_Deployable_C*  CurrentActiveDeployableSlot;                       // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_MunitionSlots_Deployable_C*  CurrentHoveredDeployableSlot;                      // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSlots;                                        // 0x0840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddingGrenade;                                     // 0x0844(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8F[0x3];                                     // 0x0845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class ABaseItem>>          ListExclusionItems;                                // 0x0848(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TotalUnassignedSlots;                              // 0x0858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A90[0x4];                                     // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMunitionSlotCountChanged;                        // 0x0860(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SlotEditor;                                        // 0x0870(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hidden;                                            // 0x0871(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A91[0x6];                                     // 0x0872(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSidearmAmmoChanged;                              // 0x0878(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPrimaryAmmoChanged;                              // 0x0888(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGrenadesChanged;                                 // 0x0898(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_Loadout_Munition_SummaryEntry_C*     PrimarySummary_2;                                  // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     PrimarySummary_1;                                  // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     SidearmSummary_1;                                  // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munition_SummaryEntry_C*     SidearmSummary_2;                                  // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UW_Loadout_Munition_SummaryEntry_C*> GrenadeSummaryEntries;                             // 0x08C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UClass*, class UW_Loadout_Munition_SummaryEntry_C*> TacticalSummaryEntries;                            // 0x0918(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_Loadout_MunitionSlots_Deployable_C*  TempNewGrenadeSlot;                                // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class ABaseItem>>          AllGrenadeTypes;                                   // 0x0970(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSubclassOf<class ABaseItem>>          AllTacticalTypes;                                  // 0x0980(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AddingTactical;                                    // 0x0990(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TransitioningSlotEditor;                           // 0x0991(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RemotePlayer;                                      // 0x0992(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PrimaryAmmoInitialized;                            // 0x0993(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowingPrimary2;                                   // 0x0994(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SidearmAmmoInitialized;                            // 0x0995(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowingSidearm2;                                   // 0x0996(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A92[0x1];                                     // 0x0997(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationSpeed;                                    // 0x0998(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Preview;                                           // 0x099C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A93[0x3];                                     // 0x099D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          PreviewLoadout;                                    // 0x09A0(0x0188)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnMunitionSlotClicked__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void OnMunitionSlotHovered__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void OnMunitionSlotUnhovered__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void OnMunitionSlotCountChanged__DelegateSignature(int32 PrimaryAmmoSlotCount, int32 SidearmAmmoSlotCount, int32 GrenadeSlotCount, int32 TacticalSlotCount);
	void OnSidearmAmmoChanged__DelegateSignature(TArray<class FName>& Param_SidearmAmmo);
	void OnPrimaryAmmoChanged__DelegateSignature(TArray<class FName>& Param_PrimaryAmmo);
	void OnGrenadesChanged__DelegateSignature(TArray<class UClass*>& Grenades);
	void ExecuteUbergraph_W_Loadout_MunitionSlots(int32 EntryPoint, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, float K2Node_Event_Delay_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button_2, class UW_Loadout_MunitionSlots_Deployable_C* K2Node_CustomEvent_TriggeringDeployableSlot_2, class UW_LoadoutSlot_C* K2Node_CustomEvent_LoadoutSlot_2, class UW_LoadoutSlot_C* K2Node_CustomEvent_LoadoutSlot_1, class UW_Loadout_MunitionSlots_Deployable_C* K2Node_CustomEvent_TriggeringDeployableSlot_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* K2Node_CustomEvent_TriggeringDeployableSlot, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button_3, class UW_Button_C* K2Node_ComponentBoundEvent_Button_4, class UW_Button_C* K2Node_ComponentBoundEvent_Button_5, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_2, class UW_LoadoutSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_7, class UW_LoadoutSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_6, class UW_LoadoutSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_5, class UW_LoadoutSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_4, class UW_Button_C* K2Node_ComponentBoundEvent_Button_6, int32 Temp_int_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue_4, class UW_Button_C* K2Node_ComponentBoundEvent_Button_7, int32 CallFunc_Add_IntInt_ReturnValue_3, class UW_Button_C* K2Node_ComponentBoundEvent_Button_8, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, class UW_Loadout_MunitionCountSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_3, class UW_Loadout_C* K2Node_Event_LoadoutWidget, float K2Node_Event_Delay, bool K2Node_Event_Collapse, int32 Temp_int_Variable_1, bool CallFunc_Not_PreBool_ReturnValue, class UW_Loadout_MunitionCountSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_2, class UW_Loadout_MunitionCountSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot_1, class UW_Loadout_MunitionCountSlot_C* K2Node_ComponentBoundEvent_TriggeringSlot, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_2, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button_9, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button_10, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, int32 Temp_int_Variable_2, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, bool K2Node_Event_IsDesignTime, class FName K2Node_Event_PageName, int32 Temp_int_Variable_3, int32 CallFunc_Subtract_IntInt_ReturnValue_5, bool K2Node_Event_IsGamepad, class FName K2Node_Event_OptionNameID, int32 CallFunc_Subtract_IntInt_ReturnValue_6, int32 CallFunc_Add_IntInt_ReturnValue_4, bool Temp_bool_Variable, int32 Temp_int_Variable_4, int32 CallFunc_Subtract_IntInt_ReturnValue_7, int32 CallFunc_Add_IntInt_ReturnValue_5, int32 CallFunc_Subtract_IntInt_ReturnValue_8, int32 CallFunc_Add_IntInt_ReturnValue_6, int32 CallFunc_Subtract_IntInt_ReturnValue_9, int32 CallFunc_Add_IntInt_ReturnValue_7, class FName CallFunc_GetPrimaryDefaultAmmoType_Output, bool CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable_5, class FName CallFunc_GetSidearmDefaultAmmoType_Output, bool CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_1, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_2, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_3, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_4, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_5, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_6, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_7, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_8, class UW_Button_C* K2Node_ComponentBoundEvent_Button, float CallFunc_RevealSlotEditorChildren_Delay, float CallFunc_RevealSlotEditorChildren_Delay_1, float CallFunc_HideSlotEditorChildren_Delay, int32 Temp_int_Variable_6, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_9, TArray<TSubclassOf<class ABaseItem>>& K2Node_Select_Default, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_NotEqual_ClassClass_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_10, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_11, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_12, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_8, class FName K2Node_CustomEvent_NewAmmoType, class UClass* K2Node_CustomEvent_Weapon, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_13, bool CallFunc_EqualEqual_ClassClass_ReturnValue, int32 Temp_int_Variable_7, int32 Temp_int_Variable_8, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_14, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget_15, int32 Temp_int_Variable_9, TArray<class FName>& CallFunc_GroupAmmo_GroupedAmmo, TArray<class FName>& CallFunc_GroupAmmo_GroupedAmmo_1, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_1, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_2, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_3, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_1, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_2, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_4, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_3, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_4, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_5, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_6, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_5, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_6);
	void BndEvt__W_Loadout_MunitionSlots_MinimizePanel_K2Node_ComponentBoundEvent_19_HandleBackPress__DelegateSignature();
	void AmmoSelected(class FName NewAmmoType, class UClass* Weapon);
	void HideSlotEditor();
	void RevealSlotEditor();
	void BndEvt__W_Loadout_MunitionSlots_btn_SlotEdit_K2Node_ComponentBoundEvent_18_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_NewTacticalType_K2Node_ComponentBoundEvent_17_Clicked__DelegateSignature(class UW_Button_C* Button);
	void TacticalCountSaved();
	void TacticalEquipped();
	void GrenadeEquipped();
	void GrenadeCountSaved();
	void PrimaryAmmoCountSaved();
	void SidearmAmmoCountSaved();
	void SidearmAmmoChanged();
	void PrimaryAmmoChanged();
	void SidearmWeaponChanged();
	void PrimaryWeaponChanged();
	void BndEvt__W_Loadout_MunitionSlots_ArmorSlotTacticalCount_K2Node_ComponentBoundEvent_16_OnSlotCountChanged__DelegateSignature(class UW_Loadout_MunitionCountSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_ArmorSlotGrenadeCount_K2Node_ComponentBoundEvent_15_OnSlotCountChanged__DelegateSignature(class UW_Loadout_MunitionCountSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_ArmorSlotSidearmAmmoCount_K2Node_ComponentBoundEvent_14_OnSlotCountChanged__DelegateSignature(class UW_Loadout_MunitionCountSlot_C* TriggeringSlot);
	void Hide(float Delay, bool Collapse);
	void BndEvt__W_Loadout_MunitionSlots_ArmorSlotPrimaryAmmoCount_K2Node_ComponentBoundEvent_13_OnSlotCountChanged__DelegateSignature(class UW_Loadout_MunitionCountSlot_C* TriggeringSlot);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void BndEvt__W_Loadout_MunitionSlots_SidearmAmmo2_K2Node_ComponentBoundEvent_12_OnSlotClicked__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_SidearmAmmo1_K2Node_ComponentBoundEvent_11_OnSlotClicked__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo2_K2Node_ComponentBoundEvent_10_OnSlotClicked__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_PrimaryAmmo1_K2Node_ComponentBoundEvent_9_OnSlotClicked__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void DeployableSlotUnhovered(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot);
	void DeployableSlotHovered(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot);
	void DeployableSlotClicked(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot);
	void BndEvt__W_Loadout_MunitionSlots_btn_NewGrenadeType_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature(class UW_Button_C* Button);
	void Reveal(float Delay);
	void BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo2_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_Add_SidearmAmmo1_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_NewSidearmAmmoType_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo2_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_Add_PrimaryAmmo1_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_NewPrimaryAmmoType_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature(class UW_Button_C* Button);
	void SetLoadoutWidget(class UW_Loadout_C* Param_LoadoutWidget);
	void SlotUnhovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void SlotHovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void SlotClicked(class UW_LoadoutSlot_C* TriggeringSlot);
	void BndEvt__W_Loadout_MunitionSlots_btn_Minimize_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_Loadout_MunitionSlots_btn_Summary_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateActiveLoadout(const struct FSavedLoadout& Param_ActiveLoadout);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void SetupBinds(TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_5, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_6, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_7, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_8, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_9, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_10, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_11, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_12, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_13, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_14, TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_15, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot)> K2Node_CreateDelegate_OutputDelegate_16, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_17, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_18, TDelegate<void(class FName AmmoType, class UClass* Weapon)> K2Node_CreateDelegate_OutputDelegate_19);
	void InitializeMunitionSlots(bool Param_RemotePlayer, bool Param_Preview);
	void Initialize_Deployables(bool IsGrenades, int32 AvailableDeployableSlots, int32 TotalDeployableSlots, const TMap<class UClass*, int32>& DeployableCounts, const TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*>& DeployableSlots, int32 CurrentIndex, class UClass* CurrentDeployable, int32 CurrentCount, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, TArray<class UW_Loadout_MunitionSlots_Deployable_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Map_Length_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue, class FText CallFunc_Format_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Array_Get_Item, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_Map_Remove_ReturnValue_1, TArray<class UClass*>& CallFunc_Map_Values_Values, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Map_Contains_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool Temp_bool_Variable, bool CallFunc_Greater_IntInt_ReturnValue, class FText K2Node_Select_Default, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool Temp_bool_Variable_1, int32 Temp_int_Variable_2, TArray<class UClass*>& K2Node_Select_Default_1, class UClass* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable_2, const TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*>& K2Node_Select_Default_2, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_CreateDeployableSlot_OutputPin, class UClass* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, int32 CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void GetAllDeployableItems(TArray<EItemCategory>& Temp_byte_Variable, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, EItemCategory Temp_byte_Variable_1, EItemCategory Temp_byte_Variable_2, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FDeviceData& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1);
	void CreateDeployableSlot(bool IsGrenade, class UClass* ItemData, class FText CategoryText, class UW_Loadout_MunitionSlots_Deployable_C** OutputPin, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_3, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Create_ReturnValue, TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_4, TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_5, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot)> K2Node_CreateDelegate_OutputDelegate_6, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class UVerticalBox* K2Node_Select_Default, const TMap<class UW_Loadout_MunitionSlots_Deployable_C*, class UClass*>& K2Node_Select_Default_1, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);
	void SplitSlots(int32 Param_TotalSlots, int32* NewStack, int32* OriginalStack, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_FCeil_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue);
	void DisplayPrimary2(const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput);
	void HidePrimary2(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, class FName CallFunc_GetPrimaryDefaultAmmoType_Output, bool CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, ESlateVisibility K2Node_Select_Default, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput);
	void InitializePrimaryAmmo(TArray<class FName>& AmmoTypes, int32 CurrentIndex, int32 UnaccountedAmmoCount, class FName AmmoType, bool Temp_bool_True_if_break_was_hit_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 Temp_int_Array_Index_Variable, class FName CallFunc_Array_Get_Item, int32 Temp_int_Variable, bool Temp_bool_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 Temp_int_Variable_1, bool CallFunc_BooleanAND_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class FName CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_EqualEqual_NameName_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Variable_2, bool CallFunc_EqualEqual_NameName_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 Temp_int_Variable_3, bool CallFunc_Not_PreBool_ReturnValue_1, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput, int32 Temp_int_Variable_4, bool CallFunc_EqualEqual_NameName_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_5, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue_3, class FName CallFunc_GetPrimaryDefaultAmmoType_Output, bool CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType, class FName K2Node_Select_Default, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Variable_5, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_EqualEqual_NameName_ReturnValue_4, bool CallFunc_EqualEqual_NameName_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_8, bool CallFunc_EqualEqual_NameName_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue_1);
	void InitializeSidearmAmmo(TArray<class FName>& AmmoTypes, int32 CurrentIndex, int32 UnaccountedAmmoCount, class FName AmmoType, int32 Temp_int_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 Temp_int_Variable_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, class FName CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, class FName CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_3, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 Temp_int_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_5, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue_2, class FName CallFunc_GetSidearmDefaultAmmoType_Output, bool CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType, bool CallFunc_EqualEqual_NameName_ReturnValue_3, class FName K2Node_Select_Default, int32 Temp_int_Variable_4, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Variable_5, int32 CallFunc_Add_IntInt_ReturnValue_6, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput, int32 CallFunc_Add_IntInt_ReturnValue_7, bool CallFunc_EqualEqual_NameName_ReturnValue_4, int32 CallFunc_Add_IntInt_ReturnValue_8, bool CallFunc_EqualEqual_NameName_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue_1);
	void DisplaySidearm2(const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput);
	void HideSidearm2(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, class FName CallFunc_GetSidearmDefaultAmmoType_Output, bool CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType, ESlateVisibility K2Node_Select_Default, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput);
	void UpdatePrimarySlots(bool Temp_bool_Variable, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout_1, bool CallFunc_EqualEqual_NameName_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout_2, bool CallFunc_EqualEqual_NameName_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, class FName K2Node_Select_Default, bool CallFunc_GreaterEqual_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue);
	void UpdateSidearmSlots(bool Temp_bool_Variable, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout_1, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, class FName K2Node_Select_Default, bool CallFunc_GreaterEqual_IntInt_ReturnValue_2, bool CallFunc_GreaterEqual_IntInt_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue);
	void SetPrimaryAmmoType1(class FName AmmoType);
	void SetPrimaryAmmoCount1(int32 AmmoCount);
	void SetPrimaryAmmoCount2(int32 AmmoCount);
	void SetSidearmAmmoCount1(int32 AmmoCount);
	void SetSidearmAmmoCount2(int32 AmmoCount);
	void UpdateCurrentData(int32 CallFunc_Add_IntInt_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsSWATArmour, bool K2Node_ClassDynamicCast_bSuccess, bool CallFunc_IsValidClass_ReturnValue);
	void GrenadeSlotAddCount(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringSlot, int32 CurrentCount, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void GrenadeSlotMinusCount(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringSlot, int32 CurrentCount, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 CallFunc_Array_Find_ReturnValue);
	void InitializeTacticals(TArray<TSubclassOf<class ABaseItem>>& Tacticals, class UClass* CurrentTactical, int32 CurrentIndex, class UClass* CurrentGrenade, int32 CurrentCount, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Array_Index_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 CallFunc_Map_Length_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_Format_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, TArray<class UW_Loadout_MunitionSlots_Deployable_C*>& CallFunc_Map_Keys_Keys, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Array_Get_Item, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Map_Contains_ReturnValue, class UClass* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Variable_1, int32 Temp_int_Variable_2, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, bool CallFunc_Map_Remove_ReturnValue);
	void CreateTacticalSlot(class UClass* Tactical, class FText CategoryText, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_LoadoutSlot_C* LoadoutSlot, class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringDeployableSlot, class UW_LoadoutSlot_C* LoadoutSlot)> K2Node_CreateDelegate_OutputDelegate_4, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Create_ReturnValue, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);
	void TacticalSlotAddCount(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringSlot, int32 CurrentCount, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void TacticalSlotMinusCount(class UW_Loadout_MunitionSlots_Deployable_C* TriggeringSlot, int32 CurrentCount, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 CallFunc_Array_Find_ReturnValue);
	void SelectGrenadeType(class UClass* ItemData, int32 ReductionCount, class UClass* ReductionItem, int32 CurrentSlotCount, class UClass* CurrentSlotItem, bool CallFunc_NotEqual_ClassClass_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void EquipGrenades(class UClass* ItemData, int32 Count, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 CallFunc_Array_Add_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void ReplaceGrenades(class UClass* CurrentGrenade, class UClass* NewGrenade, int32 Count, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_NotEqual_ClassClass_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, bool CallFunc_Array_RemoveItem_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void SelectTacticalType(class UClass* ItemData, class UClass* SelectedItem, int32 CurrentSlotCount, class UClass* CurrentSlotItem, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_NotEqual_ClassClass_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, class UClass* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void EquipTactical(class UClass* ItemData, int32 Count, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 CallFunc_Array_Add_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void ReplaceTactical(class UClass* CurrentTactical, class UClass* NewTactical, int32 Count, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_NotEqual_ClassClass_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable, bool CallFunc_Array_RemoveItem_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void UpdateTotalGrenadeCount(bool Temp_bool_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default);
	void UpdateTotalTacticalSlotCount(bool Temp_bool_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default);
	void UpdateTotalPrimarySlotCount(class FText CallFunc_Conv_IntToText_ReturnValue);
	void UpdateTotalSidearmSlotCount(class FText CallFunc_Conv_IntToText_ReturnValue);
	void InitializeMunitionSlotEditor(float RevealDelay, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default);
	void UpdateMunitionEditorTotalSlotCount(bool Temp_bool_Variable, class FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_Conv_IntToText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1);
	void UpdateMunitionSlotEditor(float RevealDelay);
	void HandleRemainderPrimaryAmmo(class FName CallFunc_GetPrimaryDefaultAmmoType_Output, bool CallFunc_GetPrimaryDefaultAmmoType_SingleAmmoType, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class FName>& CallFunc_GroupAmmo_GroupedAmmo, bool CallFunc_Not_PreBool_ReturnValue, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 Temp_int_Variable, bool CallFunc_NotEqual_NameName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void HandleRemainderSidearmAmmo(class FName CallFunc_GetSidearmDefaultAmmoType_Output, bool CallFunc_GetSidearmDefaultAmmoType_SingleAmmoType, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, TArray<class FName>& CallFunc_GroupAmmo_GroupedAmmo, bool CallFunc_Not_PreBool_ReturnValue, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void GetPrimaryDefaultAmmoType(class FName* Output, bool* SingleAmmoType);
	void GetSidearmDefaultAmmoType(class FName* Output, bool* SingleAmmoType);
	void GetActiveLoadout(struct FSavedLoadout* Active_Loadout, bool CallFunc_IsValid_ReturnValue);
	void UpdateSummary();
	void CreateAmmoSummaryEntry(class UClass* Weapon, class FName AmmoType, int32 Count, class UW_Loadout_Munition_SummaryEntry_C** EntryWidget, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_Create_ReturnValue);
	void CreateItemSummaryEntry(class UClass* ItemData, int32 Count, class UW_Loadout_Munition_SummaryEntry_C** EntryWidget, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_Create_ReturnValue);
	void UpdatePrimarySummary(TSubclassOf<class ABaseItem> CurrentPrimary, bool CallFunc_IsValid_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, const struct FMargin& K2Node_MakeStruct_Margin, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_CreateAmmoSummaryEntry_EntryWidget, bool CallFunc_Greater_IntInt_ReturnValue, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_CreateAmmoSummaryEntry_EntryWidget_1);
	void UpdateSidearmSummary(class UClass* CurrentSidearm, bool CallFunc_IsValid_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue_1, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_CreateAmmoSummaryEntry_EntryWidget, bool CallFunc_Greater_IntInt_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_CreateAmmoSummaryEntry_EntryWidget_1);
	void UpdateGrenadeSummary(int32 CurrentIndex, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, int32 Temp_int_Loop_Counter_Variable_1, TArray<class UClass*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Add_IntInt_ReturnValue_1, class UClass* CallFunc_Array_Get_Item, bool CallFunc_Map_Remove_ReturnValue, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, TArray<class UClass*>& CallFunc_Map_Keys_Keys_1, int32 CallFunc_Array_Length_ReturnValue_1, class UClass* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_CreateItemSummaryEntry_EntryWidget, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue);
	void UpdateTacticalSummary(int32 CurrentIndex, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class UClass*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UClass* CallFunc_Array_Get_Item, bool CallFunc_Map_Remove_ReturnValue, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, const struct FMargin& K2Node_MakeStruct_Margin, TArray<class UClass*>& CallFunc_Map_Keys_Keys_1, int32 CallFunc_Array_Length_ReturnValue_1, class UClass* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_CreateItemSummaryEntry_EntryWidget, class UW_Loadout_Munition_SummaryEntry_C* CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue);
	void AddGrenadeType(class UClass* InitialItem, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UClass* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Map_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_BooleanAND_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_CreateDeployableSlot_OutputPin, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, TArray<class UW_Loadout_MunitionSlots_Deployable_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue_1, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_2, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void UpdateGrenadeSlots(class UClass* CurrentGrenade, int32 Count, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Variable_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<class UW_Loadout_MunitionSlots_Deployable_C*>& CallFunc_Map_Keys_Keys, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Array_Get_Item, class UClass* CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue, class UClass* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1);
	void FreeUpGrenadeSlot(int32 HighCount, int32 ReductionCount, class UClass* ReductionItem, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Variable_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Map_Remove_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, TArray<class UClass*>& CallFunc_Map_Keys_Keys, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void GetLoadoutWidget(class UW_Loadout_C** Param_LoadoutWidget, bool CallFunc_IsValid_ReturnValue, TArray<class UW_Loadout_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UW_Loadout_C* CallFunc_Array_Get_Item);
	void GetAllGrenadeTypes(TArray<EItemCategory>& Temp_byte_Variable, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, EItemCategory Temp_byte_Variable_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const struct FDeviceData& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void SetGrenadeAddButtonVis(TArray<int32>& CallFunc_Map_Values_Values, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_MaxOfIntArray_IndexOfMaxValue, int32 CallFunc_MaxOfIntArray_MaxValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Map_Length_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void AddTacticalType(class UClass* InitialItem, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UClass* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Map_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_BooleanAND_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_CreateDeployableSlot_OutputPin, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, TArray<class UW_Loadout_MunitionSlots_Deployable_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue_1, class UW_Loadout_MunitionSlots_Deployable_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue_2, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void FreeUpTacticalSlot(int32 HighCount, int32 ReductionCount, class UClass* ReductionItem, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Variable_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Map_Remove_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, TArray<class UClass*>& CallFunc_Map_Keys_Keys, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void SetTacticalAddButtonVis(TArray<int32>& CallFunc_Map_Values_Values, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_MaxOfIntArray_IndexOfMaxValue, int32 CallFunc_MaxOfIntArray_MaxValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 CallFunc_Map_Length_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void SwapWeaponAmmo(bool Sidearm, const TArray<class FName>& NewAmmo, class UClass* NewWeapon, bool Temp_bool_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, bool Temp_bool_Variable_1, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UDataTable* CallFunc_GetAmmoLookupDataTable_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FSavedLoadout& CallFunc_GetActiveLoadout_Active_Loadout, TArray<class FName>& K2Node_Select_Default, class FName CallFunc_Array_Get_Item, class UClass* K2Node_Select_Default_1, const struct FAmmoTypeData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void HideSlotEditorChildren(float* Delay, float FadeOffset, float FadeDelay, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, TArray<class UWidget*>& CallFunc_GetAllChildren_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UWidget* CallFunc_Array_Get_Item, int32 CallFunc_Subtract_IntInt_ReturnValue_1, class UW_Loadout_MunitionCountSlot_C* K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Max_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput);
	void RevealSlotEditorChildren(float* Delay, float FadeOffset, float FadeDelay, int32 Temp_int_Array_Index_Variable, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, TArray<class UWidget*>& CallFunc_GetAllChildren_ReturnValue, class UWidget* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UW_Loadout_MunitionCountSlot_C* K2Node_DynamicCast_AsW_Loadout_Munition_Count_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput, int32 CallFunc_Add_IntInt_ReturnValue);
	void ReplacePrimaryAmmo(class FName CurrentAmmoType, class FName NewAmmoType, int32 Count, int32 Temp_int_Variable, bool CallFunc_NotEqual_NameName_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void ReplaceSidearmAmmo(class FName CurrentAmmoType, class FName NewAmmoType, int32 Count, int32 Temp_int_Variable, bool CallFunc_NotEqual_NameName_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, class UW_Loadout_C* CallFunc_GetLoadoutWidget_LoadoutWidget, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2);
	void GroupAmmo(class FName AmmoType1, int32 AmmoCount1, class FName AmmoType2, int32 AmmoCount2, TArray<class FName>* GroupedAmmo, const TArray<class FName>& Ammo2, const TArray<class FName>& Ammo1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1);
	void InitializePreviewSummary(const struct FSavedLoadout& Param_PreviewLoadout);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_MunitionSlots_C">();
	}
	static class UW_Loadout_MunitionSlots_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_MunitionSlots_C>();
	}
};
static_assert(alignof(UW_Loadout_MunitionSlots_C) == 0x000008, "Wrong alignment on UW_Loadout_MunitionSlots_C");
static_assert(sizeof(UW_Loadout_MunitionSlots_C) == 0x000B28, "Wrong size on UW_Loadout_MunitionSlots_C");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, UberGraphFrame) == 0x000260, "Member 'UW_Loadout_MunitionSlots_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AnimReveal) == 0x000268, "Member 'UW_Loadout_MunitionSlots_C::AnimReveal' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AnimRevealMunitions) == 0x000270, "Member 'UW_Loadout_MunitionSlots_C::AnimRevealMunitions' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AnimFadeSummary) == 0x000278, "Member 'UW_Loadout_MunitionSlots_C::AnimFadeSummary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmorSlotGrenadeCount) == 0x000280, "Member 'UW_Loadout_MunitionSlots_C::ArmorSlotGrenadeCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmorSlotPrimaryAmmoCount) == 0x000288, "Member 'UW_Loadout_MunitionSlots_C::ArmorSlotPrimaryAmmoCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmorSlotsHeader) == 0x000290, "Member 'UW_Loadout_MunitionSlots_C::ArmorSlotsHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmorSlotSidearmAmmoCount) == 0x000298, "Member 'UW_Loadout_MunitionSlots_C::ArmorSlotSidearmAmmoCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmorSlotTacticalCount) == 0x0002A0, "Member 'UW_Loadout_MunitionSlots_C::ArmorSlotTacticalCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_Add_PrimaryAmmo1) == 0x0002A8, "Member 'UW_Loadout_MunitionSlots_C::btn_Add_PrimaryAmmo1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_Add_PrimaryAmmo2) == 0x0002B0, "Member 'UW_Loadout_MunitionSlots_C::btn_Add_PrimaryAmmo2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_Add_SidearmAmmo1) == 0x0002B8, "Member 'UW_Loadout_MunitionSlots_C::btn_Add_SidearmAmmo1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_Add_SidearmAmmo2) == 0x0002C0, "Member 'UW_Loadout_MunitionSlots_C::btn_Add_SidearmAmmo2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_Minimize) == 0x0002C8, "Member 'UW_Loadout_MunitionSlots_C::btn_Minimize' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_NewGrenadeType) == 0x0002D0, "Member 'UW_Loadout_MunitionSlots_C::btn_NewGrenadeType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_NewPrimaryAmmoType) == 0x0002D8, "Member 'UW_Loadout_MunitionSlots_C::btn_NewPrimaryAmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_NewSidearmAmmoType) == 0x0002E0, "Member 'UW_Loadout_MunitionSlots_C::btn_NewSidearmAmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_NewTacticalType) == 0x0002E8, "Member 'UW_Loadout_MunitionSlots_C::btn_NewTacticalType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_SlotEdit) == 0x0002F0, "Member 'UW_Loadout_MunitionSlots_C::btn_SlotEdit' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, btn_Summary) == 0x0002F8, "Member 'UW_Loadout_MunitionSlots_C::btn_Summary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, GrenadeHeader) == 0x000300, "Member 'UW_Loadout_MunitionSlots_C::GrenadeHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, GrenadeSlotMain) == 0x000308, "Member 'UW_Loadout_MunitionSlots_C::GrenadeSlotMain' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_GrenadeSummary) == 0x000310, "Member 'UW_Loadout_MunitionSlots_C::HB_GrenadeSummary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_Munitions) == 0x000318, "Member 'UW_Loadout_MunitionSlots_C::HB_Munitions' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_MunitionSummary) == 0x000320, "Member 'UW_Loadout_MunitionSlots_C::HB_MunitionSummary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_PrimaryAmmo2) == 0x000328, "Member 'UW_Loadout_MunitionSlots_C::HB_PrimaryAmmo2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_PrimarySummary) == 0x000330, "Member 'UW_Loadout_MunitionSlots_C::HB_PrimarySummary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_SidearmAmmo2) == 0x000338, "Member 'UW_Loadout_MunitionSlots_C::HB_SidearmAmmo2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_SidearmSummary) == 0x000340, "Member 'UW_Loadout_MunitionSlots_C::HB_SidearmSummary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, HB_TacticalSummary) == 0x000348, "Member 'UW_Loadout_MunitionSlots_C::HB_TacticalSummary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Img_div_summary_1) == 0x000350, "Member 'UW_Loadout_MunitionSlots_C::Img_div_summary_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Img_div_summary_2) == 0x000358, "Member 'UW_Loadout_MunitionSlots_C::Img_div_summary_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Img_div_summary_3) == 0x000360, "Member 'UW_Loadout_MunitionSlots_C::Img_div_summary_3' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Img_MimizeArrow_l) == 0x000368, "Member 'UW_Loadout_MunitionSlots_C::Img_MimizeArrow_l' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Lbl_MunitionSlots) == 0x000370, "Member 'UW_Loadout_MunitionSlots_C::Lbl_MunitionSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Lbl_MunitionSlots_total) == 0x000378, "Member 'UW_Loadout_MunitionSlots_C::Lbl_MunitionSlots_total' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, MinimizePanel) == 0x000380, "Member 'UW_Loadout_MunitionSlots_C::MinimizePanel' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Munitions) == 0x000388, "Member 'UW_Loadout_MunitionSlots_C::Munitions' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Overview) == 0x000390, "Member 'UW_Loadout_MunitionSlots_C::Overview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmo1) == 0x000398, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmo1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmo2) == 0x0003A0, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmo2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmoHeader) == 0x0003A8, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmoHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmo1) == 0x0003B0, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmo1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmo2) == 0x0003B8, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmo2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmoHeader) == 0x0003C0, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmoHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TacticalHeader) == 0x0003C8, "Member 'UW_Loadout_MunitionSlots_C::TacticalHeader' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TacticalSlotMain) == 0x0003D0, "Member 'UW_Loadout_MunitionSlots_C::TacticalSlotMain' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Txt_TotalArmorSlots) == 0x0003D8, "Member 'UW_Loadout_MunitionSlots_C::Txt_TotalArmorSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Txt_TotalGrenadeSlots) == 0x0003E0, "Member 'UW_Loadout_MunitionSlots_C::Txt_TotalGrenadeSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Txt_TotalPrimaryAmmoSlots) == 0x0003E8, "Member 'UW_Loadout_MunitionSlots_C::Txt_TotalPrimaryAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Txt_TotalSidearmAmmoSlots) == 0x0003F0, "Member 'UW_Loadout_MunitionSlots_C::Txt_TotalSidearmAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Txt_TotalTacticalSlots) == 0x0003F8, "Member 'UW_Loadout_MunitionSlots_C::Txt_TotalTacticalSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_EditorSlotEntries) == 0x000400, "Member 'UW_Loadout_MunitionSlots_C::VB_EditorSlotEntries' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_GrenadeSlots) == 0x000408, "Member 'UW_Loadout_MunitionSlots_C::VB_GrenadeSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_MunitionSlotEditor) == 0x000410, "Member 'UW_Loadout_MunitionSlots_C::VB_MunitionSlotEditor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_MunitionSlots) == 0x000418, "Member 'UW_Loadout_MunitionSlots_C::VB_MunitionSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_PrimaryAmmoSlots) == 0x000420, "Member 'UW_Loadout_MunitionSlots_C::VB_PrimaryAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_SidearmAmmoSlots) == 0x000428, "Member 'UW_Loadout_MunitionSlots_C::VB_SidearmAmmoSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, VB_TacticalSlots) == 0x000430, "Member 'UW_Loadout_MunitionSlots_C::VB_TacticalSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Expanded) == 0x000438, "Member 'UW_Loadout_MunitionSlots_C::Expanded' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ActiveLoadout) == 0x000440, "Member 'UW_Loadout_MunitionSlots_C::ActiveLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, CurrentItems) == 0x0005C8, "Member 'UW_Loadout_MunitionSlots_C::CurrentItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnMunitionSlotClicked) == 0x000618, "Member 'UW_Loadout_MunitionSlots_C::OnMunitionSlotClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnMunitionSlotHovered) == 0x000628, "Member 'UW_Loadout_MunitionSlots_C::OnMunitionSlotHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnMunitionSlotUnhovered) == 0x000638, "Member 'UW_Loadout_MunitionSlots_C::OnMunitionSlotUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, LoadoutWidget) == 0x000648, "Member 'UW_Loadout_MunitionSlots_C::LoadoutWidget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryCount_1) == 0x000650, "Member 'UW_Loadout_MunitionSlots_C::PrimaryCount_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmoType_1) == 0x000654, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmoType_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryCount_2) == 0x00065C, "Member 'UW_Loadout_MunitionSlots_C::PrimaryCount_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmoType_2) == 0x000660, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmoType_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmCount_1) == 0x000668, "Member 'UW_Loadout_MunitionSlots_C::SidearmCount_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmoType_1) == 0x00066C, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmoType_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmCount_2) == 0x000674, "Member 'UW_Loadout_MunitionSlots_C::SidearmCount_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmoType_2) == 0x000678, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmoType_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TotalPrimarySlots) == 0x000680, "Member 'UW_Loadout_MunitionSlots_C::TotalPrimarySlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TotalSidearmSlots) == 0x000684, "Member 'UW_Loadout_MunitionSlots_C::TotalSidearmSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmo) == 0x000688, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmo) == 0x000698, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TotalGrenadeSlots) == 0x0006A8, "Member 'UW_Loadout_MunitionSlots_C::TotalGrenadeSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AvailableGrenadeSlots) == 0x0006AC, "Member 'UW_Loadout_MunitionSlots_C::AvailableGrenadeSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TotalTacticalSlots) == 0x0006B0, "Member 'UW_Loadout_MunitionSlots_C::TotalTacticalSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AvailableTacticalSlots) == 0x0006B4, "Member 'UW_Loadout_MunitionSlots_C::AvailableTacticalSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmourCoverage) == 0x0006B8, "Member 'UW_Loadout_MunitionSlots_C::ArmourCoverage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ArmourMaterial) == 0x0006C0, "Member 'UW_Loadout_MunitionSlots_C::ArmourMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Armor) == 0x0006C8, "Member 'UW_Loadout_MunitionSlots_C::Armor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, EquippedGrenades) == 0x0006D0, "Member 'UW_Loadout_MunitionSlots_C::EquippedGrenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, EquippedTacticals) == 0x0006E0, "Member 'UW_Loadout_MunitionSlots_C::EquippedTacticals' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, GrenadeCounts) == 0x0006F0, "Member 'UW_Loadout_MunitionSlots_C::GrenadeCounts' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, GrenadeSlots) == 0x000740, "Member 'UW_Loadout_MunitionSlots_C::GrenadeSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TacticalCounts) == 0x000790, "Member 'UW_Loadout_MunitionSlots_C::TacticalCounts' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TacticalSlots) == 0x0007E0, "Member 'UW_Loadout_MunitionSlots_C::TacticalSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, CurrentActiveDeployableSlot) == 0x000830, "Member 'UW_Loadout_MunitionSlots_C::CurrentActiveDeployableSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, CurrentHoveredDeployableSlot) == 0x000838, "Member 'UW_Loadout_MunitionSlots_C::CurrentHoveredDeployableSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TotalSlots) == 0x000840, "Member 'UW_Loadout_MunitionSlots_C::TotalSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AddingGrenade) == 0x000844, "Member 'UW_Loadout_MunitionSlots_C::AddingGrenade' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ListExclusionItems) == 0x000848, "Member 'UW_Loadout_MunitionSlots_C::ListExclusionItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TotalUnassignedSlots) == 0x000858, "Member 'UW_Loadout_MunitionSlots_C::TotalUnassignedSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnMunitionSlotCountChanged) == 0x000860, "Member 'UW_Loadout_MunitionSlots_C::OnMunitionSlotCountChanged' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SlotEditor) == 0x000870, "Member 'UW_Loadout_MunitionSlots_C::SlotEditor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Hidden) == 0x000871, "Member 'UW_Loadout_MunitionSlots_C::Hidden' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnSidearmAmmoChanged) == 0x000878, "Member 'UW_Loadout_MunitionSlots_C::OnSidearmAmmoChanged' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnPrimaryAmmoChanged) == 0x000888, "Member 'UW_Loadout_MunitionSlots_C::OnPrimaryAmmoChanged' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, OnGrenadesChanged) == 0x000898, "Member 'UW_Loadout_MunitionSlots_C::OnGrenadesChanged' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimarySummary_2) == 0x0008A8, "Member 'UW_Loadout_MunitionSlots_C::PrimarySummary_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimarySummary_1) == 0x0008B0, "Member 'UW_Loadout_MunitionSlots_C::PrimarySummary_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmSummary_1) == 0x0008B8, "Member 'UW_Loadout_MunitionSlots_C::SidearmSummary_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmSummary_2) == 0x0008C0, "Member 'UW_Loadout_MunitionSlots_C::SidearmSummary_2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, GrenadeSummaryEntries) == 0x0008C8, "Member 'UW_Loadout_MunitionSlots_C::GrenadeSummaryEntries' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TacticalSummaryEntries) == 0x000918, "Member 'UW_Loadout_MunitionSlots_C::TacticalSummaryEntries' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TempNewGrenadeSlot) == 0x000968, "Member 'UW_Loadout_MunitionSlots_C::TempNewGrenadeSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AllGrenadeTypes) == 0x000970, "Member 'UW_Loadout_MunitionSlots_C::AllGrenadeTypes' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AllTacticalTypes) == 0x000980, "Member 'UW_Loadout_MunitionSlots_C::AllTacticalTypes' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AddingTactical) == 0x000990, "Member 'UW_Loadout_MunitionSlots_C::AddingTactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, TransitioningSlotEditor) == 0x000991, "Member 'UW_Loadout_MunitionSlots_C::TransitioningSlotEditor' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, RemotePlayer) == 0x000992, "Member 'UW_Loadout_MunitionSlots_C::RemotePlayer' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PrimaryAmmoInitialized) == 0x000993, "Member 'UW_Loadout_MunitionSlots_C::PrimaryAmmoInitialized' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ShowingPrimary2) == 0x000994, "Member 'UW_Loadout_MunitionSlots_C::ShowingPrimary2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, SidearmAmmoInitialized) == 0x000995, "Member 'UW_Loadout_MunitionSlots_C::SidearmAmmoInitialized' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, ShowingSidearm2) == 0x000996, "Member 'UW_Loadout_MunitionSlots_C::ShowingSidearm2' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, AnimationSpeed) == 0x000998, "Member 'UW_Loadout_MunitionSlots_C::AnimationSpeed' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, Preview) == 0x00099C, "Member 'UW_Loadout_MunitionSlots_C::Preview' has a wrong offset!");
static_assert(offsetof(UW_Loadout_MunitionSlots_C, PreviewLoadout) == 0x0009A0, "Member 'UW_Loadout_MunitionSlots_C::PreviewLoadout' has a wrong offset!");

}

