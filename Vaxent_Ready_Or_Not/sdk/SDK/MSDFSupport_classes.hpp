#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MSDFSupport

#include "Basic.hpp"

#include "MSDFSupport_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class MSDFSupport.MSDFAssetData
// 0x0028 (0x0050 - 0x0028)
class UMSDFAssetData final  : public UAssetUserData
{
public:
	struct FSVGConversionParams                   ImportParameters;                                  // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MSDFAssetData">();
	}
	static class UMSDFAssetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMSDFAssetData>();
	}
};
static_assert(alignof(UMSDFAssetData) == 0x000008, "Wrong alignment on UMSDFAssetData");
static_assert(sizeof(UMSDFAssetData) == 0x000050, "Wrong size on UMSDFAssetData");
static_assert(offsetof(UMSDFAssetData, ImportParameters) == 0x000028, "Member 'UMSDFAssetData::ImportParameters' has a wrong offset!");

// Class MSDFSupport.RenderMSDF
// 0x0070 (0x00B0 - 0x0040)
class URenderMSDF final  : public UMaterialExpression
{
public:
	class UTexture*                               EffectiveTexture;                                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FExpressionInput                       MSDFTexture;                                       // 0x0048(0x0014)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	EMaterialSamplerType                          SamplerType;                                       // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1932[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExpressionInput                       Coordinates;                                       // 0x0060(0x0014)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         ConstCoordinateIndex;                              // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1933[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Texture;                                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExpressionInput                       FieldDistance;                                     // 0x0080(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
	struct FExpressionInput                       OutputTextureSize;                                 // 0x0094(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
	struct FExpressionOutput                      Output;                                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RenderMSDF">();
	}
	static class URenderMSDF* GetDefaultObj()
	{
		return GetDefaultObjImpl<URenderMSDF>();
	}
};
static_assert(alignof(URenderMSDF) == 0x000008, "Wrong alignment on URenderMSDF");
static_assert(sizeof(URenderMSDF) == 0x0000B0, "Wrong size on URenderMSDF");
static_assert(offsetof(URenderMSDF, EffectiveTexture) == 0x000040, "Member 'URenderMSDF::EffectiveTexture' has a wrong offset!");
static_assert(offsetof(URenderMSDF, MSDFTexture) == 0x000048, "Member 'URenderMSDF::MSDFTexture' has a wrong offset!");
static_assert(offsetof(URenderMSDF, SamplerType) == 0x00005C, "Member 'URenderMSDF::SamplerType' has a wrong offset!");
static_assert(offsetof(URenderMSDF, Coordinates) == 0x000060, "Member 'URenderMSDF::Coordinates' has a wrong offset!");
static_assert(offsetof(URenderMSDF, ConstCoordinateIndex) == 0x000074, "Member 'URenderMSDF::ConstCoordinateIndex' has a wrong offset!");
static_assert(offsetof(URenderMSDF, Texture) == 0x000078, "Member 'URenderMSDF::Texture' has a wrong offset!");
static_assert(offsetof(URenderMSDF, FieldDistance) == 0x000080, "Member 'URenderMSDF::FieldDistance' has a wrong offset!");
static_assert(offsetof(URenderMSDF, OutputTextureSize) == 0x000094, "Member 'URenderMSDF::OutputTextureSize' has a wrong offset!");
static_assert(offsetof(URenderMSDF, Output) == 0x0000A8, "Member 'URenderMSDF::Output' has a wrong offset!");

}

