#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SubObjective_Entry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_SubObjective_Entry.W_SubObjective_Entry_C.ExecuteUbergraph_W_SubObjective_Entry
// 0x0028 (0x0028 - 0x0000)
struct W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Complete;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Failed;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F30[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ObjectiveDescription;           // 0x0008(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry) == 0x000008, "Wrong alignment on W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry");
static_assert(sizeof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry) == 0x000028, "Wrong size on W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry");
static_assert(offsetof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry, EntryPoint) == 0x000000, "Member 'W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry, K2Node_CustomEvent_Complete) == 0x000004, "Member 'W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry::K2Node_CustomEvent_Complete' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry, K2Node_CustomEvent_Failed) == 0x000005, "Member 'W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry::K2Node_CustomEvent_Failed' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry, K2Node_CustomEvent_ObjectiveDescription) == 0x000008, "Member 'W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry::K2Node_CustomEvent_ObjectiveDescription' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry, K2Node_Event_IsDesignTime) == 0x000020, "Member 'W_SubObjective_Entry_C_ExecuteUbergraph_W_SubObjective_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function W_SubObjective_Entry.W_SubObjective_Entry_C.Update
// 0x0020 (0x0020 - 0x0000)
struct W_SubObjective_Entry_C_Update final 
{
public:
	bool                                          Param_Complete;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Failed;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F31[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Param_ObjectiveDescription;                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_SubObjective_Entry_C_Update) == 0x000008, "Wrong alignment on W_SubObjective_Entry_C_Update");
static_assert(sizeof(W_SubObjective_Entry_C_Update) == 0x000020, "Wrong size on W_SubObjective_Entry_C_Update");
static_assert(offsetof(W_SubObjective_Entry_C_Update, Param_Complete) == 0x000000, "Member 'W_SubObjective_Entry_C_Update::Param_Complete' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_Update, Param_Failed) == 0x000001, "Member 'W_SubObjective_Entry_C_Update::Param_Failed' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_Update, Param_ObjectiveDescription) == 0x000008, "Member 'W_SubObjective_Entry_C_Update::Param_ObjectiveDescription' has a wrong offset!");

// Function W_SubObjective_Entry.W_SubObjective_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SubObjective_Entry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubObjective_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on W_SubObjective_Entry_C_PreConstruct");
static_assert(sizeof(W_SubObjective_Entry_C_PreConstruct) == 0x000001, "Wrong size on W_SubObjective_Entry_C_PreConstruct");
static_assert(offsetof(W_SubObjective_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SubObjective_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SubObjective_Entry.W_SubObjective_Entry_C.SetState
// 0x0128 (0x0128 - 0x0000)
struct W_SubObjective_Entry_C_SetState final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F32[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F33[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	bool                                          Temp_bool_Variable_5;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F34[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0078(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F35[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F36[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_5;                           // 0x00D8(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F37[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubObjective_Entry_C_SetState) == 0x000008, "Wrong alignment on W_SubObjective_Entry_C_SetState");
static_assert(sizeof(W_SubObjective_Entry_C_SetState) == 0x000128, "Wrong size on W_SubObjective_Entry_C_SetState");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable) == 0x000000, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_byte_Variable) == 0x000001, "Member 'W_SubObjective_Entry_C_SetState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_byte_Variable_1) == 0x000002, "Member 'W_SubObjective_Entry_C_SetState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable_1) == 0x000003, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable_2) == 0x000004, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable_3) == 0x000005, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_text_Variable) == 0x000008, "Member 'W_SubObjective_Entry_C_SetState::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_text_Variable_1) == 0x000020, "Member 'W_SubObjective_Entry_C_SetState::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable_4) == 0x000038, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_text_Variable_2) == 0x000040, "Member 'W_SubObjective_Entry_C_SetState::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable_5) == 0x000058, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_byte_Variable_2) == 0x000059, "Member 'W_SubObjective_Entry_C_SetState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_byte_Variable_3) == 0x00005A, "Member 'W_SubObjective_Entry_C_SetState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_bool_Variable_6) == 0x00005B, "Member 'W_SubObjective_Entry_C_SetState::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_byte_Variable_4) == 0x00005C, "Member 'W_SubObjective_Entry_C_SetState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, Temp_byte_Variable_5) == 0x00005D, "Member 'W_SubObjective_Entry_C_SetState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default) == 0x00005E, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default_1) == 0x00005F, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default_2) == 0x000060, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000071, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default_3) == 0x000078, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default_4) == 0x000090, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_BreakColor_R) == 0x0000A0, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_BreakColor_G) == 0x0000A4, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_BreakColor_B) == 0x0000A8, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_BreakColor_A) == 0x0000AC, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_MakeStruct_LinearColor) == 0x0000B0, "Member 'W_SubObjective_Entry_C_SetState::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C0, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000C4, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000D4, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D5, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default_5) == 0x0000D8, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_SelectColor_ReturnValue) == 0x0000F0, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_Select_Default_6) == 0x000100, "Member 'W_SubObjective_Entry_C_SetState::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_SelectFloat_ReturnValue) == 0x000104, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000108, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, CallFunc_SelectFloat_ReturnValue_1) == 0x000110, "Member 'W_SubObjective_Entry_C_SetState::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubObjective_Entry_C_SetState, K2Node_MakeStruct_Margin) == 0x000114, "Member 'W_SubObjective_Entry_C_SetState::K2Node_MakeStruct_Margin' has a wrong offset!");

}

