#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FPSCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FPSCounter.W_FPSCounter_C
// 0x0028 (0x0288 - 0x0260)
class UW_FPSCounter_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             FPS;                                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReflexGameLatency;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReflexGameToRenderLatency;                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReflexRenderLatency;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_FPSCounter(int32 EntryPoint, bool K2Node_Event_IsDesignTime, bool CallFunc_GetShowFPS_bShowFPS, bool CallFunc_GetShowFPS_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_FFloor_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, bool CallFunc_GetReflexLatency_bGameToRenderLatencyEnabled, float CallFunc_GetReflexLatency_GametoRenderLatency, bool CallFunc_GetReflexLatency_bGameLatencyEnabled, float CallFunc_GetReflexLatency_GameLatencyInMS, bool CallFunc_GetReflexLatency_bRenderLatencyEnabled, float CallFunc_GetReflexLatency_RenderLatencyInMS, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, class FText CallFunc_Format_ReturnValue_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_3, class FText CallFunc_Format_ReturnValue_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void Check_If_Enabled();
	void Construct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FPSCounter_C">();
	}
	static class UW_FPSCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FPSCounter_C>();
	}
};
static_assert(alignof(UW_FPSCounter_C) == 0x000008, "Wrong alignment on UW_FPSCounter_C");
static_assert(sizeof(UW_FPSCounter_C) == 0x000288, "Wrong size on UW_FPSCounter_C");
static_assert(offsetof(UW_FPSCounter_C, UberGraphFrame) == 0x000260, "Member 'UW_FPSCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, FPS) == 0x000268, "Member 'UW_FPSCounter_C::FPS' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, ReflexGameLatency) == 0x000270, "Member 'UW_FPSCounter_C::ReflexGameLatency' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, ReflexGameToRenderLatency) == 0x000278, "Member 'UW_FPSCounter_C::ReflexGameToRenderLatency' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, ReflexRenderLatency) == 0x000280, "Member 'UW_FPSCounter_C::ReflexRenderLatency' has a wrong offset!");

}

