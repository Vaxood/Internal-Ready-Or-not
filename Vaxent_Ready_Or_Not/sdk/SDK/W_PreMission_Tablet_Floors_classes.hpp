#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Floors

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C
// 0x0188 (0x03E8 - 0x0260)
class UW_PreMission_Tablet_Floors_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimReveal;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimShowInfo;                                      // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_DnFloor;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_DnFloor_Gamepad;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_UpFloor;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_UpFloor_Gamepad;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                FloorNavigation;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                FloorNavigationGamepad;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_EntryPoints;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_Down;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_Down_1;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_EntryPoint;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_Up;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icn_Up_1;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_EntryPoints;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_FloorName;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_FloorNumber;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_FloorNumber_Gamepad;                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         InfoFadeDelay;                                     // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InfoVisible;                                       // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AC[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnFloorUp;                                         // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnFloorDown;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   TestFloorName;                                     // 0x0320(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TestFloorLevel;                                    // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AD[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelFloor                            FloorData;                                         // 0x0340(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 CurrentMissionURL;                                 // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         TotalFloorCount;                                   // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AE[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLevelFloor>                    Floors;                                            // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentFloorIndex;                                 // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33AF[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PreMission_PlanningMap_C*            W_Pre_Mission_Planning_Map;                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentFloorNumber;                                // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hidden;                                            // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUsingGamepad;                                    // 0x03E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnFloorUp__DelegateSignature();
	void OnFloorDown__DelegateSignature();
	void ExecuteUbergraph_W_PreMission_Tablet_Floors(int32 EntryPoint, bool CallFunc_Greater_IntInt_ReturnValue, float K2Node_CustomEvent_Delay, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, class UW_PreMission_PlanningMap_Level_C* CallFunc_GetCurrentLevelMap_CurrentLevelCanvas, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class UW_PreMission_Tablet_C* CallFunc_WidgetGetParentOfClass_ReturnValue, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_1, float K2Node_Event_Delay, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_1, class FName K2Node_Event_PageName, ECommonInputType K2Node_CustomEvent_bNewInputType, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool K2Node_Event_IsGamepad, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_WasInputKeyJustPressed_ReturnValue, bool CallFunc_WasInputKeyJustPressed_ReturnValue_1);
	void InputChanged(ECommonInputType bNewInputType);
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void BndEvt__W_PreMission_Tablet_Floors_Button_0_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void HideFloorInfo();
	void ShowFloorInfo(float Delay);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void UpdateFloorInfo(const class FString& MissionURL, const struct FLevelFloor& Param_FloorData, class FText Temp_text_Variable, class FText Temp_text_Variable_1, bool Temp_bool_Variable, bool CallFunc_Greater_IntInt_ReturnValue, const struct FLevelDataLookupTable& CallFunc_GetMapDetailsFromName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_EqualEqual_IntInt_ReturnValue, class FText K2Node_Select_Default, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue);
	void DecrementFloor(int32 CallFunc_Subtract_IntInt_ReturnValue);
	void IncrementFloor(int32 CallFunc_Add_IntInt_ReturnValue);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_Floors_C">();
	}
	static class UW_PreMission_Tablet_Floors_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_Floors_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_Floors_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_Floors_C");
static_assert(sizeof(UW_PreMission_Tablet_Floors_C) == 0x0003E8, "Wrong size on UW_PreMission_Tablet_Floors_C");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, UberGraphFrame) == 0x000260, "Member 'UW_PreMission_Tablet_Floors_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, AnimReveal) == 0x000268, "Member 'UW_PreMission_Tablet_Floors_C::AnimReveal' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, AnimShowInfo) == 0x000270, "Member 'UW_PreMission_Tablet_Floors_C::AnimShowInfo' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_DnFloor) == 0x000278, "Member 'UW_PreMission_Tablet_Floors_C::btn_DnFloor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_DnFloor_Gamepad) == 0x000280, "Member 'UW_PreMission_Tablet_Floors_C::btn_DnFloor_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_UpFloor) == 0x000288, "Member 'UW_PreMission_Tablet_Floors_C::btn_UpFloor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_UpFloor_Gamepad) == 0x000290, "Member 'UW_PreMission_Tablet_Floors_C::btn_UpFloor_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, FloorNavigation) == 0x000298, "Member 'UW_PreMission_Tablet_Floors_C::FloorNavigation' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, FloorNavigationGamepad) == 0x0002A0, "Member 'UW_PreMission_Tablet_Floors_C::FloorNavigationGamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, HB_EntryPoints) == 0x0002A8, "Member 'UW_PreMission_Tablet_Floors_C::HB_EntryPoints' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Icn_Down) == 0x0002B0, "Member 'UW_PreMission_Tablet_Floors_C::Icn_Down' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Icn_Down_1) == 0x0002B8, "Member 'UW_PreMission_Tablet_Floors_C::Icn_Down_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Icn_EntryPoint) == 0x0002C0, "Member 'UW_PreMission_Tablet_Floors_C::Icn_EntryPoint' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Icn_Up) == 0x0002C8, "Member 'UW_PreMission_Tablet_Floors_C::Icn_Up' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Icn_Up_1) == 0x0002D0, "Member 'UW_PreMission_Tablet_Floors_C::Icn_Up_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Txt_EntryPoints) == 0x0002D8, "Member 'UW_PreMission_Tablet_Floors_C::Txt_EntryPoints' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Txt_FloorName) == 0x0002E0, "Member 'UW_PreMission_Tablet_Floors_C::Txt_FloorName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Txt_FloorNumber) == 0x0002E8, "Member 'UW_PreMission_Tablet_Floors_C::Txt_FloorNumber' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Txt_FloorNumber_Gamepad) == 0x0002F0, "Member 'UW_PreMission_Tablet_Floors_C::Txt_FloorNumber_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, InfoFadeDelay) == 0x0002F8, "Member 'UW_PreMission_Tablet_Floors_C::InfoFadeDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, InfoVisible) == 0x0002FC, "Member 'UW_PreMission_Tablet_Floors_C::InfoVisible' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, OnFloorUp) == 0x000300, "Member 'UW_PreMission_Tablet_Floors_C::OnFloorUp' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, OnFloorDown) == 0x000310, "Member 'UW_PreMission_Tablet_Floors_C::OnFloorDown' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, TestFloorName) == 0x000320, "Member 'UW_PreMission_Tablet_Floors_C::TestFloorName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, TestFloorLevel) == 0x000338, "Member 'UW_PreMission_Tablet_Floors_C::TestFloorLevel' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, FloorData) == 0x000340, "Member 'UW_PreMission_Tablet_Floors_C::FloorData' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, CurrentMissionURL) == 0x0003A8, "Member 'UW_PreMission_Tablet_Floors_C::CurrentMissionURL' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, TotalFloorCount) == 0x0003B8, "Member 'UW_PreMission_Tablet_Floors_C::TotalFloorCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Floors) == 0x0003C0, "Member 'UW_PreMission_Tablet_Floors_C::Floors' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, CurrentFloorIndex) == 0x0003D0, "Member 'UW_PreMission_Tablet_Floors_C::CurrentFloorIndex' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, W_Pre_Mission_Planning_Map) == 0x0003D8, "Member 'UW_PreMission_Tablet_Floors_C::W_Pre_Mission_Planning_Map' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, CurrentFloorNumber) == 0x0003E0, "Member 'UW_PreMission_Tablet_Floors_C::CurrentFloorNumber' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Hidden) == 0x0003E4, "Member 'UW_PreMission_Tablet_Floors_C::Hidden' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, IsUsingGamepad) == 0x0003E5, "Member 'UW_PreMission_Tablet_Floors_C::IsUsingGamepad' has a wrong offset!");

}

