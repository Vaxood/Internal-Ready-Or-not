#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AG_ExposedToAggressiveNoise

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AG_ExposedToAggressiveNoise.AG_ExposedToAggressiveNoise_C.CanOpen
// 0x0030 (0x0030 - 0x0000)
struct AG_ExposedToAggressiveNoise_C_CanOpen final 
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenExposedToAggressiveNoise_ReturnValue; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3213[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3214[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_HasBeenExposedToAggressiveNoise_Tag_OutTag; // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBeenExposedToAggressiveNoise_Tag_ReturnValue; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AG_ExposedToAggressiveNoise_C_CanOpen) == 0x000008, "Wrong alignment on AG_ExposedToAggressiveNoise_C_CanOpen");
static_assert(sizeof(AG_ExposedToAggressiveNoise_C_CanOpen) == 0x000030, "Wrong size on AG_ExposedToAggressiveNoise_C_CanOpen");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, Context) == 0x000000, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::Context' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, ReturnValue) == 0x000010, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_NotEqual_NameName_ReturnValue) == 0x000011, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_HasBeenExposedToAggressiveNoise_ReturnValue) == 0x000012, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_HasBeenExposedToAggressiveNoise_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_HasBeenExposedToAggressiveNoise_Tag_OutTag) == 0x00001C, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_HasBeenExposedToAggressiveNoise_Tag_OutTag' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_HasBeenExposedToAggressiveNoise_Tag_ReturnValue) == 0x000024, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_HasBeenExposedToAggressiveNoise_Tag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_Array_Contains_ReturnValue) == 0x000025, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000026, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_Not_PreBool_ReturnValue) == 0x000027, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_ExposedToAggressiveNoise_C_CanOpen, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'AG_ExposedToAggressiveNoise_C_CanOpen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

