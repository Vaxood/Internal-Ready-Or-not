#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "EJoystickTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseController.BP_BaseController_C
// 0x0050 (0x0A98 - 0x0A48)
class ABP_BaseController_C final  : public AReadyOrNotPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A48(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_PauseMenu_C*                         EscapeMenuRef;                                     // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EscapeMenuOpen;                                    // 0x0A58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFreeDrawColor                                CurrentFreeDrawColor;                              // 0x0A59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseButtonDown;                                   // 0x0A5A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4096[0x1];                                     // 0x0A5B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Slomo;                                             // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  LastPawn;                                          // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFreeCamera;                                       // 0x0A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4097[0x7];                                     // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ReplaySystemWidget;                                // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PawnBeforePremissionPlanning;                      // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_COOPScorePopUp_C*                    PopMinusUpWidget;                                  // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_VotePopUp_C*                         VoteWidget;                                        // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_VotePopUp_gamepad_C*                 VoteWidget_Gamepad;                                // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BaseController(int32 EntryPoint, const struct FKey& K2Node_InputKeyEvent_Key_1, int32 Temp_int_Array_Index_Variable, const struct FKey& K2Node_InputActionEvent_Key, const struct FKey& K2Node_InputActionEvent_Key_1, class APawn* K2Node_CustomEvent_Pawn, const struct FKey& K2Node_InputActionEvent_Key_2, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetAllActorsOfClass_OutActors, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item, class UDestroySessionCallbackProxy* CallFunc_DestroySession_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText K2Node_Event_KickReason, const struct FWidgetLookupData& CallFunc_GetWidgetDataFromLookupData_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, class UUserWidget* CallFunc_Create_ReturnValue, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UUserWidget* CallFunc_Array_Get_Item_1, class UW_PauseMenu_C* K2Node_DynamicCast_AsW_Pause_Menu, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UW_COOPScorePopUp_C* CallFunc_Create_ReturnValue_1, float K2Node_Event_ScoreChangeValue, const struct FVoteData& K2Node_Event_CurrentVoteData, class UW_VotePopUp_C* K2Node_CustomEvent_Widget_1, class FText CallFunc_Conv_StringToText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, class UW_VotePopUp_gamepad_C* K2Node_CustomEvent_Widget, bool CallFunc_IsValid_ReturnValue_4, const struct FKey& K2Node_InputKeyEvent_Key, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SetUpVoteWidget_Gamepad(class UW_VotePopUp_gamepad_C* Widget);
	void StopVoteInput();
	void SetUpVoteWidget(class UW_VotePopUp_C* Widget);
	void RequestVoteInput(const struct FVoteData& CurrentVoteData);
	void ShowCoopScoreChangeWidget(float ScoreChangeValue);
	void BP_ClientWasKicked(class FText& KickReason);
	void CloseDeployMenu();
	void SpawnEscapeMenu();
	void ServerPossesPawn(class APawn* Param_Pawn);
	void Server_FreeCamera();
	void InpActEvt_ReadyUp_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_VoteNo_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_VoteYes_K2Node_InputActionEvent_2(const struct FKey& Key);
	void OnSuccess_E5236F624136A216FC80949690426E05();
	void OnFailure_E5236F624136A216FC80949690426E05();
	void InpActEvt_Equals_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_End_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void HideEscapeMenu();
	void GetJoystickDirection(EJoystickTypes Stick, struct FVector2D* StickInput);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseController_C">();
	}
	static class ABP_BaseController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseController_C>();
	}
};
static_assert(alignof(ABP_BaseController_C) == 0x000008, "Wrong alignment on ABP_BaseController_C");
static_assert(sizeof(ABP_BaseController_C) == 0x000A98, "Wrong size on ABP_BaseController_C");
static_assert(offsetof(ABP_BaseController_C, UberGraphFrame) == 0x000A48, "Member 'ABP_BaseController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, EscapeMenuRef) == 0x000A50, "Member 'ABP_BaseController_C::EscapeMenuRef' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, EscapeMenuOpen) == 0x000A58, "Member 'ABP_BaseController_C::EscapeMenuOpen' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, CurrentFreeDrawColor) == 0x000A59, "Member 'ABP_BaseController_C::CurrentFreeDrawColor' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, MouseButtonDown) == 0x000A5A, "Member 'ABP_BaseController_C::MouseButtonDown' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, Slomo) == 0x000A5C, "Member 'ABP_BaseController_C::Slomo' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, LastPawn) == 0x000A60, "Member 'ABP_BaseController_C::LastPawn' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, bFreeCamera) == 0x000A68, "Member 'ABP_BaseController_C::bFreeCamera' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, ReplaySystemWidget) == 0x000A70, "Member 'ABP_BaseController_C::ReplaySystemWidget' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, PawnBeforePremissionPlanning) == 0x000A78, "Member 'ABP_BaseController_C::PawnBeforePremissionPlanning' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, PopMinusUpWidget) == 0x000A80, "Member 'ABP_BaseController_C::PopMinusUpWidget' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, VoteWidget) == 0x000A88, "Member 'ABP_BaseController_C::VoteWidget' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, VoteWidget_Gamepad) == 0x000A90, "Member 'ABP_BaseController_C::VoteWidget_Gamepad' has a wrong offset!");

}

