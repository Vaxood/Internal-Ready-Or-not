#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionScore_Progress

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MissionScore_Progress.W_MissionScore_Progress_C
// 0x0148 (0x03A8 - 0x0260)
class UW_MissionScore_Progress_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       GradeReveal;                                       // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Fade;                                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressMeter;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_debug;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_debug_1;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_debug_2;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Grade;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_PlusMinus;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Score;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_DEBUG;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         HighScore;                                         // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScorePercent;                                      // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Grades;                                            // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Score;                                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_423F[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ProgressDynMat;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Grade;                                             // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UW_MissionScore_ScorePanel_C*           ScorePanel;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UW_MissionScore_ScorePanel_C*           PenaltyPanel;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FScoreGroup                            ScoreData;                                         // 0x0300(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FScorePenaltyData                      PenaltyData;                                       // 0x0330(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentScore;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetScore;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxScore;                                          // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddingScore;                                       // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Failed;                                            // 0x035D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Penalty;                                           // 0x035E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4240[0x1];                                     // 0x035F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimTime;                                          // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimDuration;                                      // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimProgress;                                      // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DEBUG_COUNT;                                       // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayingSound;                                      // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4241[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             PenaltyCount;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             ScoreCount;                                        // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             ScoreGrade;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CountEvent;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	FMulticastInlineDelegateProperty_             OnGradeRevealed;                                   // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnGradeRevealed__DelegateSignature();
	void ExecuteUbergraph_W_MissionScore_Progress(int32 EntryPoint, int32 CallFunc_Abs_Int_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, bool K2Node_Event_IsDesignTime, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, const struct FScoreGroup& K2Node_CustomEvent_ScoreData, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, class AScoringManager* CallFunc_Get_ReturnValue, class AScoringManager* CallFunc_Get_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue, int32 CallFunc_GetTotalScorePool_MaxScore, const struct FScorePenaltyData& K2Node_CustomEvent_PenaltyData, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& K2Node_CustomEvent_Grade, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, const class FString& CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_StrStr_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const class FString& CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsValidIndex_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_1, bool CallFunc_EventInstanceIsValid_ReturnValue, class UUMGSequencePlayer* CallFunc_CreatePlayAnimationProxyObject_Result, class UWidgetAnimationPlayCallbackProxy* CallFunc_CreatePlayAnimationProxyObject_ReturnValue, int32 CallFunc_GetTotalGivenScoresFromArray_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, int32 Temp_int_Variable);
	void Destruct();
	void RevealGrade(const class FString& Param_Grade);
	void UpdatePenalty(const struct FScorePenaltyData& Param_PenaltyData);
	void UpdateScore(const struct FScoreGroup& Param_ScoreData);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void GradeSound();
	void Finished_FBB0C8E14C37FCFA6D2B82B609745084();
	void UpdateProgressMeter(int32 Param_CurrentScore, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int32 K2Node_Select_Default, int32 CallFunc_Clamp_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_NormalizeToRange_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);
	void AddToScore(class FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_NormalizeToRange_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Ease_ReturnValue, int32 CallFunc_FFloor_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1);
	void SetDebug(class FText DebugText1, class FText DebugText2, class FText DebugText3, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue_1, bool CallFunc_TextIsEmpty_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue);
	void UpdateSound(bool CallFunc_EventInstanceIsValid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void SequenceEvent__ENTRYPOINTW_MissionScore_Progress_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MissionScore_Progress_C">();
	}
	static class UW_MissionScore_Progress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MissionScore_Progress_C>();
	}
};
static_assert(alignof(UW_MissionScore_Progress_C) == 0x000008, "Wrong alignment on UW_MissionScore_Progress_C");
static_assert(sizeof(UW_MissionScore_Progress_C) == 0x0003A8, "Wrong size on UW_MissionScore_Progress_C");
static_assert(offsetof(UW_MissionScore_Progress_C, UberGraphFrame) == 0x000260, "Member 'UW_MissionScore_Progress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, GradeReveal) == 0x000268, "Member 'UW_MissionScore_Progress_C::GradeReveal' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Fade) == 0x000270, "Member 'UW_MissionScore_Progress_C::Fade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ProgressMeter) == 0x000278, "Member 'UW_MissionScore_Progress_C::ProgressMeter' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Txt_debug) == 0x000280, "Member 'UW_MissionScore_Progress_C::Txt_debug' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Txt_debug_1) == 0x000288, "Member 'UW_MissionScore_Progress_C::Txt_debug_1' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Txt_debug_2) == 0x000290, "Member 'UW_MissionScore_Progress_C::Txt_debug_2' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Txt_Grade) == 0x000298, "Member 'UW_MissionScore_Progress_C::Txt_Grade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Txt_PlusMinus) == 0x0002A0, "Member 'UW_MissionScore_Progress_C::Txt_PlusMinus' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Txt_Score) == 0x0002A8, "Member 'UW_MissionScore_Progress_C::Txt_Score' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, VB_DEBUG) == 0x0002B0, "Member 'UW_MissionScore_Progress_C::VB_DEBUG' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, HighScore) == 0x0002B8, "Member 'UW_MissionScore_Progress_C::HighScore' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ScorePercent) == 0x0002BC, "Member 'UW_MissionScore_Progress_C::ScorePercent' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Grades) == 0x0002C0, "Member 'UW_MissionScore_Progress_C::Grades' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Score) == 0x0002D0, "Member 'UW_MissionScore_Progress_C::Score' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ProgressDynMat) == 0x0002D8, "Member 'UW_MissionScore_Progress_C::ProgressDynMat' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Grade) == 0x0002E0, "Member 'UW_MissionScore_Progress_C::Grade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ScorePanel) == 0x0002F0, "Member 'UW_MissionScore_Progress_C::ScorePanel' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, PenaltyPanel) == 0x0002F8, "Member 'UW_MissionScore_Progress_C::PenaltyPanel' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ScoreData) == 0x000300, "Member 'UW_MissionScore_Progress_C::ScoreData' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, PenaltyData) == 0x000330, "Member 'UW_MissionScore_Progress_C::PenaltyData' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, CurrentScore) == 0x000350, "Member 'UW_MissionScore_Progress_C::CurrentScore' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, TargetScore) == 0x000354, "Member 'UW_MissionScore_Progress_C::TargetScore' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, MaxScore) == 0x000358, "Member 'UW_MissionScore_Progress_C::MaxScore' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, AddingScore) == 0x00035C, "Member 'UW_MissionScore_Progress_C::AddingScore' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Failed) == 0x00035D, "Member 'UW_MissionScore_Progress_C::Failed' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, Penalty) == 0x00035E, "Member 'UW_MissionScore_Progress_C::Penalty' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, AnimTime) == 0x000360, "Member 'UW_MissionScore_Progress_C::AnimTime' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, AnimDuration) == 0x000364, "Member 'UW_MissionScore_Progress_C::AnimDuration' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, AnimProgress) == 0x000368, "Member 'UW_MissionScore_Progress_C::AnimProgress' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, DEBUG_COUNT) == 0x00036C, "Member 'UW_MissionScore_Progress_C::DEBUG_COUNT' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, PlayingSound) == 0x000370, "Member 'UW_MissionScore_Progress_C::PlayingSound' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, PenaltyCount) == 0x000378, "Member 'UW_MissionScore_Progress_C::PenaltyCount' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ScoreCount) == 0x000380, "Member 'UW_MissionScore_Progress_C::ScoreCount' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, ScoreGrade) == 0x000388, "Member 'UW_MissionScore_Progress_C::ScoreGrade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, CountEvent) == 0x000390, "Member 'UW_MissionScore_Progress_C::CountEvent' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_Progress_C, OnGradeRevealed) == 0x000398, "Member 'UW_MissionScore_Progress_C::OnGradeRevealed' has a wrong offset!");

}

