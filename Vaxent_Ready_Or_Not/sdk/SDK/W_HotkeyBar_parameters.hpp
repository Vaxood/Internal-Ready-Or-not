#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HotkeyBar

#include "Basic.hpp"

#include "St_HotkeySettings_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function W_HotkeyBar.W_HotkeyBar_C.OnHotkeyClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature final 
{
public:
	class FString                                 HotkeyID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature");
static_assert(sizeof(W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature) == 0x000010, "Wrong size on W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature");
static_assert(offsetof(W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature, HotkeyID) == 0x000000, "Member 'W_HotkeyBar_C_OnHotkeyClicked__DelegateSignature::HotkeyID' has a wrong offset!");

// Function W_HotkeyBar.W_HotkeyBar_C.ExecuteUbergraph_W_HotkeyBar
// 0x00F8 (0x00F8 - 0x0000)
struct W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3600[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_HotkeyBar_Entry_C* TriggeringHotkeyEntry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3601[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3602[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSt_HotkeySettings>             K2Node_CustomEvent_Hotkeys;                        // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3603[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSt_HotkeySettings                     CallFunc_Array_Get_Item;                           // 0x0060(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3604[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_HotkeyBar_Entry_C*                   K2Node_CustomEvent_TriggeringHotkeyEntry;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_HotkeyBar_Entry_C*                   CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_HotkeyBar_Entry_C*>           CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_HotkeyBar_Entry_C*                   CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3605[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar) == 0x000008, "Wrong alignment on W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar");
static_assert(sizeof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar) == 0x0000F8, "Wrong size on W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, EntryPoint) == 0x000000, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000008, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000010, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_GetCurrentInputType_ReturnValue) == 0x000028, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, K2Node_Event_IsDesignTime) == 0x00003C, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, K2Node_CustomEvent_Hotkeys) == 0x000040, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::K2Node_CustomEvent_Hotkeys' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, K2Node_CustomEvent_TriggeringHotkeyEntry) == 0x0000C0, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::K2Node_CustomEvent_TriggeringHotkeyEntry' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x0000D0, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Array_Length_ReturnValue_2) == 0x0000E8, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000F0, "Member 'W_HotkeyBar_C_ExecuteUbergraph_W_HotkeyBar::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function W_HotkeyBar.W_HotkeyBar_C.HotkeyButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct W_HotkeyBar_C_HotkeyButtonClicked final 
{
public:
	class UW_HotkeyBar_Entry_C*                   TriggeringHotkeyEntry;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HotkeyBar_C_HotkeyButtonClicked) == 0x000008, "Wrong alignment on W_HotkeyBar_C_HotkeyButtonClicked");
static_assert(sizeof(W_HotkeyBar_C_HotkeyButtonClicked) == 0x000008, "Wrong size on W_HotkeyBar_C_HotkeyButtonClicked");
static_assert(offsetof(W_HotkeyBar_C_HotkeyButtonClicked, TriggeringHotkeyEntry) == 0x000000, "Member 'W_HotkeyBar_C_HotkeyButtonClicked::TriggeringHotkeyEntry' has a wrong offset!");

// Function W_HotkeyBar.W_HotkeyBar_C.UpdateHints
// 0x0010 (0x0010 - 0x0000)
struct W_HotkeyBar_C_UpdateHints final 
{
public:
	TArray<struct FSt_HotkeySettings>             Param_Hotkeys;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_HotkeyBar_C_UpdateHints) == 0x000008, "Wrong alignment on W_HotkeyBar_C_UpdateHints");
static_assert(sizeof(W_HotkeyBar_C_UpdateHints) == 0x000010, "Wrong size on W_HotkeyBar_C_UpdateHints");
static_assert(offsetof(W_HotkeyBar_C_UpdateHints, Param_Hotkeys) == 0x000000, "Member 'W_HotkeyBar_C_UpdateHints::Param_Hotkeys' has a wrong offset!");

// Function W_HotkeyBar.W_HotkeyBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_HotkeyBar_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HotkeyBar_C_PreConstruct) == 0x000001, "Wrong alignment on W_HotkeyBar_C_PreConstruct");
static_assert(sizeof(W_HotkeyBar_C_PreConstruct) == 0x000001, "Wrong size on W_HotkeyBar_C_PreConstruct");
static_assert(offsetof(W_HotkeyBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_HotkeyBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

