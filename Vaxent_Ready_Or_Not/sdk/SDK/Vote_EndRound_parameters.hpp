#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vote_EndRound

#include "Basic.hpp"


namespace SDK::Params
{

// Function Vote_EndRound.Vote_EndRound_C.ExecuteUbergraph_Vote_EndRound
// 0x0030 (0x0030 - 0x0000)
struct Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4227[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameMode_PVP*                K2Node_DynamicCast_AsReady_or_Not_Game_Mode_PVP;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4228[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACoopGM*                                K2Node_DynamicCast_AsCoop_GM;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound) == 0x000008, "Wrong alignment on Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound");
static_assert(sizeof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound) == 0x000030, "Wrong size on Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound");
static_assert(offsetof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound, EntryPoint) == 0x000000, "Member 'Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound::EntryPoint' has a wrong offset!");
static_assert(offsetof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound, K2Node_DynamicCast_AsReady_or_Not_Game_Mode_PVP) == 0x000010, "Member 'Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound::K2Node_DynamicCast_AsReady_or_Not_Game_Mode_PVP' has a wrong offset!");
static_assert(offsetof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound, K2Node_DynamicCast_AsCoop_GM) == 0x000020, "Member 'Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound::K2Node_DynamicCast_AsCoop_GM' has a wrong offset!");
static_assert(offsetof(Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Vote_EndRound_C_ExecuteUbergraph_Vote_EndRound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

