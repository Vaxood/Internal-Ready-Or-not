#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionScore_ScorePanel_SubEntry

#include "Basic.hpp"

#include "FMODStudio_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.SubEntryReady__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature final 
{
public:
	class UW_MissionScore_ScorePanel_SubEntry_C*  EntryWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Score;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature) == 0x000010, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature, EntryWidget) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature::EntryWidget' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature, Param_Score) == 0x000008, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SubEntryReady__DelegateSignature::Param_Score' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry
// 0x0070 (0x0070 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Event_Receiver;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC7[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC8[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay_1;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry) == 0x000070, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, EntryPoint) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_Event_Delay) == 0x000004, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_Event_IsGamepad) == 0x000018, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_Event_PageName) == 0x00001C, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_PlayEvent2D_ReturnValue) == 0x000028, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000030, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_CustomEvent_Event_Receiver) == 0x000038, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_CustomEvent_Event_Receiver' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_Event_IsDesignTime) == 0x000040, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_PlayEvent2D_ReturnValue_2) == 0x000048, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000050, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000058, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, CallFunc_SelectInt_ReturnValue) == 0x000064, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_Event_Delay_1) == 0x000068, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry, K2Node_Event_Collapse) == 0x00006C, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ExecuteUbergraph_W_MissionScore_ScorePanel_SubEntry::K2Node_Event_Collapse' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_Reveal) == 0x000004, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_Reveal");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_Reveal) == 0x000004, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_Reveal");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_Reveal, Delay) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_Reveal::Delay' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_Hide) == 0x000004, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_Hide");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_Hide) == 0x000008, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_Hide");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_Hide, Delay) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_Hide, Collapse) == 0x000004, "Member 'W_MissionScore_ScorePanel_SubEntry_C_Hide::Collapse' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_PreConstruct");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_PreConstruct) == 0x000001, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_PreConstruct");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.numberSound
// 0x0008 (0x0008 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_NumberSound final 
{
public:
	class UObject*                                Event_Receiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_NumberSound) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_NumberSound");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_NumberSound) == 0x000008, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_NumberSound");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_NumberSound, Event_Receiver) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_NumberSound::Event_Receiver' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_ChangePage) == 0x000004, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_ChangePage");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_ChangePage) == 0x000008, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_ChangePage");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_ChangePage, PageName) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_ChangePage::PageName' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_SetInputMode) == 0x000001, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_SetInputMode");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_SetInputMode) == 0x000001, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_SetInputMode");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.SetCountText
// 0x00E8 (0x00E8 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_SetCountText final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0090(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00D0(0x0018)()
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_SetCountText");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText) == 0x0000E8, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_SetCountText");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, Temp_bool_Variable) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, Temp_bool_Variable_1) == 0x000001, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, K2Node_Select_Default) == 0x000008, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, CallFunc_Conv_IntToText_ReturnValue) == 0x000090, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, K2Node_MakeArray_Array) == 0x0000A8, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetCountText, K2Node_Select_Default_1) == 0x0000D0, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetCountText::K2Node_Select_Default_1' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.SetNameText
// 0x0108 (0x0108 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_SetNameText final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetSlateColorScheme_White;                // 0x0008(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Dark;                 // 0x0030(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Red;                  // 0x0058(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Yellow;               // 0x0080(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Blue;                 // 0x00A8(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Green;                // 0x00D0(0x0028)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCB[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_SetNameText");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText) == 0x000108, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_SetNameText");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, Temp_bool_Variable) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_GetSlateColorScheme_White) == 0x000008, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_GetSlateColorScheme_White' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_GetSlateColorScheme_Dark) == 0x000030, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_GetSlateColorScheme_Dark' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_GetSlateColorScheme_Red) == 0x000058, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_GetSlateColorScheme_Red' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_GetSlateColorScheme_Yellow) == 0x000080, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_GetSlateColorScheme_Yellow' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_GetSlateColorScheme_Blue) == 0x0000A8, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_GetSlateColorScheme_Blue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_GetSlateColorScheme_Green) == 0x0000D0, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_GetSlateColorScheme_Green' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetNameText, K2Node_Select_Default) == 0x000100, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetNameText::K2Node_Select_Default' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.SetValueText
// 0x0190 (0x0190 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_SetValueText final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCD[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetSlateColorScheme_White;                // 0x0040(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Dark;                 // 0x0068(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Red;                  // 0x0090(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Yellow;               // 0x00B8(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Blue;                 // 0x00E0(0x0028)()
	struct FSlateColor                            CallFunc_GetSlateColorScheme_Green;                // 0x0108(0x0028)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCE[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0018)()
	class UTextBlock*                             K2Node_Select_Default_1;                           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCF[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0160(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0178(0x0018)()
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_SetValueText");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText) == 0x000190, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_SetValueText");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, Temp_bool_Variable) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, Temp_text_Variable) == 0x000008, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, Temp_text_Variable_1) == 0x000020, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, Temp_bool_Variable_1) == 0x000038, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, Temp_bool_Variable_2) == 0x000039, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_GetSlateColorScheme_White) == 0x000040, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_GetSlateColorScheme_White' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_GetSlateColorScheme_Dark) == 0x000068, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_GetSlateColorScheme_Dark' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_GetSlateColorScheme_Red) == 0x000090, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_GetSlateColorScheme_Red' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_GetSlateColorScheme_Yellow) == 0x0000B8, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_GetSlateColorScheme_Yellow' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_GetSlateColorScheme_Blue) == 0x0000E0, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_GetSlateColorScheme_Blue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_GetSlateColorScheme_Green) == 0x000108, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_GetSlateColorScheme_Green' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000130, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_BooleanAND_ReturnValue) == 0x000131, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, K2Node_Select_Default) == 0x000138, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, K2Node_Select_Default_1) == 0x000150, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000158, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, CallFunc_Conv_IntToText_ReturnValue) == 0x000160, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SetValueText, K2Node_Select_Default_2) == 0x000178, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SetValueText::K2Node_Select_Default_2' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1
// 0x0008 (0x0008 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1 final 
{
public:
	class UObject*                                Event_Receiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1) == 0x000008, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1, Event_Receiver) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_SequenceEvent__ENTRYPOINTW_MissionScore_ScorePanel_SubEntry_1::Event_Receiver' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_BackPage) == 0x000001, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_BackPage");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_BackPage) == 0x000001, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_BackPage");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_BackPage, Handled) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_BackPage::Handled' has a wrong offset!");

// Function W_MissionScore_ScorePanel_SubEntry.W_MissionScore_ScorePanel_SubEntry_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget");
static_assert(sizeof(W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget) == 0x000008, "Wrong size on W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget");
static_assert(offsetof(W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_MissionScore_ScorePanel_SubEntry_C_GetFocusTarget::Focus' has a wrong offset!");

}

