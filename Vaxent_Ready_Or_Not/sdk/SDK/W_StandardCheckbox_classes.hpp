#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardCheckbox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_StandardCheckbox.W_StandardCheckbox_C
// 0x00D8 (0x0338 - 0x0260)
class UW_StandardCheckbox_C final  : public URealtimeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                CheckboxButton;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CheckboxCheckedImage;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Checked;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Down;                                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Highlight;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Up;                                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCheckStateChange;                                // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bChecked;                                          // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E6A[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             DescriptionWidget;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   DescriptionText;                                   // 0x02F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UFMODEvent*                             HoveredSound;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             CheckedSound;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             UncheckedSound;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           CheckBoxColor;                                     // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OnCheckStateChange__DelegateSignature(bool bNewCheckState);
	void OnReleased__DelegateSignature();
	void OnPressed__DelegateSignature();
	void OnHovered__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void ExecuteUbergraph_W_StandardCheckbox(int32 EntryPoint, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, bool Temp_bool_Variable, bool K2Node_Event_IsDesignTime, class UFMODEvent* K2Node_Select_Default, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue_1);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnSynchronizeProperties();
	void BndEvt__CheckboxButton_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CheckboxButton_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CheckboxButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__CheckboxButton_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__CheckboxButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void UpdateCheckVisibility();
	void SetCheckedState(bool NewChecked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_StandardCheckbox_C">();
	}
	static class UW_StandardCheckbox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_StandardCheckbox_C>();
	}
};
static_assert(alignof(UW_StandardCheckbox_C) == 0x000008, "Wrong alignment on UW_StandardCheckbox_C");
static_assert(sizeof(UW_StandardCheckbox_C) == 0x000338, "Wrong size on UW_StandardCheckbox_C");
static_assert(offsetof(UW_StandardCheckbox_C, UberGraphFrame) == 0x000260, "Member 'UW_StandardCheckbox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, CheckboxButton) == 0x000268, "Member 'UW_StandardCheckbox_C::CheckboxButton' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, CheckboxCheckedImage) == 0x000270, "Member 'UW_StandardCheckbox_C::CheckboxCheckedImage' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, Checked) == 0x000278, "Member 'UW_StandardCheckbox_C::Checked' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, Down) == 0x000280, "Member 'UW_StandardCheckbox_C::Down' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, Highlight) == 0x000288, "Member 'UW_StandardCheckbox_C::Highlight' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, Up) == 0x000290, "Member 'UW_StandardCheckbox_C::Up' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, OnCheckStateChange) == 0x000298, "Member 'UW_StandardCheckbox_C::OnCheckStateChange' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, OnReleased) == 0x0002A8, "Member 'UW_StandardCheckbox_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, OnPressed) == 0x0002B8, "Member 'UW_StandardCheckbox_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, OnHovered) == 0x0002C8, "Member 'UW_StandardCheckbox_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, OnUnhovered) == 0x0002D8, "Member 'UW_StandardCheckbox_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, bChecked) == 0x0002E8, "Member 'UW_StandardCheckbox_C::bChecked' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, DescriptionWidget) == 0x0002F0, "Member 'UW_StandardCheckbox_C::DescriptionWidget' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, DescriptionText) == 0x0002F8, "Member 'UW_StandardCheckbox_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, HoveredSound) == 0x000310, "Member 'UW_StandardCheckbox_C::HoveredSound' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, CheckedSound) == 0x000318, "Member 'UW_StandardCheckbox_C::CheckedSound' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, UncheckedSound) == 0x000320, "Member 'UW_StandardCheckbox_C::UncheckedSound' has a wrong offset!");
static_assert(offsetof(UW_StandardCheckbox_C, CheckBoxColor) == 0x000328, "Member 'UW_StandardCheckbox_C::CheckBoxColor' has a wrong offset!");

}

