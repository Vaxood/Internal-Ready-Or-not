#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPF_UI

#include "Basic.hpp"

#include "BPF_UI_classes.hpp"
#include "BPF_UI_parameters.hpp"


namespace SDK
{

// Function BPF_UI.BPF_UI_C.RemoveSpacesFromString
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             ReturnText                                             (Parm, OutParm)
// class FName                             ReturnName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Replace_ReturnValue                           (ZeroConstructor, HasGetValueTypeHash)
// class FName                             CallFunc_Conv_StringToName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()

void UBPF_UI_C::RemoveSpacesFromString(const class FString& String, class UObject* __WorldContext, class FString* ReturnString, class FText* ReturnText, class FName* ReturnName, const class FString& CallFunc_Replace_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "RemoveSpacesFromString");

	Params::BPF_UI_C_RemoveSpacesFromString Parms{};

	Parms.String = std::move(String);
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_Replace_ReturnValue = std::move(CallFunc_Replace_ReturnValue);
	Parms.CallFunc_Conv_StringToName_ReturnValue = CallFunc_Conv_StringToName_ReturnValue;
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ReturnString != nullptr)
		*ReturnString = Parms.ReturnString;

	if (ReturnText != nullptr)
		*ReturnText = std::move(Parms.ReturnText);

	if (ReturnName != nullptr)
		*ReturnName = std::move(Parms.ReturnName);
}


// Function BPF_UI.BPF_UI_C.GetLoadoutCategoryText
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemCategory                           ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Category_Text                                          (Parm, OutParm)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::GetLoadoutCategoryText(EItemCategory ItemCategory, class UObject* __WorldContext, class FText* Category_Text, bool K2Node_SwitchEnum_CmpSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetLoadoutCategoryText");

	Params::BPF_UI_C_GetLoadoutCategoryText Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.__WorldContext = __WorldContext;
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Category_Text != nullptr)
		*Category_Text = std::move(Parms.Category_Text);
}


// Function BPF_UI.BPF_UI_C.GetCustomizationCategoryText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECustomizationType                      ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Category_Text                                          (Parm, OutParm)
// ECustomizationType                      Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Temp_text_Variable                                     ()
// class FText                             Temp_text_Variable_1                                   ()
// class FText                             Temp_text_Variable_2                                   ()
// class FText                             Temp_text_Variable_3                                   ()
// class FText                             Temp_text_Variable_4                                   ()
// class FText                             Temp_text_Variable_5                                   ()
// class FText                             Temp_text_Variable_6                                   ()
// class FText                             Temp_text_Variable_7                                   ()
// class FText                             Temp_text_Variable_8                                   ()
// class FText                             Temp_text_Variable_9                                   ()
// class FText                             Temp_text_Variable_10                                  ()
// class FText                             Temp_text_Variable_11                                  ()
// class FText                             Temp_text_Variable_12                                  ()
// class FText                             Temp_text_Variable_13                                  ()
// class FText                             Temp_text_Variable_14                                  ()
// class FText                             Temp_text_Variable_15                                  ()
// class FText                             K2Node_Select_Default                                  ()

void UBPF_UI_C::GetCustomizationCategoryText(ECustomizationType ItemCategory, class UObject* __WorldContext, class FText* Category_Text, ECustomizationType Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, class FText Temp_text_Variable_15, class FText K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetCustomizationCategoryText");

	Params::BPF_UI_C_GetCustomizationCategoryText Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.Temp_text_Variable_1 = Temp_text_Variable_1;
	Parms.Temp_text_Variable_2 = Temp_text_Variable_2;
	Parms.Temp_text_Variable_3 = Temp_text_Variable_3;
	Parms.Temp_text_Variable_4 = Temp_text_Variable_4;
	Parms.Temp_text_Variable_5 = Temp_text_Variable_5;
	Parms.Temp_text_Variable_6 = Temp_text_Variable_6;
	Parms.Temp_text_Variable_7 = Temp_text_Variable_7;
	Parms.Temp_text_Variable_8 = Temp_text_Variable_8;
	Parms.Temp_text_Variable_9 = Temp_text_Variable_9;
	Parms.Temp_text_Variable_10 = Temp_text_Variable_10;
	Parms.Temp_text_Variable_11 = Temp_text_Variable_11;
	Parms.Temp_text_Variable_12 = Temp_text_Variable_12;
	Parms.Temp_text_Variable_13 = Temp_text_Variable_13;
	Parms.Temp_text_Variable_14 = Temp_text_Variable_14;
	Parms.Temp_text_Variable_15 = Temp_text_Variable_15;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Category_Text != nullptr)
		*Category_Text = std::move(Parms.Category_Text);
}


// Function BPF_UI.BPF_UI_C.GetItemClassText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemClass                              ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Category_Text                                          (Parm, OutParm)
// EItemClass                              Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Temp_text_Variable                                     ()
// class FText                             Temp_text_Variable_1                                   ()
// class FText                             Temp_text_Variable_2                                   ()
// class FText                             Temp_text_Variable_3                                   ()
// class FText                             Temp_text_Variable_4                                   ()
// class FText                             Temp_text_Variable_5                                   ()
// class FText                             Temp_text_Variable_6                                   ()
// class FText                             Temp_text_Variable_7                                   ()
// class FText                             Temp_text_Variable_8                                   ()
// class FText                             Temp_text_Variable_9                                   ()
// class FText                             Temp_text_Variable_10                                  ()
// class FText                             Temp_text_Variable_11                                  ()
// class FText                             Temp_text_Variable_12                                  ()
// class FText                             Temp_text_Variable_13                                  ()
// class FText                             Temp_text_Variable_14                                  ()
// class FText                             Temp_text_Variable_15                                  ()
// class FText                             Temp_text_Variable_16                                  ()
// class FText                             Temp_text_Variable_17                                  ()
// class FText                             Temp_text_Variable_18                                  ()
// class FText                             Temp_text_Variable_19                                  ()
// class FText                             K2Node_Select_Default                                  ()

void UBPF_UI_C::GetItemClassText(EItemClass ItemCategory, class UObject* __WorldContext, class FText* Category_Text, EItemClass Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, class FText Temp_text_Variable_15, class FText Temp_text_Variable_16, class FText Temp_text_Variable_17, class FText Temp_text_Variable_18, class FText Temp_text_Variable_19, class FText K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetItemClassText");

	Params::BPF_UI_C_GetItemClassText Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.Temp_text_Variable_1 = Temp_text_Variable_1;
	Parms.Temp_text_Variable_2 = Temp_text_Variable_2;
	Parms.Temp_text_Variable_3 = Temp_text_Variable_3;
	Parms.Temp_text_Variable_4 = Temp_text_Variable_4;
	Parms.Temp_text_Variable_5 = Temp_text_Variable_5;
	Parms.Temp_text_Variable_6 = Temp_text_Variable_6;
	Parms.Temp_text_Variable_7 = Temp_text_Variable_7;
	Parms.Temp_text_Variable_8 = Temp_text_Variable_8;
	Parms.Temp_text_Variable_9 = Temp_text_Variable_9;
	Parms.Temp_text_Variable_10 = Temp_text_Variable_10;
	Parms.Temp_text_Variable_11 = Temp_text_Variable_11;
	Parms.Temp_text_Variable_12 = Temp_text_Variable_12;
	Parms.Temp_text_Variable_13 = Temp_text_Variable_13;
	Parms.Temp_text_Variable_14 = Temp_text_Variable_14;
	Parms.Temp_text_Variable_15 = Temp_text_Variable_15;
	Parms.Temp_text_Variable_16 = Temp_text_Variable_16;
	Parms.Temp_text_Variable_17 = Temp_text_Variable_17;
	Parms.Temp_text_Variable_18 = Temp_text_Variable_18;
	Parms.Temp_text_Variable_19 = Temp_text_Variable_19;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Category_Text != nullptr)
		*Category_Text = std::move(Parms.Category_Text);
}


// Function BPF_UI.BPF_UI_C.GetAttachmentSlotText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWeaponAttachmentType                   AttachmentType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             SlotText                                               (Parm, OutParm)
// EWeaponAttachmentType                   Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Temp_text_Variable                                     ()
// class FText                             Temp_text_Variable_1                                   ()
// class FText                             Temp_text_Variable_2                                   ()
// class FText                             Temp_text_Variable_3                                   ()
// class FText                             Temp_text_Variable_4                                   ()
// class FText                             Temp_text_Variable_5                                   ()
// class FText                             Temp_text_Variable_6                                   ()
// class FText                             Temp_text_Variable_7                                   ()
// class FText                             Temp_text_Variable_8                                   ()
// class FText                             K2Node_Select_Default                                  ()

void UBPF_UI_C::GetAttachmentSlotText(EWeaponAttachmentType AttachmentType, class UObject* __WorldContext, class FText* SlotText, EWeaponAttachmentType Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetAttachmentSlotText");

	Params::BPF_UI_C_GetAttachmentSlotText Parms{};

	Parms.AttachmentType = AttachmentType;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.Temp_text_Variable_1 = Temp_text_Variable_1;
	Parms.Temp_text_Variable_2 = Temp_text_Variable_2;
	Parms.Temp_text_Variable_3 = Temp_text_Variable_3;
	Parms.Temp_text_Variable_4 = Temp_text_Variable_4;
	Parms.Temp_text_Variable_5 = Temp_text_Variable_5;
	Parms.Temp_text_Variable_6 = Temp_text_Variable_6;
	Parms.Temp_text_Variable_7 = Temp_text_Variable_7;
	Parms.Temp_text_Variable_8 = Temp_text_Variable_8;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SlotText != nullptr)
		*SlotText = std::move(Parms.SlotText);
}


// Function BPF_UI.BPF_UI_C.GetItemType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           BaseItemClass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemType                               Item_Type                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABaseItem*                        CallFunc_GetClassDefaultObject_ReturnValue             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::GetItemType(class UClass* BaseItemClass, class UObject* __WorldContext, EItemType* Item_Type, class ABaseItem* CallFunc_GetClassDefaultObject_ReturnValue, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetItemType");

	Params::BPF_UI_C_GetItemType Parms{};

	Parms.BaseItemClass = BaseItemClass;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetClassDefaultObject_ReturnValue = CallFunc_GetClassDefaultObject_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Item_Type != nullptr)
		*Item_Type = std::move(Parms.Item_Type);
}


// Function BPF_UI.BPF_UI_C.UpdateCurrent_LoadoutUI_Slot
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_LoadoutSlot_C*                 CurrentSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UUserWidget*>              CallFunc_GetAllWidgetsWithInterface_FoundWidgets       (ReferenceParm, ContainsInstancedReference)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      CallFunc_Array_Get_Item                                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class ILoadoutUI_C>    K2Node_DynamicCast_AsLoadout_UI                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::UpdateCurrent_LoadoutUI_Slot(class UObject* WorldContextObject, class UW_LoadoutSlot_C* CurrentSlot, class UObject* __WorldContext, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class UUserWidget* CallFunc_Array_Get_Item, TScriptInterface<class ILoadoutUI_C> K2Node_DynamicCast_AsLoadout_UI, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "UpdateCurrent_LoadoutUI_Slot");

	Params::BPF_UI_C_UpdateCurrent_LoadoutUI_Slot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CurrentSlot = CurrentSlot;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetAllWidgetsWithInterface_FoundWidgets = std::move(CallFunc_GetAllWidgetsWithInterface_FoundWidgets);
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.K2Node_DynamicCast_AsLoadout_UI = K2Node_DynamicCast_AsLoadout_UI;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	CallFunc_GetAllWidgetsWithInterface_FoundWidgets = std::move(Parms.CallFunc_GetAllWidgetsWithInterface_FoundWidgets);
}


// Function BPF_UI.BPF_UI_C.GetLinearColorScheme
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     White                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Dark                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Red                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Yellow                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Blue                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Green                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPDA_UI_Styleguide_C*             StyleGuide                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_White                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Dark                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Red                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Yellow                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Blue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Green                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetLinearColorScheme(float Opacity, class UObject* __WorldContext, struct FLinearColor* White, struct FLinearColor* Dark, struct FLinearColor* Red, struct FLinearColor* Yellow, struct FLinearColor* Blue, struct FLinearColor* Green, class UPDA_UI_Styleguide_C* StyleGuide, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetLinearColorScheme");

	Params::BPF_UI_C_GetLinearColorScheme Parms{};

	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;
	Parms.StyleGuide = StyleGuide;
	Parms.CallFunc_GetAllColors_White = std::move(CallFunc_GetAllColors_White);
	Parms.CallFunc_GetAllColors_Dark = std::move(CallFunc_GetAllColors_Dark);
	Parms.CallFunc_GetAllColors_Red = std::move(CallFunc_GetAllColors_Red);
	Parms.CallFunc_GetAllColors_Yellow = std::move(CallFunc_GetAllColors_Yellow);
	Parms.CallFunc_GetAllColors_Blue = std::move(CallFunc_GetAllColors_Blue);
	Parms.CallFunc_GetAllColors_Green = std::move(CallFunc_GetAllColors_Green);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (White != nullptr)
		*White = Parms.White;

	if (Dark != nullptr)
		*Dark = Parms.Dark;

	if (Red != nullptr)
		*Red = Parms.Red;

	if (Yellow != nullptr)
		*Yellow = Parms.Yellow;

	if (Blue != nullptr)
		*Blue = Parms.Blue;

	if (Green != nullptr)
		*Green = Parms.Green;
}


// Function BPF_UI.BPF_UI_C.GetSlateColorScheme
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      White                                                  (Parm, OutParm)
// struct FSlateColor                      Dark                                                   (Parm, OutParm)
// struct FSlateColor                      Red                                                    (Parm, OutParm)
// struct FSlateColor                      Yellow                                                 (Parm, OutParm)
// struct FSlateColor                      Blue                                                   (Parm, OutParm)
// struct FSlateColor                      Green                                                  (Parm, OutParm)
// class UPDA_UI_Styleguide_C*             StyleGuide                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_White                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Dark                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Red                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Yellow                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Blue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Green                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      K2Node_MakeStruct_SlateColor                           ()
// struct FSlateColor                      K2Node_MakeStruct_SlateColor_1                         ()
// struct FSlateColor                      K2Node_MakeStruct_SlateColor_2                         ()
// struct FSlateColor                      K2Node_MakeStruct_SlateColor_3                         ()
// struct FSlateColor                      K2Node_MakeStruct_SlateColor_4                         ()
// struct FSlateColor                      K2Node_MakeStruct_SlateColor_5                         ()

void UBPF_UI_C::GetSlateColorScheme(float Opacity, class UObject* __WorldContext, struct FSlateColor* White, struct FSlateColor* Dark, struct FSlateColor* Red, struct FSlateColor* Yellow, struct FSlateColor* Blue, struct FSlateColor* Green, class UPDA_UI_Styleguide_C* StyleGuide, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const struct FSlateColor& K2Node_MakeStruct_SlateColor_2, const struct FSlateColor& K2Node_MakeStruct_SlateColor_3, const struct FSlateColor& K2Node_MakeStruct_SlateColor_4, const struct FSlateColor& K2Node_MakeStruct_SlateColor_5)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetSlateColorScheme");

	Params::BPF_UI_C_GetSlateColorScheme Parms{};

	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;
	Parms.StyleGuide = StyleGuide;
	Parms.CallFunc_GetAllColors_White = std::move(CallFunc_GetAllColors_White);
	Parms.CallFunc_GetAllColors_Dark = std::move(CallFunc_GetAllColors_Dark);
	Parms.CallFunc_GetAllColors_Red = std::move(CallFunc_GetAllColors_Red);
	Parms.CallFunc_GetAllColors_Yellow = std::move(CallFunc_GetAllColors_Yellow);
	Parms.CallFunc_GetAllColors_Blue = std::move(CallFunc_GetAllColors_Blue);
	Parms.CallFunc_GetAllColors_Green = std::move(CallFunc_GetAllColors_Green);
	Parms.K2Node_MakeStruct_SlateColor = std::move(K2Node_MakeStruct_SlateColor);
	Parms.K2Node_MakeStruct_SlateColor_1 = std::move(K2Node_MakeStruct_SlateColor_1);
	Parms.K2Node_MakeStruct_SlateColor_2 = std::move(K2Node_MakeStruct_SlateColor_2);
	Parms.K2Node_MakeStruct_SlateColor_3 = std::move(K2Node_MakeStruct_SlateColor_3);
	Parms.K2Node_MakeStruct_SlateColor_4 = std::move(K2Node_MakeStruct_SlateColor_4);
	Parms.K2Node_MakeStruct_SlateColor_5 = std::move(K2Node_MakeStruct_SlateColor_5);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (White != nullptr)
		*White = Parms.White;

	if (Dark != nullptr)
		*Dark = Parms.Dark;

	if (Red != nullptr)
		*Red = Parms.Red;

	if (Yellow != nullptr)
		*Yellow = Parms.Yellow;

	if (Blue != nullptr)
		*Blue = Parms.Blue;

	if (Green != nullptr)
		*Green = Parms.Green;
}


// Function BPF_UI.BPF_UI_C.GetPlayerTeamColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETeamType                               Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      SlateColor                                             (Parm, OutParm)
// class UPDA_UI_Styleguide_C*             StyleGuide                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETeamType                               Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetBlueTeamColor_BlueTeam                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_White                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Dark                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Red                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Yellow                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Blue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Green                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetGoldTeamColor_RedTeam                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetRedTeamColor_RedTeam                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      K2Node_MakeStruct_SlateColor                           ()

void UBPF_UI_C::GetPlayerTeamColor(ETeamType Team, float Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor, class UPDA_UI_Styleguide_C* StyleGuide, ETeamType Temp_byte_Variable, const struct FLinearColor& CallFunc_GetBlueTeamColor_BlueTeam, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green, const struct FLinearColor& CallFunc_GetGoldTeamColor_RedTeam, const struct FLinearColor& CallFunc_GetRedTeamColor_RedTeam, const struct FLinearColor& K2Node_Select_Default, const struct FSlateColor& K2Node_MakeStruct_SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetPlayerTeamColor");

	Params::BPF_UI_C_GetPlayerTeamColor Parms{};

	Parms.Team = Team;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;
	Parms.StyleGuide = StyleGuide;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.CallFunc_GetBlueTeamColor_BlueTeam = std::move(CallFunc_GetBlueTeamColor_BlueTeam);
	Parms.CallFunc_GetAllColors_White = std::move(CallFunc_GetAllColors_White);
	Parms.CallFunc_GetAllColors_Dark = std::move(CallFunc_GetAllColors_Dark);
	Parms.CallFunc_GetAllColors_Red = std::move(CallFunc_GetAllColors_Red);
	Parms.CallFunc_GetAllColors_Yellow = std::move(CallFunc_GetAllColors_Yellow);
	Parms.CallFunc_GetAllColors_Blue = std::move(CallFunc_GetAllColors_Blue);
	Parms.CallFunc_GetAllColors_Green = std::move(CallFunc_GetAllColors_Green);
	Parms.CallFunc_GetGoldTeamColor_RedTeam = std::move(CallFunc_GetGoldTeamColor_RedTeam);
	Parms.CallFunc_GetRedTeamColor_RedTeam = std::move(CallFunc_GetRedTeamColor_RedTeam);
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.K2Node_MakeStruct_SlateColor = std::move(K2Node_MakeStruct_SlateColor);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = Parms.LinearColor;

	if (SlateColor != nullptr)
		*SlateColor = Parms.SlateColor;
}


// Function BPF_UI.BPF_UI_C.GetArmorCoverageText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EArmourCoverage                         Coverage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CoverageText                                           (Parm, OutParm)
// EArmourCoverage                         Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Temp_text_Variable                                     ()
// class FText                             Temp_text_Variable_1                                   ()
// class FText                             Temp_text_Variable_2                                   ()
// class FText                             Temp_text_Variable_3                                   ()
// class FText                             K2Node_Select_Default                                  ()

void UBPF_UI_C::GetArmorCoverageText(EArmourCoverage Coverage, class UObject* __WorldContext, class FText* CoverageText, EArmourCoverage Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetArmorCoverageText");

	Params::BPF_UI_C_GetArmorCoverageText Parms{};

	Parms.Coverage = Coverage;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.Temp_text_Variable_1 = Temp_text_Variable_1;
	Parms.Temp_text_Variable_2 = Temp_text_Variable_2;
	Parms.Temp_text_Variable_3 = Temp_text_Variable_3;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CoverageText != nullptr)
		*CoverageText = std::move(Parms.CoverageText);
}


// Function BPF_UI.BPF_UI_C.GetLoadoutWidget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_Loadout_V2_C*                  AsW_Loadout_V2                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AReadyOrNotGameState*             CallFunc_GetReadyOrNotGameState_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_Loadout_V2_C*                  K2Node_DynamicCast_AsW_Loadout_V2                      (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::GetLoadoutWidget(class UObject* __WorldContext, class UW_Loadout_V2_C** AsW_Loadout_V2, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UW_Loadout_V2_C* K2Node_DynamicCast_AsW_Loadout_V2, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetLoadoutWidget");

	Params::BPF_UI_C_GetLoadoutWidget Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetReadyOrNotGameState_ReturnValue = CallFunc_GetReadyOrNotGameState_ReturnValue;
	Parms.K2Node_DynamicCast_AsW_Loadout_V2 = K2Node_DynamicCast_AsW_Loadout_V2;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AsW_Loadout_V2 != nullptr)
		*AsW_Loadout_V2 = std::move(Parms.AsW_Loadout_V2);
}


// Function BPF_UI.BPF_UI_C.GetMunitionTypeText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELoadoutMunitionSlotType                MunitionType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             MunitionText                                           (Parm, OutParm)
// ELoadoutMunitionSlotType                Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Temp_text_Variable                                     ()
// class FText                             Temp_text_Variable_1                                   ()
// class FText                             Temp_text_Variable_2                                   ()
// class FText                             Temp_text_Variable_3                                   ()
// class FText                             K2Node_Select_Default                                  ()

void UBPF_UI_C::GetMunitionTypeText(ELoadoutMunitionSlotType MunitionType, class UObject* __WorldContext, class FText* MunitionText, ELoadoutMunitionSlotType Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetMunitionTypeText");

	Params::BPF_UI_C_GetMunitionTypeText Parms{};

	Parms.MunitionType = MunitionType;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.Temp_text_Variable_1 = Temp_text_Variable_1;
	Parms.Temp_text_Variable_2 = Temp_text_Variable_2;
	Parms.Temp_text_Variable_3 = Temp_text_Variable_3;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MunitionText != nullptr)
		*MunitionText = std::move(Parms.MunitionText);
}


// Function BPF_UI.BPF_UI_C.GetTeamColorByEquippingSwatEnum
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEquippingSwat                          EquippingSwat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      SlateColor                                             (Parm, OutParm)
// class UPDA_UI_Styleguide_C*             StyleGuide                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEquippingSwat                          Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_White                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Dark                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Red                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Yellow                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Blue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetAllColors_Green                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetRedTeamColor_RedTeam                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetBlueTeamColor_BlueTeam                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      K2Node_MakeStruct_SlateColor                           ()

void UBPF_UI_C::GetTeamColorByEquippingSwatEnum(EEquippingSwat EquippingSwat, float Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor, class UPDA_UI_Styleguide_C* StyleGuide, EEquippingSwat Temp_byte_Variable, const struct FLinearColor& CallFunc_GetAllColors_White, const struct FLinearColor& CallFunc_GetAllColors_Dark, const struct FLinearColor& CallFunc_GetAllColors_Red, const struct FLinearColor& CallFunc_GetAllColors_Yellow, const struct FLinearColor& CallFunc_GetAllColors_Blue, const struct FLinearColor& CallFunc_GetAllColors_Green, const struct FLinearColor& CallFunc_GetRedTeamColor_RedTeam, const struct FLinearColor& CallFunc_GetBlueTeamColor_BlueTeam, const struct FLinearColor& K2Node_Select_Default, const struct FSlateColor& K2Node_MakeStruct_SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetTeamColorByEquippingSwatEnum");

	Params::BPF_UI_C_GetTeamColorByEquippingSwatEnum Parms{};

	Parms.EquippingSwat = EquippingSwat;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;
	Parms.StyleGuide = StyleGuide;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.CallFunc_GetAllColors_White = std::move(CallFunc_GetAllColors_White);
	Parms.CallFunc_GetAllColors_Dark = std::move(CallFunc_GetAllColors_Dark);
	Parms.CallFunc_GetAllColors_Red = std::move(CallFunc_GetAllColors_Red);
	Parms.CallFunc_GetAllColors_Yellow = std::move(CallFunc_GetAllColors_Yellow);
	Parms.CallFunc_GetAllColors_Blue = std::move(CallFunc_GetAllColors_Blue);
	Parms.CallFunc_GetAllColors_Green = std::move(CallFunc_GetAllColors_Green);
	Parms.CallFunc_GetRedTeamColor_RedTeam = std::move(CallFunc_GetRedTeamColor_RedTeam);
	Parms.CallFunc_GetBlueTeamColor_BlueTeam = std::move(CallFunc_GetBlueTeamColor_BlueTeam);
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.K2Node_MakeStruct_SlateColor = std::move(K2Node_MakeStruct_SlateColor);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = Parms.LinearColor;

	if (SlateColor != nullptr)
		*SlateColor = Parms.SlateColor;
}


// Function BPF_UI.BPF_UI_C.GetSyleGuide
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPDA_UI_Styleguide_C*             StyleGuide                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetSyleGuide(class UObject* __WorldContext, class UPDA_UI_Styleguide_C** StyleGuide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetSyleGuide");

	Params::BPF_UI_C_GetSyleGuide Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (StyleGuide != nullptr)
		*StyleGuide = std::move(Parms.StyleGuide);
}


// Function BPF_UI.BPF_UI_C.GetColorByName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ColorName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LinearColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      SlateColor                                             (Parm, OutParm)
// class UPDA_UI_Styleguide_C*             StyleGuide                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CallFunc_GetColorByName_LinearColor                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      CallFunc_GetColorByName_SlateColor                     ()

void UBPF_UI_C::GetColorByName(class FName ColorName, float Opacity, class UObject* __WorldContext, struct FLinearColor* LinearColor, struct FSlateColor* SlateColor, class UPDA_UI_Styleguide_C* StyleGuide, const struct FLinearColor& CallFunc_GetColorByName_LinearColor, const struct FSlateColor& CallFunc_GetColorByName_SlateColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetColorByName");

	Params::BPF_UI_C_GetColorByName Parms{};

	Parms.ColorName = ColorName;
	Parms.Opacity = Opacity;
	Parms.__WorldContext = __WorldContext;
	Parms.StyleGuide = StyleGuide;
	Parms.CallFunc_GetColorByName_LinearColor = std::move(CallFunc_GetColorByName_LinearColor);
	Parms.CallFunc_GetColorByName_SlateColor = std::move(CallFunc_GetColorByName_SlateColor);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearColor != nullptr)
		*LinearColor = Parms.LinearColor;

	if (SlateColor != nullptr)
		*SlateColor = Parms.SlateColor;
}


// Function BPF_UI.BPF_UI_C.TextIsNotEmpty
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotEmpty                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_TextIsEmpty_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::TextIsNotEmpty(class FText InText, class UObject* __WorldContext, bool* NotEmpty, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "TextIsNotEmpty");

	Params::BPF_UI_C_TextIsNotEmpty Parms{};

	Parms.InText = InText;
	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_TextIsEmpty_ReturnValue = CallFunc_TextIsEmpty_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NotEmpty != nullptr)
		*NotEmpty = std::move(Parms.NotEmpty);
}


// Function BPF_UI.BPF_UI_C.TextToName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OutName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Conv_TextToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// class FName                             Temp_name_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CallFunc_Conv_StringToName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_StringIsEmpty_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::TextToName(class FText InText, class UObject* __WorldContext, class FName* OutName, bool Temp_bool_Variable, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FName Temp_name_Variable, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_StringIsEmpty_ReturnValue, class FName K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "TextToName");

	Params::BPF_UI_C_TextToName Parms{};

	Parms.InText = InText;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_Conv_TextToString_ReturnValue = std::move(CallFunc_Conv_TextToString_ReturnValue);
	Parms.Temp_name_Variable = Temp_name_Variable;
	Parms.CallFunc_Conv_StringToName_ReturnValue = CallFunc_Conv_StringToName_ReturnValue;
	Parms.CallFunc_StringIsEmpty_ReturnValue = CallFunc_StringIsEmpty_ReturnValue;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);
}


// Function BPF_UI.BPF_UI_C.GetCustomizationGroupByCategory
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECustomizationType                      Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Group                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECustomizationType                      Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_2                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_3                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_4                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_5                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_6                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_7                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_8                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_9                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_10                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_11                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_12                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_13                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_14                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_15                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   Temp_byte_Variable_16                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CustomizationGroups                   K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPF_UI_C::GetCustomizationGroupByCategory(ECustomizationType Category, class UObject* __WorldContext, E_CustomizationGroups* Group, ECustomizationType Temp_byte_Variable, E_CustomizationGroups Temp_byte_Variable_1, E_CustomizationGroups Temp_byte_Variable_2, E_CustomizationGroups Temp_byte_Variable_3, E_CustomizationGroups Temp_byte_Variable_4, E_CustomizationGroups Temp_byte_Variable_5, E_CustomizationGroups Temp_byte_Variable_6, E_CustomizationGroups Temp_byte_Variable_7, E_CustomizationGroups Temp_byte_Variable_8, E_CustomizationGroups Temp_byte_Variable_9, E_CustomizationGroups Temp_byte_Variable_10, E_CustomizationGroups Temp_byte_Variable_11, E_CustomizationGroups Temp_byte_Variable_12, E_CustomizationGroups Temp_byte_Variable_13, E_CustomizationGroups Temp_byte_Variable_14, E_CustomizationGroups Temp_byte_Variable_15, E_CustomizationGroups Temp_byte_Variable_16, E_CustomizationGroups K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetCustomizationGroupByCategory");

	Params::BPF_UI_C_GetCustomizationGroupByCategory Parms{};

	Parms.Category = Category;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.Temp_byte_Variable_2 = Temp_byte_Variable_2;
	Parms.Temp_byte_Variable_3 = Temp_byte_Variable_3;
	Parms.Temp_byte_Variable_4 = Temp_byte_Variable_4;
	Parms.Temp_byte_Variable_5 = Temp_byte_Variable_5;
	Parms.Temp_byte_Variable_6 = Temp_byte_Variable_6;
	Parms.Temp_byte_Variable_7 = Temp_byte_Variable_7;
	Parms.Temp_byte_Variable_8 = Temp_byte_Variable_8;
	Parms.Temp_byte_Variable_9 = Temp_byte_Variable_9;
	Parms.Temp_byte_Variable_10 = Temp_byte_Variable_10;
	Parms.Temp_byte_Variable_11 = Temp_byte_Variable_11;
	Parms.Temp_byte_Variable_12 = Temp_byte_Variable_12;
	Parms.Temp_byte_Variable_13 = Temp_byte_Variable_13;
	Parms.Temp_byte_Variable_14 = Temp_byte_Variable_14;
	Parms.Temp_byte_Variable_15 = Temp_byte_Variable_15;
	Parms.Temp_byte_Variable_16 = Temp_byte_Variable_16;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Group != nullptr)
		*Group = std::move(Parms.Group);
}


// Function BPF_UI.BPF_UI_C.GetCustomizationGroupText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_CustomizationGroups                   Group                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)
// E_CustomizationGroups                   Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Temp_text_Variable                                     ()
// class FText                             Temp_text_Variable_1                                   ()
// class FText                             Temp_text_Variable_2                                   ()
// class FText                             Temp_text_Variable_3                                   ()
// class FText                             Temp_text_Variable_4                                   ()
// class FText                             Temp_text_Variable_5                                   ()
// class FText                             K2Node_Select_Default                                  ()

void UBPF_UI_C::GetCustomizationGroupText(E_CustomizationGroups Group, class UObject* __WorldContext, class FText* Text, E_CustomizationGroups Temp_byte_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "GetCustomizationGroupText");

	Params::BPF_UI_C_GetCustomizationGroupText Parms{};

	Parms.Group = Group;
	Parms.__WorldContext = __WorldContext;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_text_Variable = Temp_text_Variable;
	Parms.Temp_text_Variable_1 = Temp_text_Variable_1;
	Parms.Temp_text_Variable_2 = Temp_text_Variable_2;
	Parms.Temp_text_Variable_3 = Temp_text_Variable_3;
	Parms.Temp_text_Variable_4 = Temp_text_Variable_4;
	Parms.Temp_text_Variable_5 = Temp_text_Variable_5;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BPF_UI.BPF_UI_C.IsCurrentPresetDirty
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDirty                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AReadyOrNotGameState*             CallFunc_GetReadyOrNotGameState_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_GetCurrentPresetDisplayName_ReturnValue       ()
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Conv_TextToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// struct FSavedLoadout                    CallFunc_GetPreset_ReturnValue                         ()
// struct FSavedLoadout                    CallFunc_GetActiveLoadout_ReturnValue                  ()
// TArray<struct FSavedLoadout>            K2Node_MakeArray_Array                                 (ConstParm, ReferenceParm)
// bool                                    CallFunc_Array_Contains_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPF_UI_C::IsCurrentPresetDirty(class UObject* __WorldContext, bool* IsDirty, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class FText CallFunc_GetCurrentPresetDisplayName_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, const struct FSavedLoadout& CallFunc_GetPreset_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_ReturnValue, TArray<struct FSavedLoadout>& K2Node_MakeArray_Array, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPF_UI_C", "IsCurrentPresetDirty");

	Params::BPF_UI_C_IsCurrentPresetDirty Parms{};

	Parms.__WorldContext = __WorldContext;
	Parms.CallFunc_GetReadyOrNotGameState_ReturnValue = CallFunc_GetReadyOrNotGameState_ReturnValue;
	Parms.CallFunc_GetCurrentPresetDisplayName_ReturnValue = CallFunc_GetCurrentPresetDisplayName_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_Conv_TextToString_ReturnValue = std::move(CallFunc_Conv_TextToString_ReturnValue);
	Parms.CallFunc_GetPreset_ReturnValue = std::move(CallFunc_GetPreset_ReturnValue);
	Parms.CallFunc_GetActiveLoadout_ReturnValue = std::move(CallFunc_GetActiveLoadout_ReturnValue);
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_Array_Contains_ReturnValue = CallFunc_Array_Contains_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsDirty != nullptr)
		*IsDirty = std::move(Parms.IsDirty);
}


// Function BPF_UI.BPF_UI_C.GetAmmoCategoryText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array                                 (ReferenceParm)
// class UClass*                           K2Node_ClassDynamicCast_AsPepperball_Gun               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ClassDynamicCast_bSuccess                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_Format_ReturnValue                            ()
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData                   (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_1                               (ReferenceParm)
// class UClass*                           K2Node_ClassDynamicCast_AsBase_Magazine_Weapon         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ClassDynamicCast_bSuccess_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_Format_ReturnValue_1                          ()
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_1                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_2                               (ReferenceParm)
// class UClass*                           K2Node_ClassDynamicCast_AsShotgun                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ClassDynamicCast_bSuccess_2                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_Format_ReturnValue_2                          ()
// struct FFormatArgumentData              K2Node_MakeStruct_FormatArgumentData_2                 (HasGetValueTypeHash)
// TArray<struct FFormatArgumentData>      K2Node_MakeArray_Array_3                               (ReferenceParm)
// class UClass*                           K2Node_ClassDynamicCast_AsTaser                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_ClassDynamicCast_bSuccess_3                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_Format_ReturnValue_3                          ()

void UBPF_UI_C::GetAmmoCategoryText(class UClass* ItemData, class UObject* __WorldContext, class FText* Text, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class UClass* K2Node_ClassDynamicCast_AsPepperball_Gun, bool K2Node_ClassDynamicCast_bSuccess, class FText CallFunc_Format_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class UClass* K2Node_ClassDynamicCast_AsBase_Magazine_Weapon, bool K2Node_ClassDynamicCast_bSuccess_1, class FText CallFunc_Format_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, class UClass* K2Node_ClassDynamicCast_AsShotgun, bool K2Node_ClassDynamicCast_bSuccess_2, class FText CallFunc_Format_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_3, class UClass* K2Node_ClassDynamicCast_AsTaser, bool K2Node_ClassDynamicCast_bSuccess_3, class FText CallFunc_Format_ReturnValue_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPF_UI_C", "GetAmmoCategoryText");

	Params::BPF_UI_C_GetAmmoCategoryText Parms{};

	Parms.ItemData = ItemData;
	Parms.__WorldContext = __WorldContext;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.K2Node_ClassDynamicCast_AsPepperball_Gun = K2Node_ClassDynamicCast_AsPepperball_Gun;
	Parms.K2Node_ClassDynamicCast_bSuccess = K2Node_ClassDynamicCast_bSuccess;
	Parms.CallFunc_Format_ReturnValue = CallFunc_Format_ReturnValue;
	Parms.K2Node_MakeStruct_FormatArgumentData = std::move(K2Node_MakeStruct_FormatArgumentData);
	Parms.K2Node_MakeArray_Array_1 = std::move(K2Node_MakeArray_Array_1);
	Parms.K2Node_ClassDynamicCast_AsBase_Magazine_Weapon = K2Node_ClassDynamicCast_AsBase_Magazine_Weapon;
	Parms.K2Node_ClassDynamicCast_bSuccess_1 = K2Node_ClassDynamicCast_bSuccess_1;
	Parms.CallFunc_Format_ReturnValue_1 = CallFunc_Format_ReturnValue_1;
	Parms.K2Node_MakeStruct_FormatArgumentData_1 = std::move(K2Node_MakeStruct_FormatArgumentData_1);
	Parms.K2Node_MakeArray_Array_2 = std::move(K2Node_MakeArray_Array_2);
	Parms.K2Node_ClassDynamicCast_AsShotgun = K2Node_ClassDynamicCast_AsShotgun;
	Parms.K2Node_ClassDynamicCast_bSuccess_2 = K2Node_ClassDynamicCast_bSuccess_2;
	Parms.CallFunc_Format_ReturnValue_2 = CallFunc_Format_ReturnValue_2;
	Parms.K2Node_MakeStruct_FormatArgumentData_2 = std::move(K2Node_MakeStruct_FormatArgumentData_2);
	Parms.K2Node_MakeArray_Array_3 = std::move(K2Node_MakeArray_Array_3);
	Parms.K2Node_ClassDynamicCast_AsTaser = K2Node_ClassDynamicCast_AsTaser;
	Parms.K2Node_ClassDynamicCast_bSuccess_3 = K2Node_ClassDynamicCast_bSuccess_3;
	Parms.CallFunc_Format_ReturnValue_3 = CallFunc_Format_ReturnValue_3;

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);
	K2Node_MakeArray_Array_1 = std::move(Parms.K2Node_MakeArray_Array_1);
	K2Node_MakeArray_Array_2 = std::move(Parms.K2Node_MakeArray_Array_2);
	K2Node_MakeArray_Array_3 = std::move(Parms.K2Node_MakeArray_Array_3);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}

}

