#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutSlot_Attachment

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "LoadoutCategory_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ST_Style_Text_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadoutSlot_Attachment.W_LoadoutSlot_Attachment_C
// 0x0DF8 (0x1058 - 0x0260)
class UW_LoadoutSlot_Attachment_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimReveal;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_DivBot;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ItemImage;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ItemImage_Minimal;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Lbl_Equipped;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Fullsize;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SB_Icon;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SB_Icon_Minimal;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Minimal;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              Scale_Name;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              Scale_Name_Minimal;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            SlotButton;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            SlotButton_Minimal;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Category;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Category_Minimal;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Name;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_Name_Minimal;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 AttachingWeapon;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EWeaponAttachmentType                         AttachmentSlot;                                    // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3E3F[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AttachmentData;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   ItemName;                                          // 0x0308(0x0018)(Edit, BlueprintVisible)
	class FText                                   Category;                                          // 0x0320(0x0018)(Edit, BlueprintVisible)
	bool                                          HasAugment;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MinimalLayout;                                     // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3E40[0x6];                                     // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ItemIcon;                                          // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartActive;                                       // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_Active;                                         // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E41[0x6];                                     // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Style_Text                         NameTextStyle;                                     // 0x0350(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FMargin                                NormalNamePadding;                                 // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FButtonStyle                           NormalButtonStyle;                                 // 0x0400(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FST_Style_Text                         NameTextStyle_Active;                              // 0x0678(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FButtonStyle                           ActiveButtonStyle;                                 // 0x0718(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0990(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x09A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x09B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EItemClass                                    Item_Class;                                        // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E42[0x7];                                     // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemCategory>                         Item_Categories;                                   // 0x09C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FItemVisualData                        Visuals;                                           // 0x09D8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             Icon;                                              // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnDoubleClicked;                                   // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct LoadoutCategory::FLoadoutCategory> Gear_Category_Classes;                             // 0x0A20(0x0010)(Edit, BlueprintVisible)
	struct FST_Style_Text                         MinimalNameTextStyle;                              // 0x0A30(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FMargin                                MinimalNamePadding;                                // 0x0AD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FST_Style_Text                         MinimalNameTextStyle_Active;                       // 0x0AE0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsListItem;                                        // 0x0B80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Equipped;                                          // 0x0B81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3E43[0x2];                                     // 0x0B82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           EquippedColor;                                     // 0x0B84(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AugmentTextColor;                                  // 0x0B94(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E44[0x4];                                     // 0x0BA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           EquippedButtonStyle;                               // 0x0BA8(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	EItemType                                     ItemType;                                          // 0x0E20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttachmentType                         AttachmentType;                                    // 0x0E21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E45[0x2];                                     // 0x0E22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SlotWidth;                                         // 0x0E24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmptySlotWidth;                                    // 0x0E28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E46[0x4];                                     // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Style_Text                         NameTextStyleNull;                                 // 0x0E30(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0ED0(0x0188)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnClicked__DelegateSignature(class UW_LoadoutSlot_Attachment_C* TriggeringSlot);
	void OnHovered__DelegateSignature(class UW_LoadoutSlot_Attachment_C* TriggeringSlot);
	void OnUnhovered__DelegateSignature(class UW_LoadoutSlot_Attachment_C* TriggeringSlot);
	void OnDoubleClicked__DelegateSignature(class UW_LoadoutSlot_Attachment_C* TriggeringSlot);
	void ExecuteUbergraph_W_LoadoutSlot_Attachment(int32 EntryPoint, bool Temp_bool_Variable, const struct FVector2D& Temp_struct_Variable, const struct FVector2D& Temp_struct_Variable_1, bool K2Node_Event_IsDesignTime, bool K2Node_Event_IsGamepad, class FName K2Node_Event_OptionNameID, class UW_Button_C* K2Node_ComponentBoundEvent_Button_5, class UW_Button_C* K2Node_ComponentBoundEvent_Button_4, class UObject* K2Node_Event_ListItemObject, class UW_Button_C* K2Node_ComponentBoundEvent_Button_3, class FText CallFunc_GetAttachmentSlotText_SlotText, class UClass* K2Node_CustomEvent_AttachmentData, bool CallFunc_IsValidClass_ReturnValue, bool K2Node_Event_bIsSelected, class UW_Button_C* K2Node_ComponentBoundEvent_Button_2, class UW_Button_C* K2Node_ComponentBoundEvent_Button_1, class UW_Button_C* K2Node_ComponentBoundEvent_Button, bool Temp_bool_Variable_1, class UClass* K2Node_Select_Default, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, const struct FVector2D& K2Node_Select_Default_1, bool K2Node_Event_bIsExpanded, class UW_Loadout_C* K2Node_Event_LoadoutWidget, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, float K2Node_Event_Delay, bool CallFunc_GetIsNullAttachment_IsNull, class UObject* CallFunc_LoadAsset_Blocking_ReturnValue, class UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, class FName K2Node_Event_PageName);
	void ChangePage(class FName PageName);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void BP_OnEntryReleased();
	void ForceClick();
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void UpdateActiveLoadout(const struct FSavedLoadout& Param_ActiveLoadout);
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_7_DoubleClicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_6_Unhovered__DelegateSignature();
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_5_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutAttachment_SlotButton_1_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature(class UW_Button_C* Button);
	void InitializeAsListItem();
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void InitializeAttachmentData(class UClass* Param_AttachmentData);
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature(class UW_Button_C* Button);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void InitializeAsSlot();
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_3_Unhovered__DelegateSignature();
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_LoadoutSlot_SlotButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void SetInputMode(bool IsGamepad);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void SetActive(bool IsActive, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_1, bool CallFunc_GetHoverState_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_2, const struct FST_Style_Text& K2Node_Select_Default, const struct FST_Style_Text& K2Node_Select_Default_1, const struct FST_Style_Text& K2Node_Select_Default_2);
	bool GetHoverState();
	void SetMinimalLayout(bool Param_MinimalLayout, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, bool Temp_bool_Variable_2, float Temp_float_Variable, float Temp_float_Variable_1, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1, float K2Node_Select_Default_2);
	void RefreshItemInfo(bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default);
	void SetEquipped(bool Param_Equipped, bool CallFunc_GetIsNullAttachment_IsNull, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetIsNullAttachment(class UClass* Param_AttachmentData, bool* IsNull, EWeaponAttachmentType Temp_byte_Variable, bool CallFunc_IsValidClass_ReturnValue, class UClass* Temp_class_Variable, bool CallFunc_Not_PreBool_ReturnValue, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, class UClass* K2Node_Select_Default, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadoutSlot_Attachment_C">();
	}
	static class UW_LoadoutSlot_Attachment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadoutSlot_Attachment_C>();
	}
};
static_assert(alignof(UW_LoadoutSlot_Attachment_C) == 0x000008, "Wrong alignment on UW_LoadoutSlot_Attachment_C");
static_assert(sizeof(UW_LoadoutSlot_Attachment_C) == 0x001058, "Wrong size on UW_LoadoutSlot_Attachment_C");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, UberGraphFrame) == 0x000260, "Member 'UW_LoadoutSlot_Attachment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AnimReveal) == 0x000268, "Member 'UW_LoadoutSlot_Attachment_C::AnimReveal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Img_DivBot) == 0x000270, "Member 'UW_LoadoutSlot_Attachment_C::Img_DivBot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Img_ItemImage) == 0x000278, "Member 'UW_LoadoutSlot_Attachment_C::Img_ItemImage' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Img_ItemImage_Minimal) == 0x000280, "Member 'UW_LoadoutSlot_Attachment_C::Img_ItemImage_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Lbl_Equipped) == 0x000288, "Member 'UW_LoadoutSlot_Attachment_C::Lbl_Equipped' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Fullsize) == 0x000290, "Member 'UW_LoadoutSlot_Attachment_C::SB_Fullsize' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Icon) == 0x000298, "Member 'UW_LoadoutSlot_Attachment_C::SB_Icon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Icon_Minimal) == 0x0002A0, "Member 'UW_LoadoutSlot_Attachment_C::SB_Icon_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SB_Minimal) == 0x0002A8, "Member 'UW_LoadoutSlot_Attachment_C::SB_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Scale_Name) == 0x0002B0, "Member 'UW_LoadoutSlot_Attachment_C::Scale_Name' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Scale_Name_Minimal) == 0x0002B8, "Member 'UW_LoadoutSlot_Attachment_C::Scale_Name_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SlotButton) == 0x0002C0, "Member 'UW_LoadoutSlot_Attachment_C::SlotButton' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SlotButton_Minimal) == 0x0002C8, "Member 'UW_LoadoutSlot_Attachment_C::SlotButton_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Txt_Category) == 0x0002D0, "Member 'UW_LoadoutSlot_Attachment_C::Txt_Category' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Txt_Category_Minimal) == 0x0002D8, "Member 'UW_LoadoutSlot_Attachment_C::Txt_Category_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Txt_Name) == 0x0002E0, "Member 'UW_LoadoutSlot_Attachment_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Txt_Name_Minimal) == 0x0002E8, "Member 'UW_LoadoutSlot_Attachment_C::Txt_Name_Minimal' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachingWeapon) == 0x0002F0, "Member 'UW_LoadoutSlot_Attachment_C::AttachingWeapon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachmentSlot) == 0x0002F8, "Member 'UW_LoadoutSlot_Attachment_C::AttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachmentData) == 0x000300, "Member 'UW_LoadoutSlot_Attachment_C::AttachmentData' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ItemName) == 0x000308, "Member 'UW_LoadoutSlot_Attachment_C::ItemName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Category) == 0x000320, "Member 'UW_LoadoutSlot_Attachment_C::Category' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, HasAugment) == 0x000338, "Member 'UW_LoadoutSlot_Attachment_C::HasAugment' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalLayout) == 0x000339, "Member 'UW_LoadoutSlot_Attachment_C::MinimalLayout' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ItemIcon) == 0x000340, "Member 'UW_LoadoutSlot_Attachment_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, StartActive) == 0x000348, "Member 'UW_LoadoutSlot_Attachment_C::StartActive' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Is_Active) == 0x000349, "Member 'UW_LoadoutSlot_Attachment_C::Is_Active' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NameTextStyle) == 0x000350, "Member 'UW_LoadoutSlot_Attachment_C::NameTextStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NormalNamePadding) == 0x0003F0, "Member 'UW_LoadoutSlot_Attachment_C::NormalNamePadding' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NormalButtonStyle) == 0x000400, "Member 'UW_LoadoutSlot_Attachment_C::NormalButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NameTextStyle_Active) == 0x000678, "Member 'UW_LoadoutSlot_Attachment_C::NameTextStyle_Active' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ActiveButtonStyle) == 0x000718, "Member 'UW_LoadoutSlot_Attachment_C::ActiveButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnClicked) == 0x000990, "Member 'UW_LoadoutSlot_Attachment_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnHovered) == 0x0009A0, "Member 'UW_LoadoutSlot_Attachment_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnUnhovered) == 0x0009B0, "Member 'UW_LoadoutSlot_Attachment_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Item_Class) == 0x0009C0, "Member 'UW_LoadoutSlot_Attachment_C::Item_Class' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Item_Categories) == 0x0009C8, "Member 'UW_LoadoutSlot_Attachment_C::Item_Categories' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Visuals) == 0x0009D8, "Member 'UW_LoadoutSlot_Attachment_C::Visuals' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Icon) == 0x000A08, "Member 'UW_LoadoutSlot_Attachment_C::Icon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, OnDoubleClicked) == 0x000A10, "Member 'UW_LoadoutSlot_Attachment_C::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Gear_Category_Classes) == 0x000A20, "Member 'UW_LoadoutSlot_Attachment_C::Gear_Category_Classes' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalNameTextStyle) == 0x000A30, "Member 'UW_LoadoutSlot_Attachment_C::MinimalNameTextStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalNamePadding) == 0x000AD0, "Member 'UW_LoadoutSlot_Attachment_C::MinimalNamePadding' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, MinimalNameTextStyle_Active) == 0x000AE0, "Member 'UW_LoadoutSlot_Attachment_C::MinimalNameTextStyle_Active' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, IsListItem) == 0x000B80, "Member 'UW_LoadoutSlot_Attachment_C::IsListItem' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, Equipped) == 0x000B81, "Member 'UW_LoadoutSlot_Attachment_C::Equipped' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, EquippedColor) == 0x000B84, "Member 'UW_LoadoutSlot_Attachment_C::EquippedColor' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AugmentTextColor) == 0x000B94, "Member 'UW_LoadoutSlot_Attachment_C::AugmentTextColor' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, EquippedButtonStyle) == 0x000BA8, "Member 'UW_LoadoutSlot_Attachment_C::EquippedButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ItemType) == 0x000E20, "Member 'UW_LoadoutSlot_Attachment_C::ItemType' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, AttachmentType) == 0x000E21, "Member 'UW_LoadoutSlot_Attachment_C::AttachmentType' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, SlotWidth) == 0x000E24, "Member 'UW_LoadoutSlot_Attachment_C::SlotWidth' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, EmptySlotWidth) == 0x000E28, "Member 'UW_LoadoutSlot_Attachment_C::EmptySlotWidth' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, NameTextStyleNull) == 0x000E30, "Member 'UW_LoadoutSlot_Attachment_C::NameTextStyleNull' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_Attachment_C, ActiveLoadout) == 0x000ED0, "Member 'UW_LoadoutSlot_Attachment_C::ActiveLoadout' has a wrong offset!");

}

