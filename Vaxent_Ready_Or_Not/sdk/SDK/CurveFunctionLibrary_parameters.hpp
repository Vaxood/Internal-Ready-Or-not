#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CurveFunctionLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function CurveFunctionLibrary.CurveFunctionLibrary_C.LogisticCurve
// 0x0038 (0x0038 - 0x0000)
struct CurveFunctionLibrary_C_LogisticCurve final 
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Return_Value;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         E;                                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CurveFunctionLibrary_C_LogisticCurve) == 0x000008, "Wrong alignment on CurveFunctionLibrary_C_LogisticCurve");
static_assert(sizeof(CurveFunctionLibrary_C_LogisticCurve) == 0x000038, "Wrong size on CurveFunctionLibrary_C_LogisticCurve");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, X) == 0x000000, "Member 'CurveFunctionLibrary_C_LogisticCurve::X' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, __WorldContext) == 0x000008, "Member 'CurveFunctionLibrary_C_LogisticCurve::__WorldContext' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, Return_Value) == 0x000010, "Member 'CurveFunctionLibrary_C_LogisticCurve::Return_Value' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, E) == 0x000014, "Member 'CurveFunctionLibrary_C_LogisticCurve::E' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_NegateFloat_ReturnValue) == 0x00001C, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_NegateFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CurveFunctionLibrary_C_LogisticCurve, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'CurveFunctionLibrary_C_LogisticCurve::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}

