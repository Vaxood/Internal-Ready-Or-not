#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_ExposedToAggressiveNoise

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AC_ExposedToAggressiveNoise.AC_ExposedToAggressiveNoise_C.Score
// 0x0038 (0x0038 - 0x0000)
struct AC_ExposedToAggressiveNoise_C_Score final 
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF0[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_HasBeenExposedToAggressiveNoise_Tag_OutTag; // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBeenExposedToAggressiveNoise_Tag_ReturnValue; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF1[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_ExposedToAggressiveNoise_C_Score) == 0x000008, "Wrong alignment on AC_ExposedToAggressiveNoise_C_Score");
static_assert(sizeof(AC_ExposedToAggressiveNoise_C_Score) == 0x000038, "Wrong size on AC_ExposedToAggressiveNoise_C_Score");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, Context) == 0x000000, "Member 'AC_ExposedToAggressiveNoise_C_Score::Context' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, bSuccess) == 0x000010, "Member 'AC_ExposedToAggressiveNoise_C_Score::bSuccess' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, ReturnValue) == 0x000014, "Member 'AC_ExposedToAggressiveNoise_C_Score::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, Temp_name_Variable) == 0x000018, "Member 'AC_ExposedToAggressiveNoise_C_Score::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_HasBeenExposedToAggressiveNoise_Tag_OutTag) == 0x000024, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_HasBeenExposedToAggressiveNoise_Tag_OutTag' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_HasBeenExposedToAggressiveNoise_Tag_ReturnValue) == 0x00002C, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_HasBeenExposedToAggressiveNoise_Tag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_Array_Contains_ReturnValue_1) == 0x00002D, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_Array_Contains_ReturnValue_2) == 0x000035, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_Not_PreBool_ReturnValue) == 0x000036, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ExposedToAggressiveNoise_C_Score, CallFunc_BooleanAND_ReturnValue) == 0x000037, "Member 'AC_ExposedToAggressiveNoise_C_Score::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

