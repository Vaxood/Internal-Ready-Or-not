#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Replay_DetailPanel

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.ExecuteUbergraph_W_Replay_DetailPanel
// 0x0018 (0x0018 - 0x0000)
struct W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel");
static_assert(sizeof(W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel) == 0x000018, "Wrong size on W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel");
static_assert(offsetof(W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel, EntryPoint) == 0x000000, "Member 'W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'W_Replay_DetailPanel_C_ExecuteUbergraph_W_Replay_DetailPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Delete_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_Replay_DetailPanel_C_BndEvt__W_Replay_DetailPanel_btn_Rename_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.UpdateReplayInfo
// 0x0170 (0x0170 - 0x0000)
struct W_Replay_DetailPanel_C_UpdateReplayInfo final 
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FReplayData                            Param_ReplayData;                                  // 0x0010(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_GetProjectVersion_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319D[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00D8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0108(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0120(0x0018)()
	class FString                                 CallFunc_GetReplayTimeFormat_Duration;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319E[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0150(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_DetailPanel_C_UpdateReplayInfo) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_UpdateReplayInfo");
static_assert(sizeof(W_Replay_DetailPanel_C_UpdateReplayInfo) == 0x000170, "Wrong size on W_Replay_DetailPanel_C_UpdateReplayInfo");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, Filename) == 0x000000, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::Filename' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, Param_ReplayData) == 0x000010, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::Param_ReplayData' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_GetProjectVersion_ReturnValue) == 0x000090, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_GetProjectVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, Temp_byte_Variable) == 0x0000A0, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0000A1, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C0, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000D8, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F0, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000108, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000120, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_GetReplayTimeFormat_Duration) == 0x000138, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_GetReplayTimeFormat_Duration' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, Temp_byte_Variable_1) == 0x000148, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000150, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, Temp_bool_Variable) == 0x000168, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateReplayInfo, K2Node_Select_Default) == 0x000169, "Member 'W_Replay_DetailPanel_C_UpdateReplayInfo::K2Node_Select_Default' has a wrong offset!");

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.GetReplayTimeFormat
// 0x0078 (0x0078 - 0x0000)
struct W_Replay_DetailPanel_C_GetReplayTimeFormat final 
{
public:
	float                                         ReplayLength;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Duration;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_1;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_2;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_DetailPanel_C_GetReplayTimeFormat) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_GetReplayTimeFormat");
static_assert(sizeof(W_Replay_DetailPanel_C_GetReplayTimeFormat) == 0x000078, "Wrong size on W_Replay_DetailPanel_C_GetReplayTimeFormat");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, ReplayLength) == 0x000000, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::ReplayLength' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, Duration) == 0x000008, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::Duration' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00001C, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_FFloor_ReturnValue) == 0x000020, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_FFloor_ReturnValue_1) == 0x000024, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_AppendMultiple_ReturnValue) == 0x000048, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_AppendMultiple_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_AppendMultiple_ReturnValue_1) == 0x000058, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_AppendMultiple_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_GetReplayTimeFormat, CallFunc_AppendMultiple_ReturnValue_2) == 0x000068, "Member 'W_Replay_DetailPanel_C_GetReplayTimeFormat::CallFunc_AppendMultiple_ReturnValue_2' has a wrong offset!");

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.UpdateFileName
// 0x0028 (0x0028 - 0x0000)
struct W_Replay_DetailPanel_C_UpdateFileName final 
{
public:
	class FString                                 NewFileName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(W_Replay_DetailPanel_C_UpdateFileName) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_UpdateFileName");
static_assert(sizeof(W_Replay_DetailPanel_C_UpdateFileName) == 0x000028, "Wrong size on W_Replay_DetailPanel_C_UpdateFileName");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateFileName, NewFileName) == 0x000000, "Member 'W_Replay_DetailPanel_C_UpdateFileName::NewFileName' has a wrong offset!");
static_assert(offsetof(W_Replay_DetailPanel_C_UpdateFileName, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'W_Replay_DetailPanel_C_UpdateFileName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Replay_DetailPanel.W_Replay_DetailPanel_C.SetImage
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_DetailPanel_C_SetImage final 
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_DetailPanel_C_SetImage) == 0x000008, "Wrong alignment on W_Replay_DetailPanel_C_SetImage");
static_assert(sizeof(W_Replay_DetailPanel_C_SetImage) == 0x000008, "Wrong size on W_Replay_DetailPanel_C_SetImage");
static_assert(offsetof(W_Replay_DetailPanel_C_SetImage, Texture) == 0x000000, "Member 'W_Replay_DetailPanel_C_SetImage::Texture' has a wrong offset!");

}

