#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_MultiItem_Selection

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C
// 0x0078 (0x02D8 - 0x0260)
class UW_WeaponWheel_MultiItem_Selection_C final  : public UUserWidget
{
public:
	class UHorizontalBox*                         Dots_Container;                                    // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MultiItemVisual;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NextItemIcon;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PreviousItemIcon;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         Dots;                                              // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           UnselectedColor;                                   // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedColor;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ItemIndex;                                         // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightedIconColor;                              // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnhighlightedIconColor;                            // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CreateIndex(const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, const struct FMargin& K2Node_MakeStruct_Margin, class UImage* CallFunc_SpawnObject_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue);
	void NextItem(bool* bSuccess, bool bSucceeded, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Clamp_ReturnValue);
	void PreviousItem(bool* bSuccess, bool bSucceeded, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_Clamp_ReturnValue);
	void Refresh(int32 NewAmount, int32 StartingItemIndex, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, class UImage* CallFunc_Array_Get_Item, class UHorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue);
	void Select(int32 Param_Index, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Clamp_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, class UImage* CallFunc_Array_Get_Item);
	void Deselect(int32 Param_Index, const struct FSlateColor& K2Node_MakeStruct_SlateColor, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Clamp_ReturnValue, class UImage* CallFunc_Array_Get_Item);
	void HighlightIcon(class UImage* Arrow, const struct FSlateColor& K2Node_MakeStruct_SlateColor);
	void UnhighlightIcon(class UImage* Arrow, const struct FSlateColor& K2Node_MakeStruct_SlateColor);
	void DetermineIconColor(class UImage* Next_Icon, int32 IndexToCheck, bool Temp_bool_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FLinearColor& K2Node_Select_Default, const struct FSlateColor& K2Node_MakeStruct_SlateColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WeaponWheel_MultiItem_Selection_C">();
	}
	static class UW_WeaponWheel_MultiItem_Selection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WeaponWheel_MultiItem_Selection_C>();
	}
};
static_assert(alignof(UW_WeaponWheel_MultiItem_Selection_C) == 0x000008, "Wrong alignment on UW_WeaponWheel_MultiItem_Selection_C");
static_assert(sizeof(UW_WeaponWheel_MultiItem_Selection_C) == 0x0002D8, "Wrong size on UW_WeaponWheel_MultiItem_Selection_C");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, Dots_Container) == 0x000260, "Member 'UW_WeaponWheel_MultiItem_Selection_C::Dots_Container' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, MultiItemVisual) == 0x000268, "Member 'UW_WeaponWheel_MultiItem_Selection_C::MultiItemVisual' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, NextItemIcon) == 0x000270, "Member 'UW_WeaponWheel_MultiItem_Selection_C::NextItemIcon' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, PreviousItemIcon) == 0x000278, "Member 'UW_WeaponWheel_MultiItem_Selection_C::PreviousItemIcon' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, Dots) == 0x000280, "Member 'UW_WeaponWheel_MultiItem_Selection_C::Dots' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, UnselectedColor) == 0x000290, "Member 'UW_WeaponWheel_MultiItem_Selection_C::UnselectedColor' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, SelectedColor) == 0x0002A0, "Member 'UW_WeaponWheel_MultiItem_Selection_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, Amount) == 0x0002B0, "Member 'UW_WeaponWheel_MultiItem_Selection_C::Amount' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, ItemIndex) == 0x0002B4, "Member 'UW_WeaponWheel_MultiItem_Selection_C::ItemIndex' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, HighlightedIconColor) == 0x0002B8, "Member 'UW_WeaponWheel_MultiItem_Selection_C::HighlightedIconColor' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, UnhighlightedIconColor) == 0x0002C8, "Member 'UW_WeaponWheel_MultiItem_Selection_C::UnhighlightedIconColor' has a wrong offset!");

}

