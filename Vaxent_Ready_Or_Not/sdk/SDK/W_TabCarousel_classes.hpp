#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TabCarousel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TabCarousel.W_TabCarousel_C
// 0x00B0 (0x0408 - 0x0358)
class UW_TabCarousel_C final  : public UCommonTabListWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB_Nav;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    LeftGamepadBind;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    RightGamepadBind;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size;                                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_LeftBind;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_RightBind;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FName, class UCommonButtonBase*>   NavMap;                                            // 0x0390(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              InputActionIconSize;                               // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TabStyle;                                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EListItemAlignment                            TabOrientation;                                    // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF2[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           TabHistory;                                        // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_W_TabCarousel(int32 EntryPoint, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility Temp_byte_Variable_2, TDelegate<void(class FName TabId)> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_Delay_1, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, bool K2Node_Event_IsDesignTime, class FName K2Node_Event_TabNameID_1, class UCommonButtonBase* K2Node_Event_TabButton_1, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, ESlateVisibility Temp_byte_Variable_3, class FName K2Node_Event_TabNameID, class UCommonButtonBase* K2Node_Event_TabButton, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_RemoveChild_ReturnValue, ECommonInputType Temp_byte_Variable_4, class FName K2Node_CustomEvent_TabNameID_1, class FText K2Node_CustomEvent_ButtonText, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, class UCommonButtonBase* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, class UW_Button_C* K2Node_DynamicCast_AsW_Button, bool K2Node_DynamicCast_bSuccess, ESlateVisibility K2Node_Select_Default, ESlateVisibility Temp_byte_Variable_5, class FName K2Node_CustomEvent_TabNameID, class UClass* K2Node_CustomEvent_ButtonStyle, ESlateVisibility Temp_byte_Variable_6, class UCommonButtonBase* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, class UW_Button_C* K2Node_DynamicCast_AsW_Button_1, bool K2Node_DynamicCast_bSuccess_1, bool K2Node_ComponentBoundEvent_bUsingGamepad, bool Temp_bool_Variable, class FName K2Node_CustomEvent_TabId, ESlateVisibility K2Node_Select_Default_1, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void LogTabHistory(class FName TabId);
	void BndEvt__W_Loadout_PageCarousel_LeftGamepadBind_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);
	void SetTabStyle(class FName TabNameID, class UClass* ButtonStyle);
	void OnInitialized();
	void SetTabName(class FName TabNameID, class FText ButtonText);
	void HandleTabRemoval(class FName TabNameID, class UCommonButtonBase* TabButton);
	void HandleTabCreation(class FName TabNameID, class UCommonButtonBase* TabButton);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	void RegisterStyledTab(class FText ButtonText, class FName TabNameID, class UWidget* ContentWidget, bool CallFunc_RegisterTab_ReturnValue);
	void SetTabOrientation(class UHorizontalBoxSlot* HorizontalBoxSlotItem, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize, EListItemAlignment Temp_byte_Variable, EHorizontalAlignment Temp_byte_Variable_1, EHorizontalAlignment Temp_byte_Variable_2, EHorizontalAlignment Temp_byte_Variable_3, EHorizontalAlignment Temp_byte_Variable_4, EHorizontalAlignment Temp_byte_Variable_5, EHorizontalAlignment Temp_byte_Variable_6, EHorizontalAlignment Temp_byte_Variable_7, const struct FSlateChildSize& K2Node_MakeStruct_SlateChildSize_1, EHorizontalAlignment K2Node_Select_Default, bool K2Node_SwitchEnum_CmpSuccess);
	void SetInputActionIconSize(const struct FVector2D& IconSize, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y);
	void ClearHistory();
	void SetDefaultTab(class FName TabNameID, bool CallFunc_SelectTabByID_ReturnValue);
	void RemoveTabFromHistory(class FName TabNameID, bool CallFunc_Array_RemoveItem_ReturnValue);
	void BackPage(bool* Handled, int32 CurrentIndex, int32 Temp_int_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class FName CallFunc_GetActiveTab_ReturnValue, class FName CallFunc_Array_Get_Item, bool CallFunc_SelectTabByID_ReturnValue, int32 CallFunc_Array_Find_ReturnValue);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TabCarousel_C">();
	}
	static class UW_TabCarousel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TabCarousel_C>();
	}
};
static_assert(alignof(UW_TabCarousel_C) == 0x000008, "Wrong alignment on UW_TabCarousel_C");
static_assert(sizeof(UW_TabCarousel_C) == 0x000408, "Wrong size on UW_TabCarousel_C");
static_assert(offsetof(UW_TabCarousel_C, UberGraphFrame) == 0x000358, "Member 'UW_TabCarousel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, HB_Nav) == 0x000360, "Member 'UW_TabCarousel_C::HB_Nav' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, LeftGamepadBind) == 0x000368, "Member 'UW_TabCarousel_C::LeftGamepadBind' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, RightGamepadBind) == 0x000370, "Member 'UW_TabCarousel_C::RightGamepadBind' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, Size) == 0x000378, "Member 'UW_TabCarousel_C::Size' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, Size_LeftBind) == 0x000380, "Member 'UW_TabCarousel_C::Size_LeftBind' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, Size_RightBind) == 0x000388, "Member 'UW_TabCarousel_C::Size_RightBind' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, NavMap) == 0x000390, "Member 'UW_TabCarousel_C::NavMap' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, InputActionIconSize) == 0x0003E0, "Member 'UW_TabCarousel_C::InputActionIconSize' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, TabStyle) == 0x0003E8, "Member 'UW_TabCarousel_C::TabStyle' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, TabOrientation) == 0x0003F0, "Member 'UW_TabCarousel_C::TabOrientation' has a wrong offset!");
static_assert(offsetof(UW_TabCarousel_C, TabHistory) == 0x0003F8, "Member 'UW_TabCarousel_C::TabHistory' has a wrong offset!");

}

