#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ObjectiveNotify

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ObjectiveNotify.W_ObjectiveNotify_C
// 0x00A0 (0x0300 - 0x0260)
class UW_ObjectiveNotify_C final  : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_HideScore;                                    // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ShowScore;                                    // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Objective_Text;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RedLine_Image;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ObjectiveText;                                     // 0x0288(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	float                                         ElapsedTime;                                       // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DFC[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FinalString;                                       // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bTextAnimationFinished;                            // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFD[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Iterator;                                          // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Chars;                                             // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CurrentDelay;                                      // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenLetters;                               // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenWords;                                 // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DFE[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EndString;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bFadeOut;                                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFF[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime_Text;                                  // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     FMOD_ObjectiveNotifyInstance;                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_ObjectiveNotify(int32 EntryPoint, bool K2Node_Event_IsDesignTime, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_Add_FloatFloat_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, bool CallFunc_SimulateAnimatedText_bCompleted, const class FString& CallFunc_SimulateAnimatedText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFMODEventInstance& CallFunc_PlayEvent2D_ReturnValue, bool CallFunc_EventInstanceIsValid_ReturnValue, bool CallFunc_EventInstanceIsValid_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_EventInstanceIsValid_ReturnValue_2, bool CallFunc_EventInstanceIsValid_ReturnValue_3);
	void Destruct();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void PlayRewardAnim();
	void OnInitialized();
	void DestroyWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ObjectiveNotify_C">();
	}
	static class UW_ObjectiveNotify_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ObjectiveNotify_C>();
	}
};
static_assert(alignof(UW_ObjectiveNotify_C) == 0x000008, "Wrong alignment on UW_ObjectiveNotify_C");
static_assert(sizeof(UW_ObjectiveNotify_C) == 0x000300, "Wrong size on UW_ObjectiveNotify_C");
static_assert(offsetof(UW_ObjectiveNotify_C, UberGraphFrame) == 0x000260, "Member 'UW_ObjectiveNotify_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, Anim_HideScore) == 0x000268, "Member 'UW_ObjectiveNotify_C::Anim_HideScore' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, Anim_ShowScore) == 0x000270, "Member 'UW_ObjectiveNotify_C::Anim_ShowScore' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, Objective_Text) == 0x000278, "Member 'UW_ObjectiveNotify_C::Objective_Text' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, RedLine_Image) == 0x000280, "Member 'UW_ObjectiveNotify_C::RedLine_Image' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, ObjectiveText) == 0x000288, "Member 'UW_ObjectiveNotify_C::ObjectiveText' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, ElapsedTime) == 0x0002A0, "Member 'UW_ObjectiveNotify_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, FinalString) == 0x0002A8, "Member 'UW_ObjectiveNotify_C::FinalString' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, bTextAnimationFinished) == 0x0002B8, "Member 'UW_ObjectiveNotify_C::bTextAnimationFinished' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, Iterator) == 0x0002BC, "Member 'UW_ObjectiveNotify_C::Iterator' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, Chars) == 0x0002C0, "Member 'UW_ObjectiveNotify_C::Chars' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, CurrentDelay) == 0x0002D0, "Member 'UW_ObjectiveNotify_C::CurrentDelay' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, DelayBetweenLetters) == 0x0002D4, "Member 'UW_ObjectiveNotify_C::DelayBetweenLetters' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, DelayBetweenWords) == 0x0002D8, "Member 'UW_ObjectiveNotify_C::DelayBetweenWords' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, EndString) == 0x0002E0, "Member 'UW_ObjectiveNotify_C::EndString' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, bFadeOut) == 0x0002F0, "Member 'UW_ObjectiveNotify_C::bFadeOut' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, ElapsedTime_Text) == 0x0002F4, "Member 'UW_ObjectiveNotify_C::ElapsedTime_Text' has a wrong offset!");
static_assert(offsetof(UW_ObjectiveNotify_C, FMOD_ObjectiveNotifyInstance) == 0x0002F8, "Member 'UW_ObjectiveNotify_C::FMOD_ObjectiveNotifyInstance' has a wrong offset!");

}

