#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_EntryPoint_Selection

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection
// 0x0050 (0x0050 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3205[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3206[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay_1;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delay;                                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection) == 0x000050, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_Event_IsGamepad) == 0x000028, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_CustomEvent_Delay) == 0x00002C, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_Event_PageName) == 0x000038, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_Event_Delay_1) == 0x000040, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_Event_Delay) == 0x000044, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection, K2Node_Event_Collapse) == 0x000048, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ExecuteUbergraph_W_PreMission_Tablet_EntryPoint_Selection::K2Node_Event_Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_Hide) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_Hide) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_Hide, Collapse) == 0x000004, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_Reveal) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_Reveal) == 0x000004, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.ShowPointInfo
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo) == 0x000004, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo) == 0x000004, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo, Delay) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_ShowPointInfo::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.UpdatePointInfo
// 0x0080 (0x0080 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo final 
{
public:
	struct FEntryPoint                            EntryPointData;                                    // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo) == 0x000080, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo, EntryPointData) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo::EntryPointData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_UpdatePointInfo::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet_EntryPoint_Selection.W_PreMission_Tablet_EntryPoint_Selection_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_EntryPoint_Selection_C_GetFocusTarget::Focus' has a wrong offset!");

}

