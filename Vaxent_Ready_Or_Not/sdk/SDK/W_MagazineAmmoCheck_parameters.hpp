#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MagazineAmmoCheck

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_MagazineAmmoCheck.W_MagazineAmmoCheck_C.ExecuteUbergraph_W_MagazineAmmoCheck
// 0x0078 (0x0078 - 0x0000)
struct W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetEquippedItem_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AShotgun*                               K2Node_DynamicCast_AsShotgun;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F4[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F5[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAmmo_ReturnValue;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAmmo_ReturnValue_1;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F6[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck) == 0x000008, "Wrong alignment on W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck");
static_assert(sizeof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck) == 0x000078, "Wrong size on W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, EntryPoint) == 0x000000, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, K2Node_DynamicCast_AsPlayer_Character) == 0x000010, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GetEquippedItem_ReturnValue) == 0x000020, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, K2Node_DynamicCast_AsShotgun) == 0x000028, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::K2Node_DynamicCast_AsShotgun' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000038, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GetAmmo_ReturnValue) == 0x000044, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GetAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GetAmmo_ReturnValue_1) == 0x000048, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GetAmmo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000050, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Less_FloatFloat_ReturnValue) == 0x00005C, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00005D, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_BooleanAND_ReturnValue) == 0x00005E, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00005F, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000060, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000062, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000063, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x000064, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000065, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000066, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000067, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_BooleanAND_ReturnValue_3) == 0x000068, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000069, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x00006A, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x00006B, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_BooleanAND_ReturnValue_4) == 0x00006C, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x00006D, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_BooleanAND_ReturnValue_5) == 0x00006E, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00006F, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000070, "Member 'W_MagazineAmmoCheck_C_ExecuteUbergraph_W_MagazineAmmoCheck::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

}

