#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosiveVestGibs

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ExplosiveVestGibs.ExplosiveVestGibs_C
// 0x0070 (0x0298 - 0x0228)
class AExplosiveVestGibs_C final  : public AExplosionGibs
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   HeadGib;                                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightLegGib;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftLegGib;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightArmGib;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftArmGib;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TorsoGib;                                          // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               HeadBlood;                                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RightArmBlood;                                     // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LeftArmBlood;                                      // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RightLegBlood;                                     // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LeftLegBlood;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         DecalCount;                                        // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ExplosiveVestGibs(int32 EntryPoint, int32 Temp_int_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, class USkeletalMeshComponent* K2Node_Event_Mesh, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class UPrimitiveComponent* K2Node_Event_MyComp, class AActor* K2Node_Event_Other, class UPrimitiveComponent* K2Node_Event_OtherComp, bool K2Node_Event_bSelfMoved, const struct FVector& K2Node_Event_HitLocation, const struct FVector& K2Node_Event_HitNormal, const struct FVector& K2Node_Event_NormalImpulse, struct FHitResult& K2Node_Event_Hit, float CallFunc_VSize_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, class UDecalComponent* CallFunc_SpawnDecalAttached_ReturnValue);
	void StopBleeds();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void SetupGibsForSkeletalMesh(class USkeletalMeshComponent* Mesh);
	void SetupGib(class USkeletalMeshComponent* Mesh, class UStaticMeshComponent* GibMesh, class FName Socket, float CallFunc_RandomFloatInRange_ReturnValue, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldTransform_SweepHitResult, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ExplosiveVestGibs_C">();
	}
	static class AExplosiveVestGibs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosiveVestGibs_C>();
	}
};
static_assert(alignof(AExplosiveVestGibs_C) == 0x000008, "Wrong alignment on AExplosiveVestGibs_C");
static_assert(sizeof(AExplosiveVestGibs_C) == 0x000298, "Wrong size on AExplosiveVestGibs_C");
static_assert(offsetof(AExplosiveVestGibs_C, UberGraphFrame) == 0x000228, "Member 'AExplosiveVestGibs_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, HeadGib) == 0x000230, "Member 'AExplosiveVestGibs_C::HeadGib' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, RightLegGib) == 0x000238, "Member 'AExplosiveVestGibs_C::RightLegGib' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, LeftLegGib) == 0x000240, "Member 'AExplosiveVestGibs_C::LeftLegGib' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, RightArmGib) == 0x000248, "Member 'AExplosiveVestGibs_C::RightArmGib' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, LeftArmGib) == 0x000250, "Member 'AExplosiveVestGibs_C::LeftArmGib' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, TorsoGib) == 0x000258, "Member 'AExplosiveVestGibs_C::TorsoGib' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, HeadBlood) == 0x000260, "Member 'AExplosiveVestGibs_C::HeadBlood' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, RightArmBlood) == 0x000268, "Member 'AExplosiveVestGibs_C::RightArmBlood' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, LeftArmBlood) == 0x000270, "Member 'AExplosiveVestGibs_C::LeftArmBlood' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, RightLegBlood) == 0x000278, "Member 'AExplosiveVestGibs_C::RightLegBlood' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, LeftLegBlood) == 0x000280, "Member 'AExplosiveVestGibs_C::LeftLegBlood' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, DefaultSceneRoot) == 0x000288, "Member 'AExplosiveVestGibs_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AExplosiveVestGibs_C, DecalCount) == 0x000290, "Member 'AExplosiveVestGibs_C::DecalCount' has a wrong offset!");

}

