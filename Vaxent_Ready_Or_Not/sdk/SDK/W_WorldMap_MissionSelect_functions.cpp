#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorldMap_MissionSelect

#include "Basic.hpp"

#include "W_WorldMap_MissionSelect_classes.hpp"
#include "W_WorldMap_MissionSelect_parameters.hpp"


namespace SDK
{

// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.OnSetMissionButtonClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_WorldMap_MissionSelect_C*      BtnClicked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_MissionSelect_C::OnSetMissionButtonClicked__DelegateSignature(class UW_WorldMap_MissionSelect_C* BtnClicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "OnSetMissionButtonClicked__DelegateSignature");

	Params::W_WorldMap_MissionSelect_C_OnSetMissionButtonClicked__DelegateSignature Parms{};

	Parms.BtnClicked = BtnClicked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.ExecuteUbergraph_W_WorldMap_MissionSelect
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_Event_IsDesignTime                              (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UW_Button_C*                      K2Node_ComponentBoundEvent_Button                      (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGeometry                        K2Node_Event_MyGeometry                                (IsPlainOldData, NoDestructor)
// float                                   K2Node_Event_InDeltaTime                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsGameModeSelectable_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_WorldMap_MissionSelect_C::ExecuteUbergraph_W_WorldMap_MissionSelect(int32 EntryPoint, bool K2Node_Event_IsDesignTime, class UW_Button_C* K2Node_ComponentBoundEvent_Button, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsGameModeSelectable_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "ExecuteUbergraph_W_WorldMap_MissionSelect");

	Params::W_WorldMap_MissionSelect_C_ExecuteUbergraph_W_WorldMap_MissionSelect Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.K2Node_Event_IsDesignTime = K2Node_Event_IsDesignTime;
	Parms.K2Node_ComponentBoundEvent_Button = K2Node_ComponentBoundEvent_Button;
	Parms.K2Node_Event_MyGeometry = std::move(K2Node_Event_MyGeometry);
	Parms.K2Node_Event_InDeltaTime = K2Node_Event_InDeltaTime;
	Parms.CallFunc_IsGameModeSelectable_ReturnValue = CallFunc_IsGameModeSelectable_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_MissionSelect_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "Tick");

	Params::W_WorldMap_MissionSelect_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UW_Button_C*                      Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_MissionSelect_C::BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature(class UW_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");

	Params::W_WorldMap_MissionSelect_C_BndEvt__W_WorldMap_MissionSelect_btn_AcceptMission_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_WorldMap_MissionSelect_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "PreConstruct");

	Params::W_WorldMap_MissionSelect_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.UpdateMissionScore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SelectionMission                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           LastLoadedScoreMission                                 (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_NameToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// struct FLevelDataLookupTable            CallFunc_GetMapDetailsFromName_ReturnValue             ()
// bool                                    CallFunc_EqualEqual_StrStr_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Map_Find_Value                                (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_Map_Find_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_SelectString_ReturnValue                      (ZeroConstructor, HasGetValueTypeHash)
// struct FBasicLevelStats                 CallFunc_LoadLevelStats_OutStats                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue(ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_CalculateGradeLetterFromPercentage_ReturnValue(ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_Conv_StringToText_ReturnValue                 ()
// class FText                             CallFunc_Conv_StringToText_ReturnValue_1               ()

void UW_WorldMap_MissionSelect_C::UpdateMissionScore(class FName SelectionMission, const class FString& LastLoadedScoreMission, const class FString& CallFunc_Conv_NameToString_ReturnValue, const struct FLevelDataLookupTable& CallFunc_GetMapDetailsFromName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_SelectString_ReturnValue, const struct FBasicLevelStats& CallFunc_LoadLevelStats_OutStats, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue, const class FString& CallFunc_CalculateGradeLetterFromPercentage_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "UpdateMissionScore");

	Params::W_WorldMap_MissionSelect_C_UpdateMissionScore Parms{};

	Parms.SelectionMission = SelectionMission;
	Parms.LastLoadedScoreMission = std::move(LastLoadedScoreMission);
	Parms.CallFunc_Conv_NameToString_ReturnValue = std::move(CallFunc_Conv_NameToString_ReturnValue);
	Parms.CallFunc_GetMapDetailsFromName_ReturnValue = std::move(CallFunc_GetMapDetailsFromName_ReturnValue);
	Parms.CallFunc_EqualEqual_StrStr_ReturnValue = CallFunc_EqualEqual_StrStr_ReturnValue;
	Parms.CallFunc_Map_Find_Value = std::move(CallFunc_Map_Find_Value);
	Parms.CallFunc_Map_Find_ReturnValue = CallFunc_Map_Find_ReturnValue;
	Parms.CallFunc_SelectString_ReturnValue = std::move(CallFunc_SelectString_ReturnValue);
	Parms.CallFunc_LoadLevelStats_OutStats = std::move(CallFunc_LoadLevelStats_OutStats);
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;
	Parms.CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue = std::move(CallFunc_ConvertFloatToStringMinutes_Detail_ReturnValue);
	Parms.CallFunc_CalculateGradeLetterFromPercentage_ReturnValue = std::move(CallFunc_CalculateGradeLetterFromPercentage_ReturnValue);
	Parms.CallFunc_Conv_StringToText_ReturnValue = CallFunc_Conv_StringToText_ReturnValue;
	Parms.CallFunc_Conv_StringToText_ReturnValue_1 = CallFunc_Conv_StringToText_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_WorldMap_MissionSelect.W_WorldMap_MissionSelect_C.OnShow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SelectedMission                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// ESlateVisibility                        Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlateVisibility                        Temp_byte_Variable_1                                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsGameModeSelectable_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor)
// ESlateVisibility                        K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_WorldMap_MissionSelect_C::OnShow(class FName SelectedMission, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool CallFunc_IsGameModeSelectable_ReturnValue, ESlateVisibility K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_WorldMap_MissionSelect_C", "OnShow");

	Params::W_WorldMap_MissionSelect_C_OnShow Parms{};

	Parms.SelectedMission = SelectedMission;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_byte_Variable_1 = Temp_byte_Variable_1;
	Parms.CallFunc_IsGameModeSelectable_ReturnValue = CallFunc_IsGameModeSelectable_ReturnValue;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	UObject::ProcessEvent(Func, &Parms);
}

}

