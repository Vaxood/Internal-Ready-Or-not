#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Page_WeaponEdit

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Page_WeaponEdit.W_Loadout_Page_WeaponEdit_C
// 0x00C8 (0x03E8 - 0x0320)
class UW_Loadout_Page_WeaponEdit_C final  : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Loadout_Page_ItemList_C*             AttachmentList;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       AttachmentSwitcher;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    CurrentWeapon;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_104;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Lbl_Attachments;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       Switcher;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_AttachmentCategories;                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Attachments;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_Page_ItemList_C*             WeaponList;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 WeaponClass;                                       // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseWeapon*                            WeaponObject;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Secondary;                                         // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA9[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAttachmentHovered;                               // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAttachmentUnhovered;                             // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAttachmentClicked;                               // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   Page_ID;                                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAttachmentType                         CurrentAttachmentType;                             // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Gamepad;                                       // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAA[0x6];                                     // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                LastHovered;                                       // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ChangingWeapon;                                    // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ChangingAttachment;                                // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAB[0x6];                                     // 0x03D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCurrentWeaponClicked;                            // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnAttachmentHovered__DelegateSignature(class UWeaponAttachment* Attachment, EWeaponAttachmentType AttachmentType);
	void OnAttachmentUnhovered__DelegateSignature();
	void OnAttachmentClicked__DelegateSignature(class UClass* AttachmentClass, EWeaponAttachmentType AttachmentType);
	void OnCurrentWeaponClicked__DelegateSignature(bool Param_Secondary, EItemClass ItemClass);
	void ExecuteUbergraph_W_Loadout_Page_WeaponEdit(int32 EntryPoint, class UWeaponAttachment* K2Node_ComponentBoundEvent_Attachment, EWeaponAttachmentType K2Node_ComponentBoundEvent_AttachmentType_1, class UW_LoadoutSlot_v2_C* K2Node_ComponentBoundEvent_TriggeringSlot_3, TSubclassOf<class UWeaponAttachment> K2Node_ComponentBoundEvent_AttachmentClass, EWeaponAttachmentType K2Node_ComponentBoundEvent_AttachmentType, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot_1, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, int32 Temp_int_Array_Index_Variable, class UW_LoadoutSlot_v2_C* K2Node_ComponentBoundEvent_TriggeringSlot_2, class ABaseWeapon* K2Node_ComponentBoundEvent_Weapon_1, class UW_LoadoutSlot_v2_C* K2Node_ComponentBoundEvent_TriggeringSlot_1, TSubclassOf<class ABaseWeapon> K2Node_ComponentBoundEvent_Weapon, EItemType CallFunc_GetItemType_Item_Type, bool CallFunc_NotEqual_ByteByte_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, TArray<TSubclassOf<class UWeaponAttachment>>& CallFunc_GetAttachmentByWeaponAndType_ReturnValue, class UClass* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, bool K2Node_CustomEvent_Secondary, class UClass* K2Node_CustomEvent_Weapon, class UWidget* CallFunc_GetFocusTarget_Focus, class FName K2Node_Event_OptionNameID, class UW_Loadout_C* K2Node_Event_LoadoutWidget, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, bool K2Node_Event_IsGamepad, ECommonInputType K2Node_CustomEvent_bNewInputType, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UW_LoadoutSlot_v2_C* K2Node_ComponentBoundEvent_TriggeringSlot, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, float K2Node_Event_Delay, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, class FText CallFunc_GetAttachmentSlotText_SlotText, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, class FText CallFunc_Format_ReturnValue, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI_1, bool K2Node_DynamicCast_bSuccess_1, class ABaseWeapon* CallFunc_GetClassDefaultObject_ReturnValue, class UWidget* CallFunc_GetFocusTarget_Focus_1, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2, class FName K2Node_Event_PageName, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1);
	void ChangePage(class FName PageName);
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void BndEvt__W_Loadout_Page_WeaponEdit_CurrentWeapon_K2Node_ComponentBoundEvent_7_OnHover__DelegateSignature(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void SetInputMode(bool IsGamepad);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Construct();
	void BP_OnActivated();
	void InitializeWeapon(bool Param_Secondary, class UClass* Weapon);
	void BndEvt__W_Loadout_Page_WeaponEdit_WeaponList_K2Node_ComponentBoundEvent_6_OnWeaponClicked__DelegateSignature(TSubclassOf<class ABaseWeapon> Weapon);
	void BndEvt__W_Loadout_Page_WeaponEdit_WeaponList_K2Node_ComponentBoundEvent_5_OnWeaponUnhovered__DelegateSignature();
	void BndEvt__W_Loadout_Page_WeaponEdit_WeaponList_K2Node_ComponentBoundEvent_4_OnWeaponHovered__DelegateSignature(class ABaseWeapon* Weapon, class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void BndEvt__W_Loadout_Page_WeaponEdit_CurrentWeapon_K2Node_ComponentBoundEvent_3_OnClick__DelegateSignature(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void AttachmentCategoryClicked(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void AttachmentCategoryHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void AttachmentCategoryUnhovered();
	void BndEvt__W_Loadout_Page_WeaponEdit_AttachmentList_K2Node_ComponentBoundEvent_2_OnAttachmentClicked__DelegateSignature(TSubclassOf<class UWeaponAttachment> AttachmentClass, EWeaponAttachmentType AttachmentType);
	void BndEvt__W_Loadout_Page_WeaponEdit_AttachmentList_K2Node_ComponentBoundEvent_1_OnAttachmentUnhovered__DelegateSignature();
	void BndEvt__W_Loadout_Page_WeaponEdit_AttachmentList_K2Node_ComponentBoundEvent_0_OnAttachmentHovered__DelegateSignature(class UWeaponAttachment* Attachment, EWeaponAttachmentType AttachmentType, class UW_LoadoutSlot_v2_C* TriggeringSlot);
	TSoftObjectPtr<class UTexture2D> GetWeaponImage(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TSoftObjectPtr<class UTexture2D> CallFunc_GetSecondaryWeaponImage_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, TSoftObjectPtr<class UTexture2D> CallFunc_GetPrimaryWeaponImage_ReturnValue);
	void PopulateAttachmentCategories(class UW_LoadoutSlot_v2_C* NewSlot, EWeaponAttachmentType Type, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, class UW_LoadoutSlot_v2_C* CallFunc_Create_ReturnValue, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, class UWeaponAttachment* CallFunc_GetCurrentAttachmentByType_ReturnValue, class FText CallFunc_GetAttachmentSlotText_SlotText, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TArray<EWeaponAttachmentType>& CallFunc_GetAvailableAttachmentTypesByWeapon_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, EWeaponAttachmentType CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void GetDefaultAttachmentByType(EWeaponAttachmentType Type, class UWeaponAttachment** Attachment, bool Temp_bool_Variable, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, TSubclassOf<class UWeaponAttachment> CallFunc_GetActiveSecondaryAttachmentByType_ReturnValue, TSubclassOf<class UWeaponAttachment> CallFunc_GetActivePrimaryAttachmentByType_ReturnValue, TSubclassOf<class UWeaponAttachment> K2Node_Select_Default, class UWeaponAttachment* CallFunc_GetClassDefaultObject_ReturnValue);
	void InitializeByPageID(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_IsValid_ReturnValue);
	class UWeaponAttachment* GetStoredAttachmentByType(TSubclassOf<class ABaseWeapon> Weapon, EWeaponAttachmentType Type, bool Temp_bool_Variable, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UWeaponAttachment* CallFunc_GetDefaultAttachmentByType_Attachment, class UWeaponAttachment* CallFunc_GetStoredAttachmentByWeaponAndType_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UWeaponAttachment* K2Node_Select_Default);
	class UWeaponAttachment* GetCurrentAttachmentByType(EWeaponAttachmentType Type, bool Temp_bool_Variable, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TSubclassOf<class UWeaponAttachment> CallFunc_GetActivePrimaryAttachmentByType_ReturnValue, TSubclassOf<class UWeaponAttachment> CallFunc_GetActiveSecondaryAttachmentByType_ReturnValue, TSubclassOf<class UWeaponAttachment> K2Node_Select_Default, class UWeaponAttachment* CallFunc_GetClassDefaultObject_ReturnValue);
	void UpdateStyle(bool bUseGamepad);
	void CloseWeaponSelect();
	void CloseAttachmentSelect(bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Add_IntInt_ReturnValue, class UWidget* CallFunc_GetFocusTarget_Focus, TArray<class UW_LoadoutSlot_v2_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets, class UW_LoadoutSlot_v2_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void InitializePrimary(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TSubclassOf<class ABaseWeapon> CallFunc_GetActivePrimary_ReturnValue);
	void InitializeSecondary(class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TSubclassOf<class ABaseWeapon> CallFunc_GetActiveSecondary_ReturnValue);
	void GetWeaponObject(class ABaseWeapon** Param_WeaponObject);
	void BackPage(bool* Handled, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2);

	class UWidget* BP_GetDesiredFocusTarget(TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI_1, bool K2Node_DynamicCast_bSuccess_1, class UWidget* CallFunc_GetFocusTarget_Focus, class UWidget* CallFunc_GetFocusTarget_Focus_1, bool CallFunc_IsValid_ReturnValue) const;
	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Page_WeaponEdit_C">();
	}
	static class UW_Loadout_Page_WeaponEdit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Page_WeaponEdit_C>();
	}
};
static_assert(alignof(UW_Loadout_Page_WeaponEdit_C) == 0x000008, "Wrong alignment on UW_Loadout_Page_WeaponEdit_C");
static_assert(sizeof(UW_Loadout_Page_WeaponEdit_C) == 0x0003E8, "Wrong size on UW_Loadout_Page_WeaponEdit_C");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, UberGraphFrame) == 0x000320, "Member 'UW_Loadout_Page_WeaponEdit_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, AttachmentList) == 0x000328, "Member 'UW_Loadout_Page_WeaponEdit_C::AttachmentList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, AttachmentSwitcher) == 0x000330, "Member 'UW_Loadout_Page_WeaponEdit_C::AttachmentSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, CurrentWeapon) == 0x000338, "Member 'UW_Loadout_Page_WeaponEdit_C::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, Image_104) == 0x000340, "Member 'UW_Loadout_Page_WeaponEdit_C::Image_104' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, Lbl_Attachments) == 0x000348, "Member 'UW_Loadout_Page_WeaponEdit_C::Lbl_Attachments' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, Switcher) == 0x000350, "Member 'UW_Loadout_Page_WeaponEdit_C::Switcher' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, VB_AttachmentCategories) == 0x000358, "Member 'UW_Loadout_Page_WeaponEdit_C::VB_AttachmentCategories' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, VB_Attachments) == 0x000360, "Member 'UW_Loadout_Page_WeaponEdit_C::VB_Attachments' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, WeaponList) == 0x000368, "Member 'UW_Loadout_Page_WeaponEdit_C::WeaponList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, WeaponClass) == 0x000370, "Member 'UW_Loadout_Page_WeaponEdit_C::WeaponClass' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, WeaponObject) == 0x000378, "Member 'UW_Loadout_Page_WeaponEdit_C::WeaponObject' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, Secondary) == 0x000380, "Member 'UW_Loadout_Page_WeaponEdit_C::Secondary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, OnAttachmentHovered) == 0x000388, "Member 'UW_Loadout_Page_WeaponEdit_C::OnAttachmentHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, OnAttachmentUnhovered) == 0x000398, "Member 'UW_Loadout_Page_WeaponEdit_C::OnAttachmentUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, OnAttachmentClicked) == 0x0003A8, "Member 'UW_Loadout_Page_WeaponEdit_C::OnAttachmentClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, Page_ID) == 0x0003B8, "Member 'UW_Loadout_Page_WeaponEdit_C::Page_ID' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, CurrentAttachmentType) == 0x0003C0, "Member 'UW_Loadout_Page_WeaponEdit_C::CurrentAttachmentType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, Use_Gamepad) == 0x0003C1, "Member 'UW_Loadout_Page_WeaponEdit_C::Use_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, LastHovered) == 0x0003C8, "Member 'UW_Loadout_Page_WeaponEdit_C::LastHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, ChangingWeapon) == 0x0003D0, "Member 'UW_Loadout_Page_WeaponEdit_C::ChangingWeapon' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, ChangingAttachment) == 0x0003D1, "Member 'UW_Loadout_Page_WeaponEdit_C::ChangingAttachment' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_WeaponEdit_C, OnCurrentWeaponClicked) == 0x0003D8, "Member 'UW_Loadout_Page_WeaponEdit_C::OnCurrentWeaponClicked' has a wrong offset!");

}

