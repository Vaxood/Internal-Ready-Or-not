#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_ItemList_Vertical

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "LoadoutCategory_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_ItemList_Vertical.W_Loadout_ItemList_Vertical_C
// 0x04C0 (0x0820 - 0x0360)
class UW_Loadout_ItemList_Vertical_C final  : public ULoadoutVerticalItemListWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimReveal;                                        // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Fade;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Fade_1;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ItemScrollBox;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct LoadoutCategory::FLoadoutCategory> Gear_Category_Classes;                             // 0x0388(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsQuartermaster;                                   // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F17[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_Button_C*, EItemType>           SubnavGearButtons;                                 // 0x03A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	EItemCategory                                 LoadoutCategory;                                   // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F18[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnLoadoutItemClicked;                              // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EItemCategory                                 Loadout_Slot;                                      // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F19[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_Button_C*, EWeaponAttachmentType> SubnavAttachmentButtons;                           // 0x0410(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UDataTable*                             ItemDataTable;                                     // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemType                                     SelectedItemType;                                  // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1A[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnLoadoutItemDoubleClicked;                        // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct LoadoutCategory::FLoadoutCategory> DemoGearClasses;                                   // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_Design_Time;                                    // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1B[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UW_LoadoutSlot_C*, EItemType>      Items;                                             // 0x0498(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_Button_C*                            CurrentActiveSubnav;                               // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x04F0(0x0188)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_LoadoutSlot_C*                       CurrentlyEquipped;                                 // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWeaponAttachmentType                         SelectedAttachmentSlot;                            // 0x0681(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1C[0x6];                                     // 0x0682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AttachingWeaponData;                               // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstItemOffset;                                   // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                ListItemPadding;                                   // 0x0694(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1D[0x4];                                     // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnLoadoutItemHovered;                              // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLoadoutItemUnhovered;                            // 0x06B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAttachmentItemClicked;                           // 0x06C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAttachmentItemHovered;                           // 0x06D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UW_LoadoutSlot_Attachment_C*, EWeaponAttachmentType> Attachments;                                       // 0x06E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsPrimary;                                         // 0x0738(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Quartermaster;                                     // 0x0739(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1E[0x2];                                     // 0x073A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ContentMargins;                                    // 0x073C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DemoAttachmentList;                                // 0x074C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1F[0x3];                                     // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_Attachment_C*            EquippedAttachment;                                // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_C*                       EquippedItem;                                      // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScrollToViewPadding;                               // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollPageSize;                                    // 0x0764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollPageCount;                                   // 0x0768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentScrollTarget;                               // 0x076C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentScrollPage;                                 // 0x0770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentOffset;                                     // 0x0774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUserScrollInput;                                 // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F20[0x7];                                     // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        VisibleItems;                                      // 0x0780(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UClass*>                         ExcludedItems;                                     // 0x0790(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   ExcludedAmmoType;                                  // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnAttachmentUnhovered;                             // 0x07A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAmmoItemClicked;                                 // 0x07B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAmmoItemHovered;                                 // 0x07C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAmmoItemDoubleClicked;                           // 0x07D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsAmmunition;                                      // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsArmourMaterial;                                  // 0x07E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F21[0x6];                                     // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnArmourMaterialClicked;                           // 0x07F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnArmourMaterialDoubleClicked;                     // 0x0800(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnArmourMaterialHovered;                           // 0x0810(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnLoadoutItemClicked__DelegateSignature(class UClass* ItemData);
	void OnLoadoutItemDoubleClicked__DelegateSignature(class UClass* ItemData);
	void OnAttachmentItemClicked__DelegateSignature(class UClass* AttachingWeapon, class UClass* AttachmentData);
	void OnAttachmentItemHovered__DelegateSignature(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void OnAmmoItemClicked__DelegateSignature(class FName AmmoType, class UClass* Weapon);
	void OnAmmoItemHovered__DelegateSignature(class FName AmmoType);
	void OnAmmoItemDoubleClicked__DelegateSignature(class FName AmmoType);
	void OnArmourMaterialClicked__DelegateSignature(class UArmourMaterial* ArmourMaterial);
	void OnArmourMaterialDoubleClicked__DelegateSignature(class UArmourMaterial* ArmourMaterial);
	void OnArmourMaterialHovered__DelegateSignature(class UArmourMaterial* ArmourMaterial);
	void OnAttachmentUnhovered__DelegateSignature(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void OnLoadoutItemHovered__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void OnLoadoutItemUnhovered__DelegateSignature(class UW_LoadoutSlot_C* TriggeringSlot);
	void ExecuteUbergraph_W_Loadout_ItemList_Vertical(int32 EntryPoint, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_6, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_7, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_5, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_4, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UW_LoadoutSlot_Attachment_C* K2Node_CustomEvent_TriggeringAttachment_2, class UW_LoadoutSlot_Attachment_C* K2Node_CustomEvent_TriggeringAttachment_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_3, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_2, class UClass* K2Node_CustomEvent_ItemData, EWeaponAttachmentType K2Node_CustomEvent_AttachmentType, class UW_LoadoutSlot_Attachment_C* K2Node_CustomEvent_TriggeringAttachment, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringSlot, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringItem_1, class UW_LoadoutSlot_C* K2Node_CustomEvent_TriggeringItem, class UW_Button_C* K2Node_CustomEvent_Button, EItemCategory K2Node_CustomEvent_LoadoutSlot_1, TArray<struct LoadoutCategory::FLoadoutCategory>& K2Node_CustomEvent_GearCategoryClasses_1, TArray<class UClass*>& K2Node_CustomEvent_ExcludedItems, bool CallFunc_Not_PreBool_ReturnValue_1, EItemCategory K2Node_CustomEvent_LoadoutSlot, TArray<struct LoadoutCategory::FLoadoutCategory>& K2Node_CustomEvent_GearCategoryClasses, bool CallFunc_Not_PreBool_ReturnValue_2, class FName K2Node_CustomEvent_ExcludedAmmoType, class UClass* K2Node_CustomEvent_Weapon, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem_1, class UWidget* K2Node_Select_Default, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_Event_IsDesignTime, class FName K2Node_Event_OptionNameID, class UW_Loadout_C* K2Node_Event_LoadoutWidget, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, class UWidget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UW_LoadoutSlot_C* K2Node_CustomEvent_TrigeringItem, float K2Node_ComponentBoundEvent_CurrentOffset, class FName K2Node_Event_PageName, bool K2Node_Event_IsGamepad, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, bool CallFunc_Not_PreBool_ReturnValue_3, float K2Node_Event_Delay, const struct FSavedLoadout& K2Node_Event_ActiveLoadout);
	void UpdateActiveLoadout(const struct FSavedLoadout& Param_ActiveLoadout);
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void SetInputMode(bool IsGamepad);
	void ChangePage(class FName PageName);
	void ScrollOpenedToEquipped();
	void BndEvt__W_Loadout_ItemList_ItemScrollBox_K2Node_ComponentBoundEvent_0_OnUserScrolledEvent__DelegateSignature(float Param_CurrentOffset);
	void ArmourMaterialClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void BP_OnDeactivated();
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void BP_OnActivated();
	void HeaderSubpageNavigation(class FName OptionNameID);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void LoadoutItemClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void InitializeAmmoList(class FName Param_ExcludedAmmoType, class UClass* Weapon);
	void InitializeLoadoutList(EItemCategory LoadoutSlot, TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses);
	void OpenList();
	void SubnavButtonClicked(class UW_Button_C* Button);
	void ArmourMaterialUnhovered(class UW_LoadoutSlot_C* TriggeringItem);
	void AmmoItemUnhovered(class UW_LoadoutSlot_C* TriggeringItem);
	void LoadoutItemUnhovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void LoadoutItemHovered(class UW_LoadoutSlot_C* TriggeringSlot);
	void AttachmentItemUnhovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void InitializeAttachmentList(class UClass* ItemData, EWeaponAttachmentType AttachmentType);
	void ArmourMaterialDoubleClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void ArmourMaterialHovered(class UW_LoadoutSlot_C* TrigeringItem);
	void AttachmentItemHovered(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void AttachmentItemClicked(class UW_LoadoutSlot_Attachment_C* TriggeringAttachment);
	void HideList();
	void InitializeArmourMaterialList();
	void LoadoutItemDoubleClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void AmmoItemDoubleClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void AmmoItemHovered(class UW_LoadoutSlot_C* TrigeringItem);
	void AmmoItemClicked(class UW_LoadoutSlot_C* TrigeringItem);
	void InitializeDeployableList(EItemCategory LoadoutSlot, TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses, TArray<class UClass*>& Param_ExcludedItems);
	void PopulateSubnav();
	void PopulateItems(TArray<struct LoadoutCategory::FLoadoutCategory>& GearCategoryClasses, bool FirstItem, class UScrollBoxSlot* ItemScrollSlot, const TArray<struct FDeviceData>& FilteredDeviceData, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UWorld* CallFunc_GetWorldBP_ReturnValue, class UItemData* CallFunc_GetItemData_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, const struct FArmourData& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UScrollBoxSlot* CallFunc_CreateLoadoutWidgetItem_AsScroll_Box_Slot, class UW_LoadoutSlot_C* CallFunc_CreateLoadoutWidgetItem_LoadoutSlotWidget, int32 CallFunc_Array_Length_ReturnValue_1, const struct FDeviceData& CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue, class UScrollBoxSlot* CallFunc_CreateLoadoutWidgetItem_AsScroll_Box_Slot_1, class UW_LoadoutSlot_C* CallFunc_CreateLoadoutWidgetItem_LoadoutSlotWidget_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_4, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_3, const struct FWeaponData& CallFunc_Array_Get_Item_2, bool CallFunc_Less_IntInt_ReturnValue_3, class UScrollBoxSlot* CallFunc_CreateLoadoutWidgetItem_AsScroll_Box_Slot_2, class UW_LoadoutSlot_C* CallFunc_CreateLoadoutWidgetItem_LoadoutSlotWidget_2, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Loop_Counter_Variable_4, int32 Temp_int_Array_Index_Variable_3, const struct FArmourData& CallFunc_Array_Get_Item_3, class UScrollBoxSlot* CallFunc_CreateLoadoutWidgetItem_AsScroll_Box_Slot_3, class UW_LoadoutSlot_C* CallFunc_CreateLoadoutWidgetItem_LoadoutSlotWidget_3, bool CallFunc_Less_IntInt_ReturnValue_4, int32 CallFunc_Add_IntInt_ReturnValue_4, int32 Temp_int_Array_Index_Variable_4, const struct FWeaponData& CallFunc_Array_Get_Item_4, class UScrollBoxSlot* CallFunc_CreateLoadoutWidgetItem_AsScroll_Box_Slot_4, class UW_LoadoutSlot_C* CallFunc_CreateLoadoutWidgetItem_LoadoutSlotWidget_4);
	void GetItemArrayBySlot();
	void CreateLoadoutWidgetItem(class UClass* ItemData, class UScrollBoxSlot** AsScroll_Box_Slot, class UW_LoadoutSlot_C** LoadoutSlotWidget, class UW_LoadoutSlot_C* Widget, class UW_LoadoutSlot_C* CallFunc_Create_ReturnValue, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, const struct FItemLookupTable& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UW_LoadoutSlot_C* CallFunc_Create_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_3, bool CallFunc_EqualEqual_ClassClass_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_5, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UScrollBoxSlot* K2Node_DynamicCast_AsScroll_Box_Slot, bool K2Node_DynamicCast_bSuccess);
	void SortItems(bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, const struct FMargin& K2Node_MakeStruct_Margin, const struct FMargin& K2Node_MakeStruct_Margin_1, int32 Temp_int_Loop_Counter_Variable_1, bool Temp_bool_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, class UWidget* K2Node_Select_Default, bool CallFunc_EqualEqual_ByteByte_ReturnValue, TArray<class UW_LoadoutSlot_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class UW_LoadoutSlot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, bool CallFunc_IsVisible_ReturnValue, class UW_LoadoutSlot_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Add_ReturnValue, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue_1, EItemType CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void RefreshEquipped(const struct FSavedLoadout& Param_ActiveLoadout, bool RefreshAttachments);
	void PopulateAttachments(TArray<class UClass*>& Param_Attachments, const struct FSavedLoadout& Param_ActiveLoadout, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, class UW_LoadoutSlot_Attachment_C* CallFunc_Create_ReturnValue, class UClass* CallFunc_Array_Get_Item, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, int32 CallFunc_Array_Add_ReturnValue, class UClass* Temp_class_Variable, EWeaponAttachmentType Temp_byte_Variable, class UClass* Temp_class_Variable_1, EWeaponAttachmentType Temp_byte_Variable_1, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_LoadoutSlot_Attachment_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, TArray<EItemCategory>& Temp_byte_Variable_2, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, EItemCategory Temp_byte_Variable_3, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UScrollBoxSlot* K2Node_DynamicCast_AsScroll_Box_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, class UClass* K2Node_Select_Default, class UClass* K2Node_Select_Default_1, class UClass* CallFunc_SelectClass_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue);
	void SetListItemPadding(bool IsFirstItem, class UScrollBoxSlot* ScrollBoxSlotItem, const struct FMargin& K2Node_MakeStruct_Margin);
	void RefreshEquippedItems(class UClass* ItemData, class UW_LoadoutSlot_C* RefreshingSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, const struct FSavedLoadout& CallFunc_GetActiveLoadout_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_3, bool CallFunc_EqualEqual_ClassClass_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_5, TArray<class UW_LoadoutSlot_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class UW_LoadoutSlot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void RefreshEquippedAttachments(bool Temp_bool_Variable, bool Temp_bool_Variable_1, int32 Temp_int_Loop_Counter_Variable, TArray<class UW_LoadoutSlot_Attachment_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UWidget* K2Node_Select_Default, int32 Temp_int_Array_Index_Variable, class UW_LoadoutSlot_Attachment_C* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_3, bool CallFunc_EqualEqual_ClassClass_ReturnValue_4, bool CallFunc_EqualEqual_ClassClass_ReturnValue_5, bool CallFunc_EqualEqual_ClassClass_ReturnValue_6, bool CallFunc_EqualEqual_ClassClass_ReturnValue_7, bool CallFunc_EqualEqual_ClassClass_ReturnValue_8, bool CallFunc_EqualEqual_ClassClass_ReturnValue_9, bool CallFunc_EqualEqual_ClassClass_ReturnValue_10, bool CallFunc_EqualEqual_ClassClass_ReturnValue_11, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue_12, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue_13, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_EqualEqual_ClassClass_ReturnValue_14, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_EqualEqual_ClassClass_ReturnValue_15, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_EqualEqual_ClassClass_ReturnValue_16, bool CallFunc_BooleanOR_ReturnValue_5, bool CallFunc_EqualEqual_ClassClass_ReturnValue_17, bool CallFunc_BooleanOR_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue_7, bool CallFunc_BooleanOR_ReturnValue_8, bool CallFunc_BooleanOR_ReturnValue_9, bool CallFunc_BooleanOR_ReturnValue_10, bool CallFunc_BooleanOR_ReturnValue_11, bool CallFunc_BooleanOR_ReturnValue_12, bool CallFunc_BooleanOR_ReturnValue_13, bool CallFunc_BooleanOR_ReturnValue_14, bool CallFunc_BooleanOR_ReturnValue_15, bool K2Node_Select_Default_1);
	void ScrollToEquipped(bool Temp_bool_Variable, bool Temp_bool_Variable_1, float CallFunc_Conv_IntToFloat_ReturnValue, class UWidget* K2Node_Select_Default, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Find_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_FCeil_ReturnValue, class UWidget* K2Node_Select_Default_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void SetupScrollPagination(int32 CallFunc_Array_Length_ReturnValue, class UWidget* CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector2D& CallFunc_GetDesiredSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, class UScrollBoxSlot* CallFunc_SlotAsScrollBoxSlot_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, int32 CallFunc_Divide_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const struct FVector2D& CallFunc_GetViewportSize_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, float CallFunc_BreakVector2D_X_1, float CallFunc_BreakVector2D_Y_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, float CallFunc_Divide_FloatFloat_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, int32 CallFunc_FTrunc_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_6);
	void UpdateScrollPage();
	void ScrollToNextPage(int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 Temp_int_Variable);
	void ScrollToPreviousPage(int32 Temp_int_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void ScrollToNextItem(int32 CallFunc_Array_LastIndex_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Variable, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void ScrollToPreviousItem(int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue);
	void ScrollToTargetIndex(int32 ItemIndex, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UWidget* CallFunc_Array_Get_Item, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
	void ScrollToPage(int32 Page, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void PopulateAmmo(TArray<class FName>& AmmoTypes, class UClass* Weapon, bool FirstItem, class UScrollBoxSlot* ItemScrollSlot, const TArray<struct FDeviceData>& FilteredDeviceData, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UDataTable* CallFunc_GetAmmoLookupDataTable_ReturnValue, class FName CallFunc_Array_Get_Item, const struct FAmmoTypeData& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, class UScrollBoxSlot* CallFunc_CreateAmmoLoadoutWidgetItem_AsScroll_Box_Slot, class UW_LoadoutSlot_C* CallFunc_CreateAmmoLoadoutWidgetItem_LoadoutSlotWidget, int32 CallFunc_Array_Add_ReturnValue, EItemType Temp_byte_Variable);
	void CreateAmmoLoadoutWidgetItem(class FName AmmoType, class UClass* Weapon, class UScrollBoxSlot** AsScroll_Box_Slot, class UW_LoadoutSlot_C** LoadoutSlotWidget, class UW_LoadoutSlot_C* Widget, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, class UW_LoadoutSlot_C* CallFunc_Create_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsBase_Magazine_Weapon, bool K2Node_ClassDynamicCast_bSuccess, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_NotEqual_ClassClass_ReturnValue, bool Temp_bool_Variable, TArray<class FName>& K2Node_Select_Default, bool CallFunc_Array_Contains_ReturnValue, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UScrollBoxSlot* K2Node_DynamicCast_AsScroll_Box_Slot, bool K2Node_DynamicCast_bSuccess);
	void PopulateArmourMaterials(bool FirstItem, class UScrollBoxSlot* ItemScrollSlot, const TArray<struct FDeviceData>& FilteredDeviceData, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TScriptInterface<class IAssetRegistry> CallFunc_GetAssetRegistry_ReturnValue, TArray<struct FAssetData>& CallFunc_GetAssetsByClass_OutAssetData, bool CallFunc_GetAssetsByClass_ReturnValue, const struct FAssetData& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UObject* CallFunc_GetAsset_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UArmourMaterial* K2Node_DynamicCast_AsArmour_Material, bool K2Node_DynamicCast_bSuccess, class UScrollBoxSlot* CallFunc_CreateArmourMaterialLoadoutWidgetItem_AsScroll_Box_Slot, class UW_LoadoutSlot_C* CallFunc_CreateArmourMaterialLoadoutWidgetItem_LoadoutSlotWidget, EItemType Temp_byte_Variable, int32 CallFunc_Array_Add_ReturnValue);
	void CreateArmourMaterialLoadoutWidgetItem(class UArmourMaterial* ArmourMaterial, class UScrollBoxSlot** AsScroll_Box_Slot, class UW_LoadoutSlot_C** LoadoutSlotWidget, class UW_LoadoutSlot_C* Widget, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, class UW_LoadoutSlot_C* CallFunc_Create_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class UW_LoadoutSlot_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_3, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UScrollBoxSlot* K2Node_DynamicCast_AsScroll_Box_Slot, bool K2Node_DynamicCast_bSuccess);
	void RefreshEquippedAmmo(class UClass* ItemData, class UW_LoadoutSlot_C* RefreshingSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, TArray<class UW_LoadoutSlot_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class UW_LoadoutSlot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void RefreshEquippedArmourMaterial(class UClass* ItemData, class UW_LoadoutSlot_C* RefreshingSlot, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, TArray<class UW_LoadoutSlot_C*>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, class UW_LoadoutSlot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_ItemList_Vertical_C">();
	}
	static class UW_Loadout_ItemList_Vertical_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_ItemList_Vertical_C>();
	}
};
static_assert(alignof(UW_Loadout_ItemList_Vertical_C) == 0x000008, "Wrong alignment on UW_Loadout_ItemList_Vertical_C");
static_assert(sizeof(UW_Loadout_ItemList_Vertical_C) == 0x000820, "Wrong size on UW_Loadout_ItemList_Vertical_C");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, UberGraphFrame) == 0x000360, "Member 'UW_Loadout_ItemList_Vertical_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, AnimReveal) == 0x000368, "Member 'UW_Loadout_ItemList_Vertical_C::AnimReveal' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Img_Fade) == 0x000370, "Member 'UW_Loadout_ItemList_Vertical_C::Img_Fade' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Img_Fade_1) == 0x000378, "Member 'UW_Loadout_ItemList_Vertical_C::Img_Fade_1' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ItemScrollBox) == 0x000380, "Member 'UW_Loadout_ItemList_Vertical_C::ItemScrollBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Gear_Category_Classes) == 0x000388, "Member 'UW_Loadout_ItemList_Vertical_C::Gear_Category_Classes' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, IsQuartermaster) == 0x000398, "Member 'UW_Loadout_ItemList_Vertical_C::IsQuartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, SubnavGearButtons) == 0x0003A0, "Member 'UW_Loadout_ItemList_Vertical_C::SubnavGearButtons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, LoadoutCategory) == 0x0003F0, "Member 'UW_Loadout_ItemList_Vertical_C::LoadoutCategory' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnLoadoutItemClicked) == 0x0003F8, "Member 'UW_Loadout_ItemList_Vertical_C::OnLoadoutItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Loadout_Slot) == 0x000408, "Member 'UW_Loadout_ItemList_Vertical_C::Loadout_Slot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, SubnavAttachmentButtons) == 0x000410, "Member 'UW_Loadout_ItemList_Vertical_C::SubnavAttachmentButtons' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ItemDataTable) == 0x000460, "Member 'UW_Loadout_ItemList_Vertical_C::ItemDataTable' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, SelectedItemType) == 0x000468, "Member 'UW_Loadout_ItemList_Vertical_C::SelectedItemType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnLoadoutItemDoubleClicked) == 0x000470, "Member 'UW_Loadout_ItemList_Vertical_C::OnLoadoutItemDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, DemoGearClasses) == 0x000480, "Member 'UW_Loadout_ItemList_Vertical_C::DemoGearClasses' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Is_Design_Time) == 0x000490, "Member 'UW_Loadout_ItemList_Vertical_C::Is_Design_Time' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Items) == 0x000498, "Member 'UW_Loadout_ItemList_Vertical_C::Items' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, CurrentActiveSubnav) == 0x0004E8, "Member 'UW_Loadout_ItemList_Vertical_C::CurrentActiveSubnav' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ActiveLoadout) == 0x0004F0, "Member 'UW_Loadout_ItemList_Vertical_C::ActiveLoadout' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, CurrentlyEquipped) == 0x000678, "Member 'UW_Loadout_ItemList_Vertical_C::CurrentlyEquipped' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Open) == 0x000680, "Member 'UW_Loadout_ItemList_Vertical_C::Open' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, SelectedAttachmentSlot) == 0x000681, "Member 'UW_Loadout_ItemList_Vertical_C::SelectedAttachmentSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, AttachingWeaponData) == 0x000688, "Member 'UW_Loadout_ItemList_Vertical_C::AttachingWeaponData' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, FirstItemOffset) == 0x000690, "Member 'UW_Loadout_ItemList_Vertical_C::FirstItemOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ListItemPadding) == 0x000694, "Member 'UW_Loadout_ItemList_Vertical_C::ListItemPadding' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnLoadoutItemHovered) == 0x0006A8, "Member 'UW_Loadout_ItemList_Vertical_C::OnLoadoutItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnLoadoutItemUnhovered) == 0x0006B8, "Member 'UW_Loadout_ItemList_Vertical_C::OnLoadoutItemUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnAttachmentItemClicked) == 0x0006C8, "Member 'UW_Loadout_ItemList_Vertical_C::OnAttachmentItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnAttachmentItemHovered) == 0x0006D8, "Member 'UW_Loadout_ItemList_Vertical_C::OnAttachmentItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Attachments) == 0x0006E8, "Member 'UW_Loadout_ItemList_Vertical_C::Attachments' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, IsPrimary) == 0x000738, "Member 'UW_Loadout_ItemList_Vertical_C::IsPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, Quartermaster) == 0x000739, "Member 'UW_Loadout_ItemList_Vertical_C::Quartermaster' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ContentMargins) == 0x00073C, "Member 'UW_Loadout_ItemList_Vertical_C::ContentMargins' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, DemoAttachmentList) == 0x00074C, "Member 'UW_Loadout_ItemList_Vertical_C::DemoAttachmentList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, EquippedAttachment) == 0x000750, "Member 'UW_Loadout_ItemList_Vertical_C::EquippedAttachment' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, EquippedItem) == 0x000758, "Member 'UW_Loadout_ItemList_Vertical_C::EquippedItem' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ScrollToViewPadding) == 0x000760, "Member 'UW_Loadout_ItemList_Vertical_C::ScrollToViewPadding' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ScrollPageSize) == 0x000764, "Member 'UW_Loadout_ItemList_Vertical_C::ScrollPageSize' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ScrollPageCount) == 0x000768, "Member 'UW_Loadout_ItemList_Vertical_C::ScrollPageCount' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, CurrentScrollTarget) == 0x00076C, "Member 'UW_Loadout_ItemList_Vertical_C::CurrentScrollTarget' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, CurrentScrollPage) == 0x000770, "Member 'UW_Loadout_ItemList_Vertical_C::CurrentScrollPage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, CurrentOffset) == 0x000774, "Member 'UW_Loadout_ItemList_Vertical_C::CurrentOffset' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, IsUserScrollInput) == 0x000778, "Member 'UW_Loadout_ItemList_Vertical_C::IsUserScrollInput' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, VisibleItems) == 0x000780, "Member 'UW_Loadout_ItemList_Vertical_C::VisibleItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ExcludedItems) == 0x000790, "Member 'UW_Loadout_ItemList_Vertical_C::ExcludedItems' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, ExcludedAmmoType) == 0x0007A0, "Member 'UW_Loadout_ItemList_Vertical_C::ExcludedAmmoType' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnAttachmentUnhovered) == 0x0007A8, "Member 'UW_Loadout_ItemList_Vertical_C::OnAttachmentUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnAmmoItemClicked) == 0x0007B8, "Member 'UW_Loadout_ItemList_Vertical_C::OnAmmoItemClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnAmmoItemHovered) == 0x0007C8, "Member 'UW_Loadout_ItemList_Vertical_C::OnAmmoItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnAmmoItemDoubleClicked) == 0x0007D8, "Member 'UW_Loadout_ItemList_Vertical_C::OnAmmoItemDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, IsAmmunition) == 0x0007E8, "Member 'UW_Loadout_ItemList_Vertical_C::IsAmmunition' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, IsArmourMaterial) == 0x0007E9, "Member 'UW_Loadout_ItemList_Vertical_C::IsArmourMaterial' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnArmourMaterialClicked) == 0x0007F0, "Member 'UW_Loadout_ItemList_Vertical_C::OnArmourMaterialClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnArmourMaterialDoubleClicked) == 0x000800, "Member 'UW_Loadout_ItemList_Vertical_C::OnArmourMaterialDoubleClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_ItemList_Vertical_C, OnArmourMaterialHovered) == 0x000810, "Member 'UW_Loadout_ItemList_Vertical_C::OnArmourMaterialHovered' has a wrong offset!");

}

