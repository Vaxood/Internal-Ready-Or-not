#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardSlider

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_StandardSlider.W_StandardSlider_C.OnFloatValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardSlider_C_OnFloatValueChanged__DelegateSignature final 
{
public:
	float                                         NewFloatValue;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSliderValue;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_OnFloatValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on W_StandardSlider_C_OnFloatValueChanged__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_OnFloatValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_StandardSlider_C_OnFloatValueChanged__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_OnFloatValueChanged__DelegateSignature, NewFloatValue) == 0x000000, "Member 'W_StandardSlider_C_OnFloatValueChanged__DelegateSignature::NewFloatValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnFloatValueChanged__DelegateSignature, NewSliderValue) == 0x000004, "Member 'W_StandardSlider_C_OnFloatValueChanged__DelegateSignature::NewSliderValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnIntegralValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature final 
{
public:
	int32                                         NewIntegerValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSliderValue;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature, NewIntegerValue) == 0x000000, "Member 'W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature::NewIntegerValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature, NewSliderValue) == 0x000004, "Member 'W_StandardSlider_C_OnIntegralValueChanged__DelegateSignature::NewSliderValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnQualityValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardSlider_C_OnQualityValueChanged__DelegateSignature final 
{
public:
	int32                                         NewQualityValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSliderValue;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_OnQualityValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on W_StandardSlider_C_OnQualityValueChanged__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_OnQualityValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_StandardSlider_C_OnQualityValueChanged__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_OnQualityValueChanged__DelegateSignature, NewQualityValue) == 0x000000, "Member 'W_StandardSlider_C_OnQualityValueChanged__DelegateSignature::NewQualityValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnQualityValueChanged__DelegateSignature, NewSliderValue) == 0x000004, "Member 'W_StandardSlider_C_OnQualityValueChanged__DelegateSignature::NewSliderValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnResolutionValueChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature final 
{
public:
	class FString                                 NewResolutionValue;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         NewSliderValue;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature) == 0x000018, "Wrong size on W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature, NewResolutionValue) == 0x000000, "Member 'W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature::NewResolutionValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature, NewSliderValue) == 0x000010, "Member 'W_StandardSlider_C_OnResolutionValueChanged__DelegateSignature::NewSliderValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnDlssValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardSlider_C_OnDlssValueChanged__DelegateSignature final 
{
public:
	int32                                         NewIntegerValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSliderValue;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_OnDlssValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on W_StandardSlider_C_OnDlssValueChanged__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_OnDlssValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_StandardSlider_C_OnDlssValueChanged__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_OnDlssValueChanged__DelegateSignature, NewIntegerValue) == 0x000000, "Member 'W_StandardSlider_C_OnDlssValueChanged__DelegateSignature::NewIntegerValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnDlssValueChanged__DelegateSignature, NewSliderValue) == 0x000004, "Member 'W_StandardSlider_C_OnDlssValueChanged__DelegateSignature::NewSliderValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.ExecuteUbergraph_W_StandardSlider
// 0x0288 (0x0288 - 0x0000)
struct W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B87[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0008(0x0070)(ConstParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_2;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B88[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatValue_NewValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetIntegralValue_NewValue;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_3;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_4;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_3;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B89[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8A[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_4;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_4;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8B[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSupportedScreenResolutions_ReturnValue; // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B8C[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B8D[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedValue_ReturnValue;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_1;             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_2;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0188(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B8E[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_12;           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_13;           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_5;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_6;           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_14;           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_5;                      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_5;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_3;             // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_4;             // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01DC(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B8F[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0218(0x0070)(ConstParm)
};
static_assert(alignof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider) == 0x000008, "Wrong alignment on W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider");
static_assert(sizeof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider) == 0x000288, "Wrong size on W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, EntryPoint) == 0x000000, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_MouseEvent) == 0x000008, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000078, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00007C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000084, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue) == 0x000088, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00008C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000090, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000094, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000098, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x00009C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x0000A0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_2) == 0x0000A4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_IsDesignTime) == 0x0000A8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_SwitchEnum_CmpSuccess) == 0x0000A9, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetFloatValue_NewValue) == 0x0000AC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetFloatValue_NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetIntegralValue_NewValue) == 0x0000B0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetIntegralValue_NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_3) == 0x0000B4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_ComponentBoundEvent_Value) == 0x0000B8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x0000BC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_4) == 0x0000C4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue) == 0x0000C8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue) == 0x0000CC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_1) == 0x0000D4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000D8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_1) == 0x0000DC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_2) == 0x0000E0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_2) == 0x0000E4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000E8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_3) == 0x0000EC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000F0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_3) == 0x0000F4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000FC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Get_Item) == 0x000108, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000118, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_4) == 0x00011C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue) == 0x000120, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_4) == 0x000124, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000138, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000140, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetSupportedScreenResolutions_ReturnValue) == 0x000150, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetSupportedScreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x000154, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000158, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_IsValid_ReturnValue) == 0x00015C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_IsValid_ReturnValue_1) == 0x00015D, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetNormalizedValue_ReturnValue) == 0x000164, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetNormalizedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000168, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x00016C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000170, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue) == 0x000174, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000178, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_1) == 0x00017C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000180, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_2) == 0x000184, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_MakeStruct_SlateChildSize) == 0x000188, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000190, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Length_ReturnValue_2) == 0x00019C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x0001A0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0001A4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_12) == 0x0001A8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_13) == 0x0001AC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_5) == 0x0001B0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_6) == 0x0001B4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToFloat_ReturnValue_14) == 0x0001B8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001BC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_5) == 0x0001C0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_5) == 0x0001C4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001C8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_3) == 0x0001CC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0001D0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_4) == 0x0001D4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_FClamp_ReturnValue) == 0x0001D8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_MyGeometry) == 0x0001DC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_MouseEvent_1) == 0x000218, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_MouseEvent_1' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct W_StandardSlider_C_OnMouseLeave final 
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardSlider_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_StandardSlider_C_OnMouseLeave");
static_assert(sizeof(W_StandardSlider_C_OnMouseLeave) == 0x000070, "Wrong size on W_StandardSlider_C_OnMouseLeave");
static_assert(offsetof(W_StandardSlider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_StandardSlider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct W_StandardSlider_C_OnMouseEnter final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardSlider_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_StandardSlider_C_OnMouseEnter");
static_assert(sizeof(W_StandardSlider_C_OnMouseEnter) == 0x0000A8, "Wrong size on W_StandardSlider_C_OnMouseEnter");
static_assert(offsetof(W_StandardSlider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_StandardSlider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_StandardSlider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final 
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_StandardSlider_C_PreConstruct final 
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_PreConstruct) == 0x000001, "Wrong alignment on W_StandardSlider_C_PreConstruct");
static_assert(sizeof(W_StandardSlider_C_PreConstruct) == 0x000001, "Wrong size on W_StandardSlider_C_PreConstruct");
static_assert(offsetof(W_StandardSlider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_StandardSlider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.UpdateSliderText
// 0x0180 (0x0180 - 0x0000)
struct W_StandardSlider_C_UpdateSliderText final 
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B90[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
	float                                         CallFunc_GetNormalizedValue_ReturnValue;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B91[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GenerateFSRQualityString_ReturnValue;     // 0x0070(0x0018)()
	class FText                                   CallFunc_GenerateDlssQualityString_ReturnValue;    // 0x0088(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B92[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00C0(0x0018)()
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B93[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0130(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0018)()
	class FText                                   CallFunc_GenerateQualityString_ReturnValue;        // 0x0160(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_UpdateSliderText) == 0x000008, "Wrong alignment on W_StandardSlider_C_UpdateSliderText");
static_assert(sizeof(W_StandardSlider_C_UpdateSliderText) == 0x000180, "Wrong size on W_StandardSlider_C_UpdateSliderText");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_int_Variable) == 0x000000, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_text_Variable) == 0x000008, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_text_Variable_1) == 0x000020, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_text_Variable_2) == 0x000038, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_Select_Default) == 0x000050, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GetNormalizedValue_ReturnValue) == 0x000068, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GetNormalizedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GenerateFSRQualityString_ReturnValue) == 0x000070, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GenerateFSRQualityString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GenerateDlssQualityString_ReturnValue) == 0x000088, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GenerateDlssQualityString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B8, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000C0, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Round_ReturnValue) == 0x0000D8, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_MakeArray_Array) == 0x000120, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_IntToText_ReturnValue) == 0x000130, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Format_ReturnValue) == 0x000148, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GenerateQualityString_ReturnValue) == 0x000160, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GenerateQualityString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_SwitchEnum_CmpSuccess) == 0x000178, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetFloatValue
// 0x0014 (0x0014 - 0x0000)
struct W_StandardSlider_C_SetFloatValue final 
{
public:
	float                                         NewFloat;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_SetFloatValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_SetFloatValue");
static_assert(sizeof(W_StandardSlider_C_SetFloatValue) == 0x000014, "Wrong size on W_StandardSlider_C_SetFloatValue");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, NewFloat) == 0x000000, "Member 'W_StandardSlider_C_SetFloatValue::NewFloat' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, NewValue) == 0x000004, "Member 'W_StandardSlider_C_SetFloatValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_NormalizeToRange_ReturnValue) == 0x00000C, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetIntegralValue
// 0x0020 (0x0020 - 0x0000)
struct W_StandardSlider_C_SetIntegralValue final 
{
public:
	int32                                         NewInteger;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_SetIntegralValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_SetIntegralValue");
static_assert(sizeof(W_StandardSlider_C_SetIntegralValue) == 0x000020, "Wrong size on W_StandardSlider_C_SetIntegralValue");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, NewInteger) == 0x000000, "Member 'W_StandardSlider_C_SetIntegralValue::NewInteger' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, NewValue) == 0x000004, "Member 'W_StandardSlider_C_SetIntegralValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00000C, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000014, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetQualityValue
// 0x0014 (0x0014 - 0x0000)
struct W_StandardSlider_C_SetQualityValue final 
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_SetQualityValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_SetQualityValue");
static_assert(sizeof(W_StandardSlider_C_SetQualityValue) == 0x000014, "Wrong size on W_StandardSlider_C_SetQualityValue");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetQualityValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_NormalizeToRange_ReturnValue) == 0x00000C, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetResolutionValue
// 0x0048 (0x0048 - 0x0000)
struct W_StandardSlider_C_SetResolutionValue final 
{
public:
	class FString                                 Resolution;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B94[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetResolutionValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetResolutionValue");
static_assert(sizeof(W_StandardSlider_C_SetResolutionValue) == 0x000048, "Wrong size on W_StandardSlider_C_SetResolutionValue");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, Resolution) == 0x000000, "Member 'W_StandardSlider_C_SetResolutionValue::Resolution' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Array_Contains_ReturnValue) == 0x00002C, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.AddFloatValue
// 0x0010 (0x0010 - 0x0000)
struct W_StandardSlider_C_AddFloatValue final 
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatValue_NewValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_AddFloatValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_AddFloatValue");
static_assert(sizeof(W_StandardSlider_C_AddFloatValue) == 0x000010, "Wrong size on W_StandardSlider_C_AddFloatValue");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, Value) == 0x000000, "Member 'W_StandardSlider_C_AddFloatValue::Value' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, NewValue) == 0x000004, "Member 'W_StandardSlider_C_AddFloatValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_AddFloatValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, CallFunc_SetFloatValue_NewValue) == 0x00000C, "Member 'W_StandardSlider_C_AddFloatValue::CallFunc_SetFloatValue_NewValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.AddIntegralValue
// 0x0010 (0x0010 - 0x0000)
struct W_StandardSlider_C_AddIntegralValue final 
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetIntegralValue_NewValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_AddIntegralValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_AddIntegralValue");
static_assert(sizeof(W_StandardSlider_C_AddIntegralValue) == 0x000010, "Wrong size on W_StandardSlider_C_AddIntegralValue");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, Value) == 0x000000, "Member 'W_StandardSlider_C_AddIntegralValue::Value' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, NewValue) == 0x000004, "Member 'W_StandardSlider_C_AddIntegralValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_AddIntegralValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, CallFunc_SetIntegralValue_NewValue) == 0x00000C, "Member 'W_StandardSlider_C_AddIntegralValue::CallFunc_SetIntegralValue_NewValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetDLSSQualityValue
// 0x0014 (0x0014 - 0x0000)
struct W_StandardSlider_C_SetDLSSQualityValue final 
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_SetDLSSQualityValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_SetDLSSQualityValue");
static_assert(sizeof(W_StandardSlider_C_SetDLSSQualityValue) == 0x000014, "Wrong size on W_StandardSlider_C_SetDLSSQualityValue");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetDLSSQualityValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_NormalizeToRange_ReturnValue) == 0x00000C, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetFSRQualityValue
// 0x0014 (0x0014 - 0x0000)
struct W_StandardSlider_C_SetFSRQualityValue final 
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_SetFSRQualityValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_SetFSRQualityValue");
static_assert(sizeof(W_StandardSlider_C_SetFSRQualityValue) == 0x000014, "Wrong size on W_StandardSlider_C_SetFSRQualityValue");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetFSRQualityValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_NormalizeToRange_ReturnValue) == 0x00000C, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetFrameGenerationValue
// 0x0014 (0x0014 - 0x0000)
struct W_StandardSlider_C_SetFrameGenerationValue final 
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_StandardSlider_C_SetFrameGenerationValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_SetFrameGenerationValue");
static_assert(sizeof(W_StandardSlider_C_SetFrameGenerationValue) == 0x000014, "Wrong size on W_StandardSlider_C_SetFrameGenerationValue");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetFrameGenerationValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_NormalizeToRange_ReturnValue) == 0x00000C, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

