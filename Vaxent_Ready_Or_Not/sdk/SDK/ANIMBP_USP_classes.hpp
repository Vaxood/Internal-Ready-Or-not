#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_USP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_USP.ANIMBP_USP_C
// 0x0620 (0x08F0 - 0x02D0)
class UANIMBP_USP_C final  : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0308(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0328(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0430(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0450(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0498(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0538(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0690(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0750(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0798(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x07C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x07E8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0868(0x0080)()
	float                                         Mag01Alpha;                                        // 0x08E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_USP(int32 EntryPoint, int32 CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_USP_AnimGraphNode_BlendListByBool_106DCF574D02D8841088A3A415340342();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_USP_C">();
	}
	static class UANIMBP_USP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_USP_C>();
	}
};
static_assert(alignof(UANIMBP_USP_C) == 0x000010, "Wrong alignment on UANIMBP_USP_C");
static_assert(sizeof(UANIMBP_USP_C) == 0x0008F0, "Wrong size on UANIMBP_USP_C");
static_assert(offsetof(UANIMBP_USP_C, UberGraphFrame) == 0x0002D0, "Member 'UANIMBP_USP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UANIMBP_USP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000308, "Member 'UANIMBP_USP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_ModifyBone) == 0x000328, "Member 'UANIMBP_USP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_LocalToComponentSpace) == 0x000430, "Member 'UANIMBP_USP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_Slot_1) == 0x000450, "Member 'UANIMBP_USP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_BlendListByBool) == 0x000498, "Member 'UANIMBP_USP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_SaveCachedPose) == 0x000538, "Member 'UANIMBP_USP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_LayeredBoneBlend) == 0x000690, "Member 'UANIMBP_USP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_Slot) == 0x000750, "Member 'UANIMBP_USP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_UseCachedPose_1) == 0x000798, "Member 'UANIMBP_USP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_UseCachedPose) == 0x0007C0, "Member 'UANIMBP_USP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_SequencePlayer_1) == 0x0007E8, "Member 'UANIMBP_USP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, AnimGraphNode_SequencePlayer) == 0x000868, "Member 'UANIMBP_USP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_USP_C, Mag01Alpha) == 0x0008E8, "Member 'UANIMBP_USP_C::Mag01Alpha' has a wrong offset!");

}

