#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AG_DistanceToTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function AG_DistanceToTarget.AG_DistanceToTarget_C.CanOpen
// 0x0058 (0x0058 - 0x0000)
struct AG_DistanceToTarget_C_CanOpen final 
{
public:
	struct FAIActionDecisionContext               Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   CallFunc_GetTrackedTarget_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrackedInKnownNeutrals_ReturnValue;     // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrackedInKnownFriendlies_ReturnValue;   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrackedInKnownEnemies_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AG_DistanceToTarget_C_CanOpen) == 0x000008, "Wrong alignment on AG_DistanceToTarget_C_CanOpen");
static_assert(sizeof(AG_DistanceToTarget_C_CanOpen) == 0x000058, "Wrong size on AG_DistanceToTarget_C_CanOpen");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, Context) == 0x000000, "Member 'AG_DistanceToTarget_C_CanOpen::Context' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, ReturnValue) == 0x000010, "Member 'AG_DistanceToTarget_C_CanOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_GetTrackedTarget_ReturnValue) == 0x000020, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_GetTrackedTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsTrackedInKnownNeutrals_ReturnValue) == 0x000035, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsTrackedInKnownNeutrals_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsTrackedInKnownFriendlies_ReturnValue) == 0x000037, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsTrackedInKnownFriendlies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_IsTrackedInKnownEnemies_ReturnValue) == 0x000038, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_IsTrackedInKnownEnemies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00003C, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_Vector_Distance_ReturnValue) == 0x000048, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanAND_ReturnValue_1) == 0x00004C, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanAND_ReturnValue_2) == 0x00004D, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004E, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanOR_ReturnValue) == 0x00004F, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AG_DistanceToTarget_C_CanOpen, CallFunc_BooleanOR_ReturnValue_1) == 0x000050, "Member 'AG_DistanceToTarget_C_CanOpen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

