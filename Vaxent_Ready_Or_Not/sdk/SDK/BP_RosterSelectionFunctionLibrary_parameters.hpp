#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RosterSelectionFunctionLibrary

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.FormatName
// 0x00E8 (0x00E8 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_FormatName final 
{
public:
	class URosterCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutText;                                           // 0x0010(0x0018)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue; // 0x00D0(0x0018)()
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_FormatName) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_FormatName");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_FormatName) == 0x0000E8, "Wrong size on BP_RosterSelectionFunctionLibrary_C_FormatName");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, Character) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::Character' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, OutText) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::OutText' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatName, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue) == 0x0000D0, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatName::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.SquadPositionToColor
// 0x0088 (0x0088 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor final 
{
public:
	ERosterSquadPosition                          SquadPosition;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3293[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutColor;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3294[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor) == 0x000088, "Wrong size on BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, SquadPosition) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::SquadPosition' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, OutColor) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::OutColor' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, Temp_byte_Variable) == 0x000020, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, Temp_struct_Variable) == 0x000024, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, Temp_struct_Variable_1) == 0x000034, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, Temp_struct_Variable_2) == 0x000044, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, Temp_struct_Variable_3) == 0x000054, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, Temp_struct_Variable_4) == 0x000064, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor, K2Node_Select_Default) == 0x000074, "Member 'BP_RosterSelectionFunctionLibrary_C_SquadPositionToColor::K2Node_Select_Default' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.StressPercentageAsText
// 0x0040 (0x0040 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText final 
{
public:
	class URosterCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText) == 0x000040, "Wrong size on BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText, Character) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText::Character' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText, Text) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText::Text' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.StressPercentageAsStatus
// 0x00E8 (0x00E8 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus final 
{
public:
	class URosterCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StatusText;                                        // 0x0010(0x0018)(Parm, OutParm)
	struct FSlateColor                            StatusColor;                                       // 0x0028(0x0028)(Parm, OutParm)
	ERosterCharacterState                         Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3295[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetStressLevelColor_Color;                // 0x0058(0x0028)()
	class FText                                   CallFunc_GetStressLevelText_Text;                  // 0x0080(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00C0(0x0028)()
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus) == 0x0000E8, "Wrong size on BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, Character) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::Character' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, StatusText) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::StatusText' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, StatusColor) == 0x000028, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::StatusColor' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, Temp_byte_Variable) == 0x000050, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, CallFunc_GetStressLevelColor_Color) == 0x000058, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::CallFunc_GetStressLevelColor_Color' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, CallFunc_GetStressLevelText_Text) == 0x000080, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::CallFunc_GetStressLevelText_Text' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus, K2Node_Select_Default) == 0x0000C0, "Member 'BP_RosterSelectionFunctionLibrary_C_StressPercentageAsStatus::K2Node_Select_Default' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.GetRosterCharacterStateText
// 0x00D0 (0x00D0 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText final 
{
public:
	class URosterCharacter*                       RosterCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	ERosterCharacterState                         Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3296[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_StressPercentageAsStatus_StatusText;      // 0x0030(0x0018)()
	struct FSlateColor                            CallFunc_StressPercentageAsStatus_StatusColor;     // 0x0048(0x0028)()
	class FText                                   Temp_text_Variable;                                // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText) == 0x0000D0, "Wrong size on BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, RosterCharacter) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::RosterCharacter' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, Text) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::Text' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, Temp_byte_Variable) == 0x000028, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, CallFunc_StressPercentageAsStatus_StatusText) == 0x000030, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::CallFunc_StressPercentageAsStatus_StatusText' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, CallFunc_StressPercentageAsStatus_StatusColor) == 0x000048, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::CallFunc_StressPercentageAsStatus_StatusColor' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, Temp_text_Variable) == 0x000070, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, Temp_text_Variable_1) == 0x000088, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, Temp_text_Variable_2) == 0x0000A0, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText, K2Node_Select_Default) == 0x0000B8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetRosterCharacterStateText::K2Node_Select_Default' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.FormatBio
// 0x00D8 (0x00D8 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_FormatBio final 
{
public:
	class URosterCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutText;                                           // 0x0010(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3297[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_FormatBio) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_FormatBio");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_FormatBio) == 0x0000D8, "Wrong size on BP_RosterSelectionFunctionLibrary_C_FormatBio");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, Character) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::Character' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, OutText) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::OutText' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_FormatBio, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_RosterSelectionFunctionLibrary_C_FormatBio::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.GetStressLevelText
// 0x0130 (0x0130 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_GetStressLevelText final 
{
public:
	float                                         StressLevel;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3298[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FVector2D, class FText>           StressLevelsMap;                                   // 0x0028(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              CurrentRange;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3299[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329A[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329B[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FVector2D, class FText>           K2Node_MakeVariable_MakeVariableOutput;            // 0x0098(0x0050)()
	TArray<struct FVector2D>                      CallFunc_Map_Keys_Keys;                            // 0x00E8(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329C[0x1];                                     // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0110(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_GetStressLevelText");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText) == 0x000130, "Wrong size on BP_RosterSelectionFunctionLibrary_C_GetStressLevelText");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, StressLevel) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::StressLevel' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, Text) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::Text' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, StressLevelsMap) == 0x000028, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::StressLevelsMap' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CurrentRange) == 0x000078, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CurrentRange' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, Temp_bool_True_if_break_was_hit_Variable) == 0x000080, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, K2Node_MakeVariable_MakeVariableOutput) == 0x000098, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Map_Keys_Keys) == 0x0000E8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000105, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_BooleanAND_ReturnValue) == 0x000106, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_BreakVector2D_X) == 0x000108, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_BreakVector2D_Y) == 0x00010C, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Map_Find_Value) == 0x000110, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelText, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000129, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelText::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RosterSelectionFunctionLibrary.BP_RosterSelectionFunctionLibrary_C.GetStressLevelColor
// 0x01F0 (0x01F0 - 0x0000)
struct BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor final 
{
public:
	float                                         StressLevel;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0010(0x0028)(Parm, OutParm)
	TMap<struct FVector2D, struct FSlateColor>    StressColorsMap;                                   // 0x0038(0x0050)(Edit, BlueprintVisible)
	TMap<struct FVector2D, class FText>           StressLevelsMap;                                   // 0x0088(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              CurrentRange;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FVector2D, class FText>           K2Node_MakeVariable_MakeVariableOutput;            // 0x00E0(0x0050)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329E[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329F[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A0[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CallFunc_Map_Keys_Keys;                            // 0x0148(0x0010)(ReferenceParm)
	TMap<struct FVector2D, struct FSlateColor>    K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0158(0x0050)()
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A1[0x1];                                     // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x01C0(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor) == 0x000008, "Wrong alignment on BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor");
static_assert(sizeof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor) == 0x0001F0, "Wrong size on BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, StressLevel) == 0x000000, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::StressLevel' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, __WorldContext) == 0x000008, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, Color) == 0x000010, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::Color' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, StressColorsMap) == 0x000038, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::StressColorsMap' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, StressLevelsMap) == 0x000088, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::StressLevelsMap' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CurrentRange) == 0x0000D8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CurrentRange' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, K2Node_MakeVariable_MakeVariableOutput) == 0x0000E0, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, Temp_bool_True_if_break_was_hit_Variable) == 0x000130, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, Temp_int_Array_Index_Variable) == 0x000134, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Map_Keys_Keys) == 0x000148, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000158, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001B4, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Less_IntInt_ReturnValue) == 0x0001B5, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_BooleanAND_ReturnValue) == 0x0001B6, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_BreakVector2D_X) == 0x0001B8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_BreakVector2D_Y) == 0x0001BC, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Map_Find_Value) == 0x0001C0, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_Map_Find_ReturnValue) == 0x0001E8, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0001E9, "Member 'BP_RosterSelectionFunctionLibrary_C_GetStressLevelColor::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");

}

