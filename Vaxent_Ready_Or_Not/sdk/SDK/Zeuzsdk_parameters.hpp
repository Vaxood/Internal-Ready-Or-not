#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zeuzsdk

#include "Basic.hpp"

#include "Zeuzsdk_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Zeuzsdk.ZeuzApiAccount.AccountAccountcreateBP
// 0x0190 (0x0190 - 0x0000)
struct ZeuzApiAccount_AccountAccountcreateBP final 
{
public:
	struct FZeuzAccountCreateIn                   In;                                                // 0x0000(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x00C8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x00D8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00E8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00F8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountAccountcreateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountAccountcreateBP");
static_assert(sizeof(ZeuzApiAccount_AccountAccountcreateBP) == 0x000190, "Wrong size on ZeuzApiAccount_AccountAccountcreateBP");
static_assert(offsetof(ZeuzApiAccount_AccountAccountcreateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountAccountcreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountcreateBP, Callback) == 0x0000C8, "Member 'ZeuzApiAccount_AccountAccountcreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountcreateBP, OnSuccess) == 0x0000D8, "Member 'ZeuzApiAccount_AccountAccountcreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountcreateBP, OnFailure) == 0x0000E8, "Member 'ZeuzApiAccount_AccountAccountcreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountcreateBP, Ctx) == 0x0000F8, "Member 'ZeuzApiAccount_AccountAccountcreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountAccountgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountAccountgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAccount& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAccount& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountAccountgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountAccountgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountAccountgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountAccountgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountAccountgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountAccountgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountAccountgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountAccountgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountAccountgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountAccountgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountAccountupdateBP
// 0x0230 (0x0230 - 0x0000)
struct ZeuzApiAccount_AccountAccountupdateBP final 
{
public:
	struct FZeuzAccount                           In;                                                // 0x0000(0x0168)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0168(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0178(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0188(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0198(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountAccountupdateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountAccountupdateBP");
static_assert(sizeof(ZeuzApiAccount_AccountAccountupdateBP) == 0x000230, "Wrong size on ZeuzApiAccount_AccountAccountupdateBP");
static_assert(offsetof(ZeuzApiAccount_AccountAccountupdateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountAccountupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountupdateBP, Callback) == 0x000168, "Member 'ZeuzApiAccount_AccountAccountupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountupdateBP, OnSuccess) == 0x000178, "Member 'ZeuzApiAccount_AccountAccountupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountupdateBP, OnFailure) == 0x000188, "Member 'ZeuzApiAccount_AccountAccountupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountAccountupdateBP, Ctx) == 0x000198, "Member 'ZeuzApiAccount_AccountAccountupdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDevelopercreateBP
// 0x0148 (0x0148 - 0x0000)
struct ZeuzApiAccount_AccountDevelopercreateBP final 
{
public:
	struct FZeuzAccountDeveloperCreateIn          In;                                                // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDevelopercreateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDevelopercreateBP");
static_assert(sizeof(ZeuzApiAccount_AccountDevelopercreateBP) == 0x000148, "Wrong size on ZeuzApiAccount_AccountDevelopercreateBP");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDevelopercreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreateBP, Callback) == 0x000080, "Member 'ZeuzApiAccount_AccountDevelopercreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreateBP, OnSuccess) == 0x000090, "Member 'ZeuzApiAccount_AccountDevelopercreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreateBP, OnFailure) == 0x0000A0, "Member 'ZeuzApiAccount_AccountDevelopercreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreateBP, Ctx) == 0x0000B0, "Member 'ZeuzApiAccount_AccountDevelopercreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDevelopercreatepwhashBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiAccount_AccountDevelopercreatepwhashBP final 
{
public:
	struct FZeuzAccountDeveloperCreatePwHashIn    In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzDeveloper& Result, const class FString& Error)> Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzDeveloper& Result)> OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDevelopercreatepwhashBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDevelopercreatepwhashBP");
static_assert(sizeof(ZeuzApiAccount_AccountDevelopercreatepwhashBP) == 0x000108, "Wrong size on ZeuzApiAccount_AccountDevelopercreatepwhashBP");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreatepwhashBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDevelopercreatepwhashBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreatepwhashBP, Callback) == 0x000040, "Member 'ZeuzApiAccount_AccountDevelopercreatepwhashBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreatepwhashBP, OnSuccess) == 0x000050, "Member 'ZeuzApiAccount_AccountDevelopercreatepwhashBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreatepwhashBP, OnFailure) == 0x000060, "Member 'ZeuzApiAccount_AccountDevelopercreatepwhashBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopercreatepwhashBP, Ctx) == 0x000070, "Member 'ZeuzApiAccount_AccountDevelopercreatepwhashBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDevelopergetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountDevelopergetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzDeveloper& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzDeveloper& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDevelopergetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDevelopergetBP");
static_assert(sizeof(ZeuzApiAccount_AccountDevelopergetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountDevelopergetBP");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopergetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDevelopergetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopergetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountDevelopergetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopergetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountDevelopergetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopergetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountDevelopergetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopergetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountDevelopergetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDeveloperinviteBP
// 0x0148 (0x0148 - 0x0000)
struct ZeuzApiAccount_AccountDeveloperinviteBP final 
{
public:
	struct FZeuzAccountDeveloperCreateIn          In;                                                // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDeveloperinviteBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDeveloperinviteBP");
static_assert(sizeof(ZeuzApiAccount_AccountDeveloperinviteBP) == 0x000148, "Wrong size on ZeuzApiAccount_AccountDeveloperinviteBP");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperinviteBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDeveloperinviteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperinviteBP, Callback) == 0x000080, "Member 'ZeuzApiAccount_AccountDeveloperinviteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperinviteBP, OnSuccess) == 0x000090, "Member 'ZeuzApiAccount_AccountDeveloperinviteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperinviteBP, OnFailure) == 0x0000A0, "Member 'ZeuzApiAccount_AccountDeveloperinviteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperinviteBP, Ctx) == 0x0000B0, "Member 'ZeuzApiAccount_AccountDeveloperinviteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDeveloperispasswordresethashexpiredBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool Result)>                  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP");
static_assert(sizeof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountDeveloperispasswordresethashexpiredBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDeveloperpasswordresetBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiAccount_AccountDeveloperpasswordresetBP final 
{
public:
	struct FZeuzAccountDeveloperPasswordResetExecuteRequestIn In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDeveloperpasswordresetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDeveloperpasswordresetBP");
static_assert(sizeof(ZeuzApiAccount_AccountDeveloperpasswordresetBP) == 0x000108, "Wrong size on ZeuzApiAccount_AccountDeveloperpasswordresetBP");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetBP, Callback) == 0x000040, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetBP, OnSuccess) == 0x000050, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetBP, OnFailure) == 0x000060, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetBP, Ctx) == 0x000070, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDeveloperpasswordresetrequestBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP final 
{
public:
	struct FZeuzAccountDeveloperPasswordResetIn   In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP");
static_assert(sizeof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP) == 0x0000E8, "Wrong size on ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP, Callback) == 0x000020, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP, OnSuccess) == 0x000030, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP, OnFailure) == 0x000040, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP, Ctx) == 0x000050, "Member 'ZeuzApiAccount_AccountDeveloperpasswordresetrequestBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDeveloperrevokeBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountDeveloperrevokeBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDeveloperrevokeBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDeveloperrevokeBP");
static_assert(sizeof(ZeuzApiAccount_AccountDeveloperrevokeBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountDeveloperrevokeBP");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperrevokeBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDeveloperrevokeBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperrevokeBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountDeveloperrevokeBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperrevokeBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountDeveloperrevokeBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperrevokeBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountDeveloperrevokeBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperrevokeBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountDeveloperrevokeBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDevelopersetpwhashBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAccount_AccountDevelopersetpwhashBP final 
{
public:
	struct FZeuzAccountDeveloperSetPwHashIn       In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzDeveloper& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzDeveloper& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDevelopersetpwhashBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDevelopersetpwhashBP");
static_assert(sizeof(ZeuzApiAccount_AccountDevelopersetpwhashBP) == 0x0000E8, "Wrong size on ZeuzApiAccount_AccountDevelopersetpwhashBP");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersetpwhashBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDevelopersetpwhashBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersetpwhashBP, Callback) == 0x000020, "Member 'ZeuzApiAccount_AccountDevelopersetpwhashBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersetpwhashBP, OnSuccess) == 0x000030, "Member 'ZeuzApiAccount_AccountDevelopersetpwhashBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersetpwhashBP, OnFailure) == 0x000040, "Member 'ZeuzApiAccount_AccountDevelopersetpwhashBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersetpwhashBP, Ctx) == 0x000050, "Member 'ZeuzApiAccount_AccountDevelopersetpwhashBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDevelopersgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountDevelopersgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzDeveloper>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzDeveloper>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDevelopersgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDevelopersgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountDevelopersgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountDevelopersgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDevelopersgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountDevelopersgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountDevelopersgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountDevelopersgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevelopersgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountDevelopersgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDeveloperupdateBP
// 0x01E8 (0x01E8 - 0x0000)
struct ZeuzApiAccount_AccountDeveloperupdateBP final 
{
public:
	struct FZeuzDeveloper                         In;                                                // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0120(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0130(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0140(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0150(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDeveloperupdateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDeveloperupdateBP");
static_assert(sizeof(ZeuzApiAccount_AccountDeveloperupdateBP) == 0x0001E8, "Wrong size on ZeuzApiAccount_AccountDeveloperupdateBP");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperupdateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDeveloperupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperupdateBP, Callback) == 0x000120, "Member 'ZeuzApiAccount_AccountDeveloperupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperupdateBP, OnSuccess) == 0x000130, "Member 'ZeuzApiAccount_AccountDeveloperupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperupdateBP, OnFailure) == 0x000140, "Member 'ZeuzApiAccount_AccountDeveloperupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDeveloperupdateBP, Ctx) == 0x000150, "Member 'ZeuzApiAccount_AccountDeveloperupdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountDevquicksetupBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiAccount_AccountDevquicksetupBP final 
{
public:
	struct FZeuzAccountDevQuickSetupIn            In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAccountDevQuickSetupOut& Result, const class FString& Error)> Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAccountDevQuickSetupOut& Result)> OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountDevquicksetupBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountDevquicksetupBP");
static_assert(sizeof(ZeuzApiAccount_AccountDevquicksetupBP) == 0x0000F8, "Wrong size on ZeuzApiAccount_AccountDevquicksetupBP");
static_assert(offsetof(ZeuzApiAccount_AccountDevquicksetupBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountDevquicksetupBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevquicksetupBP, Callback) == 0x000030, "Member 'ZeuzApiAccount_AccountDevquicksetupBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevquicksetupBP, OnSuccess) == 0x000040, "Member 'ZeuzApiAccount_AccountDevquicksetupBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevquicksetupBP, OnFailure) == 0x000050, "Member 'ZeuzApiAccount_AccountDevquicksetupBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountDevquicksetupBP, Ctx) == 0x000060, "Member 'ZeuzApiAccount_AccountDevquicksetupBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvcreateBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiAccount_AccountEnvcreateBP final 
{
public:
	struct FZeuzAccountEnvCreateIn                In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvcreateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvcreateBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvcreateBP) == 0x000120, "Wrong size on ZeuzApiAccount_AccountEnvcreateBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvcreateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvcreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvcreateBP, Callback) == 0x000058, "Member 'ZeuzApiAccount_AccountEnvcreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvcreateBP, OnSuccess) == 0x000068, "Member 'ZeuzApiAccount_AccountEnvcreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvcreateBP, OnFailure) == 0x000078, "Member 'ZeuzApiAccount_AccountEnvcreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvcreateBP, Ctx) == 0x000088, "Member 'ZeuzApiAccount_AccountEnvcreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvdeleteBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAccount_AccountEnvdeleteBP final 
{
public:
	struct FZeuzAccountEnvDeleteIn                In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvdeleteBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvdeleteBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvdeleteBP) == 0x0000E8, "Wrong size on ZeuzApiAccount_AccountEnvdeleteBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvdeleteBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvdeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvdeleteBP, Callback) == 0x000020, "Member 'ZeuzApiAccount_AccountEnvdeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvdeleteBP, OnSuccess) == 0x000030, "Member 'ZeuzApiAccount_AccountEnvdeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvdeleteBP, OnFailure) == 0x000040, "Member 'ZeuzApiAccount_AccountEnvdeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvdeleteBP, Ctx) == 0x000050, "Member 'ZeuzApiAccount_AccountEnvdeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountEnvgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzEnv& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzEnv& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountEnvgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountEnvgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountEnvgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountEnvgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountEnvgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvservicedeleteBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountEnvservicedeleteBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvservicedeleteBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvservicedeleteBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvservicedeleteBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountEnvservicedeleteBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvservicedeleteBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvservicedeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvservicedeleteBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountEnvservicedeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvservicedeleteBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountEnvservicedeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvservicedeleteBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountEnvservicedeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvservicedeleteBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountEnvservicedeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvserviceupdateBP
// 0x0100 (0x0100 - 0x0000)
struct ZeuzApiAccount_AccountEnvserviceupdateBP final 
{
public:
	struct FZeuzServiceCfg                        In;                                                // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0068(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvserviceupdateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvserviceupdateBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvserviceupdateBP) == 0x000100, "Wrong size on ZeuzApiAccount_AccountEnvserviceupdateBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvserviceupdateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvserviceupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvserviceupdateBP, Callback) == 0x000038, "Member 'ZeuzApiAccount_AccountEnvserviceupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvserviceupdateBP, OnSuccess) == 0x000048, "Member 'ZeuzApiAccount_AccountEnvserviceupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvserviceupdateBP, OnFailure) == 0x000058, "Member 'ZeuzApiAccount_AccountEnvserviceupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvserviceupdateBP, Ctx) == 0x000068, "Member 'ZeuzApiAccount_AccountEnvserviceupdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvsgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountEnvsgetBP final 
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzEnv>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzEnv>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvsgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvsgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvsgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountEnvsgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvsgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvsgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvsgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountEnvsgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvsgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountEnvsgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvsgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountEnvsgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvsgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountEnvsgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountEnvupdateBP
// 0x01B0 (0x01B0 - 0x0000)
struct ZeuzApiAccount_AccountEnvupdateBP final 
{
public:
	struct FZeuzEnv                               In;                                                // 0x0000(0x00E8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x00E8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x00F8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0108(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0118(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountEnvupdateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountEnvupdateBP");
static_assert(sizeof(ZeuzApiAccount_AccountEnvupdateBP) == 0x0001B0, "Wrong size on ZeuzApiAccount_AccountEnvupdateBP");
static_assert(offsetof(ZeuzApiAccount_AccountEnvupdateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountEnvupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvupdateBP, Callback) == 0x0000E8, "Member 'ZeuzApiAccount_AccountEnvupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvupdateBP, OnSuccess) == 0x0000F8, "Member 'ZeuzApiAccount_AccountEnvupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvupdateBP, OnFailure) == 0x000108, "Member 'ZeuzApiAccount_AccountEnvupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountEnvupdateBP, Ctx) == 0x000118, "Member 'ZeuzApiAccount_AccountEnvupdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountProjectcreateBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiAccount_AccountProjectcreateBP final 
{
public:
	struct FZeuzAccountProjectCreateIn            In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountProjectcreateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountProjectcreateBP");
static_assert(sizeof(ZeuzApiAccount_AccountProjectcreateBP) == 0x000120, "Wrong size on ZeuzApiAccount_AccountProjectcreateBP");
static_assert(offsetof(ZeuzApiAccount_AccountProjectcreateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountProjectcreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectcreateBP, Callback) == 0x000058, "Member 'ZeuzApiAccount_AccountProjectcreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectcreateBP, OnSuccess) == 0x000068, "Member 'ZeuzApiAccount_AccountProjectcreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectcreateBP, OnFailure) == 0x000078, "Member 'ZeuzApiAccount_AccountProjectcreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectcreateBP, Ctx) == 0x000088, "Member 'ZeuzApiAccount_AccountProjectcreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountProjectdeleteBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAccount_AccountProjectdeleteBP final 
{
public:
	struct FZeuzAccountProjectDeleteIn            In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountProjectdeleteBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountProjectdeleteBP");
static_assert(sizeof(ZeuzApiAccount_AccountProjectdeleteBP) == 0x0000E8, "Wrong size on ZeuzApiAccount_AccountProjectdeleteBP");
static_assert(offsetof(ZeuzApiAccount_AccountProjectdeleteBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountProjectdeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectdeleteBP, Callback) == 0x000020, "Member 'ZeuzApiAccount_AccountProjectdeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectdeleteBP, OnSuccess) == 0x000030, "Member 'ZeuzApiAccount_AccountProjectdeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectdeleteBP, OnFailure) == 0x000040, "Member 'ZeuzApiAccount_AccountProjectdeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectdeleteBP, Ctx) == 0x000050, "Member 'ZeuzApiAccount_AccountProjectdeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountProjectgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountProjectgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzProj& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzProj& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountProjectgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountProjectgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountProjectgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountProjectgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountProjectgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountProjectgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountProjectgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountProjectgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountProjectgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountProjectgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountProjectsgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountProjectsgetBP final 
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzProj>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzProj>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountProjectsgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountProjectsgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountProjectsgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountProjectsgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountProjectsgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountProjectsgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectsgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountProjectsgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectsgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountProjectsgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectsgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountProjectsgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectsgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountProjectsgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountProjectupdateBP
// 0x0190 (0x0190 - 0x0000)
struct ZeuzApiAccount_AccountProjectupdateBP final 
{
public:
	struct FZeuzProj                              In;                                                // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x00C8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x00D8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00E8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00F8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountProjectupdateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountProjectupdateBP");
static_assert(sizeof(ZeuzApiAccount_AccountProjectupdateBP) == 0x000190, "Wrong size on ZeuzApiAccount_AccountProjectupdateBP");
static_assert(offsetof(ZeuzApiAccount_AccountProjectupdateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountProjectupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectupdateBP, Callback) == 0x0000C8, "Member 'ZeuzApiAccount_AccountProjectupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectupdateBP, OnSuccess) == 0x0000D8, "Member 'ZeuzApiAccount_AccountProjectupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectupdateBP, OnFailure) == 0x0000E8, "Member 'ZeuzApiAccount_AccountProjectupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountProjectupdateBP, Ctx) == 0x0000F8, "Member 'ZeuzApiAccount_AccountProjectupdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountQuotagetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountQuotagetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAccountQuotaInfo& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAccountQuotaInfo& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountQuotagetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountQuotagetBP");
static_assert(sizeof(ZeuzApiAccount_AccountQuotagetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountQuotagetBP");
static_assert(offsetof(ZeuzApiAccount_AccountQuotagetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountQuotagetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotagetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountQuotagetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotagetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountQuotagetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotagetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountQuotagetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotagetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountQuotagetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountQuotasetBP
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiAccount_AccountQuotasetBP final 
{
public:
	struct FZeuzAccountQuotaInfo                  In;                                                // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAccountQuotaInfo& Result, const class FString& Error)> Callback;                                          // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAccountQuotaInfo& Result)> OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0048(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountQuotasetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountQuotasetBP");
static_assert(sizeof(ZeuzApiAccount_AccountQuotasetBP) == 0x0000E0, "Wrong size on ZeuzApiAccount_AccountQuotasetBP");
static_assert(offsetof(ZeuzApiAccount_AccountQuotasetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountQuotasetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotasetBP, Callback) == 0x000018, "Member 'ZeuzApiAccount_AccountQuotasetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotasetBP, OnSuccess) == 0x000028, "Member 'ZeuzApiAccount_AccountQuotasetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotasetBP, OnFailure) == 0x000038, "Member 'ZeuzApiAccount_AccountQuotasetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountQuotasetBP, Ctx) == 0x000048, "Member 'ZeuzApiAccount_AccountQuotasetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountTeamcreateBP
// 0x0130 (0x0130 - 0x0000)
struct ZeuzApiAccount_AccountTeamcreateBP final 
{
public:
	struct FZeuzAccountTeamCreateIn               In;                                                // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0098(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountTeamcreateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountTeamcreateBP");
static_assert(sizeof(ZeuzApiAccount_AccountTeamcreateBP) == 0x000130, "Wrong size on ZeuzApiAccount_AccountTeamcreateBP");
static_assert(offsetof(ZeuzApiAccount_AccountTeamcreateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountTeamcreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamcreateBP, Callback) == 0x000068, "Member 'ZeuzApiAccount_AccountTeamcreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamcreateBP, OnSuccess) == 0x000078, "Member 'ZeuzApiAccount_AccountTeamcreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamcreateBP, OnFailure) == 0x000088, "Member 'ZeuzApiAccount_AccountTeamcreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamcreateBP, Ctx) == 0x000098, "Member 'ZeuzApiAccount_AccountTeamcreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountTeamdeleteBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAccount_AccountTeamdeleteBP final 
{
public:
	struct FZeuzAccountTeamDeleteIn               In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountTeamdeleteBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountTeamdeleteBP");
static_assert(sizeof(ZeuzApiAccount_AccountTeamdeleteBP) == 0x0000E8, "Wrong size on ZeuzApiAccount_AccountTeamdeleteBP");
static_assert(offsetof(ZeuzApiAccount_AccountTeamdeleteBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountTeamdeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamdeleteBP, Callback) == 0x000020, "Member 'ZeuzApiAccount_AccountTeamdeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamdeleteBP, OnSuccess) == 0x000030, "Member 'ZeuzApiAccount_AccountTeamdeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamdeleteBP, OnFailure) == 0x000040, "Member 'ZeuzApiAccount_AccountTeamdeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamdeleteBP, Ctx) == 0x000050, "Member 'ZeuzApiAccount_AccountTeamdeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountTeamgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_AccountTeamgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzTeam& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzTeam& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountTeamgetBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountTeamgetBP");
static_assert(sizeof(ZeuzApiAccount_AccountTeamgetBP) == 0x0000D8, "Wrong size on ZeuzApiAccount_AccountTeamgetBP");
static_assert(offsetof(ZeuzApiAccount_AccountTeamgetBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountTeamgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamgetBP, Callback) == 0x000010, "Member 'ZeuzApiAccount_AccountTeamgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAccount_AccountTeamgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAccount_AccountTeamgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAccount_AccountTeamgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAccount.AccountTeamupdateBP
// 0x0190 (0x0190 - 0x0000)
struct ZeuzApiAccount_AccountTeamupdateBP final 
{
public:
	struct FZeuzTeam                              In;                                                // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x00C8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x00D8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00E8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00F8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_AccountTeamupdateBP) == 0x000008, "Wrong alignment on ZeuzApiAccount_AccountTeamupdateBP");
static_assert(sizeof(ZeuzApiAccount_AccountTeamupdateBP) == 0x000190, "Wrong size on ZeuzApiAccount_AccountTeamupdateBP");
static_assert(offsetof(ZeuzApiAccount_AccountTeamupdateBP, In) == 0x000000, "Member 'ZeuzApiAccount_AccountTeamupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamupdateBP, Callback) == 0x0000C8, "Member 'ZeuzApiAccount_AccountTeamupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamupdateBP, OnSuccess) == 0x0000D8, "Member 'ZeuzApiAccount_AccountTeamupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamupdateBP, OnFailure) == 0x0000E8, "Member 'ZeuzApiAccount_AccountTeamupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_AccountTeamupdateBP, Ctx) == 0x0000F8, "Member 'ZeuzApiAccount_AccountTeamupdateBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountcreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountcreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountcreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountcreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountcreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountAccountcreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountgetBPS__DelegateSignature
// 0x0168 (0x0168 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature final 
{
public:
	struct FZeuzAccount                           Result;                                            // 0x0000(0x0168)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature) == 0x000168, "Wrong size on ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountgetBP__DelegateSignature
// 0x0178 (0x0178 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature final 
{
public:
	struct FZeuzAccount                           Result;                                            // 0x0000(0x0168)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0168(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature) == 0x000178, "Wrong size on ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature, Error) == 0x000168, "Member 'ZeuzApiAccount_DelegateAccountAccountgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountAccountupdateBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountAccountupdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopercreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopercreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopercreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopercreatepwhashBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopercreatepwhashBPS__DelegateSignature
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature final 
{
public:
	struct FZeuzDeveloper                         Result;                                            // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature) == 0x000120, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopercreatepwhashBP__DelegateSignature
// 0x0130 (0x0130 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature final 
{
public:
	struct FZeuzDeveloper                         Result;                                            // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0120(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature) == 0x000130, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature, Error) == 0x000120, "Member 'ZeuzApiAccount_DelegateAccountDevelopercreatepwhashBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopergetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopergetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopergetBPS__DelegateSignature
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature final 
{
public:
	struct FZeuzDeveloper                         Result;                                            // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature) == 0x000120, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopergetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopergetBP__DelegateSignature
// 0x0130 (0x0130 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature final 
{
public:
	struct FZeuzDeveloper                         Result;                                            // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0120(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature) == 0x000130, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature, Error) == 0x000120, "Member 'ZeuzApiAccount_DelegateAccountDevelopergetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperinviteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperinviteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperinviteBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperinviteBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperinviteBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountDeveloperinviteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature final 
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature) == 0x000001, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature) == 0x000001, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature final 
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1240[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiAccount_DelegateAccountDeveloperispasswordresethashexpiredBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperpasswordresetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperpasswordresetBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperpasswordresetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperpasswordresetrequestBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperrevokeBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperrevokeBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperrevokeBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperrevokeBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopersetpwhashBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopersetpwhashBPS__DelegateSignature
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature final 
{
public:
	struct FZeuzDeveloper                         Result;                                            // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature) == 0x000120, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopersetpwhashBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopersetpwhashBP__DelegateSignature
// 0x0130 (0x0130 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature final 
{
public:
	struct FZeuzDeveloper                         Result;                                            // 0x0000(0x0120)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0120(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature) == 0x000130, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature, Error) == 0x000120, "Member 'ZeuzApiAccount_DelegateAccountDevelopersetpwhashBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopersgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopersgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopersgetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzDeveloper>                 Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopersgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevelopersgetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzDeveloper>                 Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountDevelopersgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDeveloperupdateBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDeveloperupdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevquicksetupBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevquicksetupBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevquicksetupBPS__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature final 
{
public:
	struct FZeuzAccountDevQuickSetupOut           Result;                                            // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature) == 0x000080, "Wrong size on ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevquicksetupBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountDevquicksetupBP__DelegateSignature
// 0x0090 (0x0090 - 0x0000)
struct ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature final 
{
public:
	struct FZeuzAccountDevQuickSetupOut           Result;                                            // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0080(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature) == 0x000090, "Wrong size on ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature, Error) == 0x000080, "Member 'ZeuzApiAccount_DelegateAccountDevquicksetupBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvcreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvcreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvcreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvcreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvcreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountEnvcreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvdeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvdeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvdeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvdeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvgetBPS__DelegateSignature
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature final 
{
public:
	struct FZeuzEnv                               Result;                                            // 0x0000(0x00E8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature) == 0x0000E8, "Wrong size on ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvgetBP__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature final 
{
public:
	struct FZeuzEnv                               Result;                                            // 0x0000(0x00E8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature) == 0x0000F8, "Wrong size on ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature, Error) == 0x0000E8, "Member 'ZeuzApiAccount_DelegateAccountEnvgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvservicedeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvservicedeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvservicedeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvservicedeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvserviceupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvserviceupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvserviceupdateBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvserviceupdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvsgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvsgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvsgetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzEnv>                       Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvsgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvsgetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzEnv>                       Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountEnvsgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountEnvupdateBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountEnvupdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectcreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectcreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectcreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectcreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectcreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountProjectcreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectdeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectdeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectdeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectdeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectgetBPS__DelegateSignature
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature final 
{
public:
	struct FZeuzProj                              Result;                                            // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature) == 0x0000C8, "Wrong size on ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectgetBP__DelegateSignature
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature final 
{
public:
	struct FZeuzProj                              Result;                                            // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00C8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature) == 0x0000D8, "Wrong size on ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature, Error) == 0x0000C8, "Member 'ZeuzApiAccount_DelegateAccountProjectgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectsgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectsgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectsgetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzProj>                      Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectsgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectsgetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzProj>                      Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountProjectsgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountProjectupdateBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountProjectupdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountQuotagetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountQuotagetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountQuotagetBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature final 
{
public:
	struct FZeuzAccountQuotaInfo                  Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountQuotagetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountQuotagetBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature final 
{
public:
	struct FZeuzAccountQuotaInfo                  Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiAccount_DelegateAccountQuotagetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountQuotasetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountQuotasetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountQuotasetBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature final 
{
public:
	struct FZeuzAccountQuotaInfo                  Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountQuotasetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountQuotasetBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature final 
{
public:
	struct FZeuzAccountQuotaInfo                  Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiAccount_DelegateAccountQuotasetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamcreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamcreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamcreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamcreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamcreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAccount_DelegateAccountTeamcreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamdeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamdeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamdeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamdeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamgetBPS__DelegateSignature
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature final 
{
public:
	struct FZeuzTeam                              Result;                                            // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature) == 0x0000C8, "Wrong size on ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamgetBP__DelegateSignature
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature final 
{
public:
	struct FZeuzTeam                              Result;                                            // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00C8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature) == 0x0000D8, "Wrong size on ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature, Error) == 0x0000C8, "Member 'ZeuzApiAccount_DelegateAccountTeamgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAccount.DelegateAccountTeamupdateBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAccount_DelegateAccountTeamupdateBP__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminAccountsBP
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiAdmin_AdminAccountsBP final 
{
public:
	struct FZeuzAdminAccountsIn                   In;                                                // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1241[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<struct FZeuzAccount>& Result, const class FString& Error)> Callback;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAccount>& Result)> OnSuccess;                                         // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1242[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZeuzContext                           Ctx;                                               // 0x0038(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminAccountsBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminAccountsBP");
static_assert(sizeof(ZeuzApiAdmin_AdminAccountsBP) == 0x0000D0, "Wrong size on ZeuzApiAdmin_AdminAccountsBP");
static_assert(offsetof(ZeuzApiAdmin_AdminAccountsBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminAccountsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminAccountsBP, Callback) == 0x000004, "Member 'ZeuzApiAdmin_AdminAccountsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminAccountsBP, OnSuccess) == 0x000014, "Member 'ZeuzApiAdmin_AdminAccountsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminAccountsBP, OnFailure) == 0x000024, "Member 'ZeuzApiAdmin_AdminAccountsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminAccountsBP, Ctx) == 0x000038, "Member 'ZeuzApiAdmin_AdminAccountsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminCountresourcesBP
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiAdmin_AdminCountresourcesBP final 
{
public:
	struct FZeuzAdminCountResoucesIn              In;                                                // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Result, const class FString& Error)> Callback;                                          // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Result)>                 OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0048(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminCountresourcesBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminCountresourcesBP");
static_assert(sizeof(ZeuzApiAdmin_AdminCountresourcesBP) == 0x0000E0, "Wrong size on ZeuzApiAdmin_AdminCountresourcesBP");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminCountresourcesBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesBP, Callback) == 0x000018, "Member 'ZeuzApiAdmin_AdminCountresourcesBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesBP, OnSuccess) == 0x000028, "Member 'ZeuzApiAdmin_AdminCountresourcesBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesBP, OnFailure) == 0x000038, "Member 'ZeuzApiAdmin_AdminCountresourcesBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesBP, Ctx) == 0x000048, "Member 'ZeuzApiAdmin_AdminCountresourcesBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminCountresourcesperaccBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAdmin_AdminCountresourcesperaccBP final 
{
public:
	struct FZeuzAdminTestpoolIn                   In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAdminCountResoucesPerAccountOut>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAdminCountResoucesPerAccountOut>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminCountresourcesperaccBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminCountresourcesperaccBP");
static_assert(sizeof(ZeuzApiAdmin_AdminCountresourcesperaccBP) == 0x0000D8, "Wrong size on ZeuzApiAdmin_AdminCountresourcesperaccBP");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesperaccBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminCountresourcesperaccBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesperaccBP, Callback) == 0x000010, "Member 'ZeuzApiAdmin_AdminCountresourcesperaccBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesperaccBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAdmin_AdminCountresourcesperaccBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesperaccBP, OnFailure) == 0x000030, "Member 'ZeuzApiAdmin_AdminCountresourcesperaccBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminCountresourcesperaccBP, Ctx) == 0x000040, "Member 'ZeuzApiAdmin_AdminCountresourcesperaccBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminDevelopersBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAdmin_AdminDevelopersBP final 
{
public:
	struct FZeuzAdminAccountIn                    In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzDeveloper>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzDeveloper>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminDevelopersBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminDevelopersBP");
static_assert(sizeof(ZeuzApiAdmin_AdminDevelopersBP) == 0x0000D8, "Wrong size on ZeuzApiAdmin_AdminDevelopersBP");
static_assert(offsetof(ZeuzApiAdmin_AdminDevelopersBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminDevelopersBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminDevelopersBP, Callback) == 0x000010, "Member 'ZeuzApiAdmin_AdminDevelopersBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminDevelopersBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAdmin_AdminDevelopersBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminDevelopersBP, OnFailure) == 0x000030, "Member 'ZeuzApiAdmin_AdminDevelopersBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminDevelopersBP, Ctx) == 0x000040, "Member 'ZeuzApiAdmin_AdminDevelopersBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminEnvironmentsBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAdmin_AdminEnvironmentsBP final 
{
public:
	struct FZeuzAdminEnvIn                        In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzEnv>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzEnv>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminEnvironmentsBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminEnvironmentsBP");
static_assert(sizeof(ZeuzApiAdmin_AdminEnvironmentsBP) == 0x0000D8, "Wrong size on ZeuzApiAdmin_AdminEnvironmentsBP");
static_assert(offsetof(ZeuzApiAdmin_AdminEnvironmentsBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminEnvironmentsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminEnvironmentsBP, Callback) == 0x000010, "Member 'ZeuzApiAdmin_AdminEnvironmentsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminEnvironmentsBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAdmin_AdminEnvironmentsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminEnvironmentsBP, OnFailure) == 0x000030, "Member 'ZeuzApiAdmin_AdminEnvironmentsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminEnvironmentsBP, Ctx) == 0x000040, "Member 'ZeuzApiAdmin_AdminEnvironmentsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminGetquotaBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAdmin_AdminGetquotaBP final 
{
public:
	struct FZeuzAdminTestpoolIn                   In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Result)>                 OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminGetquotaBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminGetquotaBP");
static_assert(sizeof(ZeuzApiAdmin_AdminGetquotaBP) == 0x0000D8, "Wrong size on ZeuzApiAdmin_AdminGetquotaBP");
static_assert(offsetof(ZeuzApiAdmin_AdminGetquotaBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminGetquotaBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminGetquotaBP, Callback) == 0x000010, "Member 'ZeuzApiAdmin_AdminGetquotaBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminGetquotaBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAdmin_AdminGetquotaBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminGetquotaBP, OnFailure) == 0x000030, "Member 'ZeuzApiAdmin_AdminGetquotaBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminGetquotaBP, Ctx) == 0x000040, "Member 'ZeuzApiAdmin_AdminGetquotaBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminItemsBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiAdmin_AdminItemsBP final 
{
public:
	struct FZeuzAdminItemsIn                      In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAdminItemsOut& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAdminItemsOut& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminItemsBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminItemsBP");
static_assert(sizeof(ZeuzApiAdmin_AdminItemsBP) == 0x0000E8, "Wrong size on ZeuzApiAdmin_AdminItemsBP");
static_assert(offsetof(ZeuzApiAdmin_AdminItemsBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminItemsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminItemsBP, Callback) == 0x000020, "Member 'ZeuzApiAdmin_AdminItemsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminItemsBP, OnSuccess) == 0x000030, "Member 'ZeuzApiAdmin_AdminItemsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminItemsBP, OnFailure) == 0x000040, "Member 'ZeuzApiAdmin_AdminItemsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminItemsBP, Ctx) == 0x000050, "Member 'ZeuzApiAdmin_AdminItemsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminLogsBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiAdmin_AdminLogsBP final 
{
public:
	struct FZeuzAdminLogsIn                       In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzLogsearchOut& Result, const class FString& Error)> Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzLogsearchOut& Result)> OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminLogsBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminLogsBP");
static_assert(sizeof(ZeuzApiAdmin_AdminLogsBP) == 0x000108, "Wrong size on ZeuzApiAdmin_AdminLogsBP");
static_assert(offsetof(ZeuzApiAdmin_AdminLogsBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminLogsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminLogsBP, Callback) == 0x000040, "Member 'ZeuzApiAdmin_AdminLogsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminLogsBP, OnSuccess) == 0x000050, "Member 'ZeuzApiAdmin_AdminLogsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminLogsBP, OnFailure) == 0x000060, "Member 'ZeuzApiAdmin_AdminLogsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminLogsBP, Ctx) == 0x000070, "Member 'ZeuzApiAdmin_AdminLogsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminProjectsBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAdmin_AdminProjectsBP final 
{
public:
	struct FZeuzAdminAccountIn                    In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzProj>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzProj>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminProjectsBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminProjectsBP");
static_assert(sizeof(ZeuzApiAdmin_AdminProjectsBP) == 0x0000D8, "Wrong size on ZeuzApiAdmin_AdminProjectsBP");
static_assert(offsetof(ZeuzApiAdmin_AdminProjectsBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminProjectsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminProjectsBP, Callback) == 0x000010, "Member 'ZeuzApiAdmin_AdminProjectsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminProjectsBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAdmin_AdminProjectsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminProjectsBP, OnFailure) == 0x000030, "Member 'ZeuzApiAdmin_AdminProjectsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminProjectsBP, Ctx) == 0x000040, "Member 'ZeuzApiAdmin_AdminProjectsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAdmin.AdminStatsBP
// 0x0118 (0x0118 - 0x0000)
struct ZeuzApiAdmin_AdminStatsBP final 
{
public:
	struct FZeuzAdminStatsIn                      In;                                                // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAdminStatsOut& Result, const class FString& Error)> Callback;                                          // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAdminStatsOut& Result)> OnSuccess;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0080(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_AdminStatsBP) == 0x000008, "Wrong alignment on ZeuzApiAdmin_AdminStatsBP");
static_assert(sizeof(ZeuzApiAdmin_AdminStatsBP) == 0x000118, "Wrong size on ZeuzApiAdmin_AdminStatsBP");
static_assert(offsetof(ZeuzApiAdmin_AdminStatsBP, In) == 0x000000, "Member 'ZeuzApiAdmin_AdminStatsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminStatsBP, Callback) == 0x000050, "Member 'ZeuzApiAdmin_AdminStatsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminStatsBP, OnSuccess) == 0x000060, "Member 'ZeuzApiAdmin_AdminStatsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminStatsBP, OnFailure) == 0x000070, "Member 'ZeuzApiAdmin_AdminStatsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_AdminStatsBP, Ctx) == 0x000080, "Member 'ZeuzApiAdmin_AdminStatsBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminAccountsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminAccountsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminAccountsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzAccount>                   Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminAccountsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminAccountsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzAccount>                   Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminAccountsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminCountresourcesBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminCountresourcesBPS__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature final 
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature) == 0x000004, "Wrong alignment on ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature) == 0x000004, "Wrong size on ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminCountresourcesBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature final 
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1243[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminCountresourcesperaccBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminCountresourcesperaccBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzAdminCountResoucesPerAccountOut> Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesperaccBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminCountresourcesperaccBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzAdminCountResoucesPerAccountOut> Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminCountresourcesperaccBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminDevelopersBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminDevelopersBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminDevelopersBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzDeveloper>                 Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminDevelopersBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminDevelopersBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzDeveloper>                 Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminDevelopersBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminEnvironmentsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminEnvironmentsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminEnvironmentsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzEnv>                       Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminEnvironmentsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminEnvironmentsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzEnv>                       Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminEnvironmentsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminGetquotaBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminGetquotaBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminGetquotaBPS__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature final 
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature) == 0x000004, "Wrong alignment on ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature) == 0x000004, "Wrong size on ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminGetquotaBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminGetquotaBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature final 
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1244[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiAdmin_DelegateAdminGetquotaBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminItemsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminItemsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminItemsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature final 
{
public:
	struct FZeuzAdminItemsOut                     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminItemsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminItemsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature final 
{
public:
	struct FZeuzAdminItemsOut                     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminItemsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminLogsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminLogsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminLogsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature final 
{
public:
	struct FZeuzLogsearchOut                      Result;                                            // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminLogsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminLogsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature final 
{
public:
	struct FZeuzLogsearchOut                      Result;                                            // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminLogsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminProjectsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminProjectsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminProjectsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzProj>                      Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminProjectsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminProjectsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzProj>                      Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminProjectsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminStatsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminStatsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminStatsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature final 
{
public:
	struct FZeuzAdminStatsOut                     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminStatsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAdmin.DelegateAdminStatsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature final 
{
public:
	struct FZeuzAdminStatsOut                     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAdmin_DelegateAdminStatsBP__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAllocation.AllocationCreateBP
// 0x0200 (0x0200 - 0x0000)
struct ZeuzApiAllocation_AllocationCreateBP final 
{
public:
	struct FZeuzAllocationCreateIn                In;                                                // 0x0000(0x0138)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAllocationInfo& Result, const class FString& Error)> Callback;                                          // 0x0138(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAllocationInfo& Result)> OnSuccess;                                         // 0x0148(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0158(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0168(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_AllocationCreateBP) == 0x000008, "Wrong alignment on ZeuzApiAllocation_AllocationCreateBP");
static_assert(sizeof(ZeuzApiAllocation_AllocationCreateBP) == 0x000200, "Wrong size on ZeuzApiAllocation_AllocationCreateBP");
static_assert(offsetof(ZeuzApiAllocation_AllocationCreateBP, In) == 0x000000, "Member 'ZeuzApiAllocation_AllocationCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationCreateBP, Callback) == 0x000138, "Member 'ZeuzApiAllocation_AllocationCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationCreateBP, OnSuccess) == 0x000148, "Member 'ZeuzApiAllocation_AllocationCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationCreateBP, OnFailure) == 0x000158, "Member 'ZeuzApiAllocation_AllocationCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationCreateBP, Ctx) == 0x000168, "Member 'ZeuzApiAllocation_AllocationCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAllocation.AllocationGetBP
// 0x0128 (0x0128 - 0x0000)
struct ZeuzApiAllocation_AllocationGetBP final 
{
public:
	struct FZeuzAllocationGetIn                   In;                                                // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAllocationGetOut& Result, const class FString& Error)> Callback;                                          // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAllocationGetOut& Result)> OnSuccess;                                         // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0090(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_AllocationGetBP) == 0x000008, "Wrong alignment on ZeuzApiAllocation_AllocationGetBP");
static_assert(sizeof(ZeuzApiAllocation_AllocationGetBP) == 0x000128, "Wrong size on ZeuzApiAllocation_AllocationGetBP");
static_assert(offsetof(ZeuzApiAllocation_AllocationGetBP, In) == 0x000000, "Member 'ZeuzApiAllocation_AllocationGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationGetBP, Callback) == 0x000060, "Member 'ZeuzApiAllocation_AllocationGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationGetBP, OnSuccess) == 0x000070, "Member 'ZeuzApiAllocation_AllocationGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationGetBP, OnFailure) == 0x000080, "Member 'ZeuzApiAllocation_AllocationGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationGetBP, Ctx) == 0x000090, "Member 'ZeuzApiAllocation_AllocationGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAllocation.AllocationRequestServicesBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiAllocation_AllocationRequestServicesBP final 
{
public:
	struct FZeuzAllocationRequestServiceIn        In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAllocationPayloadInfo>& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAllocationPayloadInfo>& Result)> OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_AllocationRequestServicesBP) == 0x000008, "Wrong alignment on ZeuzApiAllocation_AllocationRequestServicesBP");
static_assert(sizeof(ZeuzApiAllocation_AllocationRequestServicesBP) == 0x0000F0, "Wrong size on ZeuzApiAllocation_AllocationRequestServicesBP");
static_assert(offsetof(ZeuzApiAllocation_AllocationRequestServicesBP, In) == 0x000000, "Member 'ZeuzApiAllocation_AllocationRequestServicesBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationRequestServicesBP, Callback) == 0x000028, "Member 'ZeuzApiAllocation_AllocationRequestServicesBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationRequestServicesBP, OnSuccess) == 0x000038, "Member 'ZeuzApiAllocation_AllocationRequestServicesBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationRequestServicesBP, OnFailure) == 0x000048, "Member 'ZeuzApiAllocation_AllocationRequestServicesBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationRequestServicesBP, Ctx) == 0x000058, "Member 'ZeuzApiAllocation_AllocationRequestServicesBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAllocation.AllocationUpdateBP
// 0x01F8 (0x01F8 - 0x0000)
struct ZeuzApiAllocation_AllocationUpdateBP final 
{
public:
	struct FZeuzAllocationUpdateIn                In;                                                // 0x0000(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAllocationInfo& Result, const class FString& Error)> Callback;                                          // 0x0130(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzAllocationInfo& Result)> OnSuccess;                                         // 0x0140(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0150(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0160(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_AllocationUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiAllocation_AllocationUpdateBP");
static_assert(sizeof(ZeuzApiAllocation_AllocationUpdateBP) == 0x0001F8, "Wrong size on ZeuzApiAllocation_AllocationUpdateBP");
static_assert(offsetof(ZeuzApiAllocation_AllocationUpdateBP, In) == 0x000000, "Member 'ZeuzApiAllocation_AllocationUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationUpdateBP, Callback) == 0x000130, "Member 'ZeuzApiAllocation_AllocationUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationUpdateBP, OnSuccess) == 0x000140, "Member 'ZeuzApiAllocation_AllocationUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationUpdateBP, OnFailure) == 0x000150, "Member 'ZeuzApiAllocation_AllocationUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_AllocationUpdateBP, Ctx) == 0x000160, "Member 'ZeuzApiAllocation_AllocationUpdateBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationCreateBPS__DelegateSignature
// 0x0168 (0x0168 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzAllocationInfo                    Result;                                            // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature) == 0x000168, "Wrong size on ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationCreateBP__DelegateSignature
// 0x0178 (0x0178 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature final 
{
public:
	struct FZeuzAllocationInfo                    Result;                                            // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0168(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature) == 0x000178, "Wrong size on ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature, Error) == 0x000168, "Member 'ZeuzApiAllocation_DelegateAllocationCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationGetBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature final 
{
public:
	struct FZeuzAllocationGetOut                  Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationGetBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature final 
{
public:
	struct FZeuzAllocationGetOut                  Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiAllocation_DelegateAllocationGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationRequestServicesBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationRequestServicesBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationRequestServicesBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzAllocationPayloadInfo>     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationRequestServicesBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationRequestServicesBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzAllocationPayloadInfo>     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAllocation_DelegateAllocationRequestServicesBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationUpdateBPS__DelegateSignature
// 0x0168 (0x0168 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzAllocationInfo                    Result;                                            // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature) == 0x000168, "Wrong size on ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAllocation.DelegateAllocationUpdateBP__DelegateSignature
// 0x0178 (0x0178 - 0x0000)
struct ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzAllocationInfo                    Result;                                            // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0168(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature) == 0x000178, "Wrong size on ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature, Error) == 0x000168, "Member 'ZeuzApiAllocation_DelegateAllocationUpdateBP__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyCreateBP
// 0x01A8 (0x01A8 - 0x0000)
struct ZeuzApiApikey_ApikeyCreateBP final 
{
public:
	struct FZeuzAPIKey                            In;                                                // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result, const class FString& Error)> Callback;                                          // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result)> OnSuccess;                                         // 0x00F0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0100(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0110(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyCreateBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyCreateBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyCreateBP) == 0x0001A8, "Wrong size on ZeuzApiApikey_ApikeyCreateBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyCreateBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyCreateBP, Callback) == 0x0000E0, "Member 'ZeuzApiApikey_ApikeyCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyCreateBP, OnSuccess) == 0x0000F0, "Member 'ZeuzApiApikey_ApikeyCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyCreateBP, OnFailure) == 0x000100, "Member 'ZeuzApiApikey_ApikeyCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyCreateBP, Ctx) == 0x000110, "Member 'ZeuzApiApikey_ApikeyCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyDeleteBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiApikey_ApikeyDeleteBP final 
{
public:
	struct FZeuzAPIKeyDeleteIn                    In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyDeleteBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyDeleteBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyDeleteBP) == 0x0000E8, "Wrong size on ZeuzApiApikey_ApikeyDeleteBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyDeleteBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyDeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyDeleteBP, Callback) == 0x000020, "Member 'ZeuzApiApikey_ApikeyDeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyDeleteBP, OnSuccess) == 0x000030, "Member 'ZeuzApiApikey_ApikeyDeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyDeleteBP, OnFailure) == 0x000040, "Member 'ZeuzApiApikey_ApikeyDeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyDeleteBP, Ctx) == 0x000050, "Member 'ZeuzApiApikey_ApikeyDeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyGenerateBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiApikey_ApikeyGenerateBP final 
{
public:
	struct FZeuzAPIKeyGenerateIn                  In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyGenerateBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyGenerateBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyGenerateBP) == 0x0000E8, "Wrong size on ZeuzApiApikey_ApikeyGenerateBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyGenerateBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyGenerateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGenerateBP, Callback) == 0x000020, "Member 'ZeuzApiApikey_ApikeyGenerateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGenerateBP, OnSuccess) == 0x000030, "Member 'ZeuzApiApikey_ApikeyGenerateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGenerateBP, OnFailure) == 0x000040, "Member 'ZeuzApiApikey_ApikeyGenerateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGenerateBP, Ctx) == 0x000050, "Member 'ZeuzApiApikey_ApikeyGenerateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyGetallBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiApikey_ApikeyGetallBP final 
{
public:
	struct FZeuzAPIKeyGetIn                       In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAPIKey>& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAPIKey>& Result)> OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyGetallBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyGetallBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyGetallBP) == 0x0000F0, "Wrong size on ZeuzApiApikey_ApikeyGetallBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetallBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyGetallBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetallBP, Callback) == 0x000028, "Member 'ZeuzApiApikey_ApikeyGetallBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetallBP, OnSuccess) == 0x000038, "Member 'ZeuzApiApikey_ApikeyGetallBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetallBP, OnFailure) == 0x000048, "Member 'ZeuzApiApikey_ApikeyGetallBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetallBP, Ctx) == 0x000058, "Member 'ZeuzApiApikey_ApikeyGetallBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyGetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiApikey_ApikeyGetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAPIKey>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzAPIKey>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyGetBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyGetBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyGetBP) == 0x0000D8, "Wrong size on ZeuzApiApikey_ApikeyGetBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetBP, Callback) == 0x000010, "Member 'ZeuzApiApikey_ApikeyGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiApikey_ApikeyGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetBP, OnFailure) == 0x000030, "Member 'ZeuzApiApikey_ApikeyGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyGetBP, Ctx) == 0x000040, "Member 'ZeuzApiApikey_ApikeyGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyRevokeBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiApikey_ApikeyRevokeBP final 
{
public:
	struct FZeuzAPIKeyDeleteIn                    In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyRevokeBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyRevokeBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyRevokeBP) == 0x0000E8, "Wrong size on ZeuzApiApikey_ApikeyRevokeBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyRevokeBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyRevokeBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyRevokeBP, Callback) == 0x000020, "Member 'ZeuzApiApikey_ApikeyRevokeBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyRevokeBP, OnSuccess) == 0x000030, "Member 'ZeuzApiApikey_ApikeyRevokeBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyRevokeBP, OnFailure) == 0x000040, "Member 'ZeuzApiApikey_ApikeyRevokeBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyRevokeBP, Ctx) == 0x000050, "Member 'ZeuzApiApikey_ApikeyRevokeBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeySetpwhashBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiApikey_ApikeySetpwhashBP final 
{
public:
	struct FZeuzAPIKeyPwHashIn                    In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result, const class FString& Error)> Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result)> OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeySetpwhashBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeySetpwhashBP");
static_assert(sizeof(ZeuzApiApikey_ApikeySetpwhashBP) == 0x0000F8, "Wrong size on ZeuzApiApikey_ApikeySetpwhashBP");
static_assert(offsetof(ZeuzApiApikey_ApikeySetpwhashBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeySetpwhashBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeySetpwhashBP, Callback) == 0x000030, "Member 'ZeuzApiApikey_ApikeySetpwhashBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeySetpwhashBP, OnSuccess) == 0x000040, "Member 'ZeuzApiApikey_ApikeySetpwhashBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeySetpwhashBP, OnFailure) == 0x000050, "Member 'ZeuzApiApikey_ApikeySetpwhashBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeySetpwhashBP, Ctx) == 0x000060, "Member 'ZeuzApiApikey_ApikeySetpwhashBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiApikey.ApikeyUpdateBP
// 0x01A8 (0x01A8 - 0x0000)
struct ZeuzApiApikey_ApikeyUpdateBP final 
{
public:
	struct FZeuzAPIKey                            In;                                                // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result, const class FString& Error)> Callback;                                          // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAPIKey& Result)> OnSuccess;                                         // 0x00F0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0100(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0110(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_ApikeyUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiApikey_ApikeyUpdateBP");
static_assert(sizeof(ZeuzApiApikey_ApikeyUpdateBP) == 0x0001A8, "Wrong size on ZeuzApiApikey_ApikeyUpdateBP");
static_assert(offsetof(ZeuzApiApikey_ApikeyUpdateBP, In) == 0x000000, "Member 'ZeuzApiApikey_ApikeyUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyUpdateBP, Callback) == 0x0000E0, "Member 'ZeuzApiApikey_ApikeyUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyUpdateBP, OnSuccess) == 0x0000F0, "Member 'ZeuzApiApikey_ApikeyUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyUpdateBP, OnFailure) == 0x000100, "Member 'ZeuzApiApikey_ApikeyUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_ApikeyUpdateBP, Ctx) == 0x000110, "Member 'ZeuzApiApikey_ApikeyUpdateBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyCreateBPS__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyCreateBP__DelegateSignature
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature) == 0x0000F0, "Wrong size on ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature, Error) == 0x0000E0, "Member 'ZeuzApiApikey_DelegateApikeyCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyDeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyDeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyDeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyDeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGenerateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGenerateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGenerateBPS__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGenerateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGenerateBP__DelegateSignature
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature) == 0x0000F0, "Wrong size on ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature, Error) == 0x0000E0, "Member 'ZeuzApiApikey_DelegateApikeyGenerateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGetallBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGetallBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGetallBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzAPIKey>                    Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGetallBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGetallBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzAPIKey>                    Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiApikey_DelegateApikeyGetallBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzAPIKey>                    Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyGetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzAPIKey>                    Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiApikey_DelegateApikeyGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyRevokeBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyRevokeBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyRevokeBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyRevokeBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeySetpwhashBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeySetpwhashBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeySetpwhashBPS__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeySetpwhashBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeySetpwhashBP__DelegateSignature
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature) == 0x0000F0, "Wrong size on ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature, Error) == 0x0000E0, "Member 'ZeuzApiApikey_DelegateApikeySetpwhashBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyUpdateBPS__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiApikey.DelegateApikeyUpdateBP__DelegateSignature
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzAPIKey                            Result;                                            // 0x0000(0x00E0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature) == 0x0000F0, "Wrong size on ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature, Error) == 0x0000E0, "Member 'ZeuzApiApikey_DelegateApikeyUpdateBP__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAuth.AuthActivesessionsgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAuth_AuthActivesessionsgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzSession>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzSession>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_AuthActivesessionsgetBP) == 0x000008, "Wrong alignment on ZeuzApiAuth_AuthActivesessionsgetBP");
static_assert(sizeof(ZeuzApiAuth_AuthActivesessionsgetBP) == 0x0000D8, "Wrong size on ZeuzApiAuth_AuthActivesessionsgetBP");
static_assert(offsetof(ZeuzApiAuth_AuthActivesessionsgetBP, In) == 0x000000, "Member 'ZeuzApiAuth_AuthActivesessionsgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthActivesessionsgetBP, Callback) == 0x000010, "Member 'ZeuzApiAuth_AuthActivesessionsgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthActivesessionsgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAuth_AuthActivesessionsgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthActivesessionsgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiAuth_AuthActivesessionsgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthActivesessionsgetBP, Ctx) == 0x000040, "Member 'ZeuzApiAuth_AuthActivesessionsgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAuth.AuthCheckBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAuth_AuthCheckBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzTimestamp& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzTimestamp& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_AuthCheckBP) == 0x000008, "Wrong alignment on ZeuzApiAuth_AuthCheckBP");
static_assert(sizeof(ZeuzApiAuth_AuthCheckBP) == 0x0000D8, "Wrong size on ZeuzApiAuth_AuthCheckBP");
static_assert(offsetof(ZeuzApiAuth_AuthCheckBP, In) == 0x000000, "Member 'ZeuzApiAuth_AuthCheckBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthCheckBP, Callback) == 0x000010, "Member 'ZeuzApiAuth_AuthCheckBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthCheckBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAuth_AuthCheckBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthCheckBP, OnFailure) == 0x000030, "Member 'ZeuzApiAuth_AuthCheckBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthCheckBP, Ctx) == 0x000040, "Member 'ZeuzApiAuth_AuthCheckBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAuth.AuthLoginBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiAuth_AuthLoginBP final 
{
public:
	struct FZeuzAuthLoginIn                       In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAuthLoginResult& Result, const class FString& Error)> Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzAuthLoginResult& Result)> OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_AuthLoginBP) == 0x000008, "Wrong alignment on ZeuzApiAuth_AuthLoginBP");
static_assert(sizeof(ZeuzApiAuth_AuthLoginBP) == 0x000108, "Wrong size on ZeuzApiAuth_AuthLoginBP");
static_assert(offsetof(ZeuzApiAuth_AuthLoginBP, In) == 0x000000, "Member 'ZeuzApiAuth_AuthLoginBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLoginBP, Callback) == 0x000040, "Member 'ZeuzApiAuth_AuthLoginBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLoginBP, OnSuccess) == 0x000050, "Member 'ZeuzApiAuth_AuthLoginBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLoginBP, OnFailure) == 0x000060, "Member 'ZeuzApiAuth_AuthLoginBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLoginBP, Ctx) == 0x000070, "Member 'ZeuzApiAuth_AuthLoginBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAuth.AuthLogoutBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAuth_AuthLogoutBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_AuthLogoutBP) == 0x000008, "Wrong alignment on ZeuzApiAuth_AuthLogoutBP");
static_assert(sizeof(ZeuzApiAuth_AuthLogoutBP) == 0x0000D8, "Wrong size on ZeuzApiAuth_AuthLogoutBP");
static_assert(offsetof(ZeuzApiAuth_AuthLogoutBP, In) == 0x000000, "Member 'ZeuzApiAuth_AuthLogoutBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLogoutBP, Callback) == 0x000010, "Member 'ZeuzApiAuth_AuthLogoutBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLogoutBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAuth_AuthLogoutBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLogoutBP, OnFailure) == 0x000030, "Member 'ZeuzApiAuth_AuthLogoutBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthLogoutBP, Ctx) == 0x000040, "Member 'ZeuzApiAuth_AuthLogoutBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiAuth.AuthSessiondelBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiAuth_AuthSessiondelBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_AuthSessiondelBP) == 0x000008, "Wrong alignment on ZeuzApiAuth_AuthSessiondelBP");
static_assert(sizeof(ZeuzApiAuth_AuthSessiondelBP) == 0x0000D8, "Wrong size on ZeuzApiAuth_AuthSessiondelBP");
static_assert(offsetof(ZeuzApiAuth_AuthSessiondelBP, In) == 0x000000, "Member 'ZeuzApiAuth_AuthSessiondelBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthSessiondelBP, Callback) == 0x000010, "Member 'ZeuzApiAuth_AuthSessiondelBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthSessiondelBP, OnSuccess) == 0x000020, "Member 'ZeuzApiAuth_AuthSessiondelBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthSessiondelBP, OnFailure) == 0x000030, "Member 'ZeuzApiAuth_AuthSessiondelBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_AuthSessiondelBP, Ctx) == 0x000040, "Member 'ZeuzApiAuth_AuthSessiondelBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthActivesessionsgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthActivesessionsgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthActivesessionsgetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzSession>                   Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthActivesessionsgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthActivesessionsgetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzSession>                   Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiAuth_DelegateAuthActivesessionsgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthCheckBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthCheckBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthCheckBPS__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature final 
{
public:
	struct FZeuzTimestamp                         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature) == 0x000008, "Wrong size on ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthCheckBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthCheckBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature final 
{
public:
	struct FZeuzTimestamp                         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiAuth_DelegateAuthCheckBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthLoginBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthLoginBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthLoginBPS__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature final 
{
public:
	struct FZeuzAuthLoginResult                   Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature) == 0x000068, "Wrong size on ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthLoginBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthLoginBP__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature final 
{
public:
	struct FZeuzAuthLoginResult                   Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0068(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature) == 0x000078, "Wrong size on ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature, Error) == 0x000068, "Member 'ZeuzApiAuth_DelegateAuthLoginBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthLogoutBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthLogoutBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthLogoutBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthLogoutBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthSessiondelBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthSessiondelBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiAuth.DelegateAuthSessiondelBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature");
static_assert(sizeof(ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature");
static_assert(offsetof(ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiAuth_DelegateAuthSessiondelBP__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiEcho.Echo1BP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiEcho_Echo1BP final 
{
public:
	struct FZeuzEchoIn                            In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzEchoOut& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzEchoOut& Result)>  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_Echo1BP) == 0x000008, "Wrong alignment on ZeuzApiEcho_Echo1BP");
static_assert(sizeof(ZeuzApiEcho_Echo1BP) == 0x0000D8, "Wrong size on ZeuzApiEcho_Echo1BP");
static_assert(offsetof(ZeuzApiEcho_Echo1BP, In) == 0x000000, "Member 'ZeuzApiEcho_Echo1BP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo1BP, Callback) == 0x000010, "Member 'ZeuzApiEcho_Echo1BP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo1BP, OnSuccess) == 0x000020, "Member 'ZeuzApiEcho_Echo1BP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo1BP, OnFailure) == 0x000030, "Member 'ZeuzApiEcho_Echo1BP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo1BP, Ctx) == 0x000040, "Member 'ZeuzApiEcho_Echo1BP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiEcho.Echo2BP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiEcho_Echo2BP final 
{
public:
	struct FZeuzEcho2In                           In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzEcho2Out& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzEcho2Out& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_Echo2BP) == 0x000008, "Wrong alignment on ZeuzApiEcho_Echo2BP");
static_assert(sizeof(ZeuzApiEcho_Echo2BP) == 0x0000D8, "Wrong size on ZeuzApiEcho_Echo2BP");
static_assert(offsetof(ZeuzApiEcho_Echo2BP, In) == 0x000000, "Member 'ZeuzApiEcho_Echo2BP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo2BP, Callback) == 0x000010, "Member 'ZeuzApiEcho_Echo2BP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo2BP, OnSuccess) == 0x000020, "Member 'ZeuzApiEcho_Echo2BP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo2BP, OnFailure) == 0x000030, "Member 'ZeuzApiEcho_Echo2BP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo2BP, Ctx) == 0x000040, "Member 'ZeuzApiEcho_Echo2BP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiEcho.Echo3BP
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiEcho_Echo3BP final 
{
public:
	struct FZeuzEcho3In                           In;                                                // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzEchoOut& Result, const class FString& Error)> Callback;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzEchoOut& Result)>  OnSuccess;                                         // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1245[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZeuzContext                           Ctx;                                               // 0x0038(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_Echo3BP) == 0x000008, "Wrong alignment on ZeuzApiEcho_Echo3BP");
static_assert(sizeof(ZeuzApiEcho_Echo3BP) == 0x0000D0, "Wrong size on ZeuzApiEcho_Echo3BP");
static_assert(offsetof(ZeuzApiEcho_Echo3BP, In) == 0x000000, "Member 'ZeuzApiEcho_Echo3BP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo3BP, Callback) == 0x000004, "Member 'ZeuzApiEcho_Echo3BP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo3BP, OnSuccess) == 0x000014, "Member 'ZeuzApiEcho_Echo3BP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo3BP, OnFailure) == 0x000024, "Member 'ZeuzApiEcho_Echo3BP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo3BP, Ctx) == 0x000038, "Member 'ZeuzApiEcho_Echo3BP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiEcho.Echo4BP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiEcho_Echo4BP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_Echo4BP) == 0x000008, "Wrong alignment on ZeuzApiEcho_Echo4BP");
static_assert(sizeof(ZeuzApiEcho_Echo4BP) == 0x0000D8, "Wrong size on ZeuzApiEcho_Echo4BP");
static_assert(offsetof(ZeuzApiEcho_Echo4BP, In) == 0x000000, "Member 'ZeuzApiEcho_Echo4BP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo4BP, Callback) == 0x000010, "Member 'ZeuzApiEcho_Echo4BP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo4BP, OnSuccess) == 0x000020, "Member 'ZeuzApiEcho_Echo4BP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo4BP, OnFailure) == 0x000030, "Member 'ZeuzApiEcho_Echo4BP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_Echo4BP, Ctx) == 0x000040, "Member 'ZeuzApiEcho_Echo4BP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho1BP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiEcho_DelegateEcho1BP__DelegateSignature final 
{
public:
	struct FZeuzEchoOut                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho1BP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho1BP__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho1BP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiEcho_DelegateEcho1BP__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho1BP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho1BP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho1BP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiEcho_DelegateEcho1BP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho1BPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho1BPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho1BPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature final 
{
public:
	struct FZeuzEchoOut                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho1BPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho2BP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiEcho_DelegateEcho2BP__DelegateSignature final 
{
public:
	struct FZeuzEcho2Out                          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho2BP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho2BP__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho2BP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiEcho_DelegateEcho2BP__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho2BP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho2BP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho2BP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiEcho_DelegateEcho2BP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho2BPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho2BPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho2BPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature final 
{
public:
	struct FZeuzEcho2Out                          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho2BPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho3BP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiEcho_DelegateEcho3BP__DelegateSignature final 
{
public:
	struct FZeuzEchoOut                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho3BP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho3BP__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho3BP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiEcho_DelegateEcho3BP__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho3BP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho3BP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho3BP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiEcho_DelegateEcho3BP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho3BPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho3BPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho3BPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature final 
{
public:
	struct FZeuzEchoOut                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho3BPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho4BP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiEcho_DelegateEcho4BP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho4BP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho4BP__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho4BP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiEcho_DelegateEcho4BP__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho4BP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho4BP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho4BP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiEcho_DelegateEcho4BP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho4BPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho4BPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiEcho.DelegateEcho4BPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature");
static_assert(sizeof(ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature");
static_assert(offsetof(ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiEcho_DelegateEcho4BPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerDiscardBP
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerDiscardBP final 
{
public:
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0030(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerDiscardBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerDiscardBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerDiscardBP) == 0x0000C8, "Wrong size on ZeuzApiImagemanager_ImagemanagerDiscardBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerDiscardBP, Callback) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerDiscardBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerDiscardBP, OnSuccess) == 0x000010, "Member 'ZeuzApiImagemanager_ImagemanagerDiscardBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerDiscardBP, OnFailure) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerDiscardBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerDiscardBP, Ctx) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerDiscardBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerGetpublishstateBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerGetpublishstateBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImagemanagerPublishState& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImagemanagerPublishState& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerGetpublishstateBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP) == 0x0000D8, "Wrong size on ZeuzApiImagemanager_ImagemanagerGetpublishstateBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP, In) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerGetpublishstateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP, Callback) == 0x000010, "Member 'ZeuzApiImagemanager_ImagemanagerGetpublishstateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP, OnSuccess) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerGetpublishstateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP, OnFailure) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerGetpublishstateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerGetpublishstateBP, Ctx) == 0x000040, "Member 'ZeuzApiImagemanager_ImagemanagerGetpublishstateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerListBP
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerListBP final 
{
public:
	TDelegate<void(TArray<struct FZeuzImageManagerListEntry>& Result, const class FString& Error)> Callback;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzImageManagerListEntry>& Result)> OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0030(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerListBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerListBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerListBP) == 0x0000C8, "Wrong size on ZeuzApiImagemanager_ImagemanagerListBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerListBP, Callback) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerListBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerListBP, OnSuccess) == 0x000010, "Member 'ZeuzApiImagemanager_ImagemanagerListBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerListBP, OnFailure) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerListBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerListBP, Ctx) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerListBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerPublishBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerPublishBP final 
{
public:
	struct FZeuzImageManagerPublishInput          In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImagemanagerPublishState& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImagemanagerPublishState& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerPublishBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerPublishBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerPublishBP) == 0x0000E8, "Wrong size on ZeuzApiImagemanager_ImagemanagerPublishBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPublishBP, In) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerPublishBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPublishBP, Callback) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerPublishBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPublishBP, OnSuccess) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerPublishBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPublishBP, OnFailure) == 0x000040, "Member 'ZeuzApiImagemanager_ImagemanagerPublishBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPublishBP, Ctx) == 0x000050, "Member 'ZeuzApiImagemanager_ImagemanagerPublishBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerPullBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerPullBP final 
{
public:
	struct FZeuzImageManagerPullInput             In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImageManagerPushPullOutput& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImageManagerPushPullOutput& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerPullBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerPullBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerPullBP) == 0x0000D8, "Wrong size on ZeuzApiImagemanager_ImagemanagerPullBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullBP, In) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerPullBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullBP, Callback) == 0x000010, "Member 'ZeuzApiImagemanager_ImagemanagerPullBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullBP, OnSuccess) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerPullBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullBP, OnFailure) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerPullBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullBP, Ctx) == 0x000040, "Member 'ZeuzApiImagemanager_ImagemanagerPullBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerPullFileUrlBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerPullFileUrlBP final 
{
public:
	struct FZeuzImageManagerPresignedFileUrlIn    In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerPullFileUrlBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP) == 0x0000E8, "Wrong size on ZeuzApiImagemanager_ImagemanagerPullFileUrlBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP, In) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerPullFileUrlBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP, Callback) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerPullFileUrlBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP, OnSuccess) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerPullFileUrlBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP, OnFailure) == 0x000040, "Member 'ZeuzApiImagemanager_ImagemanagerPullFileUrlBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPullFileUrlBP, Ctx) == 0x000050, "Member 'ZeuzApiImagemanager_ImagemanagerPullFileUrlBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerPushBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerPushBP final 
{
public:
	struct FZeuzImageManagerManifest              In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImageManagerPushPullOutput& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzImageManagerPushPullOutput& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerPushBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerPushBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerPushBP) == 0x0000D8, "Wrong size on ZeuzApiImagemanager_ImagemanagerPushBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushBP, In) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerPushBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushBP, Callback) == 0x000010, "Member 'ZeuzApiImagemanager_ImagemanagerPushBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushBP, OnSuccess) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerPushBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushBP, OnFailure) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerPushBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushBP, Ctx) == 0x000040, "Member 'ZeuzApiImagemanager_ImagemanagerPushBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiImagemanager.ImagemanagerPushFileUrlBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiImagemanager_ImagemanagerPushFileUrlBP final 
{
public:
	struct FZeuzImageManagerPresignedFileUrlIn    In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_ImagemanagerPushFileUrlBP");
static_assert(sizeof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP) == 0x0000E8, "Wrong size on ZeuzApiImagemanager_ImagemanagerPushFileUrlBP");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP, In) == 0x000000, "Member 'ZeuzApiImagemanager_ImagemanagerPushFileUrlBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP, Callback) == 0x000020, "Member 'ZeuzApiImagemanager_ImagemanagerPushFileUrlBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP, OnSuccess) == 0x000030, "Member 'ZeuzApiImagemanager_ImagemanagerPushFileUrlBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP, OnFailure) == 0x000040, "Member 'ZeuzApiImagemanager_ImagemanagerPushFileUrlBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_ImagemanagerPushFileUrlBP, Ctx) == 0x000050, "Member 'ZeuzApiImagemanager_ImagemanagerPushFileUrlBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerDiscardBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerDiscardBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerDiscardBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerDiscardBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerGetpublishstateBP__DelegateSignature
// 0x0090 (0x0090 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature final 
{
public:
	struct FZeuzImagemanagerPublishState          Result;                                            // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0080(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature) == 0x000090, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature, Error) == 0x000080, "Member 'ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerGetpublishstateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerGetpublishstateBPS__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature final 
{
public:
	struct FZeuzImagemanagerPublishState          Result;                                            // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature) == 0x000080, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerGetpublishstateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerListBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzImageManagerListEntry>     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiImagemanager_DelegateImagemanagerListBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerListBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerListBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerListBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzImageManagerListEntry>     Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerListBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPublishBP__DelegateSignature
// 0x0090 (0x0090 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature final 
{
public:
	struct FZeuzImagemanagerPublishState          Result;                                            // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0080(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature) == 0x000090, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature, Error) == 0x000080, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPublishBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPublishBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPublishBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPublishBPS__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature final 
{
public:
	struct FZeuzImagemanagerPublishState          Result;                                            // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature) == 0x000080, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPublishBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPullBP__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature final 
{
public:
	struct FZeuzImageManagerPushPullOutput        Result;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature) == 0x000040, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature, Error) == 0x000030, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPullBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPullBPS__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature final 
{
public:
	struct FZeuzImageManagerPushPullOutput        Result;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature) == 0x000030, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPullFileUrlBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPullFileUrlBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPullFileUrlBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPullFileUrlBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPushBP__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature final 
{
public:
	struct FZeuzImageManagerPushPullOutput        Result;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature) == 0x000040, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature, Error) == 0x000030, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPushBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPushBPS__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature final 
{
public:
	struct FZeuzImageManagerPushPullOutput        Result;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature) == 0x000030, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPushFileUrlBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPushFileUrlBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiImagemanager.DelegateImagemanagerPushFileUrlBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiImagemanager_DelegateImagemanagerPushFileUrlBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiKVStore.KVStoreDelBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiKVStore_KVStoreDelBP final 
{
public:
	struct FZeuzKVStoreDelIn                      In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_KVStoreDelBP) == 0x000008, "Wrong alignment on ZeuzApiKVStore_KVStoreDelBP");
static_assert(sizeof(ZeuzApiKVStore_KVStoreDelBP) == 0x0000E8, "Wrong size on ZeuzApiKVStore_KVStoreDelBP");
static_assert(offsetof(ZeuzApiKVStore_KVStoreDelBP, In) == 0x000000, "Member 'ZeuzApiKVStore_KVStoreDelBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreDelBP, Callback) == 0x000020, "Member 'ZeuzApiKVStore_KVStoreDelBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreDelBP, OnSuccess) == 0x000030, "Member 'ZeuzApiKVStore_KVStoreDelBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreDelBP, OnFailure) == 0x000040, "Member 'ZeuzApiKVStore_KVStoreDelBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreDelBP, Ctx) == 0x000050, "Member 'ZeuzApiKVStore_KVStoreDelBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiKVStore.KVStoreGetBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiKVStore_KVStoreGetBP final 
{
public:
	struct FZeuzKVStoreKey                        In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzKVStoreKVEntry& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzKVStoreKVEntry& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_KVStoreGetBP) == 0x000008, "Wrong alignment on ZeuzApiKVStore_KVStoreGetBP");
static_assert(sizeof(ZeuzApiKVStore_KVStoreGetBP) == 0x0000E8, "Wrong size on ZeuzApiKVStore_KVStoreGetBP");
static_assert(offsetof(ZeuzApiKVStore_KVStoreGetBP, In) == 0x000000, "Member 'ZeuzApiKVStore_KVStoreGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreGetBP, Callback) == 0x000020, "Member 'ZeuzApiKVStore_KVStoreGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreGetBP, OnSuccess) == 0x000030, "Member 'ZeuzApiKVStore_KVStoreGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreGetBP, OnFailure) == 0x000040, "Member 'ZeuzApiKVStore_KVStoreGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStoreGetBP, Ctx) == 0x000050, "Member 'ZeuzApiKVStore_KVStoreGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiKVStore.KVStorePutBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiKVStore_KVStorePutBP final 
{
public:
	struct FZeuzKVStorePutIn                      In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_KVStorePutBP) == 0x000008, "Wrong alignment on ZeuzApiKVStore_KVStorePutBP");
static_assert(sizeof(ZeuzApiKVStore_KVStorePutBP) == 0x0000F8, "Wrong size on ZeuzApiKVStore_KVStorePutBP");
static_assert(offsetof(ZeuzApiKVStore_KVStorePutBP, In) == 0x000000, "Member 'ZeuzApiKVStore_KVStorePutBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStorePutBP, Callback) == 0x000030, "Member 'ZeuzApiKVStore_KVStorePutBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStorePutBP, OnSuccess) == 0x000040, "Member 'ZeuzApiKVStore_KVStorePutBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStorePutBP, OnFailure) == 0x000050, "Member 'ZeuzApiKVStore_KVStorePutBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_KVStorePutBP, Ctx) == 0x000060, "Member 'ZeuzApiKVStore_KVStorePutBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStoreDelBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStoreDelBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStoreDelBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStoreDelBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStoreGetBP__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature final 
{
public:
	struct FZeuzKVStoreKVEntry                    Result;                                            // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature) == 0x000048, "Wrong size on ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature, Error) == 0x000038, "Member 'ZeuzApiKVStore_DelegateKVStoreGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStoreGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStoreGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStoreGetBPS__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature final 
{
public:
	struct FZeuzKVStoreKVEntry                    Result;                                            // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature) == 0x000038, "Wrong size on ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStoreGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStorePutBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStorePutBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiKVStore.DelegateKVStorePutBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiKVStore_DelegateKVStorePutBPF__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyCreateBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiLobby_LobbyCreateBP final 
{
public:
	struct FZeuzLobbyStateIn                      In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result)> OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyCreateBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyCreateBP");
static_assert(sizeof(ZeuzApiLobby_LobbyCreateBP) == 0x000120, "Wrong size on ZeuzApiLobby_LobbyCreateBP");
static_assert(offsetof(ZeuzApiLobby_LobbyCreateBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyCreateBP, Callback) == 0x000058, "Member 'ZeuzApiLobby_LobbyCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyCreateBP, OnSuccess) == 0x000068, "Member 'ZeuzApiLobby_LobbyCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyCreateBP, OnFailure) == 0x000078, "Member 'ZeuzApiLobby_LobbyCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyCreateBP, Ctx) == 0x000088, "Member 'ZeuzApiLobby_LobbyCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyDestroyBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiLobby_LobbyDestroyBP final 
{
public:
	struct FZeuzLobbyStartDestroy                 In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyDestroyBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyDestroyBP");
static_assert(sizeof(ZeuzApiLobby_LobbyDestroyBP) == 0x0000E8, "Wrong size on ZeuzApiLobby_LobbyDestroyBP");
static_assert(offsetof(ZeuzApiLobby_LobbyDestroyBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyDestroyBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyDestroyBP, Callback) == 0x000020, "Member 'ZeuzApiLobby_LobbyDestroyBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyDestroyBP, OnSuccess) == 0x000030, "Member 'ZeuzApiLobby_LobbyDestroyBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyDestroyBP, OnFailure) == 0x000040, "Member 'ZeuzApiLobby_LobbyDestroyBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyDestroyBP, Ctx) == 0x000050, "Member 'ZeuzApiLobby_LobbyDestroyBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyJoinBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiLobby_LobbyJoinBP final 
{
public:
	struct FZeuzLobbyJoin                         In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result, const class FString& Error)> Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result)> OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyJoinBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyJoinBP");
static_assert(sizeof(ZeuzApiLobby_LobbyJoinBP) == 0x0000F8, "Wrong size on ZeuzApiLobby_LobbyJoinBP");
static_assert(offsetof(ZeuzApiLobby_LobbyJoinBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyJoinBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyJoinBP, Callback) == 0x000030, "Member 'ZeuzApiLobby_LobbyJoinBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyJoinBP, OnSuccess) == 0x000040, "Member 'ZeuzApiLobby_LobbyJoinBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyJoinBP, OnFailure) == 0x000050, "Member 'ZeuzApiLobby_LobbyJoinBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyJoinBP, Ctx) == 0x000060, "Member 'ZeuzApiLobby_LobbyJoinBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyKickBP
// 0x0110 (0x0110 - 0x0000)
struct ZeuzApiLobby_LobbyKickBP final 
{
public:
	struct FZeuzLobbyKick                         In;                                                // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0078(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyKickBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyKickBP");
static_assert(sizeof(ZeuzApiLobby_LobbyKickBP) == 0x000110, "Wrong size on ZeuzApiLobby_LobbyKickBP");
static_assert(offsetof(ZeuzApiLobby_LobbyKickBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyKickBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyKickBP, Callback) == 0x000048, "Member 'ZeuzApiLobby_LobbyKickBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyKickBP, OnSuccess) == 0x000058, "Member 'ZeuzApiLobby_LobbyKickBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyKickBP, OnFailure) == 0x000068, "Member 'ZeuzApiLobby_LobbyKickBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyKickBP, Ctx) == 0x000078, "Member 'ZeuzApiLobby_LobbyKickBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyLeaveBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiLobby_LobbyLeaveBP final 
{
public:
	struct FZeuzLobbyJoin                         In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyLeaveBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyLeaveBP");
static_assert(sizeof(ZeuzApiLobby_LobbyLeaveBP) == 0x0000F8, "Wrong size on ZeuzApiLobby_LobbyLeaveBP");
static_assert(offsetof(ZeuzApiLobby_LobbyLeaveBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyLeaveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyLeaveBP, Callback) == 0x000030, "Member 'ZeuzApiLobby_LobbyLeaveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyLeaveBP, OnSuccess) == 0x000040, "Member 'ZeuzApiLobby_LobbyLeaveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyLeaveBP, OnFailure) == 0x000050, "Member 'ZeuzApiLobby_LobbyLeaveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyLeaveBP, Ctx) == 0x000060, "Member 'ZeuzApiLobby_LobbyLeaveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyQueryBP
// 0x0100 (0x0100 - 0x0000)
struct ZeuzApiLobby_LobbyQueryBP final 
{
public:
	struct FZeuzLobbyQueryIn                      In;                                                // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyQueryOut& Result, const class FString& Error)> Callback;                                          // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyQueryOut& Result)> OnSuccess;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0068(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyQueryBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyQueryBP");
static_assert(sizeof(ZeuzApiLobby_LobbyQueryBP) == 0x000100, "Wrong size on ZeuzApiLobby_LobbyQueryBP");
static_assert(offsetof(ZeuzApiLobby_LobbyQueryBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyQueryBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyQueryBP, Callback) == 0x000038, "Member 'ZeuzApiLobby_LobbyQueryBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyQueryBP, OnSuccess) == 0x000048, "Member 'ZeuzApiLobby_LobbyQueryBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyQueryBP, OnFailure) == 0x000058, "Member 'ZeuzApiLobby_LobbyQueryBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyQueryBP, Ctx) == 0x000068, "Member 'ZeuzApiLobby_LobbyQueryBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyRefreshBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiLobby_LobbyRefreshBP final 
{
public:
	struct FZeuzLobbyRefresh                      In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result)> OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyRefreshBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyRefreshBP");
static_assert(sizeof(ZeuzApiLobby_LobbyRefreshBP) == 0x0000F0, "Wrong size on ZeuzApiLobby_LobbyRefreshBP");
static_assert(offsetof(ZeuzApiLobby_LobbyRefreshBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyRefreshBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyRefreshBP, Callback) == 0x000028, "Member 'ZeuzApiLobby_LobbyRefreshBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyRefreshBP, OnSuccess) == 0x000038, "Member 'ZeuzApiLobby_LobbyRefreshBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyRefreshBP, OnFailure) == 0x000048, "Member 'ZeuzApiLobby_LobbyRefreshBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyRefreshBP, Ctx) == 0x000058, "Member 'ZeuzApiLobby_LobbyRefreshBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyStartBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiLobby_LobbyStartBP final 
{
public:
	struct FZeuzLobbyStartDestroy                 In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyServerConnect& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyServerConnect& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyStartBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyStartBP");
static_assert(sizeof(ZeuzApiLobby_LobbyStartBP) == 0x0000E8, "Wrong size on ZeuzApiLobby_LobbyStartBP");
static_assert(offsetof(ZeuzApiLobby_LobbyStartBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyStartBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyStartBP, Callback) == 0x000020, "Member 'ZeuzApiLobby_LobbyStartBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyStartBP, OnSuccess) == 0x000030, "Member 'ZeuzApiLobby_LobbyStartBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyStartBP, OnFailure) == 0x000040, "Member 'ZeuzApiLobby_LobbyStartBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyStartBP, Ctx) == 0x000050, "Member 'ZeuzApiLobby_LobbyStartBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyUpdateBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiLobby_LobbyUpdateBP final 
{
public:
	struct FZeuzLobbyStateIn                      In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result)> OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyUpdateBP");
static_assert(sizeof(ZeuzApiLobby_LobbyUpdateBP) == 0x000120, "Wrong size on ZeuzApiLobby_LobbyUpdateBP");
static_assert(offsetof(ZeuzApiLobby_LobbyUpdateBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUpdateBP, Callback) == 0x000058, "Member 'ZeuzApiLobby_LobbyUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUpdateBP, OnSuccess) == 0x000068, "Member 'ZeuzApiLobby_LobbyUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUpdateBP, OnFailure) == 0x000078, "Member 'ZeuzApiLobby_LobbyUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUpdateBP, Ctx) == 0x000088, "Member 'ZeuzApiLobby_LobbyUpdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLobby.LobbyUserBP
// 0x0160 (0x0160 - 0x0000)
struct ZeuzApiLobby_LobbyUserBP final 
{
public:
	struct FZeuzLobbyUserIn                       In;                                                // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result, const class FString& Error)> Callback;                                          // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLobbyUsersOut& Result)> OnSuccess;                                         // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00B8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00C8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_LobbyUserBP) == 0x000008, "Wrong alignment on ZeuzApiLobby_LobbyUserBP");
static_assert(sizeof(ZeuzApiLobby_LobbyUserBP) == 0x000160, "Wrong size on ZeuzApiLobby_LobbyUserBP");
static_assert(offsetof(ZeuzApiLobby_LobbyUserBP, In) == 0x000000, "Member 'ZeuzApiLobby_LobbyUserBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUserBP, Callback) == 0x000098, "Member 'ZeuzApiLobby_LobbyUserBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUserBP, OnSuccess) == 0x0000A8, "Member 'ZeuzApiLobby_LobbyUserBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUserBP, OnFailure) == 0x0000B8, "Member 'ZeuzApiLobby_LobbyUserBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_LobbyUserBP, Ctx) == 0x0000C8, "Member 'ZeuzApiLobby_LobbyUserBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyCreateBP__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature) == 0x000088, "Wrong size on ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature, Error) == 0x000078, "Member 'ZeuzApiLobby_DelegateLobbyCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyCreateBPS__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature) == 0x000078, "Wrong size on ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyDestroyBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyDestroyBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyDestroyBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyDestroyBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyJoinBP__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature) == 0x000088, "Wrong size on ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature, Error) == 0x000078, "Member 'ZeuzApiLobby_DelegateLobbyJoinBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyJoinBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyJoinBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyJoinBPS__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature) == 0x000078, "Wrong size on ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyJoinBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyKickBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyKickBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyKickBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyKickBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyLeaveBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyLeaveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyLeaveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyLeaveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyQueryBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyQueryOut                     Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiLobby_DelegateLobbyQueryBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyQueryBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyQueryBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyQueryBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyQueryOut                     Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyQueryBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyRefreshBP__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature) == 0x000088, "Wrong size on ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature, Error) == 0x000078, "Member 'ZeuzApiLobby_DelegateLobbyRefreshBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyRefreshBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyRefreshBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyRefreshBPS__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature) == 0x000078, "Wrong size on ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyRefreshBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyStartBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyServerConnect                Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiLobby_DelegateLobbyStartBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyStartBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyStartBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyStartBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyServerConnect                Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyStartBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyUpdateBP__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature) == 0x000088, "Wrong size on ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature, Error) == 0x000078, "Member 'ZeuzApiLobby_DelegateLobbyUpdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyUpdateBPS__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature) == 0x000078, "Wrong size on ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyUserBP__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature) == 0x000088, "Wrong size on ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature, Error) == 0x000078, "Member 'ZeuzApiLobby_DelegateLobbyUserBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyUserBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyUserBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLobby.DelegateLobbyUserBPS__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature final 
{
public:
	struct FZeuzLobbyUsersOut                     Result;                                            // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature) == 0x000078, "Wrong size on ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLobby_DelegateLobbyUserBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityLocationCreateBP
// 0x0218 (0x0218 - 0x0000)
struct ZeuzApiLocality_LocalityLocationCreateBP final 
{
public:
	struct FZeuzLocation                          In;                                                // 0x0000(0x0150)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzLocation& Result, const class FString& Error)> Callback;                                          // 0x0150(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzLocation& Result)> OnSuccess;                                         // 0x0160(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0170(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0180(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityLocationCreateBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityLocationCreateBP");
static_assert(sizeof(ZeuzApiLocality_LocalityLocationCreateBP) == 0x000218, "Wrong size on ZeuzApiLocality_LocalityLocationCreateBP");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationCreateBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityLocationCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationCreateBP, Callback) == 0x000150, "Member 'ZeuzApiLocality_LocalityLocationCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationCreateBP, OnSuccess) == 0x000160, "Member 'ZeuzApiLocality_LocalityLocationCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationCreateBP, OnFailure) == 0x000170, "Member 'ZeuzApiLocality_LocalityLocationCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationCreateBP, Ctx) == 0x000180, "Member 'ZeuzApiLocality_LocalityLocationCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityLocationGetBP
// 0x0118 (0x0118 - 0x0000)
struct ZeuzApiLocality_LocalityLocationGetBP final 
{
public:
	struct FZeuzLocalityLocationGetIn             In;                                                // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzLocation>& Result, const class FString& Error)> Callback;                                          // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzLocation>& Result)> OnSuccess;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0080(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityLocationGetBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityLocationGetBP");
static_assert(sizeof(ZeuzApiLocality_LocalityLocationGetBP) == 0x000118, "Wrong size on ZeuzApiLocality_LocalityLocationGetBP");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationGetBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityLocationGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationGetBP, Callback) == 0x000050, "Member 'ZeuzApiLocality_LocalityLocationGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationGetBP, OnSuccess) == 0x000060, "Member 'ZeuzApiLocality_LocalityLocationGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationGetBP, OnFailure) == 0x000070, "Member 'ZeuzApiLocality_LocalityLocationGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationGetBP, Ctx) == 0x000080, "Member 'ZeuzApiLocality_LocalityLocationGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityLocationRemoveBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiLocality_LocalityLocationRemoveBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityLocationRemoveBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityLocationRemoveBP");
static_assert(sizeof(ZeuzApiLocality_LocalityLocationRemoveBP) == 0x0000D8, "Wrong size on ZeuzApiLocality_LocalityLocationRemoveBP");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationRemoveBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityLocationRemoveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationRemoveBP, Callback) == 0x000010, "Member 'ZeuzApiLocality_LocalityLocationRemoveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationRemoveBP, OnSuccess) == 0x000020, "Member 'ZeuzApiLocality_LocalityLocationRemoveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationRemoveBP, OnFailure) == 0x000030, "Member 'ZeuzApiLocality_LocalityLocationRemoveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationRemoveBP, Ctx) == 0x000040, "Member 'ZeuzApiLocality_LocalityLocationRemoveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityLocationUpdateBP
// 0x0218 (0x0218 - 0x0000)
struct ZeuzApiLocality_LocalityLocationUpdateBP final 
{
public:
	struct FZeuzLocation                          In;                                                // 0x0000(0x0150)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzLocation& Result, const class FString& Error)> Callback;                                          // 0x0150(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzLocation& Result)> OnSuccess;                                         // 0x0160(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0170(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0180(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityLocationUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityLocationUpdateBP");
static_assert(sizeof(ZeuzApiLocality_LocalityLocationUpdateBP) == 0x000218, "Wrong size on ZeuzApiLocality_LocalityLocationUpdateBP");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationUpdateBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityLocationUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationUpdateBP, Callback) == 0x000150, "Member 'ZeuzApiLocality_LocalityLocationUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationUpdateBP, OnSuccess) == 0x000160, "Member 'ZeuzApiLocality_LocalityLocationUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationUpdateBP, OnFailure) == 0x000170, "Member 'ZeuzApiLocality_LocalityLocationUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityLocationUpdateBP, Ctx) == 0x000180, "Member 'ZeuzApiLocality_LocalityLocationUpdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityProviderCreateBP
// 0x0178 (0x0178 - 0x0000)
struct ZeuzApiLocality_LocalityProviderCreateBP final 
{
public:
	struct FZeuzProvider                          In;                                                // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzProvider& Result, const class FString& Error)> Callback;                                          // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzProvider& Result)> OnSuccess;                                         // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00E0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityProviderCreateBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityProviderCreateBP");
static_assert(sizeof(ZeuzApiLocality_LocalityProviderCreateBP) == 0x000178, "Wrong size on ZeuzApiLocality_LocalityProviderCreateBP");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderCreateBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityProviderCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderCreateBP, Callback) == 0x0000B0, "Member 'ZeuzApiLocality_LocalityProviderCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderCreateBP, OnSuccess) == 0x0000C0, "Member 'ZeuzApiLocality_LocalityProviderCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderCreateBP, OnFailure) == 0x0000D0, "Member 'ZeuzApiLocality_LocalityProviderCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderCreateBP, Ctx) == 0x0000E0, "Member 'ZeuzApiLocality_LocalityProviderCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityProviderGetBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiLocality_LocalityProviderGetBP final 
{
public:
	struct FZeuzLocalityProviderGetIn             In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzProvider>& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzProvider>& Result)> OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityProviderGetBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityProviderGetBP");
static_assert(sizeof(ZeuzApiLocality_LocalityProviderGetBP) == 0x0000F0, "Wrong size on ZeuzApiLocality_LocalityProviderGetBP");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderGetBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityProviderGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderGetBP, Callback) == 0x000028, "Member 'ZeuzApiLocality_LocalityProviderGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderGetBP, OnSuccess) == 0x000038, "Member 'ZeuzApiLocality_LocalityProviderGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderGetBP, OnFailure) == 0x000048, "Member 'ZeuzApiLocality_LocalityProviderGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderGetBP, Ctx) == 0x000058, "Member 'ZeuzApiLocality_LocalityProviderGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityProviderRemoveBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiLocality_LocalityProviderRemoveBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityProviderRemoveBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityProviderRemoveBP");
static_assert(sizeof(ZeuzApiLocality_LocalityProviderRemoveBP) == 0x0000D8, "Wrong size on ZeuzApiLocality_LocalityProviderRemoveBP");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderRemoveBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityProviderRemoveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderRemoveBP, Callback) == 0x000010, "Member 'ZeuzApiLocality_LocalityProviderRemoveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderRemoveBP, OnSuccess) == 0x000020, "Member 'ZeuzApiLocality_LocalityProviderRemoveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderRemoveBP, OnFailure) == 0x000030, "Member 'ZeuzApiLocality_LocalityProviderRemoveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderRemoveBP, Ctx) == 0x000040, "Member 'ZeuzApiLocality_LocalityProviderRemoveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityProviderUpdateBP
// 0x0178 (0x0178 - 0x0000)
struct ZeuzApiLocality_LocalityProviderUpdateBP final 
{
public:
	struct FZeuzProvider                          In;                                                // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzProvider& Result, const class FString& Error)> Callback;                                          // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzProvider& Result)> OnSuccess;                                         // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00E0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityProviderUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityProviderUpdateBP");
static_assert(sizeof(ZeuzApiLocality_LocalityProviderUpdateBP) == 0x000178, "Wrong size on ZeuzApiLocality_LocalityProviderUpdateBP");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderUpdateBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityProviderUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderUpdateBP, Callback) == 0x0000B0, "Member 'ZeuzApiLocality_LocalityProviderUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderUpdateBP, OnSuccess) == 0x0000C0, "Member 'ZeuzApiLocality_LocalityProviderUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderUpdateBP, OnFailure) == 0x0000D0, "Member 'ZeuzApiLocality_LocalityProviderUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityProviderUpdateBP, Ctx) == 0x0000E0, "Member 'ZeuzApiLocality_LocalityProviderUpdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityRegionCreateBP
// 0x0170 (0x0170 - 0x0000)
struct ZeuzApiLocality_LocalityRegionCreateBP final 
{
public:
	struct FZeuzRegion                            In;                                                // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzRegion& Result, const class FString& Error)> Callback;                                          // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzRegion& Result)> OnSuccess;                                         // 0x00B8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00C8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00D8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityRegionCreateBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityRegionCreateBP");
static_assert(sizeof(ZeuzApiLocality_LocalityRegionCreateBP) == 0x000170, "Wrong size on ZeuzApiLocality_LocalityRegionCreateBP");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionCreateBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityRegionCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionCreateBP, Callback) == 0x0000A8, "Member 'ZeuzApiLocality_LocalityRegionCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionCreateBP, OnSuccess) == 0x0000B8, "Member 'ZeuzApiLocality_LocalityRegionCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionCreateBP, OnFailure) == 0x0000C8, "Member 'ZeuzApiLocality_LocalityRegionCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionCreateBP, Ctx) == 0x0000D8, "Member 'ZeuzApiLocality_LocalityRegionCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityRegionGetBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiLocality_LocalityRegionGetBP final 
{
public:
	struct FZeuzLocalityRegionGetIn               In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzRegion>& Result, const class FString& Error)> Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzRegion>& Result)> OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityRegionGetBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityRegionGetBP");
static_assert(sizeof(ZeuzApiLocality_LocalityRegionGetBP) == 0x0000F8, "Wrong size on ZeuzApiLocality_LocalityRegionGetBP");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionGetBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityRegionGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionGetBP, Callback) == 0x000030, "Member 'ZeuzApiLocality_LocalityRegionGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionGetBP, OnSuccess) == 0x000040, "Member 'ZeuzApiLocality_LocalityRegionGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionGetBP, OnFailure) == 0x000050, "Member 'ZeuzApiLocality_LocalityRegionGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionGetBP, Ctx) == 0x000060, "Member 'ZeuzApiLocality_LocalityRegionGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityRegionRemoveBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiLocality_LocalityRegionRemoveBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityRegionRemoveBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityRegionRemoveBP");
static_assert(sizeof(ZeuzApiLocality_LocalityRegionRemoveBP) == 0x0000D8, "Wrong size on ZeuzApiLocality_LocalityRegionRemoveBP");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionRemoveBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityRegionRemoveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionRemoveBP, Callback) == 0x000010, "Member 'ZeuzApiLocality_LocalityRegionRemoveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionRemoveBP, OnSuccess) == 0x000020, "Member 'ZeuzApiLocality_LocalityRegionRemoveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionRemoveBP, OnFailure) == 0x000030, "Member 'ZeuzApiLocality_LocalityRegionRemoveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionRemoveBP, Ctx) == 0x000040, "Member 'ZeuzApiLocality_LocalityRegionRemoveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLocality.LocalityRegionUpdateBP
// 0x0170 (0x0170 - 0x0000)
struct ZeuzApiLocality_LocalityRegionUpdateBP final 
{
public:
	struct FZeuzRegion                            In;                                                // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzRegion& Result, const class FString& Error)> Callback;                                          // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzRegion& Result)> OnSuccess;                                         // 0x00B8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00C8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00D8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_LocalityRegionUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiLocality_LocalityRegionUpdateBP");
static_assert(sizeof(ZeuzApiLocality_LocalityRegionUpdateBP) == 0x000170, "Wrong size on ZeuzApiLocality_LocalityRegionUpdateBP");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionUpdateBP, In) == 0x000000, "Member 'ZeuzApiLocality_LocalityRegionUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionUpdateBP, Callback) == 0x0000A8, "Member 'ZeuzApiLocality_LocalityRegionUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionUpdateBP, OnSuccess) == 0x0000B8, "Member 'ZeuzApiLocality_LocalityRegionUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionUpdateBP, OnFailure) == 0x0000C8, "Member 'ZeuzApiLocality_LocalityRegionUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_LocalityRegionUpdateBP, Ctx) == 0x0000D8, "Member 'ZeuzApiLocality_LocalityRegionUpdateBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationCreateBP__DelegateSignature
// 0x0160 (0x0160 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature final 
{
public:
	struct FZeuzLocation                          Result;                                            // 0x0000(0x0150)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0150(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature) == 0x000160, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature, Error) == 0x000150, "Member 'ZeuzApiLocality_DelegateLocalityLocationCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationCreateBPS__DelegateSignature
// 0x0150 (0x0150 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzLocation                          Result;                                            // 0x0000(0x0150)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature) == 0x000150, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationGetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzLocation>                  Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiLocality_DelegateLocalityLocationGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationGetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzLocation>                  Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationRemoveBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationRemoveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationRemoveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationRemoveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationUpdateBP__DelegateSignature
// 0x0160 (0x0160 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzLocation                          Result;                                            // 0x0000(0x0150)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0150(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature) == 0x000160, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature, Error) == 0x000150, "Member 'ZeuzApiLocality_DelegateLocalityLocationUpdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityLocationUpdateBPS__DelegateSignature
// 0x0150 (0x0150 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzLocation                          Result;                                            // 0x0000(0x0150)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature) == 0x000150, "Wrong size on ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityLocationUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderCreateBP__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature final 
{
public:
	struct FZeuzProvider                          Result;                                            // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00B0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature) == 0x0000C0, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature, Error) == 0x0000B0, "Member 'ZeuzApiLocality_DelegateLocalityProviderCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderCreateBPS__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzProvider                          Result;                                            // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature) == 0x0000B0, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderGetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzProvider>                  Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiLocality_DelegateLocalityProviderGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderGetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzProvider>                  Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderRemoveBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderRemoveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderRemoveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderRemoveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderUpdateBP__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzProvider                          Result;                                            // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00B0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature) == 0x0000C0, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature, Error) == 0x0000B0, "Member 'ZeuzApiLocality_DelegateLocalityProviderUpdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityProviderUpdateBPS__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzProvider                          Result;                                            // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature) == 0x0000B0, "Wrong size on ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityProviderUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionCreateBP__DelegateSignature
// 0x00B8 (0x00B8 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature final 
{
public:
	struct FZeuzRegion                            Result;                                            // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00A8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature) == 0x0000B8, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature, Error) == 0x0000A8, "Member 'ZeuzApiLocality_DelegateLocalityRegionCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionCreateBPS__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzRegion                            Result;                                            // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature) == 0x0000A8, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionGetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzRegion>                    Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiLocality_DelegateLocalityRegionGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionGetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzRegion>                    Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionRemoveBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionRemoveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionRemoveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionRemoveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionUpdateBP__DelegateSignature
// 0x00B8 (0x00B8 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzRegion                            Result;                                            // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00A8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature) == 0x0000B8, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature, Error) == 0x0000A8, "Member 'ZeuzApiLocality_DelegateLocalityRegionUpdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLocality.DelegateLocalityRegionUpdateBPS__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzRegion                            Result;                                            // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature) == 0x0000A8, "Wrong size on ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLocality_DelegateLocalityRegionUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLogsearch.LogsearchAccountBP
// 0x0138 (0x0138 - 0x0000)
struct ZeuzApiLogsearch_LogsearchAccountBP final 
{
public:
	struct FZeuzLogsearchAccountIn                In;                                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLogsearchAccountOut& Result, const class FString& Error)> Callback;                                          // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLogsearchAccountOut& Result)> OnSuccess;                                         // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00A0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_LogsearchAccountBP) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_LogsearchAccountBP");
static_assert(sizeof(ZeuzApiLogsearch_LogsearchAccountBP) == 0x000138, "Wrong size on ZeuzApiLogsearch_LogsearchAccountBP");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchAccountBP, In) == 0x000000, "Member 'ZeuzApiLogsearch_LogsearchAccountBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchAccountBP, Callback) == 0x000070, "Member 'ZeuzApiLogsearch_LogsearchAccountBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchAccountBP, OnSuccess) == 0x000080, "Member 'ZeuzApiLogsearch_LogsearchAccountBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchAccountBP, OnFailure) == 0x000090, "Member 'ZeuzApiLogsearch_LogsearchAccountBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchAccountBP, Ctx) == 0x0000A0, "Member 'ZeuzApiLogsearch_LogsearchAccountBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLogsearch.LogsearchCheckexportBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiLogsearch_LogsearchCheckexportBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLogsearchLogsStatus& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzLogsearchLogsStatus& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_LogsearchCheckexportBP) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_LogsearchCheckexportBP");
static_assert(sizeof(ZeuzApiLogsearch_LogsearchCheckexportBP) == 0x0000D8, "Wrong size on ZeuzApiLogsearch_LogsearchCheckexportBP");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchCheckexportBP, In) == 0x000000, "Member 'ZeuzApiLogsearch_LogsearchCheckexportBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchCheckexportBP, Callback) == 0x000010, "Member 'ZeuzApiLogsearch_LogsearchCheckexportBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchCheckexportBP, OnSuccess) == 0x000020, "Member 'ZeuzApiLogsearch_LogsearchCheckexportBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchCheckexportBP, OnFailure) == 0x000030, "Member 'ZeuzApiLogsearch_LogsearchCheckexportBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchCheckexportBP, Ctx) == 0x000040, "Member 'ZeuzApiLogsearch_LogsearchCheckexportBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLogsearch.LogsearchDownloadexportBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiLogsearch_LogsearchDownloadexportBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_LogsearchDownloadexportBP) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_LogsearchDownloadexportBP");
static_assert(sizeof(ZeuzApiLogsearch_LogsearchDownloadexportBP) == 0x0000D8, "Wrong size on ZeuzApiLogsearch_LogsearchDownloadexportBP");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchDownloadexportBP, In) == 0x000000, "Member 'ZeuzApiLogsearch_LogsearchDownloadexportBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchDownloadexportBP, Callback) == 0x000010, "Member 'ZeuzApiLogsearch_LogsearchDownloadexportBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchDownloadexportBP, OnSuccess) == 0x000020, "Member 'ZeuzApiLogsearch_LogsearchDownloadexportBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchDownloadexportBP, OnFailure) == 0x000030, "Member 'ZeuzApiLogsearch_LogsearchDownloadexportBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchDownloadexportBP, Ctx) == 0x000040, "Member 'ZeuzApiLogsearch_LogsearchDownloadexportBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiLogsearch.LogsearchStartexportBP
// 0x0138 (0x0138 - 0x0000)
struct ZeuzApiLogsearch_LogsearchStartexportBP final 
{
public:
	struct FZeuzLogsearchAccountIn                In;                                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00A0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_LogsearchStartexportBP) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_LogsearchStartexportBP");
static_assert(sizeof(ZeuzApiLogsearch_LogsearchStartexportBP) == 0x000138, "Wrong size on ZeuzApiLogsearch_LogsearchStartexportBP");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchStartexportBP, In) == 0x000000, "Member 'ZeuzApiLogsearch_LogsearchStartexportBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchStartexportBP, Callback) == 0x000070, "Member 'ZeuzApiLogsearch_LogsearchStartexportBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchStartexportBP, OnSuccess) == 0x000080, "Member 'ZeuzApiLogsearch_LogsearchStartexportBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchStartexportBP, OnFailure) == 0x000090, "Member 'ZeuzApiLogsearch_LogsearchStartexportBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_LogsearchStartexportBP, Ctx) == 0x0000A0, "Member 'ZeuzApiLogsearch_LogsearchStartexportBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchAccountBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature final 
{
public:
	struct FZeuzLogsearchAccountOut               Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiLogsearch_DelegateLogsearchAccountBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchAccountBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchAccountBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchAccountBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature final 
{
public:
	struct FZeuzLogsearchAccountOut               Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchAccountBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchCheckexportBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature final 
{
public:
	struct FZeuzLogsearchLogsStatus               Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiLogsearch_DelegateLogsearchCheckexportBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchCheckexportBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchCheckexportBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchCheckexportBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature final 
{
public:
	struct FZeuzLogsearchLogsStatus               Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchCheckexportBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchDownloadexportBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiLogsearch_DelegateLogsearchDownloadexportBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchDownloadexportBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchDownloadexportBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchDownloadexportBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchStartexportBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiLogsearch_DelegateLogsearchStartexportBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchStartexportBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchStartexportBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiLogsearch.DelegateLogsearchStartexportBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiLogsearch_DelegateLogsearchStartexportBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineAddresourceBP
// 0x0188 (0x0188 - 0x0000)
struct ZeuzApiMachine_MachineAddresourceBP final 
{
public:
	struct FZeuzMachineResourceDataIn             In;                                                // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMachineResourceInfo& Result, const class FString& Error)> Callback;                                          // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMachineResourceInfo& Result)> OnSuccess;                                         // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00F0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineAddresourceBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineAddresourceBP");
static_assert(sizeof(ZeuzApiMachine_MachineAddresourceBP) == 0x000188, "Wrong size on ZeuzApiMachine_MachineAddresourceBP");
static_assert(offsetof(ZeuzApiMachine_MachineAddresourceBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineAddresourceBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAddresourceBP, Callback) == 0x0000C0, "Member 'ZeuzApiMachine_MachineAddresourceBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAddresourceBP, OnSuccess) == 0x0000D0, "Member 'ZeuzApiMachine_MachineAddresourceBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAddresourceBP, OnFailure) == 0x0000E0, "Member 'ZeuzApiMachine_MachineAddresourceBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAddresourceBP, Ctx) == 0x0000F0, "Member 'ZeuzApiMachine_MachineAddresourceBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineAllocateBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiMachine_MachineAllocateBP final 
{
public:
	struct FZeuzMachineResourceAllocateIn         In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineInfo>& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineInfo>& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineAllocateBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineAllocateBP");
static_assert(sizeof(ZeuzApiMachine_MachineAllocateBP) == 0x0000E8, "Wrong size on ZeuzApiMachine_MachineAllocateBP");
static_assert(offsetof(ZeuzApiMachine_MachineAllocateBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineAllocateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAllocateBP, Callback) == 0x000020, "Member 'ZeuzApiMachine_MachineAllocateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAllocateBP, OnSuccess) == 0x000030, "Member 'ZeuzApiMachine_MachineAllocateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAllocateBP, OnFailure) == 0x000040, "Member 'ZeuzApiMachine_MachineAllocateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineAllocateBP, Ctx) == 0x000050, "Member 'ZeuzApiMachine_MachineAllocateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineCountresourcesBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiMachine_MachineCountresourcesBP final 
{
public:
	struct FZeuzMachineResourcesCountIn           In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(int32 Result)>                 OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineCountresourcesBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineCountresourcesBP");
static_assert(sizeof(ZeuzApiMachine_MachineCountresourcesBP) == 0x0000E8, "Wrong size on ZeuzApiMachine_MachineCountresourcesBP");
static_assert(offsetof(ZeuzApiMachine_MachineCountresourcesBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineCountresourcesBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineCountresourcesBP, Callback) == 0x000020, "Member 'ZeuzApiMachine_MachineCountresourcesBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineCountresourcesBP, OnSuccess) == 0x000030, "Member 'ZeuzApiMachine_MachineCountresourcesBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineCountresourcesBP, OnFailure) == 0x000040, "Member 'ZeuzApiMachine_MachineCountresourcesBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineCountresourcesBP, Ctx) == 0x000050, "Member 'ZeuzApiMachine_MachineCountresourcesBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineDeallocateBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiMachine_MachineDeallocateBP final 
{
public:
	struct FZeuzMachineResourceDeallocateIn       In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class FString>& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class FString>& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineDeallocateBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineDeallocateBP");
static_assert(sizeof(ZeuzApiMachine_MachineDeallocateBP) == 0x0000E8, "Wrong size on ZeuzApiMachine_MachineDeallocateBP");
static_assert(offsetof(ZeuzApiMachine_MachineDeallocateBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineDeallocateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineDeallocateBP, Callback) == 0x000020, "Member 'ZeuzApiMachine_MachineDeallocateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineDeallocateBP, OnSuccess) == 0x000030, "Member 'ZeuzApiMachine_MachineDeallocateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineDeallocateBP, OnFailure) == 0x000040, "Member 'ZeuzApiMachine_MachineDeallocateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineDeallocateBP, Ctx) == 0x000050, "Member 'ZeuzApiMachine_MachineDeallocateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineGetBP
// 0x0150 (0x0150 - 0x0000)
struct ZeuzApiMachine_MachineGetBP final 
{
public:
	struct FZeuzMachineGetIn                      In;                                                // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMachineGetOut& Result, const class FString& Error)> Callback;                                          // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMachineGetOut& Result)> OnSuccess;                                         // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineGetBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineGetBP");
static_assert(sizeof(ZeuzApiMachine_MachineGetBP) == 0x000150, "Wrong size on ZeuzApiMachine_MachineGetBP");
static_assert(offsetof(ZeuzApiMachine_MachineGetBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetBP, Callback) == 0x000088, "Member 'ZeuzApiMachine_MachineGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetBP, OnSuccess) == 0x000098, "Member 'ZeuzApiMachine_MachineGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetBP, OnFailure) == 0x0000A8, "Member 'ZeuzApiMachine_MachineGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetBP, Ctx) == 0x0000B8, "Member 'ZeuzApiMachine_MachineGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineGetinfoBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiMachine_MachineGetinfoBP final 
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineInfo>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineInfo>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineGetinfoBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineGetinfoBP");
static_assert(sizeof(ZeuzApiMachine_MachineGetinfoBP) == 0x0000D8, "Wrong size on ZeuzApiMachine_MachineGetinfoBP");
static_assert(offsetof(ZeuzApiMachine_MachineGetinfoBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineGetinfoBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetinfoBP, Callback) == 0x000010, "Member 'ZeuzApiMachine_MachineGetinfoBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetinfoBP, OnSuccess) == 0x000020, "Member 'ZeuzApiMachine_MachineGetinfoBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetinfoBP, OnFailure) == 0x000030, "Member 'ZeuzApiMachine_MachineGetinfoBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetinfoBP, Ctx) == 0x000040, "Member 'ZeuzApiMachine_MachineGetinfoBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineGetresourcesBP
// 0x0158 (0x0158 - 0x0000)
struct ZeuzApiMachine_MachineGetresourcesBP final 
{
public:
	struct FZeuzMachineResourceGetIn              In;                                                // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineResourceInfo>& Result, const class FString& Error)> Callback;                                          // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineResourceInfo>& Result)> OnSuccess;                                         // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00C0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineGetresourcesBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineGetresourcesBP");
static_assert(sizeof(ZeuzApiMachine_MachineGetresourcesBP) == 0x000158, "Wrong size on ZeuzApiMachine_MachineGetresourcesBP");
static_assert(offsetof(ZeuzApiMachine_MachineGetresourcesBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineGetresourcesBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetresourcesBP, Callback) == 0x000090, "Member 'ZeuzApiMachine_MachineGetresourcesBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetresourcesBP, OnSuccess) == 0x0000A0, "Member 'ZeuzApiMachine_MachineGetresourcesBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetresourcesBP, OnFailure) == 0x0000B0, "Member 'ZeuzApiMachine_MachineGetresourcesBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGetresourcesBP, Ctx) == 0x0000C0, "Member 'ZeuzApiMachine_MachineGetresourcesBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineGettagsBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiMachine_MachineGettagsBP final 
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineTagsSetIn>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineTagsSetIn>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineGettagsBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineGettagsBP");
static_assert(sizeof(ZeuzApiMachine_MachineGettagsBP) == 0x0000D8, "Wrong size on ZeuzApiMachine_MachineGettagsBP");
static_assert(offsetof(ZeuzApiMachine_MachineGettagsBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineGettagsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGettagsBP, Callback) == 0x000010, "Member 'ZeuzApiMachine_MachineGettagsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGettagsBP, OnSuccess) == 0x000020, "Member 'ZeuzApiMachine_MachineGettagsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGettagsBP, OnFailure) == 0x000030, "Member 'ZeuzApiMachine_MachineGettagsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineGettagsBP, Ctx) == 0x000040, "Member 'ZeuzApiMachine_MachineGettagsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineResourcedeprovisionBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiMachine_MachineResourcedeprovisionBP final 
{
public:
	struct FZeuzMachineResourceDeprovisionIn      In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineResourcedeprovisionBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineResourcedeprovisionBP");
static_assert(sizeof(ZeuzApiMachine_MachineResourcedeprovisionBP) == 0x0000E8, "Wrong size on ZeuzApiMachine_MachineResourcedeprovisionBP");
static_assert(offsetof(ZeuzApiMachine_MachineResourcedeprovisionBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineResourcedeprovisionBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineResourcedeprovisionBP, Callback) == 0x000020, "Member 'ZeuzApiMachine_MachineResourcedeprovisionBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineResourcedeprovisionBP, OnSuccess) == 0x000030, "Member 'ZeuzApiMachine_MachineResourcedeprovisionBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineResourcedeprovisionBP, OnFailure) == 0x000040, "Member 'ZeuzApiMachine_MachineResourcedeprovisionBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineResourcedeprovisionBP, Ctx) == 0x000050, "Member 'ZeuzApiMachine_MachineResourcedeprovisionBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineSettagsBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiMachine_MachineSettagsBP final 
{
public:
	TArray<struct FZeuzMachineTagsSetIn>          In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineTagsSetIn>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzMachineTagsSetIn>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineSettagsBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineSettagsBP");
static_assert(sizeof(ZeuzApiMachine_MachineSettagsBP) == 0x0000D8, "Wrong size on ZeuzApiMachine_MachineSettagsBP");
static_assert(offsetof(ZeuzApiMachine_MachineSettagsBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineSettagsBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineSettagsBP, Callback) == 0x000010, "Member 'ZeuzApiMachine_MachineSettagsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineSettagsBP, OnSuccess) == 0x000020, "Member 'ZeuzApiMachine_MachineSettagsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineSettagsBP, OnFailure) == 0x000030, "Member 'ZeuzApiMachine_MachineSettagsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineSettagsBP, Ctx) == 0x000040, "Member 'ZeuzApiMachine_MachineSettagsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMachine.MachineUpdateresourceBP
// 0x0198 (0x0198 - 0x0000)
struct ZeuzApiMachine_MachineUpdateresourceBP final 
{
public:
	struct FZeuzMachineResourceUpdateIn           In;                                                // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMachineResourceInfo& Result, const class FString& Error)> Callback;                                          // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMachineResourceInfo& Result)> OnSuccess;                                         // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00F0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0100(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_MachineUpdateresourceBP) == 0x000008, "Wrong alignment on ZeuzApiMachine_MachineUpdateresourceBP");
static_assert(sizeof(ZeuzApiMachine_MachineUpdateresourceBP) == 0x000198, "Wrong size on ZeuzApiMachine_MachineUpdateresourceBP");
static_assert(offsetof(ZeuzApiMachine_MachineUpdateresourceBP, In) == 0x000000, "Member 'ZeuzApiMachine_MachineUpdateresourceBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineUpdateresourceBP, Callback) == 0x0000D0, "Member 'ZeuzApiMachine_MachineUpdateresourceBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineUpdateresourceBP, OnSuccess) == 0x0000E0, "Member 'ZeuzApiMachine_MachineUpdateresourceBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineUpdateresourceBP, OnFailure) == 0x0000F0, "Member 'ZeuzApiMachine_MachineUpdateresourceBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_MachineUpdateresourceBP, Ctx) == 0x000100, "Member 'ZeuzApiMachine_MachineUpdateresourceBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineAddresourceBP__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature final 
{
public:
	struct FZeuzMachineResourceInfo               Result;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00F0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature) == 0x000100, "Wrong size on ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature, Error) == 0x0000F0, "Member 'ZeuzApiMachine_DelegateMachineAddresourceBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineAddresourceBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineAddresourceBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineAddresourceBPS__DelegateSignature
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature final 
{
public:
	struct FZeuzMachineResourceInfo               Result;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature) == 0x0000F0, "Wrong size on ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineAddresourceBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineAllocateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineInfo>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMachine_DelegateMachineAllocateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineAllocateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineAllocateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineAllocateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineInfo>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineAllocateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineCountresourcesBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature final 
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1246[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiMachine_DelegateMachineCountresourcesBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineCountresourcesBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineCountresourcesBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineCountresourcesBPS__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature final 
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature) == 0x000004, "Wrong alignment on ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature) == 0x000004, "Wrong size on ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineCountresourcesBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineDeallocateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature final 
{
public:
	TArray<class FString>                         Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMachine_DelegateMachineDeallocateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineDeallocateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineDeallocateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineDeallocateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature final 
{
public:
	TArray<class FString>                         Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineDeallocateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature final 
{
public:
	struct FZeuzMachineGetOut                     Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiMachine_DelegateMachineGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature final 
{
public:
	struct FZeuzMachineGetOut                     Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetinfoBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineInfo>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMachine_DelegateMachineGetinfoBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetinfoBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetinfoBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetinfoBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineInfo>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetinfoBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetresourcesBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineResourceInfo>       Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMachine_DelegateMachineGetresourcesBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetresourcesBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetresourcesBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGetresourcesBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineResourceInfo>       Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGetresourcesBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGettagsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineTagsSetIn>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMachine_DelegateMachineGettagsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGettagsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGettagsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineGettagsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineTagsSetIn>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineGettagsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineResourcedeprovisionBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineResourcedeprovisionBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineResourcedeprovisionBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineResourcedeprovisionBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineSettagsBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineTagsSetIn>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMachine_DelegateMachineSettagsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineSettagsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineSettagsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineSettagsBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzMachineTagsSetIn>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineSettagsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineUpdateresourceBP__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature final 
{
public:
	struct FZeuzMachineResourceInfo               Result;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00F0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature) == 0x000100, "Wrong size on ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature, Error) == 0x0000F0, "Member 'ZeuzApiMachine_DelegateMachineUpdateresourceBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineUpdateresourceBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineUpdateresourceBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMachine.DelegateMachineUpdateresourceBPS__DelegateSignature
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature final 
{
public:
	struct FZeuzMachineResourceInfo               Result;                                            // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature) == 0x0000F0, "Wrong size on ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMachine_DelegateMachineUpdateresourceBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingCloseBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingCloseBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingCloseBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingCloseBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingCloseBP) == 0x0000D8, "Wrong size on ZeuzApiMatchmaking_MatchmakingCloseBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCloseBP, In) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingCloseBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCloseBP, Callback) == 0x000010, "Member 'ZeuzApiMatchmaking_MatchmakingCloseBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCloseBP, OnSuccess) == 0x000020, "Member 'ZeuzApiMatchmaking_MatchmakingCloseBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCloseBP, OnFailure) == 0x000030, "Member 'ZeuzApiMatchmaking_MatchmakingCloseBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCloseBP, Ctx) == 0x000040, "Member 'ZeuzApiMatchmaking_MatchmakingCloseBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingCreateBP
// 0x0148 (0x0148 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingCreateBP final 
{
public:
	struct FZeuzMatchMakingInit                   In;                                                // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStatus& Result, const class FString& Error)> Callback;                                          // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStatus& Result)> OnSuccess;                                         // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingCreateBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingCreateBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingCreateBP) == 0x000148, "Wrong size on ZeuzApiMatchmaking_MatchmakingCreateBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreateBP, In) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreateBP, Callback) == 0x000080, "Member 'ZeuzApiMatchmaking_MatchmakingCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreateBP, OnSuccess) == 0x000090, "Member 'ZeuzApiMatchmaking_MatchmakingCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreateBP, OnFailure) == 0x0000A0, "Member 'ZeuzApiMatchmaking_MatchmakingCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreateBP, Ctx) == 0x0000B0, "Member 'ZeuzApiMatchmaking_MatchmakingCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingCreatepartyBP
// 0x0178 (0x0178 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingCreatepartyBP final 
{
public:
	struct FZeuzMatchMakingPartyInit              In;                                                // 0x0000(0x00B0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStatus& Result, const class FString& Error)> Callback;                                          // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStatus& Result)> OnSuccess;                                         // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00E0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingCreatepartyBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP) == 0x000178, "Wrong size on ZeuzApiMatchmaking_MatchmakingCreatepartyBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP, In) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingCreatepartyBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP, Callback) == 0x0000B0, "Member 'ZeuzApiMatchmaking_MatchmakingCreatepartyBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP, OnSuccess) == 0x0000C0, "Member 'ZeuzApiMatchmaking_MatchmakingCreatepartyBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP, OnFailure) == 0x0000D0, "Member 'ZeuzApiMatchmaking_MatchmakingCreatepartyBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingCreatepartyBP, Ctx) == 0x0000E0, "Member 'ZeuzApiMatchmaking_MatchmakingCreatepartyBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingServerdestroyBP
// 0x0140 (0x0140 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingServerdestroyBP final 
{
public:
	struct FZeuzMatchMakingServerInfo             In;                                                // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00A8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingServerdestroyBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP) == 0x000140, "Wrong size on ZeuzApiMatchmaking_MatchmakingServerdestroyBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP, In) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingServerdestroyBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP, Callback) == 0x000078, "Member 'ZeuzApiMatchmaking_MatchmakingServerdestroyBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP, OnSuccess) == 0x000088, "Member 'ZeuzApiMatchmaking_MatchmakingServerdestroyBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP, OnFailure) == 0x000098, "Member 'ZeuzApiMatchmaking_MatchmakingServerdestroyBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerdestroyBP, Ctx) == 0x0000A8, "Member 'ZeuzApiMatchmaking_MatchmakingServerdestroyBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingServerrefreshBP
// 0x0140 (0x0140 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingServerrefreshBP final 
{
public:
	struct FZeuzMatchMakingServerInfo             In;                                                // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00A8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingServerrefreshBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP) == 0x000140, "Wrong size on ZeuzApiMatchmaking_MatchmakingServerrefreshBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP, In) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingServerrefreshBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP, Callback) == 0x000078, "Member 'ZeuzApiMatchmaking_MatchmakingServerrefreshBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP, OnSuccess) == 0x000088, "Member 'ZeuzApiMatchmaking_MatchmakingServerrefreshBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP, OnFailure) == 0x000098, "Member 'ZeuzApiMatchmaking_MatchmakingServerrefreshBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingServerrefreshBP, Ctx) == 0x0000A8, "Member 'ZeuzApiMatchmaking_MatchmakingServerrefreshBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingStatsBP
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingStatsBP final 
{
public:
	TDelegate<void(struct FZeuzMatchMakingStats& Result, const class FString& Error)> Callback;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStats& Result)> OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0030(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingStatsBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingStatsBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingStatsBP) == 0x0000C8, "Wrong size on ZeuzApiMatchmaking_MatchmakingStatsBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingStatsBP, Callback) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingStatsBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingStatsBP, OnSuccess) == 0x000010, "Member 'ZeuzApiMatchmaking_MatchmakingStatsBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingStatsBP, OnFailure) == 0x000020, "Member 'ZeuzApiMatchmaking_MatchmakingStatsBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingStatsBP, Ctx) == 0x000030, "Member 'ZeuzApiMatchmaking_MatchmakingStatsBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMatchmaking.MatchmakingUpdateBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiMatchmaking_MatchmakingUpdateBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStatus& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzMatchMakingStatus& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_MatchmakingUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_MatchmakingUpdateBP");
static_assert(sizeof(ZeuzApiMatchmaking_MatchmakingUpdateBP) == 0x0000D8, "Wrong size on ZeuzApiMatchmaking_MatchmakingUpdateBP");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingUpdateBP, In) == 0x000000, "Member 'ZeuzApiMatchmaking_MatchmakingUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingUpdateBP, Callback) == 0x000010, "Member 'ZeuzApiMatchmaking_MatchmakingUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingUpdateBP, OnSuccess) == 0x000020, "Member 'ZeuzApiMatchmaking_MatchmakingUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingUpdateBP, OnFailure) == 0x000030, "Member 'ZeuzApiMatchmaking_MatchmakingUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_MatchmakingUpdateBP, Ctx) == 0x000040, "Member 'ZeuzApiMatchmaking_MatchmakingUpdateBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCloseBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCloseBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCloseBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCloseBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCreateBP__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStatus                 Result;                                            // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00D0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature, Error) == 0x0000D0, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCreateBPS__DelegateSignature
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStatus                 Result;                                            // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature) == 0x0000D0, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCreatepartyBP__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStatus                 Result;                                            // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00D0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature, Error) == 0x0000D0, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCreatepartyBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingCreatepartyBPS__DelegateSignature
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStatus                 Result;                                            // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature) == 0x0000D0, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingCreatepartyBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingServerdestroyBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingServerdestroyBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingServerdestroyBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingServerrefreshBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingServerrefreshBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingServerrefreshBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingStatsBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStats                  Result;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1247[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingStatsBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingStatsBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingStatsBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingStatsBPS__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStats                  Result;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature) == 0x000004, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature) == 0x000004, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingStatsBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingUpdateBP__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStatus                 Result;                                            // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00D0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature) == 0x0000E0, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature, Error) == 0x0000D0, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingUpdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMatchmaking.DelegateMatchmakingUpdateBPS__DelegateSignature
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzMatchMakingStatus                 Result;                                            // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature) == 0x0000D0, "Wrong size on ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMatchmaking_DelegateMatchmakingUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsMachinecpuusageBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsMachinecpuusageBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsMachinecpuusageBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsMachinecpuusageBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsMachinecpuusageBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsMachinecpuusageBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinecpuusageBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsMachinecpuusageBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinecpuusageBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsMachinecpuusageBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinecpuusageBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsMachinecpuusageBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinecpuusageBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsMachinecpuusageBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinecpuusageBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsMachinecpuusageBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsMachinememoryusageBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsMachinememoryusageBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsMachinememoryusageBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsMachinememoryusageBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsMachinememoryusageBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsMachinememoryusageBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinememoryusageBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsMachinememoryusageBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinememoryusageBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsMachinememoryusageBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinememoryusageBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsMachinememoryusageBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinememoryusageBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsMachinememoryusageBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinememoryusageBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsMachinememoryusageBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsMachinenetworkreceivedBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsMachinenetworkreceivedBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsMachinenetworkreceivedBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsMachinenetworkreceivedBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsMachinenetworkreceivedBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsMachinenetworkreceivedBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsMachinenetworkreceivedBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsMachinenetworkreceivedBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworkreceivedBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsMachinenetworkreceivedBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsMachinenetworksentBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsMachinenetworksentBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsMachinenetworksentBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsMachinenetworksentBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsMachinenetworksentBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsMachinenetworksentBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworksentBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsMachinenetworksentBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworksentBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsMachinenetworksentBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworksentBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsMachinenetworksentBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworksentBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsMachinenetworksentBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsMachinenetworksentBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsMachinenetworksentBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsPayloadcountBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsPayloadcountBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsPayloadcountBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsPayloadcountBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsPayloadcountBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsPayloadcountBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcountBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsPayloadcountBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcountBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsPayloadcountBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcountBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsPayloadcountBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcountBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsPayloadcountBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcountBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsPayloadcountBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsPayloadcpuusageBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsPayloadcpuusageBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsPayloadcpuusageBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsPayloadcpuusageBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsPayloadcpuusageBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsPayloadcpuusageBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcpuusageBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsPayloadcpuusageBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcpuusageBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsPayloadcpuusageBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcpuusageBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsPayloadcpuusageBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcpuusageBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsPayloadcpuusageBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadcpuusageBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsPayloadcpuusageBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsPayloadmemoryusageBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsPayloadmemoryusageBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsPayloadmemoryusageBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsPayloadmemoryusageBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsPayloadmemoryusageBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsPayloadmemoryusageBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsPayloadmemoryusageBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsPayloadmemoryusageBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadmemoryusageBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsPayloadmemoryusageBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsPayloadnetworkreceivedBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsPayloadnetworkreceivedBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiMetrics.MetricsPayloadnetworksentBP
// 0x0120 (0x0120 - 0x0000)
struct ZeuzApiMetrics_MetricsPayloadnetworksentBP final 
{
public:
	struct FZeuzMetricsQueryIn                    In;                                                // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result, const class FString& Error)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzVariant& Result)>  OnSuccess;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0088(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_MetricsPayloadnetworksentBP) == 0x000008, "Wrong alignment on ZeuzApiMetrics_MetricsPayloadnetworksentBP");
static_assert(sizeof(ZeuzApiMetrics_MetricsPayloadnetworksentBP) == 0x000120, "Wrong size on ZeuzApiMetrics_MetricsPayloadnetworksentBP");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworksentBP, In) == 0x000000, "Member 'ZeuzApiMetrics_MetricsPayloadnetworksentBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworksentBP, Callback) == 0x000058, "Member 'ZeuzApiMetrics_MetricsPayloadnetworksentBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworksentBP, OnSuccess) == 0x000068, "Member 'ZeuzApiMetrics_MetricsPayloadnetworksentBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworksentBP, OnFailure) == 0x000078, "Member 'ZeuzApiMetrics_MetricsPayloadnetworksentBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_MetricsPayloadnetworksentBP, Ctx) == 0x000088, "Member 'ZeuzApiMetrics_MetricsPayloadnetworksentBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinecpuusageBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsMachinecpuusageBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinecpuusageBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinecpuusageBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinecpuusageBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinememoryusageBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsMachinememoryusageBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinememoryusageBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinememoryusageBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinememoryusageBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinenetworkreceivedBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworkreceivedBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinenetworksentBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworksentBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinenetworksentBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsMachinenetworksentBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsMachinenetworksentBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadcountBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcountBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadcountBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcountBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadcountBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcountBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadcpuusageBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadcpuusageBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadcpuusageBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadcpuusageBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadmemoryusageBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadmemoryusageBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadmemoryusageBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadmemoryusageBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworkreceivedBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadnetworksentBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadnetworksentBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiMetrics.DelegateMetricsPayloadnetworksentBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature final 
{
public:
	struct FZeuzVariant                           Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiMetrics_DelegateMetricsPayloadnetworksentBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadAllocateBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiPayload_PayloadAllocateBP final 
{
public:
	struct FZeuzPayloadAllocateIn                 In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzPayloadInfo>& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzPayloadInfo>& Result)> OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadAllocateBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadAllocateBP");
static_assert(sizeof(ZeuzApiPayload_PayloadAllocateBP) == 0x0000F0, "Wrong size on ZeuzApiPayload_PayloadAllocateBP");
static_assert(offsetof(ZeuzApiPayload_PayloadAllocateBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadAllocateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadAllocateBP, Callback) == 0x000028, "Member 'ZeuzApiPayload_PayloadAllocateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadAllocateBP, OnSuccess) == 0x000038, "Member 'ZeuzApiPayload_PayloadAllocateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadAllocateBP, OnFailure) == 0x000048, "Member 'ZeuzApiPayload_PayloadAllocateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadAllocateBP, Ctx) == 0x000058, "Member 'ZeuzApiPayload_PayloadAllocateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadCreateBP
// 0x0140 (0x0140 - 0x0000)
struct ZeuzApiPayload_PayloadCreateBP final 
{
public:
	struct FZeuzPayloadCreateIn                   In;                                                // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result, const class FString& Error)> Callback;                                          // 0x0078(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result)> OnSuccess;                                         // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00A8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadCreateBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadCreateBP");
static_assert(sizeof(ZeuzApiPayload_PayloadCreateBP) == 0x000140, "Wrong size on ZeuzApiPayload_PayloadCreateBP");
static_assert(offsetof(ZeuzApiPayload_PayloadCreateBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadCreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadCreateBP, Callback) == 0x000078, "Member 'ZeuzApiPayload_PayloadCreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadCreateBP, OnSuccess) == 0x000088, "Member 'ZeuzApiPayload_PayloadCreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadCreateBP, OnFailure) == 0x000098, "Member 'ZeuzApiPayload_PayloadCreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadCreateBP, Ctx) == 0x0000A8, "Member 'ZeuzApiPayload_PayloadCreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadGetBP
// 0x0148 (0x0148 - 0x0000)
struct ZeuzApiPayload_PayloadGetBP final 
{
public:
	struct FZeuzPayloadGetIn                      In;                                                // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadGetOut& Result, const class FString& Error)> Callback;                                          // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadGetOut& Result)> OnSuccess;                                         // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadGetBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadGetBP");
static_assert(sizeof(ZeuzApiPayload_PayloadGetBP) == 0x000148, "Wrong size on ZeuzApiPayload_PayloadGetBP");
static_assert(offsetof(ZeuzApiPayload_PayloadGetBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadGetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadGetBP, Callback) == 0x000080, "Member 'ZeuzApiPayload_PayloadGetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadGetBP, OnSuccess) == 0x000090, "Member 'ZeuzApiPayload_PayloadGetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadGetBP, OnFailure) == 0x0000A0, "Member 'ZeuzApiPayload_PayloadGetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadGetBP, Ctx) == 0x0000B0, "Member 'ZeuzApiPayload_PayloadGetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadRemoveBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiPayload_PayloadRemoveBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadRemoveBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadRemoveBP");
static_assert(sizeof(ZeuzApiPayload_PayloadRemoveBP) == 0x0000D8, "Wrong size on ZeuzApiPayload_PayloadRemoveBP");
static_assert(offsetof(ZeuzApiPayload_PayloadRemoveBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadRemoveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRemoveBP, Callback) == 0x000010, "Member 'ZeuzApiPayload_PayloadRemoveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRemoveBP, OnSuccess) == 0x000020, "Member 'ZeuzApiPayload_PayloadRemoveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRemoveBP, OnFailure) == 0x000030, "Member 'ZeuzApiPayload_PayloadRemoveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRemoveBP, Ctx) == 0x000040, "Member 'ZeuzApiPayload_PayloadRemoveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadReserveBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiPayload_PayloadReserveBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool Result)>                  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadReserveBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadReserveBP");
static_assert(sizeof(ZeuzApiPayload_PayloadReserveBP) == 0x0000D8, "Wrong size on ZeuzApiPayload_PayloadReserveBP");
static_assert(offsetof(ZeuzApiPayload_PayloadReserveBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadReserveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadReserveBP, Callback) == 0x000010, "Member 'ZeuzApiPayload_PayloadReserveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadReserveBP, OnSuccess) == 0x000020, "Member 'ZeuzApiPayload_PayloadReserveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadReserveBP, OnFailure) == 0x000030, "Member 'ZeuzApiPayload_PayloadReserveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadReserveBP, Ctx) == 0x000040, "Member 'ZeuzApiPayload_PayloadReserveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadRestartBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiPayload_PayloadRestartBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadRestartBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadRestartBP");
static_assert(sizeof(ZeuzApiPayload_PayloadRestartBP) == 0x0000D8, "Wrong size on ZeuzApiPayload_PayloadRestartBP");
static_assert(offsetof(ZeuzApiPayload_PayloadRestartBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadRestartBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRestartBP, Callback) == 0x000010, "Member 'ZeuzApiPayload_PayloadRestartBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRestartBP, OnSuccess) == 0x000020, "Member 'ZeuzApiPayload_PayloadRestartBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRestartBP, OnFailure) == 0x000030, "Member 'ZeuzApiPayload_PayloadRestartBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadRestartBP, Ctx) == 0x000040, "Member 'ZeuzApiPayload_PayloadRestartBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadResumeBP
// 0x0150 (0x0150 - 0x0000)
struct ZeuzApiPayload_PayloadResumeBP final 
{
public:
	struct FZeuzPayloadResumeIn                   In;                                                // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result, const class FString& Error)> Callback;                                          // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result)> OnSuccess;                                         // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadResumeBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadResumeBP");
static_assert(sizeof(ZeuzApiPayload_PayloadResumeBP) == 0x000150, "Wrong size on ZeuzApiPayload_PayloadResumeBP");
static_assert(offsetof(ZeuzApiPayload_PayloadResumeBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadResumeBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadResumeBP, Callback) == 0x000088, "Member 'ZeuzApiPayload_PayloadResumeBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadResumeBP, OnSuccess) == 0x000098, "Member 'ZeuzApiPayload_PayloadResumeBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadResumeBP, OnFailure) == 0x0000A8, "Member 'ZeuzApiPayload_PayloadResumeBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadResumeBP, Ctx) == 0x0000B8, "Member 'ZeuzApiPayload_PayloadResumeBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadStateinfoBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiPayload_PayloadStateinfoBP final 
{
public:
	struct FZeuzPayloadStateGetIn                 In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzPayloadStateInfo>& Result, const class FString& Error)> Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzPayloadStateInfo>& Result)> OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadStateinfoBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadStateinfoBP");
static_assert(sizeof(ZeuzApiPayload_PayloadStateinfoBP) == 0x0000F8, "Wrong size on ZeuzApiPayload_PayloadStateinfoBP");
static_assert(offsetof(ZeuzApiPayload_PayloadStateinfoBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadStateinfoBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateinfoBP, Callback) == 0x000030, "Member 'ZeuzApiPayload_PayloadStateinfoBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateinfoBP, OnSuccess) == 0x000040, "Member 'ZeuzApiPayload_PayloadStateinfoBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateinfoBP, OnFailure) == 0x000050, "Member 'ZeuzApiPayload_PayloadStateinfoBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateinfoBP, Ctx) == 0x000060, "Member 'ZeuzApiPayload_PayloadStateinfoBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadStateupdateBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiPayload_PayloadStateupdateBP final 
{
public:
	struct FZeuzPayloadStateGetIn                 In;                                                // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzPayloadStateInfo>& Result, const class FString& Error)> Callback;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzPayloadStateInfo>& Result)> OnSuccess;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0060(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadStateupdateBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadStateupdateBP");
static_assert(sizeof(ZeuzApiPayload_PayloadStateupdateBP) == 0x0000F8, "Wrong size on ZeuzApiPayload_PayloadStateupdateBP");
static_assert(offsetof(ZeuzApiPayload_PayloadStateupdateBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadStateupdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateupdateBP, Callback) == 0x000030, "Member 'ZeuzApiPayload_PayloadStateupdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateupdateBP, OnSuccess) == 0x000040, "Member 'ZeuzApiPayload_PayloadStateupdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateupdateBP, OnFailure) == 0x000050, "Member 'ZeuzApiPayload_PayloadStateupdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadStateupdateBP, Ctx) == 0x000060, "Member 'ZeuzApiPayload_PayloadStateupdateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadUnreserveBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiPayload_PayloadUnreserveBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool Result)>                  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadUnreserveBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadUnreserveBP");
static_assert(sizeof(ZeuzApiPayload_PayloadUnreserveBP) == 0x0000D8, "Wrong size on ZeuzApiPayload_PayloadUnreserveBP");
static_assert(offsetof(ZeuzApiPayload_PayloadUnreserveBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadUnreserveBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUnreserveBP, Callback) == 0x000010, "Member 'ZeuzApiPayload_PayloadUnreserveBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUnreserveBP, OnSuccess) == 0x000020, "Member 'ZeuzApiPayload_PayloadUnreserveBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUnreserveBP, OnFailure) == 0x000030, "Member 'ZeuzApiPayload_PayloadUnreserveBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUnreserveBP, Ctx) == 0x000040, "Member 'ZeuzApiPayload_PayloadUnreserveBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPayload.PayloadUpdateBP
// 0x0118 (0x0118 - 0x0000)
struct ZeuzApiPayload_PayloadUpdateBP final 
{
public:
	struct FZeuzPayloadUpdateIn                   In;                                                // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result, const class FString& Error)> Callback;                                          // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzPayloadInfo& Result)> OnSuccess;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0070(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0080(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_PayloadUpdateBP) == 0x000008, "Wrong alignment on ZeuzApiPayload_PayloadUpdateBP");
static_assert(sizeof(ZeuzApiPayload_PayloadUpdateBP) == 0x000118, "Wrong size on ZeuzApiPayload_PayloadUpdateBP");
static_assert(offsetof(ZeuzApiPayload_PayloadUpdateBP, In) == 0x000000, "Member 'ZeuzApiPayload_PayloadUpdateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUpdateBP, Callback) == 0x000050, "Member 'ZeuzApiPayload_PayloadUpdateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUpdateBP, OnSuccess) == 0x000060, "Member 'ZeuzApiPayload_PayloadUpdateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUpdateBP, OnFailure) == 0x000070, "Member 'ZeuzApiPayload_PayloadUpdateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_PayloadUpdateBP, Ctx) == 0x000080, "Member 'ZeuzApiPayload_PayloadUpdateBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadAllocateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzPayloadInfo>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiPayload_DelegatePayloadAllocateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadAllocateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadAllocateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadAllocateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzPayloadInfo>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadAllocateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadCreateBP__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature) == 0x0000F8, "Wrong size on ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature, Error) == 0x0000E8, "Member 'ZeuzApiPayload_DelegatePayloadCreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadCreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadCreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadCreateBPS__DelegateSignature
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature) == 0x0000E8, "Wrong size on ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadCreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadGetBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature final 
{
public:
	struct FZeuzPayloadGetOut                     Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiPayload_DelegatePayloadGetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadGetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadGetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadGetBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature final 
{
public:
	struct FZeuzPayloadGetOut                     Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadGetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadRemoveBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadRemoveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadRemoveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadRemoveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadReserveBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature final 
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1248[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiPayload_DelegatePayloadReserveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadReserveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadReserveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadReserveBPS__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature final 
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature) == 0x000001, "Wrong alignment on ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature) == 0x000001, "Wrong size on ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadReserveBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadRestartBP__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature) == 0x0000F8, "Wrong size on ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature, Error) == 0x0000E8, "Member 'ZeuzApiPayload_DelegatePayloadRestartBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadRestartBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadRestartBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadRestartBPS__DelegateSignature
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature) == 0x0000E8, "Wrong size on ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadRestartBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadResumeBP__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature) == 0x0000F8, "Wrong size on ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature, Error) == 0x0000E8, "Member 'ZeuzApiPayload_DelegatePayloadResumeBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadResumeBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadResumeBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadResumeBPS__DelegateSignature
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature) == 0x0000E8, "Wrong size on ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadResumeBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadStateinfoBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzPayloadStateInfo>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiPayload_DelegatePayloadStateinfoBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadStateinfoBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadStateinfoBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadStateinfoBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzPayloadStateInfo>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadStateinfoBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadStateupdateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzPayloadStateInfo>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiPayload_DelegatePayloadStateupdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadStateupdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadStateupdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadStateupdateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzPayloadStateInfo>          Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadStateupdateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadUnreserveBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature final 
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1249[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiPayload_DelegatePayloadUnreserveBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadUnreserveBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadUnreserveBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadUnreserveBPS__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature final 
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature) == 0x000001, "Wrong alignment on ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature) == 0x000001, "Wrong size on ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadUnreserveBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadUpdateBP__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00E8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature) == 0x0000F8, "Wrong size on ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature, Error) == 0x0000E8, "Member 'ZeuzApiPayload_DelegatePayloadUpdateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadUpdateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadUpdateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPayload.DelegatePayloadUpdateBPS__DelegateSignature
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature final 
{
public:
	struct FZeuzPayloadInfo                       Result;                                            // 0x0000(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature) == 0x0000E8, "Wrong size on ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPayload_DelegatePayloadUpdateBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemaddBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiProfile_ProfileItemaddBP final 
{
public:
	struct FZeuzProfileItemAddIn                  In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemaddBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemaddBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemaddBP) == 0x0000F0, "Wrong size on ZeuzApiProfile_ProfileItemaddBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemaddBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemaddBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemaddBP, Callback) == 0x000028, "Member 'ZeuzApiProfile_ProfileItemaddBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemaddBP, OnSuccess) == 0x000038, "Member 'ZeuzApiProfile_ProfileItemaddBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemaddBP, OnFailure) == 0x000048, "Member 'ZeuzApiProfile_ProfileItemaddBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemaddBP, Ctx) == 0x000058, "Member 'ZeuzApiProfile_ProfileItemaddBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItembarterBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiProfile_ProfileItembarterBP final 
{
public:
	struct FZeuzProfileItemBarterIn               In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItembarterBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItembarterBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItembarterBP) == 0x000108, "Wrong size on ZeuzApiProfile_ProfileItembarterBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItembarterBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItembarterBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembarterBP, Callback) == 0x000040, "Member 'ZeuzApiProfile_ProfileItembarterBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembarterBP, OnSuccess) == 0x000050, "Member 'ZeuzApiProfile_ProfileItembarterBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembarterBP, OnFailure) == 0x000060, "Member 'ZeuzApiProfile_ProfileItembarterBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembarterBP, Ctx) == 0x000070, "Member 'ZeuzApiProfile_ProfileItembarterBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItembuyBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiProfile_ProfileItembuyBP final 
{
public:
	struct FZeuzProfileItemAddIn                  In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItembuyBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItembuyBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItembuyBP) == 0x0000F0, "Wrong size on ZeuzApiProfile_ProfileItembuyBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItembuyBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItembuyBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembuyBP, Callback) == 0x000028, "Member 'ZeuzApiProfile_ProfileItembuyBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembuyBP, OnSuccess) == 0x000038, "Member 'ZeuzApiProfile_ProfileItembuyBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembuyBP, OnFailure) == 0x000048, "Member 'ZeuzApiProfile_ProfileItembuyBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItembuyBP, Ctx) == 0x000058, "Member 'ZeuzApiProfile_ProfileItembuyBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemconfiggetBP
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiProfile_ProfileItemconfiggetBP final 
{
public:
	TDelegate<void(struct FZeuzProfileItemConfigGetOut& Result, const class FString& Error)> Callback;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzProfileItemConfigGetOut& Result)> OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0030(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemconfiggetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemconfiggetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemconfiggetBP) == 0x0000C8, "Wrong size on ZeuzApiProfile_ProfileItemconfiggetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemconfiggetBP, Callback) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemconfiggetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemconfiggetBP, OnSuccess) == 0x000010, "Member 'ZeuzApiProfile_ProfileItemconfiggetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemconfiggetBP, OnFailure) == 0x000020, "Member 'ZeuzApiProfile_ProfileItemconfiggetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemconfiggetBP, Ctx) == 0x000030, "Member 'ZeuzApiProfile_ProfileItemconfiggetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemcreateBP
// 0x0188 (0x0188 - 0x0000)
struct ZeuzApiProfile_ProfileItemcreateBP final 
{
public:
	struct FZeuzInvItem                           In;                                                // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00F0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemcreateBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemcreateBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemcreateBP) == 0x000188, "Wrong size on ZeuzApiProfile_ProfileItemcreateBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemcreateBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemcreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemcreateBP, Callback) == 0x0000C0, "Member 'ZeuzApiProfile_ProfileItemcreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemcreateBP, OnSuccess) == 0x0000D0, "Member 'ZeuzApiProfile_ProfileItemcreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemcreateBP, OnFailure) == 0x0000E0, "Member 'ZeuzApiProfile_ProfileItemcreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemcreateBP, Ctx) == 0x0000F0, "Member 'ZeuzApiProfile_ProfileItemcreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileItemgetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzInvItem& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzInvItem& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemgetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemgetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemgetBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileItemgetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileItemgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileItemgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileItemgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileItemgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemgetbynameBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiProfile_ProfileItemgetbynameBP final 
{
public:
	struct FZeuzProfileItemUserName               In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzInvItem& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzInvItem& Result)> OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemgetbynameBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemgetbynameBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemgetbynameBP) == 0x0000E8, "Wrong size on ZeuzApiProfile_ProfileItemgetbynameBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetbynameBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemgetbynameBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetbynameBP, Callback) == 0x000020, "Member 'ZeuzApiProfile_ProfileItemgetbynameBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetbynameBP, OnSuccess) == 0x000030, "Member 'ZeuzApiProfile_ProfileItemgetbynameBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetbynameBP, OnFailure) == 0x000040, "Member 'ZeuzApiProfile_ProfileItemgetbynameBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemgetbynameBP, Ctx) == 0x000050, "Member 'ZeuzApiProfile_ProfileItemgetbynameBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemlistBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileItemlistBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzInvItem>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzInvItem>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemlistBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemlistBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemlistBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileItemlistBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemlistBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemlistBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemlistBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileItemlistBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemlistBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileItemlistBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemlistBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileItemlistBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemlistBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileItemlistBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemremBP
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiProfile_ProfileItemremBP final 
{
public:
	struct FZeuzProfileItemRemIn                  In;                                                // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0048(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemremBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemremBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemremBP) == 0x0000E0, "Wrong size on ZeuzApiProfile_ProfileItemremBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemremBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemremBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemremBP, Callback) == 0x000018, "Member 'ZeuzApiProfile_ProfileItemremBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemremBP, OnSuccess) == 0x000028, "Member 'ZeuzApiProfile_ProfileItemremBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemremBP, OnFailure) == 0x000038, "Member 'ZeuzApiProfile_ProfileItemremBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemremBP, Ctx) == 0x000048, "Member 'ZeuzApiProfile_ProfileItemremBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemrembynameBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiProfile_ProfileItemrembynameBP final 
{
public:
	struct FZeuzProfileItemRemByNameIn            In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemrembynameBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemrembynameBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemrembynameBP) == 0x0000F0, "Wrong size on ZeuzApiProfile_ProfileItemrembynameBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemrembynameBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemrembynameBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemrembynameBP, Callback) == 0x000028, "Member 'ZeuzApiProfile_ProfileItemrembynameBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemrembynameBP, OnSuccess) == 0x000038, "Member 'ZeuzApiProfile_ProfileItemrembynameBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemrembynameBP, OnFailure) == 0x000048, "Member 'ZeuzApiProfile_ProfileItemrembynameBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemrembynameBP, Ctx) == 0x000058, "Member 'ZeuzApiProfile_ProfileItemrembynameBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemsetBP
// 0x0188 (0x0188 - 0x0000)
struct ZeuzApiProfile_ProfileItemsetBP final 
{
public:
	struct FZeuzInvItem                           In;                                                // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x00C0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x00D0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00E0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00F0(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemsetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemsetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemsetBP) == 0x000188, "Wrong size on ZeuzApiProfile_ProfileItemsetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemsetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemsetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemsetBP, Callback) == 0x0000C0, "Member 'ZeuzApiProfile_ProfileItemsetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemsetBP, OnSuccess) == 0x0000D0, "Member 'ZeuzApiProfile_ProfileItemsetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemsetBP, OnFailure) == 0x0000E0, "Member 'ZeuzApiProfile_ProfileItemsetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemsetBP, Ctx) == 0x0000F0, "Member 'ZeuzApiProfile_ProfileItemsetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileItemtransferBP
// 0x00F0 (0x00F0 - 0x0000)
struct ZeuzApiProfile_ProfileItemtransferBP final 
{
public:
	struct FZeuzProfileItemTransferIn             In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileItemtransferBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileItemtransferBP");
static_assert(sizeof(ZeuzApiProfile_ProfileItemtransferBP) == 0x0000F0, "Wrong size on ZeuzApiProfile_ProfileItemtransferBP");
static_assert(offsetof(ZeuzApiProfile_ProfileItemtransferBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileItemtransferBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemtransferBP, Callback) == 0x000028, "Member 'ZeuzApiProfile_ProfileItemtransferBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemtransferBP, OnSuccess) == 0x000038, "Member 'ZeuzApiProfile_ProfileItemtransferBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemtransferBP, OnFailure) == 0x000048, "Member 'ZeuzApiProfile_ProfileItemtransferBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileItemtransferBP, Ctx) == 0x000058, "Member 'ZeuzApiProfile_ProfileItemtransferBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileProfiledeleteBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileProfiledeleteBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileProfiledeleteBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileProfiledeleteBP");
static_assert(sizeof(ZeuzApiProfile_ProfileProfiledeleteBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileProfiledeleteBP");
static_assert(offsetof(ZeuzApiProfile_ProfileProfiledeleteBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileProfiledeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfiledeleteBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileProfiledeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfiledeleteBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileProfiledeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfiledeleteBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileProfiledeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfiledeleteBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileProfiledeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileProfilegetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileProfilegetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzUserProfile& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzUserProfile& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileProfilegetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileProfilegetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileProfilegetBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileProfilegetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilegetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileProfilegetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilegetBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileProfilegetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilegetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileProfilegetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilegetBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileProfilegetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilegetBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileProfilegetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileProfilesetBP
// 0x0150 (0x0150 - 0x0000)
struct ZeuzApiProfile_ProfileProfilesetBP final 
{
public:
	struct FZeuzUserProfile                       In;                                                // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0088(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0098(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x00B8(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileProfilesetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileProfilesetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileProfilesetBP) == 0x000150, "Wrong size on ZeuzApiProfile_ProfileProfilesetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileProfilesetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesetBP, Callback) == 0x000088, "Member 'ZeuzApiProfile_ProfileProfilesetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesetBP, OnSuccess) == 0x000098, "Member 'ZeuzApiProfile_ProfileProfilesetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesetBP, OnFailure) == 0x0000A8, "Member 'ZeuzApiProfile_ProfileProfilesetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesetBP, Ctx) == 0x0000B8, "Member 'ZeuzApiProfile_ProfileProfilesetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileProfilesgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileProfilesgetBP final 
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzUserProfile>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzUserProfile>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileProfilesgetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileProfilesgetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileProfilesgetBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileProfilesgetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesgetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileProfilesgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesgetBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileProfilesgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileProfilesgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileProfilesgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileProfilesgetBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileProfilesgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUsercreateBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiProfile_ProfileUsercreateBP final 
{
public:
	struct FZeuzProfileUserCreateIn               In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUsercreateBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUsercreateBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUsercreateBP) == 0x000108, "Wrong size on ZeuzApiProfile_ProfileUsercreateBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUsercreateBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUsercreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsercreateBP, Callback) == 0x000040, "Member 'ZeuzApiProfile_ProfileUsercreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsercreateBP, OnSuccess) == 0x000050, "Member 'ZeuzApiProfile_ProfileUsercreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsercreateBP, OnFailure) == 0x000060, "Member 'ZeuzApiProfile_ProfileUsercreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsercreateBP, Ctx) == 0x000070, "Member 'ZeuzApiProfile_ProfileUsercreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUserdeleteBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileUserdeleteBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUserdeleteBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUserdeleteBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUserdeleteBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileUserdeleteBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUserdeleteBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUserdeleteBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserdeleteBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileUserdeleteBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserdeleteBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileUserdeleteBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserdeleteBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileUserdeleteBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserdeleteBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileUserdeleteBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUsergetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileUsergetBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzUser& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzUser& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUsergetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUsergetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUsergetBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileUsergetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUsergetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileUsergetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileUsergetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileUsergetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileUsergetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUsergetpwhashBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileUsergetpwhashBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUsergetpwhashBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUsergetpwhashBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUsergetpwhashBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileUsergetpwhashBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetpwhashBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUsergetpwhashBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetpwhashBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileUsergetpwhashBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetpwhashBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileUsergetpwhashBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetpwhashBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileUsergetpwhashBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsergetpwhashBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileUsergetpwhashBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUserlookupBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiProfile_ProfileUserlookupBP final 
{
public:
	struct FZeuzProfileUserLookupIn               In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUserlookupBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUserlookupBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUserlookupBP) == 0x0000E8, "Wrong size on ZeuzApiProfile_ProfileUserlookupBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUserlookupBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUserlookupBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserlookupBP, Callback) == 0x000020, "Member 'ZeuzApiProfile_ProfileUserlookupBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserlookupBP, OnSuccess) == 0x000030, "Member 'ZeuzApiProfile_ProfileUserlookupBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserlookupBP, OnFailure) == 0x000040, "Member 'ZeuzApiProfile_ProfileUserlookupBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserlookupBP, Ctx) == 0x000050, "Member 'ZeuzApiProfile_ProfileUserlookupBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUsersetBP
// 0x01A0 (0x01A0 - 0x0000)
struct ZeuzApiProfile_ProfileUsersetBP final 
{
public:
	struct FZeuzUser                              In;                                                // 0x0000(0x00D8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x00D8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x00E8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x00F8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0108(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUsersetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUsersetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUsersetBP) == 0x0001A0, "Wrong size on ZeuzApiProfile_ProfileUsersetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUsersetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetBP, Callback) == 0x0000D8, "Member 'ZeuzApiProfile_ProfileUsersetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetBP, OnSuccess) == 0x0000E8, "Member 'ZeuzApiProfile_ProfileUsersetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetBP, OnFailure) == 0x0000F8, "Member 'ZeuzApiProfile_ProfileUsersetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetBP, Ctx) == 0x000108, "Member 'ZeuzApiProfile_ProfileUsersetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUsersetpwhashBP
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiProfile_ProfileUsersetpwhashBP final 
{
public:
	struct FZeuzProfileUserPwHashIn               In;                                                // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0050(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUsersetpwhashBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUsersetpwhashBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUsersetpwhashBP) == 0x0000E8, "Wrong size on ZeuzApiProfile_ProfileUsersetpwhashBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetpwhashBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUsersetpwhashBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetpwhashBP, Callback) == 0x000020, "Member 'ZeuzApiProfile_ProfileUsersetpwhashBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetpwhashBP, OnSuccess) == 0x000030, "Member 'ZeuzApiProfile_ProfileUsersetpwhashBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetpwhashBP, OnFailure) == 0x000040, "Member 'ZeuzApiProfile_ProfileUsersetpwhashBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersetpwhashBP, Ctx) == 0x000050, "Member 'ZeuzApiProfile_ProfileUsersetpwhashBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUsersgetBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileUsersgetBP final 
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzUser>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<struct FZeuzUser>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUsersgetBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUsersgetBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUsersgetBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileUsersgetBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersgetBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUsersgetBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersgetBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileUsersgetBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersgetBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileUsersgetBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersgetBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileUsersgetBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUsersgetBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileUsersgetBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUserslistBP
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiProfile_ProfileUserslistBP final 
{
public:
	struct FZeuzProfileUsersListIn                In;                                                // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzProfileUsersListOut& Result, const class FString& Error)> Callback;                                          // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzProfileUsersListOut& Result)> OnSuccess;                                         // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0048(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUserslistBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUserslistBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUserslistBP) == 0x0000E0, "Wrong size on ZeuzApiProfile_ProfileUserslistBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslistBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUserslistBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslistBP, Callback) == 0x000018, "Member 'ZeuzApiProfile_ProfileUserslistBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslistBP, OnSuccess) == 0x000028, "Member 'ZeuzApiProfile_ProfileUserslistBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslistBP, OnFailure) == 0x000038, "Member 'ZeuzApiProfile_ProfileUserslistBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslistBP, Ctx) == 0x000048, "Member 'ZeuzApiProfile_ProfileUserslistBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiProfile.ProfileUserslookupBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_ProfileUserslookupBP final 
{
public:
	TArray<struct FZeuzProfileUserLookupIn>       In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class FString>& Result, const class FString& Error)> Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class FString>& Result)> OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_ProfileUserslookupBP) == 0x000008, "Wrong alignment on ZeuzApiProfile_ProfileUserslookupBP");
static_assert(sizeof(ZeuzApiProfile_ProfileUserslookupBP) == 0x0000D8, "Wrong size on ZeuzApiProfile_ProfileUserslookupBP");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslookupBP, In) == 0x000000, "Member 'ZeuzApiProfile_ProfileUserslookupBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslookupBP, Callback) == 0x000010, "Member 'ZeuzApiProfile_ProfileUserslookupBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslookupBP, OnSuccess) == 0x000020, "Member 'ZeuzApiProfile_ProfileUserslookupBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslookupBP, OnFailure) == 0x000030, "Member 'ZeuzApiProfile_ProfileUserslookupBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_ProfileUserslookupBP, Ctx) == 0x000040, "Member 'ZeuzApiProfile_ProfileUserslookupBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemaddBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileItemaddBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemaddBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemaddBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemaddBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemaddBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItembarterBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItembarterBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItembarterBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItembarterBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItembuyBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileItembuyBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItembuyBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItembuyBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItembuyBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItembuyBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemconfiggetBP__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature final 
{
public:
	struct FZeuzProfileItemConfigGetOut           Result;                                            // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature) == 0x000030, "Wrong size on ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature, Error) == 0x000020, "Member 'ZeuzApiProfile_DelegateProfileItemconfiggetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemconfiggetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemconfiggetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemconfiggetBPS__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature final 
{
public:
	struct FZeuzProfileItemConfigGetOut           Result;                                            // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemconfiggetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemcreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileItemcreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemcreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemcreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemcreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemcreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemgetBP__DelegateSignature
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature final 
{
public:
	struct FZeuzInvItem                           Result;                                            // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00C0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature) == 0x0000D0, "Wrong size on ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature, Error) == 0x0000C0, "Member 'ZeuzApiProfile_DelegateProfileItemgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemgetBPS__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature final 
{
public:
	struct FZeuzInvItem                           Result;                                            // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature) == 0x0000C0, "Wrong size on ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemgetbynameBP__DelegateSignature
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature final 
{
public:
	struct FZeuzInvItem                           Result;                                            // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00C0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature) == 0x0000D0, "Wrong size on ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature, Error) == 0x0000C0, "Member 'ZeuzApiProfile_DelegateProfileItemgetbynameBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemgetbynameBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemgetbynameBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemgetbynameBPS__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature final 
{
public:
	struct FZeuzInvItem                           Result;                                            // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature) == 0x0000C0, "Wrong size on ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemgetbynameBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemlistBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzInvItem>                   Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileItemlistBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemlistBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemlistBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemlistBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzInvItem>                   Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemlistBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemremBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemremBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemremBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemremBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemrembynameBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileItemrembynameBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemrembynameBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemrembynameBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemrembynameBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemrembynameBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemsetBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemsetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemsetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemsetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemtransferBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemtransferBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileItemtransferBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileItemtransferBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfiledeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfiledeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfiledeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfiledeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilegetBP__DelegateSignature
// 0x0098 (0x0098 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature final 
{
public:
	struct FZeuzUserProfile                       Result;                                            // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0088(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature) == 0x000098, "Wrong size on ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature, Error) == 0x000088, "Member 'ZeuzApiProfile_DelegateProfileProfilegetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilegetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilegetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilegetBPS__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature final 
{
public:
	struct FZeuzUserProfile                       Result;                                            // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature) == 0x000088, "Wrong size on ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilegetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilesetBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilesetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilesetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilesetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilesgetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzUserProfile>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileProfilesgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilesgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilesgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileProfilesgetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzUserProfile>               Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileProfilesgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsercreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileUsercreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsercreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsercreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsercreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsercreateBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserdeleteBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserdeleteBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserdeleteBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserdeleteBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsergetBP__DelegateSignature
// 0x00E8 (0x00E8 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature final 
{
public:
	struct FZeuzUser                              Result;                                            // 0x0000(0x00D8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x00D8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature) == 0x0000E8, "Wrong size on ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature, Error) == 0x0000D8, "Member 'ZeuzApiProfile_DelegateProfileUsergetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsergetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsergetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsergetBPS__DelegateSignature
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature final 
{
public:
	struct FZeuzUser                              Result;                                            // 0x0000(0x00D8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature) == 0x0000D8, "Wrong size on ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsergetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsergetpwhashBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileUsergetpwhashBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsergetpwhashBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsergetpwhashBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsergetpwhashBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsergetpwhashBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserlookupBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileUserlookupBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserlookupBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserlookupBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserlookupBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserlookupBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersetBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersetpwhashBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersetpwhashBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersetpwhashBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersetpwhashBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersgetBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature final 
{
public:
	TArray<struct FZeuzUser>                      Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileUsersgetBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersgetBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersgetBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUsersgetBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature final 
{
public:
	TArray<struct FZeuzUser>                      Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUsersgetBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserslistBP__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature final 
{
public:
	struct FZeuzProfileUsersListOut               Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature, Error) == 0x000018, "Member 'ZeuzApiProfile_DelegateProfileUserslistBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserslistBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserslistBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserslistBPS__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature final 
{
public:
	struct FZeuzProfileUsersListOut               Result;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserslistBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserslookupBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature final 
{
public:
	TArray<class FString>                         Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiProfile_DelegateProfileUserslookupBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserslookupBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserslookupBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiProfile.DelegateProfileUserslookupBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature final 
{
public:
	TArray<class FString>                         Result;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiProfile_DelegateProfileUserslookupBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiServerbrowser.ServerbrowserDestroyBP
// 0x00D8 (0x00D8 - 0x0000)
struct ZeuzApiServerbrowser_ServerbrowserDestroyBP final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0040(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_ServerbrowserDestroyBP) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_ServerbrowserDestroyBP");
static_assert(sizeof(ZeuzApiServerbrowser_ServerbrowserDestroyBP) == 0x0000D8, "Wrong size on ZeuzApiServerbrowser_ServerbrowserDestroyBP");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserDestroyBP, In) == 0x000000, "Member 'ZeuzApiServerbrowser_ServerbrowserDestroyBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserDestroyBP, Callback) == 0x000010, "Member 'ZeuzApiServerbrowser_ServerbrowserDestroyBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserDestroyBP, OnSuccess) == 0x000020, "Member 'ZeuzApiServerbrowser_ServerbrowserDestroyBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserDestroyBP, OnFailure) == 0x000030, "Member 'ZeuzApiServerbrowser_ServerbrowserDestroyBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserDestroyBP, Ctx) == 0x000040, "Member 'ZeuzApiServerbrowser_ServerbrowserDestroyBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiServerbrowser.ServerbrowserQueryBP
// 0x0100 (0x0100 - 0x0000)
struct ZeuzApiServerbrowser_ServerbrowserQueryBP final 
{
public:
	struct FZeuzServerBrowserQueryIn              In;                                                // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzServerBrowserQueryOut& Result, const class FString& Error)> Callback;                                          // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FZeuzServerBrowserQueryOut& Result)> OnSuccess;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0068(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_ServerbrowserQueryBP) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_ServerbrowserQueryBP");
static_assert(sizeof(ZeuzApiServerbrowser_ServerbrowserQueryBP) == 0x000100, "Wrong size on ZeuzApiServerbrowser_ServerbrowserQueryBP");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserQueryBP, In) == 0x000000, "Member 'ZeuzApiServerbrowser_ServerbrowserQueryBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserQueryBP, Callback) == 0x000038, "Member 'ZeuzApiServerbrowser_ServerbrowserQueryBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserQueryBP, OnSuccess) == 0x000048, "Member 'ZeuzApiServerbrowser_ServerbrowserQueryBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserQueryBP, OnFailure) == 0x000058, "Member 'ZeuzApiServerbrowser_ServerbrowserQueryBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserQueryBP, Ctx) == 0x000068, "Member 'ZeuzApiServerbrowser_ServerbrowserQueryBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiServerbrowser.ServerbrowserRefreshBP
// 0x0110 (0x0110 - 0x0000)
struct ZeuzApiServerbrowser_ServerbrowserRefreshBP final 
{
public:
	struct FZeuzServerBrowserStateIn              In;                                                // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   Callback;                                          // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnSuccess;                                         // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0068(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0078(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_ServerbrowserRefreshBP) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_ServerbrowserRefreshBP");
static_assert(sizeof(ZeuzApiServerbrowser_ServerbrowserRefreshBP) == 0x000110, "Wrong size on ZeuzApiServerbrowser_ServerbrowserRefreshBP");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserRefreshBP, In) == 0x000000, "Member 'ZeuzApiServerbrowser_ServerbrowserRefreshBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserRefreshBP, Callback) == 0x000048, "Member 'ZeuzApiServerbrowser_ServerbrowserRefreshBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserRefreshBP, OnSuccess) == 0x000058, "Member 'ZeuzApiServerbrowser_ServerbrowserRefreshBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserRefreshBP, OnFailure) == 0x000068, "Member 'ZeuzApiServerbrowser_ServerbrowserRefreshBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_ServerbrowserRefreshBP, Ctx) == 0x000078, "Member 'ZeuzApiServerbrowser_ServerbrowserRefreshBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserDestroyBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserDestroyBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserDestroyBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserDestroyBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserQueryBP__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature final 
{
public:
	struct FZeuzServerBrowserQueryOut             Result;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature) == 0x000038, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature, Error) == 0x000028, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserQueryBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserQueryBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserQueryBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserQueryBPS__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature final 
{
public:
	struct FZeuzServerBrowserQueryOut             Result;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserQueryBPS__DelegateSignature::Result' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserRefreshBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserRefreshBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiServerbrowser.DelegateServerbrowserRefreshBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiServerbrowser_DelegateServerbrowserRefreshBPF__DelegateSignature::Error' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiSimpleAuth.AuthCheckSessionBP
// 0x00C8 (0x00C8 - 0x0000)
struct ZeuzApiSimpleAuth_AuthCheckSessionBP final 
{
public:
	TDelegate<void(const struct FZeuzTimestamp& Expires, const class FString& Error)> Callback;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzTimestamp& Expires)> OnSuccess;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0030(0x0098)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_AuthCheckSessionBP) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_AuthCheckSessionBP");
static_assert(sizeof(ZeuzApiSimpleAuth_AuthCheckSessionBP) == 0x0000C8, "Wrong size on ZeuzApiSimpleAuth_AuthCheckSessionBP");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthCheckSessionBP, Callback) == 0x000000, "Member 'ZeuzApiSimpleAuth_AuthCheckSessionBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthCheckSessionBP, OnSuccess) == 0x000010, "Member 'ZeuzApiSimpleAuth_AuthCheckSessionBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthCheckSessionBP, OnFailure) == 0x000020, "Member 'ZeuzApiSimpleAuth_AuthCheckSessionBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthCheckSessionBP, Ctx) == 0x000030, "Member 'ZeuzApiSimpleAuth_AuthCheckSessionBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiSimpleAuth.AuthLoginBP
// 0x00F8 (0x00F8 - 0x0000)
struct ZeuzApiSimpleAuth_AuthLoginBP final 
{
public:
	struct FZeuzSimpleAuthLoginIn                 In;                                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzContext& Context, const class FString& Error)> Callback;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FZeuzContext& Context)> OnSuccess;                                         // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0058(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          SaveDefaultContext;                                // 0x00F0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124A[0x7];                                     // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiSimpleAuth_AuthLoginBP) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_AuthLoginBP");
static_assert(sizeof(ZeuzApiSimpleAuth_AuthLoginBP) == 0x0000F8, "Wrong size on ZeuzApiSimpleAuth_AuthLoginBP");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthLoginBP, In) == 0x000000, "Member 'ZeuzApiSimpleAuth_AuthLoginBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthLoginBP, Callback) == 0x000028, "Member 'ZeuzApiSimpleAuth_AuthLoginBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthLoginBP, OnSuccess) == 0x000038, "Member 'ZeuzApiSimpleAuth_AuthLoginBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthLoginBP, OnFailure) == 0x000048, "Member 'ZeuzApiSimpleAuth_AuthLoginBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthLoginBP, Ctx) == 0x000058, "Member 'ZeuzApiSimpleAuth_AuthLoginBP::Ctx' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_AuthLoginBP, SaveDefaultContext) == 0x0000F0, "Member 'ZeuzApiSimpleAuth_AuthLoginBP::SaveDefaultContext' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiSimpleAuth.CalcPWHash
// 0x0030 (0x0030 - 0x0000)
struct ZeuzApiSimpleAuth_CalcPWHash final 
{
public:
	class FString                                 Login;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_CalcPWHash) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_CalcPWHash");
static_assert(sizeof(ZeuzApiSimpleAuth_CalcPWHash) == 0x000030, "Wrong size on ZeuzApiSimpleAuth_CalcPWHash");
static_assert(offsetof(ZeuzApiSimpleAuth_CalcPWHash, Login) == 0x000000, "Member 'ZeuzApiSimpleAuth_CalcPWHash::Login' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_CalcPWHash, Password) == 0x000010, "Member 'ZeuzApiSimpleAuth_CalcPWHash::Password' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_CalcPWHash, ReturnValue) == 0x000020, "Member 'ZeuzApiSimpleAuth_CalcPWHash::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiSimpleAuth.SimpleProfileUsercreateBP
// 0x0108 (0x0108 - 0x0000)
struct ZeuzApiSimpleAuth_SimpleProfileUsercreateBP final 
{
public:
	struct FZeuzSimpleProfileUserCreateIn         In;                                                // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0060(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZeuzContext                           Ctx;                                               // 0x0070(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_SimpleProfileUsercreateBP");
static_assert(sizeof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP) == 0x000108, "Wrong size on ZeuzApiSimpleAuth_SimpleProfileUsercreateBP");
static_assert(offsetof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP, In) == 0x000000, "Member 'ZeuzApiSimpleAuth_SimpleProfileUsercreateBP::In' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP, Callback) == 0x000040, "Member 'ZeuzApiSimpleAuth_SimpleProfileUsercreateBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP, OnSuccess) == 0x000050, "Member 'ZeuzApiSimpleAuth_SimpleProfileUsercreateBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP, OnFailure) == 0x000060, "Member 'ZeuzApiSimpleAuth_SimpleProfileUsercreateBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_SimpleProfileUsercreateBP, Ctx) == 0x000070, "Member 'ZeuzApiSimpleAuth_SimpleProfileUsercreateBP::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiSimpleAuth.StringHash
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiSimpleAuth_StringHash final 
{
public:
	class FString                                 Val;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_StringHash) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_StringHash");
static_assert(sizeof(ZeuzApiSimpleAuth_StringHash) == 0x000020, "Wrong size on ZeuzApiSimpleAuth_StringHash");
static_assert(offsetof(ZeuzApiSimpleAuth_StringHash, Val) == 0x000000, "Member 'ZeuzApiSimpleAuth_StringHash::Val' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_StringHash, ReturnValue) == 0x000010, "Member 'ZeuzApiSimpleAuth_StringHash::ReturnValue' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateAuthCheckSessionBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateAuthCheckSessionBPS__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature final 
{
public:
	struct FZeuzTimestamp                         Expires;                                           // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature) == 0x000008, "Wrong size on ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature, Expires) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateAuthCheckSessionBPS__DelegateSignature::Expires' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateAuthCheckSessionBP__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature final 
{
public:
	struct FZeuzTimestamp                         Expires;                                           // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature) == 0x000018, "Wrong size on ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature, Expires) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature::Expires' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature, Error) == 0x000008, "Member 'ZeuzApiSimpleAuth_DelegateAuthCheckSessionBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateAuthLoginBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateAuthLoginBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateAuthLoginBPS__DelegateSignature
// 0x0098 (0x0098 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature final 
{
public:
	struct FZeuzContext                           Context;                                           // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature) == 0x000098, "Wrong size on ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature, Context) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateAuthLoginBPS__DelegateSignature::Context' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateAuthLoginBP__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature final 
{
public:
	struct FZeuzContext                           Context;                                           // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0098(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature) == 0x0000A8, "Wrong size on ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature, Context) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature::Context' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature, Error) == 0x000098, "Member 'ZeuzApiSimpleAuth_DelegateAuthLoginBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateSimpleProfileUsercreateBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateSimpleProfileUsercreateBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiSimpleAuth.DelegateSimpleProfileUsercreateBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiSimpleAuth_DelegateSimpleProfileUsercreateBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiContext.GetDefaultContext
// 0x0098 (0x0098 - 0x0000)
struct ZeuzApiContext_GetDefaultContext final 
{
public:
	struct FZeuzContext                           ReturnValue;                                       // 0x0000(0x0098)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiContext_GetDefaultContext) == 0x000008, "Wrong alignment on ZeuzApiContext_GetDefaultContext");
static_assert(sizeof(ZeuzApiContext_GetDefaultContext) == 0x000098, "Wrong size on ZeuzApiContext_GetDefaultContext");
static_assert(offsetof(ZeuzApiContext_GetDefaultContext, ReturnValue) == 0x000000, "Member 'ZeuzApiContext_GetDefaultContext::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiContext.SetDefaultContext
// 0x0098 (0x0098 - 0x0000)
struct ZeuzApiContext_SetDefaultContext final 
{
public:
	struct FZeuzContext                           Ctx;                                               // 0x0000(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiContext_SetDefaultContext) == 0x000008, "Wrong alignment on ZeuzApiContext_SetDefaultContext");
static_assert(sizeof(ZeuzApiContext_SetDefaultContext) == 0x000098, "Wrong size on ZeuzApiContext_SetDefaultContext");
static_assert(offsetof(ZeuzApiContext_SetDefaultContext, Ctx) == 0x000000, "Member 'ZeuzApiContext_SetDefaultContext::Ctx' has a wrong offset!");

// Function Zeuzsdk.ZeuzID.GetType
// 0x0018 (0x0018 - 0x0000)
struct ZeuzID_GetType final 
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EZeuzIDType                                   ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124B[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzID_GetType) == 0x000008, "Wrong alignment on ZeuzID_GetType");
static_assert(sizeof(ZeuzID_GetType) == 0x000018, "Wrong size on ZeuzID_GetType");
static_assert(offsetof(ZeuzID_GetType, ID) == 0x000000, "Member 'ZeuzID_GetType::ID' has a wrong offset!");
static_assert(offsetof(ZeuzID_GetType, ReturnValue) == 0x000010, "Member 'ZeuzID_GetType::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzID.IsType
// 0x0018 (0x0018 - 0x0000)
struct ZeuzID_IsType final 
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EZeuzIDType                                   Typ;                                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124C[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzID_IsType) == 0x000008, "Wrong alignment on ZeuzID_IsType");
static_assert(sizeof(ZeuzID_IsType) == 0x000018, "Wrong size on ZeuzID_IsType");
static_assert(offsetof(ZeuzID_IsType, ID) == 0x000000, "Member 'ZeuzID_IsType::ID' has a wrong offset!");
static_assert(offsetof(ZeuzID_IsType, Typ) == 0x000010, "Member 'ZeuzID_IsType::Typ' has a wrong offset!");
static_assert(offsetof(ZeuzID_IsType, ReturnValue) == 0x000011, "Member 'ZeuzID_IsType::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzID.IsValid
// 0x0018 (0x0018 - 0x0000)
struct ZeuzID_IsValid final 
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124D[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzID_IsValid) == 0x000008, "Wrong alignment on ZeuzID_IsValid");
static_assert(sizeof(ZeuzID_IsValid) == 0x000018, "Wrong size on ZeuzID_IsValid");
static_assert(offsetof(ZeuzID_IsValid, ID) == 0x000000, "Member 'ZeuzID_IsValid::ID' has a wrong offset!");
static_assert(offsetof(ZeuzID_IsValid, ReturnValue) == 0x000010, "Member 'ZeuzID_IsValid::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPing.DoPingBP
// 0x00E0 (0x00E0 - 0x0000)
struct ZeuzApiPing_DoPingBP final 
{
public:
	class FString                                 Target;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeout;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Target, float Duration, const class FString& Resolved, const class FString& Error)> Callback;                                          // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Target, float Duration, const class FString& Resolved)> OnSuccess;                                         // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0034(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_124E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZeuzContext                           Ctx;                                               // 0x0048(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPing_DoPingBP) == 0x000008, "Wrong alignment on ZeuzApiPing_DoPingBP");
static_assert(sizeof(ZeuzApiPing_DoPingBP) == 0x0000E0, "Wrong size on ZeuzApiPing_DoPingBP");
static_assert(offsetof(ZeuzApiPing_DoPingBP, Target) == 0x000000, "Member 'ZeuzApiPing_DoPingBP::Target' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DoPingBP, Timeout) == 0x000010, "Member 'ZeuzApiPing_DoPingBP::Timeout' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DoPingBP, Callback) == 0x000014, "Member 'ZeuzApiPing_DoPingBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DoPingBP, OnSuccess) == 0x000024, "Member 'ZeuzApiPing_DoPingBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DoPingBP, OnFailure) == 0x000034, "Member 'ZeuzApiPing_DoPingBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DoPingBP, Ctx) == 0x000048, "Member 'ZeuzApiPing_DoPingBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPing.DelegateDoPingBP__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct ZeuzApiPing_DelegateDoPingBP__DelegateSignature final 
{
public:
	class FString                                 Target;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Resolved;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPing_DelegateDoPingBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPing_DelegateDoPingBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPing_DelegateDoPingBP__DelegateSignature) == 0x000038, "Wrong size on ZeuzApiPing_DelegateDoPingBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBP__DelegateSignature, Target) == 0x000000, "Member 'ZeuzApiPing_DelegateDoPingBP__DelegateSignature::Target' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBP__DelegateSignature, Duration) == 0x000010, "Member 'ZeuzApiPing_DelegateDoPingBP__DelegateSignature::Duration' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBP__DelegateSignature, Resolved) == 0x000018, "Member 'ZeuzApiPing_DelegateDoPingBP__DelegateSignature::Resolved' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBP__DelegateSignature, Error) == 0x000028, "Member 'ZeuzApiPing_DelegateDoPingBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPing.DelegateDoPingBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPing_DelegateDoPingBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPing_DelegateDoPingBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPing_DelegateDoPingBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPing_DelegateDoPingBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPing_DelegateDoPingBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPing_DelegateDoPingBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPing.DelegateDoPingBPS__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiPing_DelegateDoPingBPS__DelegateSignature final 
{
public:
	class FString                                 Target;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1250[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Resolved;                                          // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPing_DelegateDoPingBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPing_DelegateDoPingBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPing_DelegateDoPingBPS__DelegateSignature) == 0x000028, "Wrong size on ZeuzApiPing_DelegateDoPingBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBPS__DelegateSignature, Target) == 0x000000, "Member 'ZeuzApiPing_DelegateDoPingBPS__DelegateSignature::Target' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBPS__DelegateSignature, Duration) == 0x000010, "Member 'ZeuzApiPing_DelegateDoPingBPS__DelegateSignature::Duration' has a wrong offset!");
static_assert(offsetof(ZeuzApiPing_DelegateDoPingBPS__DelegateSignature, Resolved) == 0x000018, "Member 'ZeuzApiPing_DelegateDoPingBPS__DelegateSignature::Resolved' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiPubIP.GetPublicIPBP
// 0x00D0 (0x00D0 - 0x0000)
struct ZeuzApiPubIP_GetPublicIPBP final 
{
public:
	bool                                          V6;                                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1251[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Result, const class FString& Error)> Callback;                                          // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Result)>  OnSuccess;                                         // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& Error)>   OnFailure;                                         // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1252[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZeuzContext                           Ctx;                                               // 0x0038(0x0098)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPubIP_GetPublicIPBP) == 0x000008, "Wrong alignment on ZeuzApiPubIP_GetPublicIPBP");
static_assert(sizeof(ZeuzApiPubIP_GetPublicIPBP) == 0x0000D0, "Wrong size on ZeuzApiPubIP_GetPublicIPBP");
static_assert(offsetof(ZeuzApiPubIP_GetPublicIPBP, V6) == 0x000000, "Member 'ZeuzApiPubIP_GetPublicIPBP::V6' has a wrong offset!");
static_assert(offsetof(ZeuzApiPubIP_GetPublicIPBP, Callback) == 0x000004, "Member 'ZeuzApiPubIP_GetPublicIPBP::Callback' has a wrong offset!");
static_assert(offsetof(ZeuzApiPubIP_GetPublicIPBP, OnSuccess) == 0x000014, "Member 'ZeuzApiPubIP_GetPublicIPBP::OnSuccess' has a wrong offset!");
static_assert(offsetof(ZeuzApiPubIP_GetPublicIPBP, OnFailure) == 0x000024, "Member 'ZeuzApiPubIP_GetPublicIPBP::OnFailure' has a wrong offset!");
static_assert(offsetof(ZeuzApiPubIP_GetPublicIPBP, Ctx) == 0x000038, "Member 'ZeuzApiPubIP_GetPublicIPBP::Ctx' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPubIP.DelegateGetPublicIPBP__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature");
static_assert(sizeof(ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature) == 0x000020, "Wrong size on ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature");
static_assert(offsetof(ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature, Error) == 0x000010, "Member 'ZeuzApiPubIP_DelegateGetPublicIPBP__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPubIP.DelegateGetPublicIPBPF__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature final 
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature");
static_assert(sizeof(ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature");
static_assert(offsetof(ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature, Error) == 0x000000, "Member 'ZeuzApiPubIP_DelegateGetPublicIPBPF__DelegateSignature::Error' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiPubIP.DelegateGetPublicIPBPS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature final 
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature");
static_assert(sizeof(ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature");
static_assert(offsetof(ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature, Result) == 0x000000, "Member 'ZeuzApiPubIP_DelegateGetPublicIPBPS__DelegateSignature::Result' has a wrong offset!");

// Function Zeuzsdk.ZeuzTagsUtil.StringToTags
// 0x0020 (0x0020 - 0x0000)
struct ZeuzTagsUtil_StringToTags final 
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzTags                              Out;                                               // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzTagsUtil_StringToTags) == 0x000008, "Wrong alignment on ZeuzTagsUtil_StringToTags");
static_assert(sizeof(ZeuzTagsUtil_StringToTags) == 0x000020, "Wrong size on ZeuzTagsUtil_StringToTags");
static_assert(offsetof(ZeuzTagsUtil_StringToTags, In) == 0x000000, "Member 'ZeuzTagsUtil_StringToTags::In' has a wrong offset!");
static_assert(offsetof(ZeuzTagsUtil_StringToTags, Out) == 0x000010, "Member 'ZeuzTagsUtil_StringToTags::Out' has a wrong offset!");

// Function Zeuzsdk.ZeuzTagsUtil.TagsToString
// 0x0020 (0x0020 - 0x0000)
struct ZeuzTagsUtil_TagsToString final 
{
public:
	struct FZeuzTags                              In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzTagsUtil_TagsToString) == 0x000008, "Wrong alignment on ZeuzTagsUtil_TagsToString");
static_assert(sizeof(ZeuzTagsUtil_TagsToString) == 0x000020, "Wrong size on ZeuzTagsUtil_TagsToString");
static_assert(offsetof(ZeuzTagsUtil_TagsToString, In) == 0x000000, "Member 'ZeuzTagsUtil_TagsToString::In' has a wrong offset!");
static_assert(offsetof(ZeuzTagsUtil_TagsToString, ReturnValue) == 0x000010, "Member 'ZeuzTagsUtil_TagsToString::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiTime.AdjustOffset
// 0x0008 (0x0008 - 0x0000)
struct ZeuzApiTime_AdjustOffset final 
{
public:
	struct FZeuzTimestamp                         Ofs;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiTime_AdjustOffset) == 0x000008, "Wrong alignment on ZeuzApiTime_AdjustOffset");
static_assert(sizeof(ZeuzApiTime_AdjustOffset) == 0x000008, "Wrong size on ZeuzApiTime_AdjustOffset");
static_assert(offsetof(ZeuzApiTime_AdjustOffset, Ofs) == 0x000000, "Member 'ZeuzApiTime_AdjustOffset::Ofs' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiTime.FromDateTime
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiTime_FromDateTime final 
{
public:
	struct FDateTime                              T;                                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Adjusted;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1253[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZeuzTimestamp                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiTime_FromDateTime) == 0x000008, "Wrong alignment on ZeuzApiTime_FromDateTime");
static_assert(sizeof(ZeuzApiTime_FromDateTime) == 0x000018, "Wrong size on ZeuzApiTime_FromDateTime");
static_assert(offsetof(ZeuzApiTime_FromDateTime, T) == 0x000000, "Member 'ZeuzApiTime_FromDateTime::T' has a wrong offset!");
static_assert(offsetof(ZeuzApiTime_FromDateTime, Adjusted) == 0x000008, "Member 'ZeuzApiTime_FromDateTime::Adjusted' has a wrong offset!");
static_assert(offsetof(ZeuzApiTime_FromDateTime, ReturnValue) == 0x000010, "Member 'ZeuzApiTime_FromDateTime::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiTime.GetOffset
// 0x0008 (0x0008 - 0x0000)
struct ZeuzApiTime_GetOffset final 
{
public:
	struct FZeuzTimestamp                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiTime_GetOffset) == 0x000008, "Wrong alignment on ZeuzApiTime_GetOffset");
static_assert(sizeof(ZeuzApiTime_GetOffset) == 0x000008, "Wrong size on ZeuzApiTime_GetOffset");
static_assert(offsetof(ZeuzApiTime_GetOffset, ReturnValue) == 0x000000, "Member 'ZeuzApiTime_GetOffset::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiTime.IsZero
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiTime_IsZero final 
{
public:
	struct FZeuzTimestamp                         T;                                                 // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1254[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiTime_IsZero) == 0x000008, "Wrong alignment on ZeuzApiTime_IsZero");
static_assert(sizeof(ZeuzApiTime_IsZero) == 0x000010, "Wrong size on ZeuzApiTime_IsZero");
static_assert(offsetof(ZeuzApiTime_IsZero, T) == 0x000000, "Member 'ZeuzApiTime_IsZero::T' has a wrong offset!");
static_assert(offsetof(ZeuzApiTime_IsZero, ReturnValue) == 0x000008, "Member 'ZeuzApiTime_IsZero::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiTime.Now
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiTime_Now final 
{
public:
	bool                                          Adjusted;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1255[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZeuzTimestamp                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiTime_Now) == 0x000008, "Wrong alignment on ZeuzApiTime_Now");
static_assert(sizeof(ZeuzApiTime_Now) == 0x000010, "Wrong size on ZeuzApiTime_Now");
static_assert(offsetof(ZeuzApiTime_Now, Adjusted) == 0x000000, "Member 'ZeuzApiTime_Now::Adjusted' has a wrong offset!");
static_assert(offsetof(ZeuzApiTime_Now, ReturnValue) == 0x000008, "Member 'ZeuzApiTime_Now::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiTime.ToDateTime
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiTime_ToDateTime final 
{
public:
	struct FZeuzTimestamp                         T;                                                 // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiTime_ToDateTime) == 0x000008, "Wrong alignment on ZeuzApiTime_ToDateTime");
static_assert(sizeof(ZeuzApiTime_ToDateTime) == 0x000010, "Wrong size on ZeuzApiTime_ToDateTime");
static_assert(offsetof(ZeuzApiTime_ToDateTime, T) == 0x000000, "Member 'ZeuzApiTime_ToDateTime::T' has a wrong offset!");
static_assert(offsetof(ZeuzApiTime_ToDateTime, ReturnValue) == 0x000008, "Member 'ZeuzApiTime_ToDateTime::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.GetSaveGamePath
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_GetSaveGamePath final 
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiUtil_GetSaveGamePath) == 0x000008, "Wrong alignment on ZeuzApiUtil_GetSaveGamePath");
static_assert(sizeof(ZeuzApiUtil_GetSaveGamePath) == 0x000020, "Wrong size on ZeuzApiUtil_GetSaveGamePath");
static_assert(offsetof(ZeuzApiUtil_GetSaveGamePath, Param_Name) == 0x000000, "Member 'ZeuzApiUtil_GetSaveGamePath::Param_Name' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_GetSaveGamePath, ReturnValue) == 0x000010, "Member 'ZeuzApiUtil_GetSaveGamePath::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.JsonFromVariant
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiUtil_JsonFromVariant final 
{
public:
	struct FZeuzVariant                           Variant;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Json;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1256[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_JsonFromVariant) == 0x000008, "Wrong alignment on ZeuzApiUtil_JsonFromVariant");
static_assert(sizeof(ZeuzApiUtil_JsonFromVariant) == 0x000028, "Wrong size on ZeuzApiUtil_JsonFromVariant");
static_assert(offsetof(ZeuzApiUtil_JsonFromVariant, Variant) == 0x000000, "Member 'ZeuzApiUtil_JsonFromVariant::Variant' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_JsonFromVariant, Json) == 0x000010, "Member 'ZeuzApiUtil_JsonFromVariant::Json' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_JsonFromVariant, ReturnValue) == 0x000020, "Member 'ZeuzApiUtil_JsonFromVariant::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.JsonToVariant
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiUtil_JsonToVariant final 
{
public:
	class FString                                 Json;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzVariant                           Variant;                                           // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1257[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_JsonToVariant) == 0x000008, "Wrong alignment on ZeuzApiUtil_JsonToVariant");
static_assert(sizeof(ZeuzApiUtil_JsonToVariant) == 0x000028, "Wrong size on ZeuzApiUtil_JsonToVariant");
static_assert(offsetof(ZeuzApiUtil_JsonToVariant, Json) == 0x000000, "Member 'ZeuzApiUtil_JsonToVariant::Json' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_JsonToVariant, Variant) == 0x000010, "Member 'ZeuzApiUtil_JsonToVariant::Variant' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_JsonToVariant, ReturnValue) == 0x000020, "Member 'ZeuzApiUtil_JsonToVariant::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.SaveGameFromByteArray
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiUtil_SaveGameFromByteArray final 
{
public:
	struct FZeuzByteArray                         Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1258[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_SaveGameFromByteArray) == 0x000008, "Wrong alignment on ZeuzApiUtil_SaveGameFromByteArray");
static_assert(sizeof(ZeuzApiUtil_SaveGameFromByteArray) == 0x000028, "Wrong size on ZeuzApiUtil_SaveGameFromByteArray");
static_assert(offsetof(ZeuzApiUtil_SaveGameFromByteArray, Value) == 0x000000, "Member 'ZeuzApiUtil_SaveGameFromByteArray::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_SaveGameFromByteArray, Filename) == 0x000010, "Member 'ZeuzApiUtil_SaveGameFromByteArray::Filename' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_SaveGameFromByteArray, ReturnValue) == 0x000020, "Member 'ZeuzApiUtil_SaveGameFromByteArray::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.SaveGameToByteArray
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiUtil_SaveGameToByteArray final 
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzByteArray                         Value;                                             // 0x0010(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1259[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_SaveGameToByteArray) == 0x000008, "Wrong alignment on ZeuzApiUtil_SaveGameToByteArray");
static_assert(sizeof(ZeuzApiUtil_SaveGameToByteArray) == 0x000028, "Wrong size on ZeuzApiUtil_SaveGameToByteArray");
static_assert(offsetof(ZeuzApiUtil_SaveGameToByteArray, Filename) == 0x000000, "Member 'ZeuzApiUtil_SaveGameToByteArray::Filename' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_SaveGameToByteArray, Value) == 0x000010, "Member 'ZeuzApiUtil_SaveGameToByteArray::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_SaveGameToByteArray, ReturnValue) == 0x000020, "Member 'ZeuzApiUtil_SaveGameToByteArray::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StringIsEmpty
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiUtil_StringIsEmpty final 
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125A[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StringIsEmpty) == 0x000008, "Wrong alignment on ZeuzApiUtil_StringIsEmpty");
static_assert(sizeof(ZeuzApiUtil_StringIsEmpty) == 0x000018, "Wrong size on ZeuzApiUtil_StringIsEmpty");
static_assert(offsetof(ZeuzApiUtil_StringIsEmpty, String) == 0x000000, "Member 'ZeuzApiUtil_StringIsEmpty::String' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StringIsEmpty, ReturnValue) == 0x000010, "Member 'ZeuzApiUtil_StringIsEmpty::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StringNotEmpty
// 0x0018 (0x0018 - 0x0000)
struct ZeuzApiUtil_StringNotEmpty final 
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125B[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StringNotEmpty) == 0x000008, "Wrong alignment on ZeuzApiUtil_StringNotEmpty");
static_assert(sizeof(ZeuzApiUtil_StringNotEmpty) == 0x000018, "Wrong size on ZeuzApiUtil_StringNotEmpty");
static_assert(offsetof(ZeuzApiUtil_StringNotEmpty, String) == 0x000000, "Member 'ZeuzApiUtil_StringNotEmpty::String' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StringNotEmpty, ReturnValue) == 0x000010, "Member 'ZeuzApiUtil_StringNotEmpty::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StructFromByteArrayBin
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_StructFromByteArrayBin final 
{
public:
	class UProperty*                              AnyStruct;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzByteArray                         Value;                                             // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StructFromByteArrayBin) == 0x000008, "Wrong alignment on ZeuzApiUtil_StructFromByteArrayBin");
static_assert(sizeof(ZeuzApiUtil_StructFromByteArrayBin) == 0x000020, "Wrong size on ZeuzApiUtil_StructFromByteArrayBin");
static_assert(offsetof(ZeuzApiUtil_StructFromByteArrayBin, AnyStruct) == 0x000000, "Member 'ZeuzApiUtil_StructFromByteArrayBin::AnyStruct' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructFromByteArrayBin, Value) == 0x000008, "Member 'ZeuzApiUtil_StructFromByteArrayBin::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructFromByteArrayBin, ReturnValue) == 0x000018, "Member 'ZeuzApiUtil_StructFromByteArrayBin::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StructFromByteArrayJSON
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_StructFromByteArrayJSON final 
{
public:
	class UProperty*                              AnyStruct;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzByteArray                         Value;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125D[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StructFromByteArrayJSON) == 0x000008, "Wrong alignment on ZeuzApiUtil_StructFromByteArrayJSON");
static_assert(sizeof(ZeuzApiUtil_StructFromByteArrayJSON) == 0x000020, "Wrong size on ZeuzApiUtil_StructFromByteArrayJSON");
static_assert(offsetof(ZeuzApiUtil_StructFromByteArrayJSON, AnyStruct) == 0x000000, "Member 'ZeuzApiUtil_StructFromByteArrayJSON::AnyStruct' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructFromByteArrayJSON, Value) == 0x000008, "Member 'ZeuzApiUtil_StructFromByteArrayJSON::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructFromByteArrayJSON, ReturnValue) == 0x000018, "Member 'ZeuzApiUtil_StructFromByteArrayJSON::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StructFromVariant
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_StructFromVariant final 
{
public:
	class UProperty*                              AnyStruct;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzVariant                           Value;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125E[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StructFromVariant) == 0x000008, "Wrong alignment on ZeuzApiUtil_StructFromVariant");
static_assert(sizeof(ZeuzApiUtil_StructFromVariant) == 0x000020, "Wrong size on ZeuzApiUtil_StructFromVariant");
static_assert(offsetof(ZeuzApiUtil_StructFromVariant, AnyStruct) == 0x000000, "Member 'ZeuzApiUtil_StructFromVariant::AnyStruct' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructFromVariant, Value) == 0x000008, "Member 'ZeuzApiUtil_StructFromVariant::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructFromVariant, ReturnValue) == 0x000018, "Member 'ZeuzApiUtil_StructFromVariant::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StructToByteArrayBin
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_StructToByteArrayBin final 
{
public:
	class UProperty*                              AnyStruct;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzByteArray                         Value;                                             // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125F[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StructToByteArrayBin) == 0x000008, "Wrong alignment on ZeuzApiUtil_StructToByteArrayBin");
static_assert(sizeof(ZeuzApiUtil_StructToByteArrayBin) == 0x000020, "Wrong size on ZeuzApiUtil_StructToByteArrayBin");
static_assert(offsetof(ZeuzApiUtil_StructToByteArrayBin, AnyStruct) == 0x000000, "Member 'ZeuzApiUtil_StructToByteArrayBin::AnyStruct' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructToByteArrayBin, Value) == 0x000008, "Member 'ZeuzApiUtil_StructToByteArrayBin::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructToByteArrayBin, ReturnValue) == 0x000018, "Member 'ZeuzApiUtil_StructToByteArrayBin::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StructToByteArrayJSON
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_StructToByteArrayJSON final 
{
public:
	class UProperty*                              AnyStruct;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzByteArray                         Value;                                             // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1260[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StructToByteArrayJSON) == 0x000008, "Wrong alignment on ZeuzApiUtil_StructToByteArrayJSON");
static_assert(sizeof(ZeuzApiUtil_StructToByteArrayJSON) == 0x000020, "Wrong size on ZeuzApiUtil_StructToByteArrayJSON");
static_assert(offsetof(ZeuzApiUtil_StructToByteArrayJSON, AnyStruct) == 0x000000, "Member 'ZeuzApiUtil_StructToByteArrayJSON::AnyStruct' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructToByteArrayJSON, Value) == 0x000008, "Member 'ZeuzApiUtil_StructToByteArrayJSON::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructToByteArrayJSON, ReturnValue) == 0x000018, "Member 'ZeuzApiUtil_StructToByteArrayJSON::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.StructToVariant
// 0x0020 (0x0020 - 0x0000)
struct ZeuzApiUtil_StructToVariant final 
{
public:
	class UProperty*                              AnyStruct;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FZeuzVariant                           Value;                                             // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1261[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ZeuzApiUtil_StructToVariant) == 0x000008, "Wrong alignment on ZeuzApiUtil_StructToVariant");
static_assert(sizeof(ZeuzApiUtil_StructToVariant) == 0x000020, "Wrong size on ZeuzApiUtil_StructToVariant");
static_assert(offsetof(ZeuzApiUtil_StructToVariant, AnyStruct) == 0x000000, "Member 'ZeuzApiUtil_StructToVariant::AnyStruct' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructToVariant, Value) == 0x000008, "Member 'ZeuzApiUtil_StructToVariant::Value' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_StructToVariant, ReturnValue) == 0x000018, "Member 'ZeuzApiUtil_StructToVariant::ReturnValue' has a wrong offset!");

// Function Zeuzsdk.ZeuzApiUtil.TimerWithString
// 0x0028 (0x0028 - 0x0000)
struct ZeuzApiUtil_TimerWithString final 
{
public:
	TDelegate<void(const class FString& Value)>   Event;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1262[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiUtil_TimerWithString) == 0x000008, "Wrong alignment on ZeuzApiUtil_TimerWithString");
static_assert(sizeof(ZeuzApiUtil_TimerWithString) == 0x000028, "Wrong size on ZeuzApiUtil_TimerWithString");
static_assert(offsetof(ZeuzApiUtil_TimerWithString, Event) == 0x000000, "Member 'ZeuzApiUtil_TimerWithString::Event' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_TimerWithString, Time) == 0x000010, "Member 'ZeuzApiUtil_TimerWithString::Time' has a wrong offset!");
static_assert(offsetof(ZeuzApiUtil_TimerWithString, Value) == 0x000018, "Member 'ZeuzApiUtil_TimerWithString::Value' has a wrong offset!");

// DelegateFunction Zeuzsdk.ZeuzApiUtil.TimerDynamicDelegateS__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature final 
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature) == 0x000008, "Wrong alignment on ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature");
static_assert(sizeof(ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature) == 0x000010, "Wrong size on ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature");
static_assert(offsetof(ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature, Value) == 0x000000, "Member 'ZeuzApiUtil_TimerDynamicDelegateS__DelegateSignature::Value' has a wrong offset!");

}

