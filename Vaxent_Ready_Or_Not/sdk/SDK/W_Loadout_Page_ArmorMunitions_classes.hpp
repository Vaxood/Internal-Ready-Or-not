#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Page_ArmorMunitions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Page_ArmorMunitions.W_Loadout_Page_ArmorMunitions_C
// 0x0118 (0x0438 - 0x0320)
class UW_Loadout_Page_ArmorMunitions_C final  : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Loadout_Munitions_C*                 Ammo;                                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TabCarousel_C*                       Carousel;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ButtonBar_C*                         Coverage;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_Munitions_C*                 Deployables;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ButtonBar_C*                         Material;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       MunitionsSwitcher;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Vest;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       WidgetSwitcher;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    EquippedVestSlot;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, EArmourCoverage>          CoverageMap;                                       // 0x0370(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class UArmourMaterial*>   MaterialMap;                                       // 0x03C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWidget*                                LastHovered;                                       // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munitions_C*                 LastActiveMunitionList;                            // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    LastAmmoHover;                                     // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    LastDeployableHover;                               // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_Munitions_C*                 CurrentActiveMunitionList;                         // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Loadout_Page_ArmorMunitions(int32 EntryPoint, class FName K2Node_Event_OptionNameID, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2, const class FString& K2Node_CustomEvent_ButtonID_3, class UW_Button_C* K2Node_CustomEvent_TriggeringButton_3, const class FString& K2Node_CustomEvent_ButtonID_2, class UW_Button_C* K2Node_CustomEvent_TriggeringButton_2, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, EArmourCoverage CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UW_Loadout_C* K2Node_Event_LoadoutWidget, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot, class UW_LoadoutSlot_v2_C* K2Node_CustomEvent_TriggeringSlot_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue, const class FString& K2Node_CustomEvent_ButtonID_1, class UW_Button_C* K2Node_CustomEvent_TriggeringButton_1, const class FString& K2Node_CustomEvent_ButtonID, class UW_Button_C* K2Node_CustomEvent_TriggeringButton, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3, class UArmourMaterial* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, class UW_Loadout_V2_C* CallFunc_GetLoadoutWidget_AsW_Loadout_V2_4, class UArmourMaterial* CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, class FName K2Node_ComponentBoundEvent_TabId, class FName K2Node_Event_PageName, class UW_Loadout_Munitions_C* K2Node_ComponentBoundEvent_TriggeringList_1, class UW_LoadoutSlot_v2_C* K2Node_ComponentBoundEvent_TriggeringSlot_1, const TMap<EItemCategory, class UClass*>& K2Node_Event_ItemCategory, class UW_LoadoutSlot_C* K2Node_Event_CurrentSlot, class UW_Loadout_Munitions_C* K2Node_ComponentBoundEvent_TriggeringList, class UW_LoadoutSlot_v2_C* K2Node_ComponentBoundEvent_TriggeringSlot, const struct FSavedLoadout& K2Node_Event_ActiveLoadout, bool K2Node_Event_IsGamepad, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, float K2Node_Event_Delay, class UWidget* CallFunc_GetFocusTarget_Focus);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Construct();
	void OnInitialized();
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void SetInputMode(bool IsGamepad);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void BndEvt__W_Loadout_Page_ArmorMunitions_Deployables_K2Node_ComponentBoundEvent_2_OnMunitionHovered__DelegateSignature(class UW_Loadout_Munitions_C* TriggeringList, class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void UpdateCurrentSlot(class UW_LoadoutSlot_C* CurrentSlot);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void BndEvt__W_Loadout_Page_ArmorMunitions_Ammo_K2Node_ComponentBoundEvent_1_OnMunitionHovered__DelegateSignature(class UW_Loadout_Munitions_C* TriggeringList, class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void ChangePage(class FName PageName);
	void BndEvt__W_Loadout_Page_ArmorMunitions_Carousel_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature(class FName TabId);
	void MaterialHovered(const class FString& ButtonID, class UW_Button_C* TriggeringButton);
	void MaterialClicked(const class FString& ButtonID, class UW_Button_C* TriggeringButton);
	void SetLoadoutWidget(class UW_Loadout_C* LoadoutWidget);
	void CoverageOptionHovered(const class FString& ButtonID, class UW_Button_C* TriggeringButton);
	void CoverageOptionClicked(const class FString& ButtonID, class UW_Button_C* TriggeringButton);
	void ItemUnhovered();
	void OnArmorHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void OnArmorClicked(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void BP_OnActivated();
	void PopulateArmor(class UW_LoadoutSlot_v2_C* NewWidget, class ABaseItem* Item, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TSubclassOf<class ABaseItem> CallFunc_GetActiveBodyArmor_ReturnValue, class UW_LoadoutSlot_v2_C* CallFunc_Create_ReturnValue, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> K2Node_CreateDelegate_OutputDelegate_2, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue_1, class UClass* CallFunc_GetClassFromObject_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, TArray<class ABaseItem*>& CallFunc_GetBodyArmors_ReturnValue, class ABaseItem* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void PopulateCoverage(const TMap<class FString, class FText>& ButtonOptions, EArmourCoverage CoverageValue, const class FString& ButtonID, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, int32 Temp_int_Variable, const class FString& CallFunc_SelectString_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, int32 Temp_int_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, uint8 CallFunc_Conv_IntToByte_ReturnValue_1, uint8 CallFunc_GetEnumeratorValueFromIndex_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, class FText CallFunc_GetArmorCoverageText_CoverageText, int32 CallFunc_MakeLiteralInt_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Less_IntInt_ReturnValue, TDelegate<void(const class FString& ButtonID, class UW_Button_C* TriggeringButton)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(const class FString& ButtonID, class UW_Button_C* TriggeringButton)> K2Node_CreateDelegate_OutputDelegate_2);
	void PopulateMaterials(const TMap<class FString, class FText>& ButtonOptions, const class FString& ButtonID, class UArmourMaterial* ArmorMaterial, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(const class FString& ButtonID, class UW_Button_C* TriggeringButton)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void(const class FString& ButtonID, class UW_Button_C* TriggeringButton)> K2Node_CreateDelegate_OutputDelegate_2, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, TArray<class UArmourMaterial*>& CallFunc_GetArmorMaterials_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UArmourMaterial* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void UpdateActiveCoverage(EArmourCoverage CurrentCoverage, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, TArray<class FString>& CallFunc_Map_Keys_Keys, const class FString& CallFunc_Array_Get_Item, TArray<EArmourCoverage>& CallFunc_Map_Values_Values, EArmourCoverage CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, EArmourCoverage CallFunc_GetArmorCoverage_ReturnValue);
	void UpdateActiveMaterial(class UArmourMaterial* CurrentMaterial, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class FString>& CallFunc_Map_Keys_Keys, const class FString& CallFunc_Array_Get_Item, TArray<class UArmourMaterial*>& CallFunc_Map_Values_Values, class AReadyOrNotGameState* CallFunc_GetReadyOrNotGameState_ReturnValue, class UArmourMaterial* CallFunc_Array_Get_Item_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UArmourMaterial* CallFunc_GetActiveArmorMaterial_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void BackPage(bool* Handled);

	class UWidget* BP_GetDesiredFocusTarget(class UWidget* CallFunc_GetFocusTarget_Focus) const;
	void GetFocusTarget(class UWidget** Focus, bool CallFunc_IsValid_ReturnValue, class UWidget* CallFunc_GetChildAt_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, class UWidget* CallFunc_GetFocusTarget_Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Page_ArmorMunitions_C">();
	}
	static class UW_Loadout_Page_ArmorMunitions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Page_ArmorMunitions_C>();
	}
};
static_assert(alignof(UW_Loadout_Page_ArmorMunitions_C) == 0x000008, "Wrong alignment on UW_Loadout_Page_ArmorMunitions_C");
static_assert(sizeof(UW_Loadout_Page_ArmorMunitions_C) == 0x000438, "Wrong size on UW_Loadout_Page_ArmorMunitions_C");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, UberGraphFrame) == 0x000320, "Member 'UW_Loadout_Page_ArmorMunitions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, Ammo) == 0x000328, "Member 'UW_Loadout_Page_ArmorMunitions_C::Ammo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, Carousel) == 0x000330, "Member 'UW_Loadout_Page_ArmorMunitions_C::Carousel' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, Coverage) == 0x000338, "Member 'UW_Loadout_Page_ArmorMunitions_C::Coverage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, Deployables) == 0x000340, "Member 'UW_Loadout_Page_ArmorMunitions_C::Deployables' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, Material) == 0x000348, "Member 'UW_Loadout_Page_ArmorMunitions_C::Material' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, MunitionsSwitcher) == 0x000350, "Member 'UW_Loadout_Page_ArmorMunitions_C::MunitionsSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, VB_Vest) == 0x000358, "Member 'UW_Loadout_Page_ArmorMunitions_C::VB_Vest' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, WidgetSwitcher) == 0x000360, "Member 'UW_Loadout_Page_ArmorMunitions_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, EquippedVestSlot) == 0x000368, "Member 'UW_Loadout_Page_ArmorMunitions_C::EquippedVestSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, CoverageMap) == 0x000370, "Member 'UW_Loadout_Page_ArmorMunitions_C::CoverageMap' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, MaterialMap) == 0x0003C0, "Member 'UW_Loadout_Page_ArmorMunitions_C::MaterialMap' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, LastHovered) == 0x000410, "Member 'UW_Loadout_Page_ArmorMunitions_C::LastHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, LastActiveMunitionList) == 0x000418, "Member 'UW_Loadout_Page_ArmorMunitions_C::LastActiveMunitionList' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, LastAmmoHover) == 0x000420, "Member 'UW_Loadout_Page_ArmorMunitions_C::LastAmmoHover' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, LastDeployableHover) == 0x000428, "Member 'UW_Loadout_Page_ArmorMunitions_C::LastDeployableHover' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ArmorMunitions_C, CurrentActiveMunitionList) == 0x000430, "Member 'UW_Loadout_Page_ArmorMunitions_C::CurrentActiveMunitionList' has a wrong offset!");

}

