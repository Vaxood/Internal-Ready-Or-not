#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Collectable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Collectable.W_Collectable_C
// 0x0038 (0x0360 - 0x0328)
class UW_Collectable_C final  : public UCollectableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ClickableArea;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Content;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ItemDescription;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ItemName;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageHeader_208;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bUseGamepad;                                       // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_Collectable(int32 EntryPoint, const class FString& K2Node_ComponentBoundEvent_ButtonID, float K2Node_Event_Delay, bool K2Node_Event_Collapse, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool K2Node_Event_IsGamepad, class FName K2Node_Event_PageName, class ACollectable* K2Node_Event_Collectable, float K2Node_Event_Delay_1, bool CallFunc_BackPage_Handled, ECommonInputType K2Node_CustomEvent_bNewInputType, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue);
	void BndEvt__W_Collectable_W_PageHeader_208_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonID);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void OnInitialized();
	void BP_OnActivated();
	void SetItem(class ACollectable* Collectable);
	void ChangePage(class FName PageName);
	void SetInputMode(bool IsGamepad);
	void Hide(float Delay, bool Collapse);
	void Reveal(float Delay);
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue);
	bool BP_OnHandleBackAction(bool CallFunc_BackPage_Handled);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Collectable_C">();
	}
	static class UW_Collectable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Collectable_C>();
	}
};
static_assert(alignof(UW_Collectable_C) == 0x000008, "Wrong alignment on UW_Collectable_C");
static_assert(sizeof(UW_Collectable_C) == 0x000360, "Wrong size on UW_Collectable_C");
static_assert(offsetof(UW_Collectable_C, UberGraphFrame) == 0x000328, "Member 'UW_Collectable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Collectable_C, ClickableArea) == 0x000330, "Member 'UW_Collectable_C::ClickableArea' has a wrong offset!");
static_assert(offsetof(UW_Collectable_C, Img_Content) == 0x000338, "Member 'UW_Collectable_C::Img_Content' has a wrong offset!");
static_assert(offsetof(UW_Collectable_C, ItemDescription) == 0x000340, "Member 'UW_Collectable_C::ItemDescription' has a wrong offset!");
static_assert(offsetof(UW_Collectable_C, ItemName) == 0x000348, "Member 'UW_Collectable_C::ItemName' has a wrong offset!");
static_assert(offsetof(UW_Collectable_C, W_PageHeader_208) == 0x000350, "Member 'UW_Collectable_C::W_PageHeader_208' has a wrong offset!");
static_assert(offsetof(UW_Collectable_C, bUseGamepad) == 0x000358, "Member 'UW_Collectable_C::bUseGamepad' has a wrong offset!");

}

