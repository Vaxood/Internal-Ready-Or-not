#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet.W_PreMission_Tablet_C
// 0x08F8 (0x0C38 - 0x0340)
class UW_PreMission_Tablet_C final  : public UTabletWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimWake;                                          // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpenMessenger;                                 // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonBorder*                          AudioPlayer;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_Brief_C*           Brief;                                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           btn_Brief;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           btn_Camera;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           btn_Map;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           btn_Roster;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DpadDown;                                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DpadUp;                                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_131;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_Messenger_C*       MessengerChat;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_PlanningMap_C*            PlanningMAp;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Tablet_Roster_C*                     Roster;                                            // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_Content;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              Txt_NoMission;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Nav;                                            // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_AudioPlayer_C*                       W_AudioPlayer;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bOnPlanningMap;                                    // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3922[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CurrentPopout;                                     // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           CurrentActiveButton;                               // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Radial_MapMarking_C*                 Radial;                                            // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RadialCoords;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRecreateRadial;                                   // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3923[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              LastNormalizedLocation;                            // 0x0414(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3924[0x3];                                     // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentMissionURL;                                 // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  CurrentMissionData;                                // 0x0430(0x0788)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class UWidget*>           NavigationMap;                                     // 0x0BB8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_PreMission_Tablet_Roster_MP_C*       RosterListPopout;                                  // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRosterOpen;                                       // 0x0C10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3925[0x7];                                     // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ActiveScreen;                                      // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentButtonIndex;                                // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3926[0x4];                                     // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PremissionTablet_Button_C*           CurrentButton;                                     // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonNavigationDpadDirection;                     // 0x0C30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTabletAwake;                                      // 0x0C34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMissionChanged;                                   // 0x0C35(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_PreMission_Tablet(int32 EntryPoint, class UW_PremissionTablet_Button_C* K2Node_ComponentBoundEvent_TriggeringButton_3, class UW_PremissionTablet_Button_C* K2Node_ComponentBoundEvent_TriggeringButton_2, class UW_PremissionTablet_Button_C* K2Node_ComponentBoundEvent_TriggeringButton_1, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, ESlateVisibility Temp_byte_Variable, bool K2Node_Event_IsDesignTime, class FName K2Node_Event_PageName, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_1, const class FString& K2Node_ComponentBoundEvent_MissionURL, const struct FLevelFloor& K2Node_ComponentBoundEvent_FloorData, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, ESlateVisibility Temp_byte_Variable_1, class UW_PreMission_Tablet_Floors_C* K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_Variable, bool K2Node_Event_IsGamepad, float K2Node_Event_Delay_1, bool K2Node_Event_Collapse, float K2Node_Event_Delay, class UW_AudioPlayer_C* K2Node_Event_PlayerWidget, bool K2Node_Event_PlayerVisible, const class FString& K2Node_Event_URL, struct FLevelDataLookupTable& K2Node_Event_LevelData_1, TArray<class UUserWidget*>& CallFunc_GetAllWidgetsWithInterface_FoundWidgets, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, class UUserWidget* CallFunc_Array_Get_Item, TScriptInterface<class IBPI_MissionPlanning_C> K2Node_DynamicCast_AsBPI_Mission_Planning, bool K2Node_DynamicCast_bSuccess_1, bool K2Node_Event_UseDarkTheme, const class FString& K2Node_Event_MissionURL, const struct FLevelDataLookupTable& K2Node_Event_LevelData, int32 Temp_int_Array_Index_Variable_1, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UW_PremissionTablet_Button_C* K2Node_ComponentBoundEvent_TriggeringButton, TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate, ECommonInputType K2Node_CustomEvent_bNewInputType, bool K2Node_Event_IsAwake, TArray<class UWidget*>& CallFunc_GetAllChildren_ReturnValue, class UWidget* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, TScriptInterface<class ITabletUI_C> K2Node_DynamicCast_AsTablet_UI, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_Less_IntInt_ReturnValue_1, class UReadyOrNotGameInstance* CallFunc_GetReadyOrNotGameInstance_ReturnValue, bool CallFunc_IsSinglePlayer_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, bool CallFunc_IsMultiplayer_ReturnValue, ESlateVisibility K2Node_Select_Default);
	void OnInitialized();
	void SetTabletState(bool IsAwake);
	void OnInputChange(ECommonInputType bNewInputType);
	void BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(class UW_PremissionTablet_Button_C* TriggeringButton);
	void MissionChanged(const class FString& MissionURL, const struct FLevelDataLookupTable& LevelData);
	void SetVisualTheme(bool UseDarkTheme);
	void OnMissionChanged(const class FString& URL, struct FLevelDataLookupTable& LevelData);
	void AudioPlayerVisible(class UW_AudioPlayer_C* PlayerWidget, bool PlayerVisible);
	void Reveal(float Delay);
	void Hide(float Delay, bool Collapse);
	void SetInputMode(bool IsGamepad);
	void BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature(const class FString& MissionURL, const struct FLevelFloor& FloorData);
	void Sleep();
	void ChangePage(class FName PageName);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Wake();
	void Chat();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__W_PreMission_Tablet_W_PreMission_Tablet_Messenger_K2Node_ComponentBoundEvent_0_OnMessengerOpen__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_W_PreMission_Tablet_Messenger_K2Node_ComponentBoundEvent_1_OnMessengerClose__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(class UW_PremissionTablet_Button_C* TriggeringButton);
	void BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(class UW_PremissionTablet_Button_C* TriggeringButton);
	void BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(class UW_PremissionTablet_Button_C* TriggeringButton);
	void UpdateNavigation(class UW_PremissionTablet_Button_C* NewActiveButton, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UW_PreMission_Tablet_Floors_C* K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors, bool K2Node_DynamicCast_bSuccess, class UWidget* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Reveal_self_CastInput, TScriptInterface<class IReadyOrNotUI_C> CallFunc_Hide_self_CastInput);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Unhandled_ReturnValue);
	void OpenRadial(const struct FVector2D& Coordinates, const struct FAnchors& K2Node_MakeStruct_Anchors, const struct FAnchorData& K2Node_MakeStruct_AnchorData, class UW_Radial_MapMarking_C* CallFunc_Create_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, TDelegate<void(class FName Category, class FName MarkerName)> K2Node_CreateDelegate_OutputDelegate_1, class UCanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue);
	void RadialMarkerSelected(class FName CategoryName, class FName MarkerName, const struct FPlanningMarker& K2Node_MakeStruct_PlanningMarker);
	void CloseRadial();
	void RadialCollapsed();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent, const struct FKey& CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1, bool CallFunc_EqualEqual_KeyKey_ReturnValue_2, const struct FEventReply& CallFunc_Handled_ReturnValue, const struct FEventReply& CallFunc_Unhandled_ReturnValue, const struct FEventReply& CallFunc_Handled_ReturnValue_1);
	void DisplayNoDataScreen(bool NoData, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, ESlateVisibility K2Node_Select_Default, bool Temp_bool_Variable_1, ESlateVisibility K2Node_Select_Default_1);
	void LoadScreen(bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetRosterEnabled_RosterEnabled, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsEmpty_ReturnValue, class UWidget* CallFunc_GetActiveWidget_ReturnValue, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess);
	void OpenRoster(class UWidget* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void Update_Dpad_Navigation(int32 NewLocalVar_1, class UNiagaraDataInterfaceArrayBool* NewLocalVar_0, const TArray<bool>& buttonVisibilities, const TArray<class UNiagaraDataInterfaceArrayBool*>& AvailableButtons, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_GetActiveButton_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, TArray<class UW_PremissionTablet_Button_C*>& CallFunc_WidgetGetChildrenOfClass_ChildWidgets, class AReadyOrNotPlayerController* CallFunc_GetReadyOrNotPlayerController_ReturnValue, class UUserWidget* CallFunc_Array_Get_Item, bool CallFunc_WasInputKeyJustPressed_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, ESlateVisibility CallFunc_GetVisibility_ReturnValue, bool CallFunc_WasInputKeyJustPressed_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UW_PremissionTablet_Button_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void SetActiveNavButton(class UW_PremissionTablet_Button_C* NewActiveButton, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void SetActiveScreen(class UWidget* NewActiveScreen, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IReadyOrNotUI_C> K2Node_DynamicCast_AsReady_or_Not_UI_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);
	void InitNavigation(class FString& Temp_string_Variable, class FString& Temp_string_Variable_1, class FString& Temp_string_Variable_2, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class FString& Temp_string_Variable_3, bool CallFunc_IsInLobby_ReturnValue, ESlateVisibility K2Node_Select_Default, bool CallFunc_GetRosterEnabled_RosterEnabled);
	void GetRosterEnabled(bool* RosterEnabled, bool CallFunc_IsLobby_ReturnValue, bool CallFunc_IsMultiplayer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsCommanderMode_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	void BackPage(bool* Handled);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_C">();
	}
	static class UW_PreMission_Tablet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_C");
static_assert(sizeof(UW_PreMission_Tablet_C) == 0x000C38, "Wrong size on UW_PreMission_Tablet_C");
static_assert(offsetof(UW_PreMission_Tablet_C, UberGraphFrame) == 0x000340, "Member 'UW_PreMission_Tablet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, AnimWake) == 0x000348, "Member 'UW_PreMission_Tablet_C::AnimWake' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, AnimOpenMessenger) == 0x000350, "Member 'UW_PreMission_Tablet_C::AnimOpenMessenger' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, AudioPlayer) == 0x000358, "Member 'UW_PreMission_Tablet_C::AudioPlayer' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, Brief) == 0x000360, "Member 'UW_PreMission_Tablet_C::Brief' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, btn_Brief) == 0x000368, "Member 'UW_PreMission_Tablet_C::btn_Brief' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, btn_Camera) == 0x000370, "Member 'UW_PreMission_Tablet_C::btn_Camera' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, btn_Map) == 0x000378, "Member 'UW_PreMission_Tablet_C::btn_Map' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, btn_Roster) == 0x000380, "Member 'UW_PreMission_Tablet_C::btn_Roster' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CanvasPanel_0) == 0x000388, "Member 'UW_PreMission_Tablet_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CanvasPanel_1) == 0x000390, "Member 'UW_PreMission_Tablet_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, DpadDown) == 0x000398, "Member 'UW_PreMission_Tablet_C::DpadDown' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, DpadUp) == 0x0003A0, "Member 'UW_PreMission_Tablet_C::DpadUp' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, Image_131) == 0x0003A8, "Member 'UW_PreMission_Tablet_C::Image_131' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, MessengerChat) == 0x0003B0, "Member 'UW_PreMission_Tablet_C::MessengerChat' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, PlanningMAp) == 0x0003B8, "Member 'UW_PreMission_Tablet_C::PlanningMAp' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, Roster) == 0x0003C0, "Member 'UW_PreMission_Tablet_C::Roster' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, ScaleBox_Content) == 0x0003C8, "Member 'UW_PreMission_Tablet_C::ScaleBox_Content' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, Txt_NoMission) == 0x0003D0, "Member 'UW_PreMission_Tablet_C::Txt_NoMission' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, VB_Nav) == 0x0003D8, "Member 'UW_PreMission_Tablet_C::VB_Nav' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, W_AudioPlayer) == 0x0003E0, "Member 'UW_PreMission_Tablet_C::W_AudioPlayer' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, bOnPlanningMap) == 0x0003E8, "Member 'UW_PreMission_Tablet_C::bOnPlanningMap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CurrentPopout) == 0x0003F0, "Member 'UW_PreMission_Tablet_C::CurrentPopout' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CurrentActiveButton) == 0x0003F8, "Member 'UW_PreMission_Tablet_C::CurrentActiveButton' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, Radial) == 0x000400, "Member 'UW_PreMission_Tablet_C::Radial' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, RadialCoords) == 0x000408, "Member 'UW_PreMission_Tablet_C::RadialCoords' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, bRecreateRadial) == 0x000410, "Member 'UW_PreMission_Tablet_C::bRecreateRadial' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, LastNormalizedLocation) == 0x000414, "Member 'UW_PreMission_Tablet_C::LastNormalizedLocation' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, bInitialized) == 0x00041C, "Member 'UW_PreMission_Tablet_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CurrentMissionURL) == 0x000420, "Member 'UW_PreMission_Tablet_C::CurrentMissionURL' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CurrentMissionData) == 0x000430, "Member 'UW_PreMission_Tablet_C::CurrentMissionData' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, NavigationMap) == 0x000BB8, "Member 'UW_PreMission_Tablet_C::NavigationMap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, RosterListPopout) == 0x000C08, "Member 'UW_PreMission_Tablet_C::RosterListPopout' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, bRosterOpen) == 0x000C10, "Member 'UW_PreMission_Tablet_C::bRosterOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, ActiveScreen) == 0x000C18, "Member 'UW_PreMission_Tablet_C::ActiveScreen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CurrentButtonIndex) == 0x000C20, "Member 'UW_PreMission_Tablet_C::CurrentButtonIndex' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, CurrentButton) == 0x000C28, "Member 'UW_PreMission_Tablet_C::CurrentButton' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, ButtonNavigationDpadDirection) == 0x000C30, "Member 'UW_PreMission_Tablet_C::ButtonNavigationDpadDirection' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, bTabletAwake) == 0x000C34, "Member 'UW_PreMission_Tablet_C::bTabletAwake' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_C, bMissionChanged) == 0x000C35, "Member 'UW_PreMission_Tablet_C::bMissionChanged' has a wrong offset!");

}

