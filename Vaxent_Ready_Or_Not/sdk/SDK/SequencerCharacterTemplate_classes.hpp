#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SequencerCharacterTemplate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SequencerCharacterTemplate.SequencerCharacterTemplate_C
// 0x0048 (0x0268 - 0x0220)
class ASequencerCharacterTemplate_C final  : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 ArmorMesh;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ItemMagMesh;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ItemMesh;                                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMesh;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseAsset*                             FaceROMReference;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 RoNPlayerState;                                    // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SequencerCharacterTemplate(int32 EntryPoint, class FName Temp_name_Variable, class FName Temp_name_Variable_1, class FName Temp_name_Variable_2, class FName Temp_name_Variable_3, class FName Temp_name_Variable_4, class FName Temp_name_Variable_5, float K2Node_Event_DeltaSeconds, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class ULevelSequence* K2Node_CustomEvent_LevelSequence, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, class FName Temp_name_Variable_6, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State_1, bool K2Node_DynamicCast_bSuccess_1, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayerStatesOnTeamOrderedByScore_PlayerStates, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue_2, bool CallFunc_Array_Contains_ReturnValue_3, bool CallFunc_Array_Contains_ReturnValue_4, bool CallFunc_Array_Contains_ReturnValue_5, bool CallFunc_Array_Contains_ReturnValue_6, class AGameStateBase* CallFunc_GetGameState_ReturnValue_2, class AReadyOrNotGameState* K2Node_DynamicCast_AsReady_or_Not_Game_State_2, bool K2Node_DynamicCast_bSuccess_2, TArray<class AReadyOrNotPlayerState*>& CallFunc_GetPlayerStatesOnTeamOrderedByScore_PlayerStates_1, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_1, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_2, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_3, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_4, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_5, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_6, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_7, class AReadyOrNotPlayerState* CallFunc_Array_Get_Item_8, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, class FName Temp_name_Variable_7, bool CallFunc_Array_Contains_ReturnValue_7, TDelegate<void(class ULevelSequence* LevelSequence)> K2Node_CreateDelegate_OutputDelegate);
	void OnSequenceStarted_Event_0(class ULevelSequence* LevelSequence);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript(bool CallFunc_K2_AttachToComponent_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue_1);
	void EquipLoadout(struct FSavedLoadout& SavedLoadout, class AReadyOrNotPlayerState* PlayerState, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, ETeamType CallFunc_GetTeam_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FCharacterData& CallFunc_GetCharacterDataFromHandle_Data, class UObject* CallFunc_GetLazyLoadedObject_ReturnValue, class UPlayableCharacterData* K2Node_DynamicCast_AsPlayable_Character_Data, bool K2Node_DynamicCast_bSuccess, class USkeletalMesh* CallFunc_GetLazyLoadedSkeletalMesh_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_K2_AttachToComponent_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, class ABaseItem* CallFunc_FinishSpawningActor_ReturnValue, class ABaseItem* CallFunc_FinishSpawningActor_ReturnValue_1, class USkeletalMeshComponent* CallFunc_GetItemMesh_ReturnValue, class ABaseMagazineWeapon* K2Node_DynamicCast_AsBase_Magazine_Weapon, bool K2Node_DynamicCast_bSuccess_1, class USkeletalMeshComponent* CallFunc_GetItemMesh_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_K2_AttachToComponent_ReturnValue_1, bool CallFunc_SetStaticMesh_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SequencerCharacterTemplate_C">();
	}
	static class ASequencerCharacterTemplate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASequencerCharacterTemplate_C>();
	}
};
static_assert(alignof(ASequencerCharacterTemplate_C) == 0x000008, "Wrong alignment on ASequencerCharacterTemplate_C");
static_assert(sizeof(ASequencerCharacterTemplate_C) == 0x000268, "Wrong size on ASequencerCharacterTemplate_C");
static_assert(offsetof(ASequencerCharacterTemplate_C, UberGraphFrame) == 0x000220, "Member 'ASequencerCharacterTemplate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, ArmorMesh) == 0x000228, "Member 'ASequencerCharacterTemplate_C::ArmorMesh' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, HeadMesh) == 0x000230, "Member 'ASequencerCharacterTemplate_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, ItemMagMesh) == 0x000238, "Member 'ASequencerCharacterTemplate_C::ItemMagMesh' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, ItemMesh) == 0x000240, "Member 'ASequencerCharacterTemplate_C::ItemMesh' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, BodyMesh) == 0x000248, "Member 'ASequencerCharacterTemplate_C::BodyMesh' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, DefaultSceneRoot) == 0x000250, "Member 'ASequencerCharacterTemplate_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, FaceROMReference) == 0x000258, "Member 'ASequencerCharacterTemplate_C::FaceROMReference' has a wrong offset!");
static_assert(offsetof(ASequencerCharacterTemplate_C, RoNPlayerState) == 0x000260, "Member 'ASequencerCharacterTemplate_C::RoNPlayerState' has a wrong offset!");

}

