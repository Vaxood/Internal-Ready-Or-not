#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_AI_MoveStyle_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ANIMBP_AI_MoveStyle_Base.ANIMBP_AI_MoveStyle_Base_C.ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base
// 0x00A0 (0x00A0 - 0x0000)
struct ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4068[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4069[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_GetEquippedItem_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZipcuffs*                              K2Node_DynamicCast_AsZipcuffs;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACyberneticCharacter*                   K2Node_DynamicCast_AsCybernetic_Character;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character_1;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406D[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseArmour*                            CallFunc_GetArmour_ReturnValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveVest*                         K2Node_DynamicCast_AsExplosive_Vest;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406E[0x1];                                     // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base) == 0x000008, "Wrong alignment on ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base");
static_assert(sizeof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base) == 0x0000A0, "Wrong size on ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, EntryPoint) == 0x000000, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_AsPlayer_Character) == 0x000010, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000020, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_GetEquippedItem_ReturnValue) == 0x000028, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_AsReady_or_Not_Character) == 0x000030, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_AsReady_or_Not_Character' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_AsZipcuffs) == 0x000040, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_AsZipcuffs' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x000050, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_AsCybernetic_Character) == 0x000058, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_AsCybernetic_Character' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_Event_DeltaTimeX) == 0x000064, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000068, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_AsReady_or_Not_Character_1) == 0x000070, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_AsReady_or_Not_Character_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_GetArmour_ReturnValue) == 0x000080, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_GetArmour_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_AsExplosive_Vest) == 0x000088, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_AsExplosive_Vest' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, K2Node_DynamicCast_bSuccess_5) == 0x000090, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_BooleanAND_ReturnValue_1) == 0x000093, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_BooleanAND_ReturnValue_2) == 0x000094, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_BooleanAND_ReturnValue_3) == 0x000095, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_BooleanAND_ReturnValue_4) == 0x000096, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base, CallFunc_Ease_ReturnValue) == 0x00009C, "Member 'ANIMBP_AI_MoveStyle_Base_C_ExecuteUbergraph_ANIMBP_AI_MoveStyle_Base::CallFunc_Ease_ReturnValue' has a wrong offset!");

// Function ANIMBP_AI_MoveStyle_Base.ANIMBP_AI_MoveStyle_Base_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation final 
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation");
static_assert(sizeof(ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ANIMBP_AI_MoveStyle_Base_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ANIMBP_AI_MoveStyle_Base.ANIMBP_AI_MoveStyle_Base_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ANIMBP_AI_MoveStyle_Base_C_AnimGraph final 
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ANIMBP_AI_MoveStyle_Base_C_AnimGraph) == 0x000008, "Wrong alignment on ANIMBP_AI_MoveStyle_Base_C_AnimGraph");
static_assert(sizeof(ANIMBP_AI_MoveStyle_Base_C_AnimGraph) == 0x000010, "Wrong size on ANIMBP_AI_MoveStyle_Base_C_AnimGraph");
static_assert(offsetof(ANIMBP_AI_MoveStyle_Base_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ANIMBP_AI_MoveStyle_Base_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

