#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RoadSign

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RoadSign.RoadSign_C.AssignTextures_Destructible
// 0x0468 (0x0468 - 0x0000)
struct RoadSign_C_AssignTextures_Destructible final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3064[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3065[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3066[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3067[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3068[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_22;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_23;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3069[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_24;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_25;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_26;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_27;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_28;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_29;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_30;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_31;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_32;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_33;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_34;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_35;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_36;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_37;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_38;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_39;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_40;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_41;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_42;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_43;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_44;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_45;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_46;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_47;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_48;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_49;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_50;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_51;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_52;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_53;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_54;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_55;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_56;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_57;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_58;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_59;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_60;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_61;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_62;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_63;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_64;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_65;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_66;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_67;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_68;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_69;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_70;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_71;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_72;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_73;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_74;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_75;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_76;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_77;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_78;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_79;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_80;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_81;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_82;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_83;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_84;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_85;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_86;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_87;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_88;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_89;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_90;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_91;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_92;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_93;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_94;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_95;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_96;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_97;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_98;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_99;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_100;                          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_101;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_102;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_103;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_104;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_105;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_106;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_107;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_108;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_109;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_110;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_111;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_112;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_113;                          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_114;                          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_115;                          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_116;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_117;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_118;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_119;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_120;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_121;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_122;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306A[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0426(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306B[0x1];                                     // 0x0427(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_3;                           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_4;                           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_5;                           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_AssignTextures_Destructible) == 0x000008, "Wrong alignment on RoadSign_C_AssignTextures_Destructible");
static_assert(sizeof(RoadSign_C_AssignTextures_Destructible) == 0x000468, "Wrong size on RoadSign_C_AssignTextures_Destructible");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_bool_Variable) == 0x000000, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_int_Variable) == 0x000004, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_int_Variable_1) == 0x000008, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_bool_Variable_1) == 0x00000C, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable) == 0x000010, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_1) == 0x000018, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_bool_Variable_2) == 0x000020, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_2) == 0x000028, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_3) == 0x000030, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_bool_Variable_3) == 0x000038, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_4) == 0x000040, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_int_Variable_2) == 0x000048, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_5) == 0x000050, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_6) == 0x000058, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_7) == 0x000060, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_8) == 0x000068, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_9) == 0x000070, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_10) == 0x000078, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_11) == 0x000080, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_12) == 0x000088, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_13) == 0x000090, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_14) == 0x000098, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_15) == 0x0000A0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_16) == 0x0000A8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_17) == 0x0000B0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_18) == 0x0000B8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_19) == 0x0000C0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_20) == 0x0000C8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_21) == 0x0000D0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_22) == 0x0000D8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_23) == 0x0000E0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_int_Variable_3) == 0x0000E8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_24) == 0x0000F0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_25) == 0x0000F8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_26) == 0x000100, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_27) == 0x000108, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_28) == 0x000110, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_29) == 0x000118, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_30) == 0x000120, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_31) == 0x000128, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_32) == 0x000130, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_33) == 0x000138, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_34) == 0x000140, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_35) == 0x000148, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_36) == 0x000150, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_37) == 0x000158, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_38) == 0x000160, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_39) == 0x000168, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_40) == 0x000170, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_41) == 0x000178, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_42) == 0x000180, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_43) == 0x000188, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_44) == 0x000190, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_45) == 0x000198, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_46) == 0x0001A0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_47) == 0x0001A8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_48) == 0x0001B0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_49) == 0x0001B8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_50) == 0x0001C0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_51) == 0x0001C8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_52) == 0x0001D0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_53) == 0x0001D8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_54) == 0x0001E0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_55) == 0x0001E8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_56) == 0x0001F0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_57) == 0x0001F8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_58) == 0x000200, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_59) == 0x000208, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_60) == 0x000210, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_61) == 0x000218, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_62) == 0x000220, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_63) == 0x000228, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_64) == 0x000230, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_65) == 0x000238, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_66) == 0x000240, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_67) == 0x000248, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_68) == 0x000250, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_69) == 0x000258, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_70) == 0x000260, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_71) == 0x000268, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_72) == 0x000270, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_73) == 0x000278, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_74) == 0x000280, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_75) == 0x000288, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_76) == 0x000290, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_77) == 0x000298, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_78) == 0x0002A0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_79) == 0x0002A8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_80) == 0x0002B0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_81) == 0x0002B8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_82) == 0x0002C0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_83) == 0x0002C8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_84) == 0x0002D0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_85) == 0x0002D8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_86) == 0x0002E0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_87) == 0x0002E8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_88) == 0x0002F0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_89) == 0x0002F8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_90) == 0x000300, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_91) == 0x000308, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_92) == 0x000310, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_93) == 0x000318, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_94) == 0x000320, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_95) == 0x000328, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_96) == 0x000330, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_97) == 0x000338, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_98) == 0x000340, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_99) == 0x000348, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_99' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_100) == 0x000350, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_100' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_101) == 0x000358, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_101' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_102) == 0x000360, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_102' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_103) == 0x000368, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_103' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_104) == 0x000370, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_104' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_105) == 0x000378, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_105' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_106) == 0x000380, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_106' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_107) == 0x000388, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_107' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_108) == 0x000390, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_108' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_109) == 0x000398, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_109' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_110) == 0x0003A0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_110' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_111) == 0x0003A8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_111' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_112) == 0x0003B0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_112' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_113) == 0x0003B8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_113' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_114) == 0x0003C0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_114' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_115) == 0x0003C8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_115' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_116) == 0x0003D0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_116' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_117) == 0x0003D8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_117' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_118) == 0x0003E0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_118' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_119) == 0x0003E8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_119' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_120) == 0x0003F0, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_120' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_121) == 0x0003F8, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_121' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, Temp_object_Variable_122) == 0x000400, "Member 'RoadSign_C_AssignTextures_Destructible::Temp_object_Variable_122' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000408, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_BooleanOR_ReturnValue) == 0x000410, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000418, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, K2Node_Select_Default) == 0x000420, "Member 'RoadSign_C_AssignTextures_Destructible::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000424, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000425, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_BooleanOR_ReturnValue_1) == 0x000426, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, K2Node_Select_Default_1) == 0x000428, "Member 'RoadSign_C_AssignTextures_Destructible::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, K2Node_Select_Default_2) == 0x000430, "Member 'RoadSign_C_AssignTextures_Destructible::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, K2Node_Select_Default_3) == 0x000438, "Member 'RoadSign_C_AssignTextures_Destructible::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, K2Node_Select_Default_4) == 0x000440, "Member 'RoadSign_C_AssignTextures_Destructible::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000448, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, K2Node_Select_Default_5) == 0x000450, "Member 'RoadSign_C_AssignTextures_Destructible::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000458, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures_Destructible, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000460, "Member 'RoadSign_C_AssignTextures_Destructible::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");

// Function RoadSign.RoadSign_C.DestroySignSelection
// 0x0030 (0x0030 - 0x0000)
struct RoadSign_C_DestroySignSelection final 
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_DestroySignSelection) == 0x000008, "Wrong alignment on RoadSign_C_DestroySignSelection");
static_assert(sizeof(RoadSign_C_DestroySignSelection) == 0x000030, "Wrong size on RoadSign_C_DestroySignSelection");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable) == 0x000000, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable_1) == 0x000004, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable_2) == 0x000008, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'RoadSign_C_DestroySignSelection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'RoadSign_C_DestroySignSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, Temp_int_Variable_3) == 0x000014, "Member 'RoadSign_C_DestroySignSelection::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000018, "Member 'RoadSign_C_DestroySignSelection::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'RoadSign_C_DestroySignSelection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, K2Node_Select_Default) == 0x000020, "Member 'RoadSign_C_DestroySignSelection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_DestroySignSelection, K2Node_Select_Default_1) == 0x000028, "Member 'RoadSign_C_DestroySignSelection::K2Node_Select_Default_1' has a wrong offset!");

// Function RoadSign.RoadSign_C.AssignSpeedLimitIndex
// 0x0013 (0x0013 - 0x0000)
struct RoadSign_C_AssignSpeedLimitIndex final 
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_17;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_18;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RoadSign_C_AssignSpeedLimitIndex) == 0x000001, "Wrong alignment on RoadSign_C_AssignSpeedLimitIndex");
static_assert(sizeof(RoadSign_C_AssignSpeedLimitIndex) == 0x000013, "Wrong size on RoadSign_C_AssignSpeedLimitIndex");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000001, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000002, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000003, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000004, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000005, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000006, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000007, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000008, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000009, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x00000A, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x00000B, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x00000C, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x00000D, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x00000E, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x00000F, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x000010, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_17) == 0x000011, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSpeedLimitIndex, CallFunc_EqualEqual_IntInt_ReturnValue_18) == 0x000012, "Member 'RoadSign_C_AssignSpeedLimitIndex::CallFunc_EqualEqual_IntInt_ReturnValue_18' has a wrong offset!");

// Function RoadSign.RoadSign_C.SetNumbers
// 0x00D0 (0x00D0 - 0x0000)
struct RoadSign_C_SetNumbers final 
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_306E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306F[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_SetNumbers) == 0x000008, "Wrong alignment on RoadSign_C_SetNumbers");
static_assert(sizeof(RoadSign_C_SetNumbers) == 0x0000D0, "Wrong size on RoadSign_C_SetNumbers");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_int_Variable) == 0x000000, "Member 'RoadSign_C_SetNumbers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_1) == 0x000010, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_2) == 0x000018, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_3) == 0x000020, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_4) == 0x000028, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_5) == 0x000030, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_6) == 0x000038, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_7) == 0x000040, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_8) == 0x000048, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_9) == 0x000050, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_10) == 0x000058, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_11) == 0x000060, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_12) == 0x000068, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_13) == 0x000070, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_14) == 0x000078, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_15) == 0x000080, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_16) == 0x000088, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_17) == 0x000090, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_18) == 0x000098, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_object_Variable_19) == 0x0000A0, "Member 'RoadSign_C_SetNumbers::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_int_Variable_1) == 0x0000A8, "Member 'RoadSign_C_SetNumbers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, Temp_int_Variable_2) == 0x0000AC, "Member 'RoadSign_C_SetNumbers::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, K2Node_Select_Default) == 0x0000B0, "Member 'RoadSign_C_SetNumbers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'RoadSign_C_SetNumbers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'RoadSign_C_SetNumbers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, K2Node_Select_Default_1) == 0x0000C0, "Member 'RoadSign_C_SetNumbers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetNumbers, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'RoadSign_C_SetNumbers::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function RoadSign.RoadSign_C.AssignTextures
// 0x0458 (0x0458 - 0x0000)
struct RoadSign_C_AssignTextures final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3070[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3071[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3072[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3073[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_22;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_23;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3074[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_24;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_25;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_26;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_27;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_28;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_29;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_30;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_31;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_32;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_33;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_34;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_35;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_36;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_37;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_38;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_39;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_40;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_41;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_42;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_43;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_44;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_45;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_46;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_47;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_48;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_49;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_50;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_51;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_52;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_53;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_54;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_55;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_56;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_57;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_58;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_59;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_60;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_61;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_62;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_63;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_64;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_65;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_66;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_67;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_68;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_69;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_70;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_71;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_72;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_73;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_74;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_75;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_76;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_77;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_78;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_79;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_80;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_81;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_82;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_83;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_84;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_85;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_86;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_87;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_88;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_89;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_90;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_91;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_92;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_93;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_94;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_95;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_96;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_97;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_98;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_99;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_100;                          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_101;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_102;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_103;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_104;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_105;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_106;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_107;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_108;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_109;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_110;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_111;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_112;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_113;                          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_114;                          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_115;                          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_116;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_117;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_118;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_119;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_120;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_121;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_122;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3075[0x5];                                     // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3076[0x7];                                     // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_3;                           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3077[0x4];                                     // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_5;                           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_AssignTextures) == 0x000008, "Wrong alignment on RoadSign_C_AssignTextures");
static_assert(sizeof(RoadSign_C_AssignTextures) == 0x000458, "Wrong size on RoadSign_C_AssignTextures");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable) == 0x000000, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_1) == 0x000010, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable_1) == 0x000018, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_2) == 0x000020, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_3) == 0x000028, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable_2) == 0x000030, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_4) == 0x000038, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_bool_Variable_3) == 0x000040, "Member 'RoadSign_C_AssignTextures::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable) == 0x000044, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable_1) == 0x000048, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable_2) == 0x00004C, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_5) == 0x000050, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_6) == 0x000058, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_7) == 0x000060, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_8) == 0x000068, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_9) == 0x000070, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_10) == 0x000078, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_11) == 0x000080, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_12) == 0x000088, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_13) == 0x000090, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_14) == 0x000098, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_15) == 0x0000A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_16) == 0x0000A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_17) == 0x0000B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_18) == 0x0000B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_19) == 0x0000C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_20) == 0x0000C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_21) == 0x0000D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_22) == 0x0000D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_23) == 0x0000E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_int_Variable_3) == 0x0000E8, "Member 'RoadSign_C_AssignTextures::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_24) == 0x0000F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_25) == 0x0000F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_26) == 0x000100, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_27) == 0x000108, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_28) == 0x000110, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_29) == 0x000118, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_30) == 0x000120, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_31) == 0x000128, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_32) == 0x000130, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_33) == 0x000138, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_34) == 0x000140, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_35) == 0x000148, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_36) == 0x000150, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_37) == 0x000158, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_38) == 0x000160, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_39) == 0x000168, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_40) == 0x000170, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_41) == 0x000178, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_42) == 0x000180, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_43) == 0x000188, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_44) == 0x000190, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_45) == 0x000198, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_46) == 0x0001A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_47) == 0x0001A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_48) == 0x0001B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_49) == 0x0001B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_50) == 0x0001C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_51) == 0x0001C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_52) == 0x0001D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_53) == 0x0001D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_54) == 0x0001E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_55) == 0x0001E8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_56) == 0x0001F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_57) == 0x0001F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_58) == 0x000200, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_59) == 0x000208, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_60) == 0x000210, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_61) == 0x000218, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_62) == 0x000220, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_63) == 0x000228, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_64) == 0x000230, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_65) == 0x000238, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_66) == 0x000240, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_67) == 0x000248, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_68) == 0x000250, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_69) == 0x000258, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_70) == 0x000260, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_71) == 0x000268, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_72) == 0x000270, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_73) == 0x000278, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_74) == 0x000280, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_75) == 0x000288, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_76) == 0x000290, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_77) == 0x000298, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_78) == 0x0002A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_79) == 0x0002A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_80) == 0x0002B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_81) == 0x0002B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_82) == 0x0002C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_83) == 0x0002C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_84) == 0x0002D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_85) == 0x0002D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_86) == 0x0002E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_87) == 0x0002E8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_88) == 0x0002F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_89) == 0x0002F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_90) == 0x000300, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_91) == 0x000308, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_92) == 0x000310, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_93) == 0x000318, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_94) == 0x000320, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_95) == 0x000328, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_96) == 0x000330, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_97) == 0x000338, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_98) == 0x000340, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_99) == 0x000348, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_99' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_100) == 0x000350, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_100' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_101) == 0x000358, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_101' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_102) == 0x000360, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_102' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_103) == 0x000368, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_103' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_104) == 0x000370, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_104' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_105) == 0x000378, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_105' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_106) == 0x000380, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_106' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_107) == 0x000388, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_107' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_108) == 0x000390, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_108' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_109) == 0x000398, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_109' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_110) == 0x0003A0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_110' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_111) == 0x0003A8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_111' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_112) == 0x0003B0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_112' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_113) == 0x0003B8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_113' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_114) == 0x0003C0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_114' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_115) == 0x0003C8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_115' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_116) == 0x0003D0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_116' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_117) == 0x0003D8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_117' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_118) == 0x0003E0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_118' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_119) == 0x0003E8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_119' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_120) == 0x0003F0, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_120' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_121) == 0x0003F8, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_121' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, Temp_object_Variable_122) == 0x000400, "Member 'RoadSign_C_AssignTextures::Temp_object_Variable_122' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000408, "Member 'RoadSign_C_AssignTextures::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000409, "Member 'RoadSign_C_AssignTextures::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_BooleanOR_ReturnValue) == 0x00040A, "Member 'RoadSign_C_AssignTextures::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default) == 0x000410, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_1) == 0x000418, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_2) == 0x000420, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000428, "Member 'RoadSign_C_AssignTextures::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_BooleanOR_ReturnValue_1) == 0x000430, "Member 'RoadSign_C_AssignTextures::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_3) == 0x000438, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_4) == 0x000440, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, K2Node_Select_Default_5) == 0x000448, "Member 'RoadSign_C_AssignTextures::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignTextures, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000450, "Member 'RoadSign_C_AssignTextures::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function RoadSign.RoadSign_C.AssignSelectionTextures
// 0x0488 (0x0488 - 0x0000)
struct RoadSign_C_AssignSelectionTextures final 
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3078[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_20;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_21;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_22;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_23;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_24;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_25;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_26;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_27;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_28;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_29;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_30;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_31;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_32;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_33;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_34;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_35;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_36;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_37;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_38;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_39;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_40;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_41;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_42;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_43;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_44;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_45;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_46;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_47;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_48;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_49;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_50;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_51;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_52;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_53;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_54;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_55;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_56;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_57;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_58;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_59;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_60;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_61;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_62;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_63;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_64;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_65;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_66;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_67;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_68;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_69;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_70;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_71;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_72;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_73;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_74;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_75;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_76;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_77;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_78;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_79;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_80;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_81;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_82;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_83;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_84;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_85;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_86;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_87;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_88;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_89;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_90;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_91;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_92;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_93;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_94;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_95;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_96;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_97;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_98;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_99;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3079[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307A[0x3];                                     // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_307B[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0360(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_2;                           // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult_1;       // 0x0400(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RoadSign_C_AssignSelectionTextures) == 0x000008, "Wrong alignment on RoadSign_C_AssignSelectionTextures");
static_assert(sizeof(RoadSign_C_AssignSelectionTextures) == 0x000488, "Wrong size on RoadSign_C_AssignSelectionTextures");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable) == 0x000000, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_1) == 0x000010, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_2) == 0x000018, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_3) == 0x000020, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_4) == 0x000028, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_5) == 0x000030, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_6) == 0x000038, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_7) == 0x000040, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_8) == 0x000048, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_9) == 0x000050, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_10) == 0x000058, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_11) == 0x000060, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_12) == 0x000068, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_13) == 0x000070, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_14) == 0x000078, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_15) == 0x000080, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_16) == 0x000088, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_17) == 0x000090, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_18) == 0x000098, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_19) == 0x0000A0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_20) == 0x0000A8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_21) == 0x0000B0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_22) == 0x0000B8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_23) == 0x0000C0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_24) == 0x0000C8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_25) == 0x0000D0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_26) == 0x0000D8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_27) == 0x0000E0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_28) == 0x0000E8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_29) == 0x0000F0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_30) == 0x0000F8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_31) == 0x000100, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_32) == 0x000108, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_33) == 0x000110, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_34) == 0x000118, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_35) == 0x000120, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_36) == 0x000128, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_37) == 0x000130, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_38) == 0x000138, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_39) == 0x000140, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_40) == 0x000148, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_41) == 0x000150, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_42) == 0x000158, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_43) == 0x000160, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_44) == 0x000168, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_45) == 0x000170, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_46) == 0x000178, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_47) == 0x000180, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_48) == 0x000188, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_49) == 0x000190, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_50) == 0x000198, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_51) == 0x0001A0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_52) == 0x0001A8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_53) == 0x0001B0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_54) == 0x0001B8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_55) == 0x0001C0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_56) == 0x0001C8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_57) == 0x0001D0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_58) == 0x0001D8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_59) == 0x0001E0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_60) == 0x0001E8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_61) == 0x0001F0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_62) == 0x0001F8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_63) == 0x000200, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_64) == 0x000208, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_65) == 0x000210, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_66) == 0x000218, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_67) == 0x000220, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_68) == 0x000228, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_69) == 0x000230, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_70) == 0x000238, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_71) == 0x000240, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_72) == 0x000248, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_73) == 0x000250, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_74) == 0x000258, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_75) == 0x000260, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_76) == 0x000268, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_77) == 0x000270, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_78) == 0x000278, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_79) == 0x000280, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_80) == 0x000288, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_81) == 0x000290, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_81' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_82) == 0x000298, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_82' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_83) == 0x0002A0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_83' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_84) == 0x0002A8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_84' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_85) == 0x0002B0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_85' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_86) == 0x0002B8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_86' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_87) == 0x0002C0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_87' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_88) == 0x0002C8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_88' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_89) == 0x0002D0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_89' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_90) == 0x0002D8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_90' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_91) == 0x0002E0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_91' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_92) == 0x0002E8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_92' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_93) == 0x0002F0, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_93' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_94) == 0x0002F8, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_94' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_95) == 0x000300, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_95' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_96) == 0x000308, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_96' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_97) == 0x000310, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_97' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_98) == 0x000318, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_98' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_object_Variable_99) == 0x000320, "Member 'RoadSign_C_AssignSelectionTextures::Temp_object_Variable_99' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_1) == 0x000328, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_2) == 0x00032C, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_3) == 0x000330, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000334, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_Add_IntInt_ReturnValue) == 0x000338, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_MakeVector_ReturnValue) == 0x00033C, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, Temp_int_Variable_4) == 0x000348, "Member 'RoadSign_C_AssignSelectionTextures::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00034C, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_Add_IntInt_ReturnValue_1) == 0x000350, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, K2Node_Select_Default) == 0x000358, "Member 'RoadSign_C_AssignSelectionTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000360, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, K2Node_Select_Default_1) == 0x0003E8, "Member 'RoadSign_C_AssignSelectionTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, K2Node_Select_Default_2) == 0x0003F0, "Member 'RoadSign_C_AssignSelectionTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0003F8, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_AssignSelectionTextures, CallFunc_K2_AddLocalOffset_SweepHitResult_1) == 0x000400, "Member 'RoadSign_C_AssignSelectionTextures::CallFunc_K2_AddLocalOffset_SweepHitResult_1' has a wrong offset!");

// Function RoadSign.RoadSign_C.SetMainSignMesh
// 0x05E0 (0x05E0 - 0x0000)
struct RoadSign_C_SetMainSignMesh final 
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_307F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3080[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3081[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3082[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_6;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3083[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_7;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3084[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_8;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3085[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_9;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3086[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_10;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      Temp_object_Variable_11;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3087[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_12;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      Temp_object_Variable_13;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3088[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_14;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3089[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_15;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308A[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_16;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308B[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_17;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308C[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_18;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308D[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_19;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308E[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_20;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308F[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_21;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3090[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_22;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3091[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_23;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3092[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_24;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      Temp_object_Variable_25;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3093[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_26;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3094[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_27;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3095[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_28;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3096[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_29;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3097[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_30;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3098[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_31;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_29;                             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3099[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_32;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_30;                             // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309A[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_33;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_31;                             // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309B[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_34;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_32;                             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309C[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Temp_object_Variable_35;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_33;                             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_34;                             // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_35;                             // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_36;                             // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_37;                             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_38;                             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_39;                             // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_40;                             // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_41;                             // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_42;                             // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_43;                             // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_44;                             // 0x0237(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_45;                             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_46;                             // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_47;                             // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_48;                             // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_49;                             // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_50;                             // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_51;                             // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_52;                             // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_53;                             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_54;                             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309D[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_55;                             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_56;                             // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_57;                             // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_58;                             // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_59;                             // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_60;                             // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_61;                             // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_62;                             // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_63;                             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_64;                             // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_65;                             // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0257(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309E[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default;                             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309F[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_1;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A0[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_2;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      K2Node_Select_Default_3;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A1[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_4;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A2[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_5;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A3[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_6;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A4[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_7;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A5[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_8;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A6[0x6];                                     // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_9;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A7[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_10;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A8[0x5];                                     // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_11;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A9[0x5];                                     // 0x0313(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_12;                          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AA[0x6];                                     // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_13;                          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AB[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_14;                          // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AC[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_15;                          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AD[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_16;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AE[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_17;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_17;         // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x0373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AF[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_18;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B0[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_19;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B1[0x6];                                     // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_20;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      K2Node_Select_Default_21;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_9;           // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B2[0x2];                                     // 0x03AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_22;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_18;         // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B3[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_23;                          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_19;         // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_20;         // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_21;         // 0x03CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B4[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_24;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      K2Node_Select_Default_25;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_22;         // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B5[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_26;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_23;         // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B6[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_27;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_24;         // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B7[0x7];                                     // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_28;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_25;         // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_26;         // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_10;          // 0x0413(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B8[0x4];                                     // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_29;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_8;        // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B9[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_30;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_11;          // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30BA[0x6];                                     // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_Select_Default_31;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      K2Node_Select_Default_32;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleMesh*                      K2Node_Select_Default_33;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_12;          // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_13;          // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_14;          // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_9;        // 0x0453(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_27;         // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_28;         // 0x0456(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0457(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_29;         // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_30;         // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_31;         // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_32;         // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_33;         // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_34;         // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_35;         // 0x045E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x045F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_15;          // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_10;       // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_11;       // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30BB[0x3];                                     // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_34;                          // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_35;                          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_36;                          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_37;                          // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_38;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_39;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_40;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_41;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_42;                          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_43;                          // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_44;                          // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_12;       // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_16;          // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_17;          // 0x04C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x04C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_13;       // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x04C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30BC[0x2];                                     // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_45;                          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_36;         // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30BD[0x7];                                     // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_46;                          // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_37;         // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_38;         // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_39;         // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30BE[0x4];                                     // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_47;                          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_48;                          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_40;         // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30BF[0x7];                                     // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_49;                          // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_41;         // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C0[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_50;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_42;         // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C1[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_51;                          // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_43;         // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_44;         // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_18;          // 0x052B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C2[0x4];                                     // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_52;                          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_14;       // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C3[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_53;                          // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_19;          // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C4[0x6];                                     // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_54;                          // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_55;                          // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_15;       // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_20;          // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_21;          // 0x0562(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0563(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_16;       // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_45;         // 0x0566(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_46;         // 0x0567(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_47;         // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_48;         // 0x056A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_49;         // 0x056B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_50;         // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_51;         // 0x056D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_52;         // 0x056E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_53;         // 0x056F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_22;          // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_17;       // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_23;          // 0x0573(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C5[0x3];                                     // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_56;                          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_57;                          // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_58;                          // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_59;                          // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_60;                          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_61;                          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_62;                          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_63;                          // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_64;                          // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_65;                          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_66;                          // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_67;                          // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RoadSign_C_SetMainSignMesh) == 0x000008, "Wrong alignment on RoadSign_C_SetMainSignMesh");
static_assert(sizeof(RoadSign_C_SetMainSignMesh) == 0x0005E0, "Wrong size on RoadSign_C_SetMainSignMesh");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable) == 0x000000, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable) == 0x000008, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_1) == 0x000010, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_1) == 0x000018, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_2) == 0x000020, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_2) == 0x000028, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_3) == 0x000030, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_3) == 0x000038, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_4) == 0x000040, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_4) == 0x000048, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_5) == 0x000050, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_5) == 0x000058, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_6) == 0x000060, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_6) == 0x000068, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_7) == 0x000070, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_7) == 0x000078, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_8) == 0x000080, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_8) == 0x000088, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_9) == 0x000090, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_9) == 0x000098, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_10) == 0x0000A0, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_10) == 0x0000A8, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_11) == 0x0000B0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_11) == 0x0000B8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_12) == 0x0000C0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_13) == 0x0000C8, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_12) == 0x0000D0, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_14) == 0x0000D8, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_13) == 0x0000E0, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_15) == 0x0000E8, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_14) == 0x0000F0, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_16) == 0x0000F8, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_15) == 0x000100, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_17) == 0x000108, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_16) == 0x000110, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_18) == 0x000118, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_17) == 0x000120, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_19) == 0x000128, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_18) == 0x000130, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_20) == 0x000138, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_19) == 0x000140, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_21) == 0x000148, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_20) == 0x000150, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_22) == 0x000158, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_21) == 0x000160, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_23) == 0x000168, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_22) == 0x000170, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_24) == 0x000178, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_25) == 0x000180, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_23) == 0x000188, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_26) == 0x000190, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_24) == 0x000198, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_27) == 0x0001A0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_25) == 0x0001A8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_28) == 0x0001B0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_26) == 0x0001B8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_29) == 0x0001C0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_27) == 0x0001C8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_30) == 0x0001D0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_28) == 0x0001D8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_31) == 0x0001E0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_29) == 0x0001E8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_32) == 0x0001F0, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_30) == 0x0001F8, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_33) == 0x000200, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_31) == 0x000208, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_34) == 0x000210, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_32) == 0x000218, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_object_Variable_35) == 0x000220, "Member 'RoadSign_C_SetMainSignMesh::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_int_Variable) == 0x000228, "Member 'RoadSign_C_SetMainSignMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_33) == 0x00022C, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_34) == 0x00022D, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_35) == 0x00022E, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_36) == 0x00022F, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_37) == 0x000230, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_38) == 0x000231, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_39) == 0x000232, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_40) == 0x000233, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_41) == 0x000234, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_42) == 0x000235, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_43) == 0x000236, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_44) == 0x000237, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_45) == 0x000238, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_46) == 0x000239, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_47) == 0x00023A, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_48) == 0x00023B, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_49) == 0x00023C, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_50) == 0x00023D, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_51) == 0x00023E, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_52) == 0x00023F, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_53) == 0x000240, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_54) == 0x000241, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_int_Variable_1) == 0x000244, "Member 'RoadSign_C_SetMainSignMesh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_55) == 0x000248, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_56) == 0x000249, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_57) == 0x00024A, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_58) == 0x00024B, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_59) == 0x00024C, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_60) == 0x00024D, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_61) == 0x00024E, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_62) == 0x00024F, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_63) == 0x000250, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_64) == 0x000251, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, Temp_bool_Variable_65) == 0x000252, "Member 'RoadSign_C_SetMainSignMesh::Temp_bool_Variable_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000253, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000254, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000255, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000256, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue) == 0x000257, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000258, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_1) == 0x000259, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default) == 0x000260, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000268, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_1) == 0x000270, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000278, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000279, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue) == 0x00027A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00027B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_2) == 0x000280, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_3) == 0x000288, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000290, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_4) == 0x000298, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0002A0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_5) == 0x0002A8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0002B0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_6) == 0x0002B8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0002C0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x0002C1, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_1) == 0x0002C2, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002C3, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_7) == 0x0002C8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0002D0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_8) == 0x0002D8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_2) == 0x0002E0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0002E1, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_9) == 0x0002E8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0002F0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_10) == 0x0002F8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_3) == 0x000300, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000301, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x000302, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_11) == 0x000308, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_4) == 0x000310, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000311, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000312, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_12) == 0x000318, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_2) == 0x000320, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000321, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_13) == 0x000328, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x000330, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_14) == 0x000338, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x000340, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_15) == 0x000348, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x000350, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_16) == 0x000358, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x000360, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_17) == 0x000368, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x000370, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_17) == 0x000371, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_3) == 0x000372, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x000373, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_18) == 0x000378, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x000380, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_19) == 0x000388, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_5) == 0x000390, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x000391, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_20) == 0x000398, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_21) == 0x0003A0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x0003A8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x0003A9, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_9) == 0x0003AA, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_6) == 0x0003AB, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x0003AC, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_7) == 0x0003AD, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_22) == 0x0003B0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_18) == 0x0003B8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_23) == 0x0003C0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_19) == 0x0003C8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_20) == 0x0003C9, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_4) == 0x0003CA, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_21) == 0x0003CB, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_24) == 0x0003D0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_25) == 0x0003D8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_22) == 0x0003E0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_26) == 0x0003E8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_23) == 0x0003F0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_27) == 0x0003F8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_24) == 0x000400, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_28) == 0x000408, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_25) == 0x000410, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_26) == 0x000411, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_5) == 0x000412, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_10) == 0x000413, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_29) == 0x000418, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_8) == 0x000420, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_30) == 0x000428, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_8) == 0x000430, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_11) == 0x000431, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_31) == 0x000438, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_32) == 0x000440, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_33) == 0x000448, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_12) == 0x000450, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_13) == 0x000451, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_14) == 0x000452, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_9) == 0x000453, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_27) == 0x000454, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_9) == 0x000455, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_28) == 0x000456, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_6) == 0x000457, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_29) == 0x000458, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_30) == 0x000459, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_31) == 0x00045A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_32) == 0x00045B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_33) == 0x00045C, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_34) == 0x00045D, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_35) == 0x00045E, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_7) == 0x00045F, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_15) == 0x000460, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_10) == 0x000461, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_11) == 0x000462, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_10) == 0x000463, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_11) == 0x000464, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_34) == 0x000468, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_34' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_35) == 0x000470, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_35' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_36) == 0x000478, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_37) == 0x000480, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_38) == 0x000488, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_39) == 0x000490, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_40) == 0x000498, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_41) == 0x0004A0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_42) == 0x0004A8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_43) == 0x0004B0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_44) == 0x0004B8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_12) == 0x0004C0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_16) == 0x0004C1, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_17) == 0x0004C2, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_12) == 0x0004C3, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_13) == 0x0004C4, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_13) == 0x0004C5, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_45) == 0x0004C8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_36) == 0x0004D0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_46) == 0x0004D8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_37) == 0x0004E0, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_38) == 0x0004E1, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_8) == 0x0004E2, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_39) == 0x0004E3, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_47) == 0x0004E8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_48) == 0x0004F0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_40) == 0x0004F8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_49) == 0x000500, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_41) == 0x000508, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_50) == 0x000510, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_42) == 0x000518, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_51) == 0x000520, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_43) == 0x000528, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_44) == 0x000529, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_9) == 0x00052A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_18) == 0x00052B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_52) == 0x000530, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_14) == 0x000538, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_53) == 0x000540, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_14) == 0x000548, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_19) == 0x000549, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_54) == 0x000550, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_54' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_55) == 0x000558, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_55' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_15) == 0x000560, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_20) == 0x000561, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_21) == 0x000562, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_15) == 0x000563, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_16) == 0x000564, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_16) == 0x000565, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_45) == 0x000566, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_46) == 0x000567, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_47) == 0x000568, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_10) == 0x000569, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_48) == 0x00056A, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_49) == 0x00056B, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_50) == 0x00056C, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_51) == 0x00056D, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_52) == 0x00056E, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_EqualEqual_IntInt_ReturnValue_53) == 0x00056F, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_EqualEqual_IntInt_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanOR_ReturnValue_11) == 0x000570, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_22) == 0x000571, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_GreaterEqual_IntInt_ReturnValue_17) == 0x000572, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_GreaterEqual_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_LessEqual_IntInt_ReturnValue_23) == 0x000573, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_LessEqual_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_BooleanAND_ReturnValue_17) == 0x000574, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_56) == 0x000578, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_56' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_57) == 0x000580, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_57' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_58) == 0x000588, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_58' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_59) == 0x000590, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_59' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_60) == 0x000598, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_60' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_61) == 0x0005A0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_61' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_62) == 0x0005A8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_62' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_63) == 0x0005B0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_63' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_64) == 0x0005B8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_64' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_65) == 0x0005C0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_65' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_66) == 0x0005C8, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_66' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, K2Node_Select_Default_67) == 0x0005D0, "Member 'RoadSign_C_SetMainSignMesh::K2Node_Select_Default_67' has a wrong offset!");
static_assert(offsetof(RoadSign_C_SetMainSignMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0005D8, "Member 'RoadSign_C_SetMainSignMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function RoadSign.RoadSign_C.ExecuteUbergraph_RoadSign
// 0x0004 (0x0004 - 0x0000)
struct RoadSign_C_ExecuteUbergraph_RoadSign final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RoadSign_C_ExecuteUbergraph_RoadSign) == 0x000004, "Wrong alignment on RoadSign_C_ExecuteUbergraph_RoadSign");
static_assert(sizeof(RoadSign_C_ExecuteUbergraph_RoadSign) == 0x000004, "Wrong size on RoadSign_C_ExecuteUbergraph_RoadSign");
static_assert(offsetof(RoadSign_C_ExecuteUbergraph_RoadSign, EntryPoint) == 0x000000, "Member 'RoadSign_C_ExecuteUbergraph_RoadSign::EntryPoint' has a wrong offset!");

}

