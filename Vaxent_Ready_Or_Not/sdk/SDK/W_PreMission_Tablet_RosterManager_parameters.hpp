#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_RosterManager

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.ExecuteUbergraph_W_PreMission_Tablet_RosterManager
// 0x00A0 (0x00A0 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3340[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_Card_C*              K2Node_CustomEvent_Card;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3341[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_AudioPlayer_C*                       K2Node_Event_PlayerWidget;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayerVisible;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3342[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Roster_PlayerStatus_Card_C*          K2Node_CustomEvent_PlayerCard;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_UseDarkTheme;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsAwake;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3343[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3344[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delay_1;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3345[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_PageTitle;                      // 0x0050(0x0018)()
	bool                                          K2Node_CustomEvent_ShowCloseButton;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3346[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3347[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3348[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_RosterSelection_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Delay;                                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager) == 0x0000A0, "Wrong size on W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_CustomEvent_Card) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_CustomEvent_Card' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_PlayerWidget) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_PlayerVisible) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_PlayerVisible' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_CustomEvent_PlayerCard) == 0x000028, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_CustomEvent_PlayerCard' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_UseDarkTheme) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_UseDarkTheme' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_IsAwake) == 0x000031, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_IsAwake' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_PageName) == 0x000034, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_IsGamepad) == 0x00003C, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_Delay_1) == 0x000040, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_Collapse) == 0x000044, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_ComponentBoundEvent_Button) == 0x000048, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_CustomEvent_PageTitle) == 0x000050, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_CustomEvent_PageTitle' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_CustomEvent_ShowCloseButton) == 0x000068, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_CustomEvent_ShowCloseButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, Temp_byte_Variable) == 0x000069, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, CallFunc_PlayAnimationForward_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, Temp_bool_Variable) == 0x000078, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000080, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000088, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, Temp_byte_Variable_1) == 0x000089, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Select_Default) == 0x00008A, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_CreateDelegate_OutputDelegate) == 0x00008C, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager, K2Node_Event_Delay) == 0x00009C, "Member 'W_PreMission_Tablet_RosterManager_C_ExecuteUbergraph_W_PreMission_Tablet_RosterManager::K2Node_Event_Delay' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.Reveal
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_Reveal final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_Reveal) == 0x000004, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_Reveal) == 0x000004, "Wrong size on W_PreMission_Tablet_RosterManager_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.ChangeRosterPage
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_ChangeRosterPage final 
{
public:
	class FText                                   PageTitle;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShowCloseButton;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_ChangeRosterPage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_ChangeRosterPage");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_ChangeRosterPage) == 0x000020, "Wrong size on W_PreMission_Tablet_RosterManager_C_ChangeRosterPage");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ChangeRosterPage, PageTitle) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_ChangeRosterPage::PageTitle' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ChangeRosterPage, ShowCloseButton) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_ChangeRosterPage::ShowCloseButton' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final 
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.Hide
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_Hide final 
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_Hide) == 0x000004, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_Hide) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_Hide, Collapse) == 0x000004, "Member 'W_PreMission_Tablet_RosterManager_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_SetInputMode final 
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_RosterManager_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_ChangePage final 
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.SetTabletState
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_SetTabletState final 
{
public:
	bool                                          IsAwake;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_SetTabletState) == 0x000001, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_SetTabletState");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_SetTabletState) == 0x000001, "Wrong size on W_PreMission_Tablet_RosterManager_C_SetTabletState");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_SetTabletState, IsAwake) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_SetTabletState::IsAwake' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.SetVisualTheme
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_SetVisualTheme final 
{
public:
	bool                                          UseDarkTheme;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_SetVisualTheme) == 0x000001, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_SetVisualTheme");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_SetVisualTheme) == 0x000001, "Wrong size on W_PreMission_Tablet_RosterManager_C_SetVisualTheme");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_SetVisualTheme, UseDarkTheme) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_SetVisualTheme::UseDarkTheme' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.PlayerClicked
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_PlayerClicked final 
{
public:
	class UW_Roster_PlayerStatus_Card_C*          PlayerCard;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_PlayerClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_PlayerClicked");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_PlayerClicked) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_PlayerClicked");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PlayerClicked, PlayerCard) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_PlayerClicked::PlayerCard' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.AudioPlayerVisible
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible final 
{
public:
	class UW_AudioPlayer_C*                       PlayerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerVisible;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible) == 0x000010, "Wrong size on W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible, PlayerWidget) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible::PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible, PlayerVisible) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_AudioPlayerVisible::PlayerVisible' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.SquadMemberClicked
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_SquadMemberClicked final 
{
public:
	class UW_RosterSelection_Card_C*              Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_SquadMemberClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_SquadMemberClicked");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_SquadMemberClicked) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_SquadMemberClicked");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_SquadMemberClicked, Card) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_SquadMemberClicked::Card' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.CloseSwapping
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_CloseSwapping final 
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_CloseSwapping) == 0x000001, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_CloseSwapping");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_CloseSwapping) == 0x000001, "Wrong size on W_PreMission_Tablet_RosterManager_C_CloseSwapping");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CloseSwapping, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_CloseSwapping::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.IsPlayerSelf
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_IsPlayerSelf final 
{
public:
	class UObject*                                PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3349[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_IsPlayerSelf) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_IsPlayerSelf");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_IsPlayerSelf) == 0x000020, "Wrong size on W_PreMission_Tablet_RosterManager_C_IsPlayerSelf");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_IsPlayerSelf, PlayerState) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_IsPlayerSelf::PlayerState' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_IsPlayerSelf, ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_IsPlayerSelf::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_IsPlayerSelf, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_IsPlayerSelf::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_IsPlayerSelf, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_IsPlayerSelf::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.PopulatePlayerList
// 0x0158 (0x0158 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_PopulatePlayerList final 
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           PlayerToAdd;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   NewPlayers;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334B[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelfHost_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelfHost_ReturnValue_1;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334D[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334E[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Roster_PlayerStatus_Card_C*          CallFunc_Create_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334F[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3350[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerSelf_ReturnValue;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3351[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	TDelegate<void(class UW_Roster_PlayerStatus_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_PopulatePlayerList");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList) == 0x000158, "Wrong size on W_PreMission_Tablet_RosterManager_C_PopulatePlayerList");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, Count) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::Count' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, PlayerToAdd) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::PlayerToAdd' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, NewPlayers) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::NewPlayers' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, Temp_int_Variable) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, Temp_int_Variable_1) == 0x000028, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Create_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, Temp_int_Array_Index_Variable) == 0x000044, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_GetIsSelfHost_ReturnValue) == 0x000048, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_GetIsSelfHost_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_GetIsSelfHost_ReturnValue_1) == 0x000058, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_GetIsSelfHost_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000060, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Create_ReturnValue_1) == 0x000070, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_AddChildToWrapBox_ReturnValue_1) == 0x000078, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_AddChildToWrapBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_IsPlayerSelf_ReturnValue) == 0x0000D0, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_IsPlayerSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000D4, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, K2Node_CreateDelegate_OutputDelegate) == 0x000118, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, K2Node_MakeArray_Array) == 0x000128, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_Format_ReturnValue) == 0x000138, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePlayerList, CallFunc_GetGameState_ReturnValue) == 0x000150, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePlayerList::CallFunc_GetGameState_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.GetPlayerCardByIndex
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex final 
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3352[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Roster_PlayerStatus_Card_C*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3353[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Roster_PlayerStatus_Card_C*          K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex) == 0x000020, "Wrong size on W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex, Param_Index) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex, ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex, Temp_int_Variable) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex, K2Node_Select_Default) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_GetPlayerCardByIndex::K2Node_Select_Default' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.PopulateSquadCharacters
// 0x00E0 (0x00E0 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters final 
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3354[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URosterCharacter*>               SquadCharacterArray;                               // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3355[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URosterCharacter*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3356[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_Card_C*              CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3357[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Reveal_self_CastInput;                    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UW_RosterSelection_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ERosterSquadPosition, class URosterCharacter*> CallFunc_GetSquadCharacters_ReturnValue;           // 0x0080(0x0050)()
	TArray<class URosterCharacter*>               CallFunc_Map_Values_Values;                        // 0x00D0(0x0010)(ReferenceParm)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters) == 0x0000E0, "Wrong size on W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CurrentIndex) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, SquadCharacterArray) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::SquadCharacterArray' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, K2Node_MakeStruct_Margin) == 0x000024, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, Temp_int_Variable) == 0x000034, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000044, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_Create_ReturnValue) == 0x000048, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_Reveal_self_CastInput) == 0x000058, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_Reveal_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_GetSquadCharacters_ReturnValue) == 0x000080, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_GetSquadCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters, CallFunc_Map_Values_Values) == 0x0000D0, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateSquadCharacters::CallFunc_Map_Values_Values' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.MiniCardHovered
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_MiniCardHovered final 
{
public:
	class UW_RosterSelection_MiniCard_C*          Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          HoveredCard;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3358[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_Reveal_self_CastInput;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_MiniCardHovered");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered) == 0x000028, "Wrong size on W_PreMission_Tablet_RosterManager_C_MiniCardHovered");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered, Card) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardHovered::Card' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered, HoveredCard) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardHovered::HoveredCard' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardHovered::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardHovered::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardHovered::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardHovered, CallFunc_Reveal_self_CastInput) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardHovered::CallFunc_Reveal_self_CastInput' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.PopulateCharacterList
// 0x00E0 (0x00E0 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_PopulateCharacterList final 
{
public:
	TArray<class URosterCharacter*>               CharacterArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UW_RosterSelection_MiniCard_C*          CurrentMiniCardWidget;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URosterCharacter*                       CurrentCharacter;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3359[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterCharacter*                       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335B[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetUnlockableSlotMissionsRemaining_ReturnValue; // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335C[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentRosterSize_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335D[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_MiniCard_C*          CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335E[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URosterCharacter*>               CallFunc_GetAllCharacters_ReturnValue;             // 0x00D0(0x0010)(ReferenceParm)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_PopulateCharacterList");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList) == 0x0000E0, "Wrong size on W_PreMission_Tablet_RosterManager_C_PopulateCharacterList");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CharacterArray) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CharacterArray' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CurrentMiniCardWidget) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CurrentMiniCardWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CurrentCharacter) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CurrentCharacter' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, Temp_int_Array_Index_Variable) == 0x000034, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_GetUnlockableSlotMissionsRemaining_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_GetUnlockableSlotMissionsRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Array_Length_ReturnValue_2) == 0x000064, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_GetCurrentRosterSize_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_GetCurrentRosterSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Create_ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Less_IntInt_ReturnValue_2) == 0x000080, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A8, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, K2Node_MakeStruct_Margin) == 0x0000B8, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000C8, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateCharacterList, CallFunc_GetAllCharacters_ReturnValue) == 0x0000D0, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateCharacterList::CallFunc_GetAllCharacters_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.GetIsSelfHost
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_GetIsSelfHost final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_335F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdminPlayerController_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_GetIsSelfHost");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost) == 0x000028, "Wrong size on W_PreMission_Tablet_RosterManager_C_GetIsSelfHost");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_GetIsSelfHost::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_GetIsSelfHost::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_GetIsSelfHost::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_GetIsSelfHost::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_GetIsSelfHost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetIsSelfHost, CallFunc_IsAdminPlayerController_ReturnValue) == 0x000021, "Member 'W_PreMission_Tablet_RosterManager_C_GetIsSelfHost::CallFunc_IsAdminPlayerController_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.MiniCardClicked
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_MiniCardClicked final 
{
public:
	class UW_RosterSelection_MiniCard_C*          Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          ClickedCard;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3360[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_MiniCardClicked");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked) == 0x000028, "Wrong size on W_PreMission_Tablet_RosterManager_C_MiniCardClicked");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, Card) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::Card' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, ClickedCard) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::ClickedCard' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, CallFunc_GetActiveWidget_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardClicked, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardClicked::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.MiniCardUnhovered
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered final 
{
public:
	class UW_RosterSelection_MiniCard_C*          Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered, Card) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_MiniCardUnhovered::Card' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.OpenDetailsPage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_OpenDetailsPage final 
{
public:
	class URosterCharacter*                       RosterCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_OpenDetailsPage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_OpenDetailsPage");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_OpenDetailsPage) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_OpenDetailsPage");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenDetailsPage, RosterCharacter) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_OpenDetailsPage::RosterCharacter' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction final 
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.PopulateDebugCharacterList
// 0x00C8 (0x00C8 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList final 
{
public:
	TArray<class URosterCharacter*>               CharacterArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UW_RosterSelection_MiniCard_C*          CurrentMiniCardWidget;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URosterCharacter*                       CurrentCharacter;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3361[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterCharacter*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3362[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3363[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3364[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URosterCharacter*>               CallFunc_GetAllCharacters_ReturnValue;             // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3365[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3366[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_MiniCard_C*          CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList) == 0x0000C8, "Wrong size on W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CharacterArray) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CharacterArray' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CurrentMiniCardWidget) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CurrentMiniCardWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CurrentCharacter) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CurrentCharacter' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000050, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_GetAllCharacters_ReturnValue) == 0x000058, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_GetAllCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, Temp_int_Variable) == 0x000068, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000084, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, K2Node_MakeStruct_Margin) == 0x0000B0, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000C0, "Member 'W_PreMission_Tablet_RosterManager_C_PopulateDebugCharacterList::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.EmptyMiniCardClicked
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked final 
{
public:
	class UW_RosterSelection_MiniCard_C*          Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          ClickedCard;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked) == 0x000010, "Wrong size on W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked, Card) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked::Card' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked, ClickedCard) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_EmptyMiniCardClicked::ClickedCard' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.CreateEmptyMiniCards
// 0x0048 (0x0048 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards final 
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3367[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_MiniCard_C*          CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3368[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3369[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards) == 0x000048, "Wrong size on W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, Count) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::Count' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, Temp_int_Variable) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards, K2Node_MakeStruct_Margin) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_CreateEmptyMiniCards::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.CreateLockedMiniCards
// 0x0138 (0x0138 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards final 
{
public:
	int32                                         MissionUnlockCount;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UW_RosterSelection_MiniCard_C*          CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336C[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0018)()
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	TDelegate<void(class UW_RosterSelection_MiniCard_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards) == 0x000138, "Wrong size on W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, MissionUnlockCount) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::MissionUnlockCount' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, Temp_text_Variable) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, K2Node_MakeStruct_Margin) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, CallFunc_Create_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, Temp_text_Variable_1) == 0x000080, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, Temp_bool_Variable) == 0x000098, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, K2Node_Select_Default) == 0x0000A0, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000B8, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, K2Node_MakeArray_Array) == 0x000100, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, CallFunc_Format_ReturnValue) == 0x000110, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards, K2Node_CreateDelegate_OutputDelegate) == 0x000128, "Member 'W_PreMission_Tablet_RosterManager_C_CreateLockedMiniCards::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.OpenEnlistPage
// 0x0098 (0x0098 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_OpenEnlistPage final 
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_RosterSelection_Card_C* Card)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable_2;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3370[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URosterCharacter*>               CallFunc_GetRecruitableCharacters_ReturnValue;     // 0x0058(0x0010)(ReferenceParm)
	class URosterCharacter*                       CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3371[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3372[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_OpenEnlistPage");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage) == 0x000098, "Wrong size on W_PreMission_Tablet_RosterManager_C_OpenEnlistPage");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_float_Variable) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_float_Variable_1) == 0x000004, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_bool_Variable) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, K2Node_Select_Default) == 0x000024, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000030, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_float_Variable_2) == 0x00004C, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_float_Variable_3) == 0x000050, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, Temp_bool_Variable_1) == 0x000054, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_GetRecruitableCharacters_ReturnValue) == 0x000058, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_GetRecruitableCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Array_Get_Item) == 0x000068, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, K2Node_Select_Default_1) == 0x000084, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_OpenEnlistPage, K2Node_MakeStruct_Margin) == 0x000088, "Member 'W_PreMission_Tablet_RosterManager_C_OpenEnlistPage::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.EnlistCharacterClicked
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked final 
{
public:
	class UW_RosterSelection_Card_C*              Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked, Card) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_EnlistCharacterClicked::Card' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.PopulatePracticeUnits
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits final 
{
public:
	ESquadPosition                                Position;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3373[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerToAdd;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   NewPlayers;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits) == 0x000028, "Wrong size on W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits, Position) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits::Position' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits, Count) == 0x000004, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits::Count' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits, PlayerToAdd) == 0x000008, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits::PlayerToAdd' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits, NewPlayers) == 0x000010, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits::NewPlayers' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_RosterManager_C_PopulatePracticeUnits::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_BackPage final 
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_RosterManager_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_RosterManager_C_GetFocusTarget final 
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_RosterManager_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_RosterManager_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_RosterManager_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_RosterManager_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_RosterManager_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_RosterManager_C_GetFocusTarget::Focus' has a wrong offset!");

}

