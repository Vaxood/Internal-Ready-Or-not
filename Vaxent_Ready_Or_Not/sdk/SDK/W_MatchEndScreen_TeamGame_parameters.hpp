#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MatchEndScreen_TeamGame

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.ExecuteUbergraph_W_MatchEndScreen_TeamGame
// 0x0298 (0x0298 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ULevelSequence* LevelSequence)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE2[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE3[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State_1;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE4[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<class AReadyOrNotPlayerState*>         CallFunc_GetPlayerStatesOnTeamOrderedByScore_PlayerStates; // 0x00E0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0188(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0218(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE5[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_CustomEvent_LevelSequence;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE6[0x6];                                     // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State_2;    // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE7[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerState*                 K2Node_DynamicCast_AsReady_or_Not_Player_State;    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamType                                     CallFunc_GetTeam_ReturnValue;                      // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame) == 0x000298, "Wrong size on W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, EntryPoint) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_Event_MyGeometry) == 0x000030, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_Event_InDeltaTime) == 0x000068, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000078, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetGameState_ReturnValue_1) == 0x000088, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_AsReady_or_Not_Game_State_1) == 0x000090, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_AsReady_or_Not_Game_State_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetPlayerStatesOnTeamOrderedByScore_PlayerStates) == 0x0000E0, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetPlayerStatesOnTeamOrderedByScore_PlayerStates' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_Array_Get_Item) == 0x000130, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetPlayerName_ReturnValue) == 0x000138, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_Conv_StringToText_ReturnValue) == 0x000188, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_MakeArray_Array) == 0x0001A0, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_Format_ReturnValue) == 0x0001F0, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_MakeArray_Array_1) == 0x000208, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_Format_ReturnValue_1) == 0x000218, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_Greater_IntInt_ReturnValue) == 0x000230, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_CustomEvent_LevelSequence) == 0x000238, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_CustomEvent_LevelSequence' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000240, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000241, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_PlayAnimation_ReturnValue) == 0x000248, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_PlayAnimation_ReturnValue_1) == 0x000250, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_PlayAnimation_ReturnValue_2) == 0x000258, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetGameState_ReturnValue_2) == 0x000260, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_AsReady_or_Not_Game_State_2) == 0x000268, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_AsReady_or_Not_Game_State_2' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_bSuccess_2) == 0x000270, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetPlayerController_ReturnValue) == 0x000278, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000280, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_AsReady_or_Not_Player_State) == 0x000288, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_AsReady_or_Not_Player_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, K2Node_DynamicCast_bSuccess_3) == 0x000290, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_GetTeam_ReturnValue) == 0x000291, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000292, "Member 'W_MatchEndScreen_TeamGame_C_ExecuteUbergraph_W_MatchEndScreen_TeamGame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.OnSequenceStarted_Event_0
// 0x0008 (0x0008 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0 final 
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0) == 0x000008, "Wrong size on W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0, LevelSequence) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_OnSequenceStarted_Event_0::LevelSequence' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_MatchEndScreen_TeamGame_C_Tick final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_Tick) == 0x000004, "Wrong alignment on W_MatchEndScreen_TeamGame_C_Tick");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_Tick) == 0x00003C, "Wrong size on W_MatchEndScreen_TeamGame_C_Tick");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_Tick, MyGeometry) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_Tick, InDeltaTime) == 0x000038, "Member 'W_MatchEndScreen_TeamGame_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetNextGameCountdownText
// 0x0058 (0x0058 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertFloatToStringMinutes_ReturnValue;  // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText) == 0x000058, "Wrong size on W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText, CallFunc_ConvertFloatToStringMinutes_ReturnValue) == 0x000030, "Member 'W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText::CallFunc_ConvertFloatToStringMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'W_MatchEndScreen_TeamGame_C_GetNextGameCountdownText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetRoundCounterVisibility
// 0x0020 (0x0020 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility) == 0x000020, "Wrong size on W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetRoundCounterText
// 0x00D8 (0x00D8 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetRoundCounterText final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DEA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetRoundCounterText");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText) == 0x0000D8, "Wrong size on W_MatchEndScreen_TeamGame_C_GetRoundCounterText");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, K2Node_MakeArray_Array) == 0x0000B0, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundCounterText, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundCounterText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetMatchWinnerText
// 0x0030 (0x0030 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetMatchWinnerText final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetMatchWinnerText");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText) == 0x000030, "Wrong size on W_MatchEndScreen_TeamGame_C_GetMatchWinnerText");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerText, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetMatchWinnerColor
// 0x00B8 (0x00B8 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor final 
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0078(0x0028)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor) == 0x0000B8, "Wrong size on W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, K2Node_MakeStruct_SlateColor_2) == 0x000078, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, CallFunc_GetGameState_ReturnValue) == 0x0000A0, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x0000A8, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor, K2Node_SwitchEnum_CmpSuccess) == 0x0000B1, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetRoundWinnerColor
// 0x00C0 (0x00C0 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor final 
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DEB[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0068(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DEC[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0098(0x0028)()
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor) == 0x0000C0, "Wrong size on W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000058, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, K2Node_MakeStruct_SlateColor_1) == 0x000068, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor, K2Node_MakeStruct_SlateColor_2) == 0x000098, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetRoundWinnerText
// 0x0030 (0x0030 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetRoundWinnerText final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetRoundWinnerText");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText) == 0x000030, "Wrong size on W_MatchEndScreen_TeamGame_C_GetRoundWinnerText");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerText::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetRoundWinnerText, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'W_MatchEndScreen_TeamGame_C_GetRoundWinnerText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_OnKeyDown final 
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	bool                                          CallFunc_JoyIsKey_Ctrl;                            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_JoyIsKey_Shift;                           // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_JoyIsKey_Alt;                             // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_JoyIsKey_Cmd;                             // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_JoyIsKey_Match;                           // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DED[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01E8(0x00B8)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_OnKeyDown) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_OnKeyDown");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_OnKeyDown) == 0x0002B8, "Wrong size on W_MatchEndScreen_TeamGame_C_OnKeyDown");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_JoyIsKey_Ctrl) == 0x0001E0, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_JoyIsKey_Ctrl' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_JoyIsKey_Shift) == 0x0001E1, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_JoyIsKey_Shift' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_JoyIsKey_Alt) == 0x0001E2, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_JoyIsKey_Alt' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_JoyIsKey_Cmd) == 0x0001E3, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_JoyIsKey_Cmd' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_JoyIsKey_Match) == 0x0001E4, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_JoyIsKey_Match' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0001E8, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, CallFunc_GetGameState_ReturnValue) == 0x0002A0, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x0002A8, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_OnKeyDown, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'W_MatchEndScreen_TeamGame_C_OnKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetMatchWinnerTextSimple
// 0x0030 (0x0030 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple final 
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple) == 0x000030, "Wrong size on W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000020, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'W_MatchEndScreen_TeamGame_C_GetMatchWinnerTextSimple::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_MatchEndScreen_TeamGame.W_MatchEndScreen_TeamGame_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct W_MatchEndScreen_TeamGame_C_GetVisibility_0 final 
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   K2Node_DynamicCast_AsReady_or_Not_Game_State;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MatchEndScreen_TeamGame_C_GetVisibility_0) == 0x000008, "Wrong alignment on W_MatchEndScreen_TeamGame_C_GetVisibility_0");
static_assert(sizeof(W_MatchEndScreen_TeamGame_C_GetVisibility_0) == 0x000020, "Wrong size on W_MatchEndScreen_TeamGame_C_GetVisibility_0");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'W_MatchEndScreen_TeamGame_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetVisibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_MatchEndScreen_TeamGame_C_GetVisibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetVisibility_0, K2Node_DynamicCast_AsReady_or_Not_Game_State) == 0x000010, "Member 'W_MatchEndScreen_TeamGame_C_GetVisibility_0::K2Node_DynamicCast_AsReady_or_Not_Game_State' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_MatchEndScreen_TeamGame_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MatchEndScreen_TeamGame_C_GetVisibility_0, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'W_MatchEndScreen_TeamGame_C_GetVisibility_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

